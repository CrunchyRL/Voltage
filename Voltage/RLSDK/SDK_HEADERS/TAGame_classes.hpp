/*
#############################################################################################
# Rocket League (210617.48985.332260) SDK
# Generated with the UE3SDKGenerator v4.2.0
# ========================================================================================= #
# File: TAGame_classes.hpp
# ========================================================================================= #
# Credits: TheFeckless, ItsBranK, Crunchy
# Links: www.github.com/ItsBranK/UE3SDKGenerator, www.twitter.com/ItsBranK
#############################################################################################
*/

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

/*
# ========================================================================================= #
# Constants
# ========================================================================================= #
*/

#define CONST_MaxAirControlSensitivity                           10.f
#define CONST_MaxSteeringSensitivity                             10.f
#define CONST_MAX_TEAM_PLAYERS                                   5
#define CONST_UnrealUnitsPerMeter                                100
#define CONST_TRADEHOLD_NONE                                     0
#define CONST_TRADEHOLD_ALL                                      -1
#define CONST_TRADEHOLD_P2P                                      -2
#define CONST_MaxFriendKeyLength                                 64
#define CONST_MAX_PARTY_FOLLOWERS                                7
#define CONST_MAX_REPLICATED_VOTERS                              8
#define CONST_BoostLevel_Active                                  1.0f
#define CONST_BoostLevel_Activated                               0.0f
#define CONST_BoostLevel_Inactive                                -1.0f
#define CONST_PlayerCountIrrelevant                              "NO_COUNT"
#define CONST_TOUR_MATCH_NONE                                    -1
#define CONST_MaxLoadoutSets                                     50
#define CONST_MaxConcurrentItemCount                             3
#define CONST_MAX_NAMEPLATES                                     8
#define CONST_HttpContentType01                                  "application/binary"
#define CONST_PriorityHigh                                       8
#define CONST_PriorityMed                                        4
#define CONST_PriorityLow                                        0
#define CONST_SoonInSeconds                                      10800q
#define CONST_PartyGroupID                                       10

/*
# ========================================================================================= #
# Enums
# ========================================================================================= #
*/

// Enum TAGame._AITypes_TA.EBTStatus
enum class EBTStatus : int
{
	BTStatus_Fail                                      = 0,
	BTStatus_Success                                   = 1,
	BTStatus_Running                                   = 2,
	BTStatus_END                                       = 3
};

// Enum TAGame._AITypes_TA.EAITeam
enum class EAITeam : int
{
	AITeam_Self                                        = 0,
	AITeam_Enemy                                       = 1,
	AITeam_Any                                         = 2,
	AITeam_END                                         = 3
};

// Enum TAGame._Types_TA.EMirrorFieldType
enum class EMirrorFieldType : int
{
	MFT_None                                           = 0,
	MFT_X                                              = 1,
	MFT_Y                                              = 2,
	MFT_XY                                             = 3,
	MFT_TeamIndex                                      = 4,
	MFT_END                                            = 5
};

// Enum TAGame._Types_TA.EUIMenuState
enum class EUIMenuState : int
{
	UIMS_StartMenu                                     = 0,
	UIMS_MainMenu                                      = 1,
	UIMS_END                                           = 2
};

// Enum TAGame._Types_TA.EChatChannel
enum class EChatChannel : int
{
	EChatChannel_Match                                 = 0,
	EChatChannel_Team                                  = 1,
	EChatChannel_Party                                 = 2,
	EChatChannel_Individual                            = 3,
	EChatChannel_END                                   = 4
};

// Enum TAGame._Types_TA.ESkinType
enum class ESkinType : int
{
	EST_Default                                        = 0,
	EST_Animated                                       = 1,
	EST_AnimatedPrimaryOnly                            = 2,
	EST_NonAnimatedPrimaryOnly                         = 3,
	EST_END                                            = 4
};

// Enum TAGame._Types_TA.EStatEventDisplayLevels
enum class EStatEventDisplayLevels : int
{
	SEDL_None                                          = 0,
	SEDL_Primary                                       = 1,
	SEDL_All                                           = 2,
	SEDL_END                                           = 3
};

// Enum TAGame._Types_TA.ETAStatType
enum class ETAStatType : int
{
	StatType_Private                                   = 0,
	StatType_Unranked                                  = 1,
	StatType_Ranked                                    = 2,
	StatType_END                                       = 3
};

// Enum TAGame._Types_TA.EProductQuality
enum class EProductQuality : int
{
	EPQ_Common                                         = 0,
	EPQ_Uncommon                                       = 1,
	EPQ_Rare                                           = 2,
	EPQ_VeryRare                                       = 3,
	EPQ_Import                                         = 4,
	EPQ_Exotic                                         = 5,
	EPQ_BlackMarket                                    = 6,
	EPQ_Premium                                        = 7,
	EPQ_Limited                                        = 8,
	EPQ_Legacy                                         = 9,
	EPQ_END                                            = 10
};

// Enum TAGame._Types_TA.EUnlockMethod
enum class EUnlockMethod : int
{
	UnlockMethod_Default                               = 0,
	UnlockMethod_Online                                = 1,
	UnlockMethod_DLC                                   = 2,
	UnlockMethod_Never                                 = 3,
	UnlockMethod_END                                   = 4
};

// Enum TAGame._Types_TA.EPlaylistPopulationBucket
enum class EPlaylistPopulationBucket : int
{
	PPB_Empty                                          = 0,
	PPB_Average                                        = 1,
	PPB_High                                           = 2,
	PPB_Extreme                                        = 3,
	PPB_END                                            = 4
};

// Enum TAGame._Types_TA.ETieBreakDecision
enum class ETieBreakDecision : int
{
	TBD_None                                           = 0,
	TBD_Goals                                          = 1,
	TBD_Shots                                          = 2,
	TBD_CoinToss                                       = 3,
	TBD_END                                            = 4
};

// Enum TAGame._Types_TA.EMainMenuBackground
enum class EMainMenuBackground : int
{
	MMBG_Default                                       = 0,
	MMBG_UtopiaSnow                                    = 1,
	MMBG_HauntedStation                                = 2,
	MMBG_Beach                                         = 3,
	MMBG_Beach_Night                                   = 4,
	MMBG_Halloween                                     = 5,
	MMBG_China                                         = 6,
	MMBG_ParkDay                                       = 7,
	MMBG_Music                                         = 8,
	MMBG_ThrowbackHockey                               = 9,
	MMBG_Circuit                                       = 10,
	MMBG_Outlaw                                        = 11,
	MMBG_END                                           = 12
};

// Enum TAGame._Types_TA.EPersonaInfoOrigin
enum class EPersonaInfoOrigin : int
{
	PersonaOrigin_Platform                             = 0,
	PersonaOrigin_PsyNet                               = 1,
	PersonaOrigin_Epic                                 = 2,
	PersonaOrigin_END                                  = 3
};

// Enum TAGame._Types_TA.EPresenceGroup
enum class EPresenceGroup : int
{
	EPG_Offline                                        = 0,
	EPG_Online                                         = 1,
	EPG_InGame                                         = 2,
	EPG_Friends                                        = 3,
	EPG_END                                            = 4
};

// Enum TAGame._Types_TA.EMatchTieBreaker
enum class EMatchTieBreaker : int
{
	MatchTieBreaker_FirstScore                         = 0,
	MatchTieBreaker_Random                             = 1,
	MatchTieBreaker_END                                = 2
};

// Enum TAGame._Types_TA.EV2TutorialType
enum class EV2TutorialType : int
{
	V2T_Basic                                          = 0,
	V2T_Skills                                         = 1,
	V2T_Skills01                                       = 2,
	V2T_Aerials                                        = 3,
	V2T_BasicTeam                                      = 4,
	V2T_AdvancedTeam                                   = 5,
	V2T_END                                            = 6
};

// Enum TAGame._Types_TA.EMusicStingersSetting
enum class EMusicStingersSetting : int
{
	MusicStingers_Off                                  = 0,
	MusicStingers_MatchesOnly                          = 1,
	MusicStingers_AlwaysOn                             = 2,
	MusicStingers_END                                  = 3
};

// Enum TAGame._Types_TA.ENameplateMode
enum class ENameplateMode : int
{
	NameplateMode_DistanceFade                         = 0,
	NameplateMode_AlwaysVisible                        = 1,
	NameplateMode_Simplified                           = 2,
	NameplateMode_END                                  = 3
};

// Enum TAGame._Types_TA.EHUDMessageLevel
enum class EHUDMessageLevel : int
{
	HUDMessageLevel_All                                = 0,
	HUDMessageLevel_GameUpdates                        = 1,
	HUDMessageLevel_Essential                          = 2,
	HUDMessageLevel_END                                = 3
};

// Enum TAGame._Types_TA.EForceFeedbackMode
enum class EForceFeedbackMode : int
{
	ForceFeedbackMode_Disabled                         = 0,
	ForceFeedbackMode_Impact                           = 1,
	ForceFeedbackMode_All                              = 2,
	ForceFeedbackMode_END                              = 3
};

// Enum TAGame._Types_TA.EForceFeedbackType
enum class EForceFeedbackType : int
{
	ForceFeedbackType_Disabled                         = 0,
	ForceFeedbackType_VeryLight                        = 1,
	ForceFeedbackType_Light                            = 2,
	ForceFeedbackType_Medium                           = 3,
	ForceFeedbackType_Heavy                            = 4,
	ForceFeedbackType_Legacy                           = 5,
	ForceFeedbackType_END                              = 6
};

// Enum TAGame._Types_TA.ECameraSettingsPreset
enum class ECameraSettingsPreset : int
{
	CameraSettingsPreset_Default                       = 0,
	CameraSettingsPreset_Balanced                      = 1,
	CameraSettingsPreset_Wide                          = 2,
	CameraSettingsPreset_Custom                        = 3,
	CameraSettingsPreset_Legacy                        = 4,
	CameraSettingsPreset_END                           = 5
};

// Enum TAGame._Types_TA.EMTXCatalogCategory
enum class EMTXCatalogCategory : int
{
	MTX_None                                           = 0,
	MTX_Keys                                           = 1,
	MTX_EsportsTokens                                  = 2,
	MTX_RocketBucks                                    = 3,
	MTX_StarterPack                                    = 4,
	MTX_StandardPack                                   = 5,
	MTX_END                                            = 6
};

// Enum TAGame._Types_TA.EEquippableProductSlot
enum class EEquippableProductSlot : int
{
	EPS_Skin                                           = 0,
	EPS_Wheels                                         = 1,
	EPS_Boost                                          = 2,
	EPS_Hat                                            = 3,
	EPS_Antenna                                        = 4,
	EPS_END                                            = 5
};

// Enum TAGame._Types_TA.ECurrency
enum class ECurrency : int
{
	Currency_Soft                                      = 0,
	Currency_Hard                                      = 1,
	Currency_END                                       = 2
};

// Enum TAGame._Types_TA.EOnlineXPModifierType
enum class EOnlineXPModifierType : int
{
	OnlineXPModifier_Additive                          = 0,
	OnlineXPModifier_Multiplicative                    = 1,
	OnlineXPModifier_END                               = 2
};

// Enum TAGame._Types_TA.EVanityType
enum class EVanityType : int
{
	VT_None                                            = 0,
	VT_Banner                                          = 1,
	VT_Avatar                                          = 2,
	VT_AvatarBorder                                    = 3,
	VT_END                                             = 4
};

// Enum TAGame._Types_TA.ETrinaryBool
enum class ETrinaryBool : int
{
	TrinaryBool_Irrelevant                             = 0,
	TrinaryBool_False                                  = 1,
	TrinaryBool_True                                   = 2,
	TrinaryBool_END                                    = 3
};

// Enum TAGame._Types_TA.EGarageState
enum class EGarageState : int
{
	EGS_GarageComplex_TA                               = 0,
	EGS_CenterCarFocus                                 = 1,
	EGS_CustomizeCenterCar                             = 2,
	EGS_CenterCarScreenshot                            = 3,
	EGS_CarSelect                                      = 4,
	EGS_PresetSelect                                   = 5,
	EGS_CarSwap                                        = 6,
	EGS_EditingRowProduct                              = 7,
	EGS_LockedSlot                                     = 8,
	EGS_SlotFocus                                      = 9,
	EGS_CustomizeSlotFocus                             = 10,
	EGS_SlotScreenshot                                 = 11,
	EGS_END                                            = 12
};

// Enum TAGame._Types_TA.EPaintFinishType
enum class EPaintFinishType : int
{
	PaintFinishType_Standard                           = 0,
	PaintFinishType_Metallic                           = 1,
	PaintFinishType_END                                = 2
};

// Enum TAGame._Types_TA.EPaintColorVariant
enum class EPaintColorVariant : int
{
	PaintColorVariant_Primary                          = 0,
	PaintColorVariant_LightAccent                      = 1,
	PaintColorVariant_DarkAccent                       = 2,
	PaintColorVariant_Emissive                         = 3,
	PaintColorVariant_DeEmissive                       = 4,
	PaintColorVariant_Complementary                    = 5,
	PaintColorVariant_Balanced                         = 6,
	PaintColorVariant_Tertiary                         = 7,
	PaintColorVariant_Additive                         = 8,
	PaintColorVariant_Unused3                          = 9,
	PaintColorVariant_Unused4                          = 10,
	PaintColorVariant_Unused5                          = 11,
	PaintColorVariant_END                              = 12
};

// Enum TAGame._Types_TA.ECustomMatchSettingsType
enum class ECustomMatchSettingsType : int
{
	CustomMatchSettingsType_PrivateMatch               = 0,
	CustomMatchSettingsType_LocalMatch                 = 1,
	CustomMatchSettingsType_TourCreate                 = 2,
	CustomMatchSettingsType_END                        = 3
};

// Enum TAGame._Types_TA.EEditingType
enum class EEditingType : int
{
	ET_FreeCam                                         = 0,
	ET_Ball                                            = 1,
	ET_Car                                             = 2,
	ET_END                                             = 3
};

// Enum TAGame._Types_TA.EEquipAction
enum class EEquipAction : int
{
	EquipAction_Both                                   = 0,
	EquipAction_Team0                                  = 1,
	EquipAction_Team1                                  = 2,
	EquipAction_END                                    = 3
};

// Enum TAGame._Types_TA.EHistory
enum class EHistory : int
{
	H_None                                             = 0,
	H_Add                                              = 1,
	H_Remove                                           = 2,
	H_END                                              = 3
};

// Enum TAGame._Types_TA.EHistoryType
enum class EHistoryType : int
{
	HT_None                                            = 0,
	HT_Undo                                            = 1,
	HT_Redo                                            = 2,
	HT_END                                             = 3
};

// Enum TAGame._Types_TA.EPawnType
enum class EPawnType : int
{
	PT_Player                                          = 0,
	PT_Spectator                                       = 1,
	PT_Editor                                          = 2,
	PT_END                                             = 3
};

// Enum TAGame._Types_TA.ETrainingSaveType
enum class ETrainingSaveType : int
{
	ETS_MyTraining                                     = 0,
	ETS_Favorited                                      = 1,
	ETS_Downloaded                                     = 2,
	ETS_END                                            = 3
};

// Enum TAGame._Types_TA.ESaveGameResult
enum class ESaveGameResult : int
{
	SaveGameResult_Pending                             = 0,
	SaveGameResult_Success                             = 1,
	SaveGameResult_UserNotSignedIn                     = 2,
	SaveGameResult_Error                               = 3,
	SaveGameResult_NoSpace                             = 4,
	SaveGameResult_Corrupt                             = 5,
	SaveGameResult_END                                 = 6
};

// Enum TAGame._Types_TA.EProductThumbnailSize
enum class EProductThumbnailSize : int
{
	PTS_Garage                                         = 0,
	PTS_Drop                                           = 1,
	PTS_Preview                                        = 2,
	PTS_ShopItem                                       = 3,
	PTS_END                                            = 4
};

// Enum TAGame._Types_TA.EProductAttachmentSocket
enum class EProductAttachmentSocket : int
{
	PAS_Hat                                            = 0,
	PAS_Front                                          = 1,
	PAS_Antenna                                        = 2,
	PAS_UnderGlow                                      = 3,
	PAS_Root                                           = 4,
	PAS_END                                            = 5
};

// Enum TAGame._Types_TA.EBallHitType
enum class EBallHitType : int
{
	HitType_Item0                                      = 0,
	HitType_Item1                                      = 1,
	HitType_Item2                                      = 2,
	HitType_Car                                        = 3,
	HitType_END                                        = 4
};

// Enum TAGame._Types_TA.EVoteStatus
enum class EVoteStatus : int
{
	VOTE_Pending                                       = 0,
	VOTE_Yes                                           = 1,
	VOTE_No                                            = 2,
	VOTE_END                                           = 3
};

// Enum TAGame._Types_TA.ETrainingTag
enum class ETrainingTag : int
{
	Tag_Aerials                                        = 0,
	Tag_Bounces                                        = 1,
	Tag_Shots                                          = 2,
	Tag_Saves                                          = 3,
	Tag_Clears                                         = 4,
	Tag_Rebounds                                       = 5,
	Tag_Redirects                                      = 6,
	Tag_Freestyles                                     = 7,
	Tag_Dribbles                                       = 8,
	Tag_AirDribbles                                    = 9,
	Tag_Kickoffs                                       = 10,
	Tag_WallShots                                      = 11,
	Tag_LongShots                                      = 12,
	Tag_CloseShots                                     = 13,
	Tag_AngleShots                                     = 14,
	Tag_BackwardsShots                                 = 15,
	Tag_Offense                                        = 16,
	Tag_Defense                                        = 17,
	Tag_PinchShots                                     = 18,
	Tag_END                                            = 19
};

// Enum TAGame._Types_TA.EDifficulty
enum class EDifficulty : int
{
	D_Easy                                             = 0,
	D_Medium                                           = 1,
	D_Hard                                             = 2,
	D_END                                              = 3
};

// Enum TAGame._Types_TA.ETrainingType
enum class ETrainingType : int
{
	Training_None                                      = 0,
	Training_Aerial                                    = 1,
	Training_Goalie                                    = 2,
	Training_Striker                                   = 3,
	Training_END                                       = 4
};

// Enum TAGame._Types_TA.EShowOnly
enum class EShowOnly : int
{
	SHOW_Everything                                    = 0,
	SHOW_Body                                          = 1,
	SHOW_Wheels                                        = 2,
	SHOW_Arena                                         = 3,
	SHOW_END                                           = 4
};

// Enum TAGame._Types_TA.ECarImpactResult
enum class ECarImpactResult : int
{
	CarImpactResult_None                               = 0,
	CarImpactResult_ZeroSpeed                          = 1,
	CarImpactResult_ZeroSpeedTowardsCar                = 2,
	CarImpactResult_OtherCarFaster                     = 3,
	CarImpactResult_Success                            = 4,
	CarImpactResult_FailDemolishTargetNone             = 5,
	CarImpactResult_FailNotSupersonic                  = 6,
	CarImpactResult_FailInsufficientForwardSpeed       = 7,
	CarImpactResult_FailNotWithinForwardEllipticalCone = 8,
	CarImpactResult_FailSameTeam                       = 9,
	CarImpactResult_FailNotWithinVictimHitLocationAngle = 10,
	CarImpactResult_FailNotWithinForwardHitAngle       = 11,
	CarImpactResult_FailNotWithinImpactNormalAngle     = 12,
	CarImpactResult_Bump                               = 13,
	CarImpactResult_END                                = 14
};

// Enum TAGame._Types_TA.EDemolishSpeed
enum class EDemolishSpeed : int
{
	DemolishSpeed_Supersonic                           = 0,
	DemolishSpeed_None                                 = 1,
	DemolishSpeed_END                                  = 2
};

// Enum TAGame._Types_TA.EDemolishTarget
enum class EDemolishTarget : int
{
	DemolishTarget_OtherTeam                           = 0,
	DemolishTarget_Everyone                            = 1,
	DemolishTarget_None                                = 2,
	DemolishTarget_END                                 = 3
};

// Enum TAGame._Types_TA.EBlueprintType
enum class EBlueprintType : int
{
	BlueprintType_Unrevealed                           = 0,
	BlueprintType_Revealed                             = 1,
	BlueprintType_NotABlueprint                        = 2,
	BlueprintType_END                                  = 3
};

// Enum TAGame._Types_TA.EProductTradeRestriction
enum class EProductTradeRestriction : int
{
	ProductTradeRestriction_P2P                        = 0,
	ProductTradeRestriction_TradeIn                    = 1,
	ProductTradeRestriction_END                        = 2
};

// Enum TAGame._Types_TA.EProductFilterSortType
enum class EProductFilterSortType : int
{
	ProductFilterSortType_Alphabetical                 = 0,
	ProductFilterSortType_UnlockDate                   = 1,
	ProductFilterSortType_Quality                      = 2,
	ProductFilterSortType_Quantity                     = 3,
	ProductFilterSortType_Series                       = 4,
	ProductFilterSortType_END                          = 5
};

// Enum TAGame._Types_TA.EArchiveProductFilter
enum class EArchiveProductFilter : int
{
	ArchiveFilter_ExcludeArchivedProducts              = 0,
	ArchiveFilter_IncludeArchivedProducts              = 1,
	ArchiveFilter_OnlyShowArchivedProducts             = 2,
	ArchiveFilter_END                                  = 3
};

// Enum TAGame._Types_TA.EProductFilterLogLevel
enum class EProductFilterLogLevel : int
{
	ProductFilterLogLevel_Filtered                     = 0,
	ProductFilterLogLevel_UnFiltered                   = 1,
	ProductFilterLogLevel_END                          = 2
};

// Enum TAGame._Types_TA.ELegacyBoxStatus
enum class ELegacyBoxStatus : int
{
	LBS_ExistingBox                                    = 0,
	LBS_NewBox                                         = 1,
	LBS_New                                            = 2,
	LBS_END                                            = 3
};

// Enum TAGame._Types_TA.EXPTier
enum class EXPTier : int
{
	XPTier_Low                                         = 0,
	XPTier_Medium                                      = 1,
	XPTier_High                                        = 2,
	XPTier_VeryHigh                                    = 3,
	XPTier_END                                         = 4
};

// Enum TAGame._Types_TA.ELicenseGroup
enum class ELicenseGroup : int
{
	LicenseGroup_Default                               = 0,
	LicenseGroup_Mario                                 = 1,
	LicenseGroup_Berry                                 = 2,
	LicenseGroup_Maple                                 = 3,
	LicenseGroup_DC                                    = 4,
	LicenseGroup_FastNFurious                          = 5,
	LicenseGroup_Dodge                                 = 6,
	LicenseGroup_Nissan                                = 7,
	LicenseGroup_RickNMorty                            = 8,
	LicenseGroup_HotWheels                             = 9,
	LicenseGroup_WWE                                   = 10,
	LicenseGroup_Jurassic                              = 11,
	LicenseGroup_Microsoft                             = 12,
	LicenseGroup_Nintendo                              = 13,
	LicenseGroup_Sony                                  = 14,
	LicenseGroup_Back2Future                           = 15,
	LicenseGroup_Ghostbusters                          = 16,
	LicenseGroup_Stranger                              = 17,
	LicenseGroup_Fortnite                              = 18,
	LicenseGroup_McLaren                               = 19,
	LicenseGroup_KnightRider                           = 20,
	LicenseGroup_Pele                                  = 21,
	LicenseGroup_MLB                                   = 22,
	LicenseGroup_NFL                                   = 23,
	LicenseGroup_NBA                                   = 24,
	LicenseGroup_Community                             = 25,
	LicenseGroup_Esports                               = 26,
	LicenseGroup_ESPN                                  = 27,
	LicenseGroup_Monstercat                            = 28,
	LicenseGroup_Kaskade                               = 29,
	LicenseGroup_Ford                                  = 30,
	LicenseGroup_Misc                                  = 31,
	LicenseGroup_Lambo                                 = 32,
	LicenseGroup_Nascar                                = 33,
	LicenseGroup_F1                                    = 34,
	LicenseGroup_Bond                                  = 35,
	LicenseGroup_END                                   = 36
};

// Enum TAGame._Types_TA.EEffectsIntensity
enum class EEffectsIntensity : int
{
	EI_Default                                         = 0,
	EI_Low                                             = 1,
	EI_END                                             = 2
};

// Enum TAGame._Types_TA.EControllerSoundMode
enum class EControllerSoundMode : int
{
	CSM_Multiplayer                                    = 0,
	CSM_On                                             = 1,
	CSM_Off                                            = 2,
	CSM_END                                            = 3
};

// Enum TAGame._Types_TA.EVoiceFilter
enum class EVoiceFilter : int
{
	VoiceFilter_All                                    = 0,
	VoiceFilter_Preset                                 = 1,
	VoiceFilter_TeamPreset                             = 2,
	VoiceFilter_TacticalPreset                         = 3,
	VoiceFilter_Team                                   = 4,
	VoiceFilter_Friends                                = 5,
	VoiceFilter_None                                   = 6,
	VoiceFilter_END                                    = 7
};

// Enum TAGame._Types_TA.ESupportType
enum class ESupportType : int
{
	SupportType_Creator                                = 0,
	SupportType_Charity                                = 1,
	SupportType_END                                    = 2
};

// Enum TAGame._Types_TA.EPaintTeam
enum class EPaintTeam : int
{
	PaintTeam_Blue                                     = 0,
	PaintTeam_Orange                                   = 1,
	PaintTeam_None                                     = 2,
	PaintTeam_END                                      = 3
};

// Enum TAGame._Types_TA.ETeam
enum class ETeam : int
{
	Team_Blue                                          = 0,
	Team_Orange                                        = 1,
	Team_END                                           = 2
};

// Enum TAGame._Types_TA.SearchStatusOwner
enum class ESearchStatusOwner : int
{
	StatusOwner_None                                   = 0,
	StatusOwner_Matchmaking                            = 1,
	StatusOwner_PrivateMatch                           = 2,
	StatusOwner_Lan                                    = 3,
	StatusOwner_Tournaments                            = 4,
	StatusOwner_END                                    = 5
};

// Enum TAGame._Types_TA.EMatchmakingViewTab
enum class EMatchmakingViewTab : int
{
	MatchmakingViewTab_Unranked                        = 0,
	MatchmakingViewTab_Ranked                          = 1,
	MatchmakingViewTab_RankedSports                    = 2,
	MatchmakingViewTab_UnrankedSports                  = 3,
	MatchmakingViewTab_MicroEvent                      = 4,
	MatchmakingViewTab_DebugMicroEvent                 = 5,
	MatchmakingViewTab_Casual                          = 6,
	MatchmakingViewTab_END                             = 7
};

// Enum TAGame._Types_TA.EWheelPosition
enum class EWheelPosition : int
{
	WP_FrontLeft                                       = 0,
	WP_FrontRight                                      = 1,
	WP_BackLeft                                        = 2,
	WP_BackRight                                       = 3,
	WP_END                                             = 4
};

// Enum TAGame._Types_TA.ETernarySetting
enum class ETernarySetting : int
{
	TernarySetting_Default                             = 0,
	TernarySetting_Enabled                             = 1,
	TernarySetting_Disabled                            = 2,
	TernarySetting_END                                 = 3
};

// Enum TAGame._Types_TA.EVoteSubject
enum class EVoteSubject : int
{
	VoteSubject_Rematch                                = 0,
	VoteSubject_Forfeit                                = 1,
	VoteSubject_END                                    = 2
};

// Enum TAGame._Types_TA.ENetworkInputBuffer
enum class ENetworkInputBuffer : int
{
	NetworkInputBuffer_ServerConsume                   = 0,
	NetworkInputBuffer_STS                             = 1,
	NetworkInputBuffer_CSTS                            = 2,
	NetworkInputBuffer_END                             = 3
};

// Enum TAGame._Types_TA.ENetworkValue
enum class ENetworkValue : int
{
	Net_Low                                            = 0,
	Net_Medium                                         = 1,
	Net_High                                           = 2,
	Net_END                                            = 3
};

// Enum TAGame._Types_TA.EMeshMirrorMode
enum class EMeshMirrorMode : int
{
	MeshMirrorMode_Mirror                              = 0,
	MeshMirrorMode_Rotate                              = 1,
	MeshMirrorMode_END                                 = 2
};

// Enum TAGame._Types_TA.EStatGraphLevel
enum class EStatGraphLevel : int
{
	StatGraphLevel_None                                = 0,
	StatGraphLevel_PerfSummary                         = 1,
	StatGraphLevel_PerfGraphShort                      = 2,
	StatGraphLevel_PerfGraphLong                       = 3,
	StatGraphLevel_NetSummary                          = 4,
	StatGraphLevel_NetGraphShort                       = 5,
	StatGraphLevel_NetGraphLong                        = 6,
	StatGraphLevel_END                                 = 7
};

// Enum TAGame._Types_TA.EInputBufferSaturationLevel
enum class EInputBufferSaturationLevel : int
{
	IBSL_ExtremelyStarved                              = 0,
	IBSL_Starved                                       = 1,
	IBSL_Good                                          = 2,
	IBSL_Saturated                                     = 3,
	IBSL_ExtremelySaturated                            = 4,
	IBSL_END                                           = 5
};

// Enum TAGame._Types_TA.EAchievementType
enum class EAchievementType : int
{
	AT_Game                                            = 0,
	AT_EXP0                                            = 1,
	AT_DLC0                                            = 2,
	AT_DLC1                                            = 3,
	AT_DLC2                                            = 4,
	AT_XBO0                                            = 5,
	AT_DLC3                                            = 6,
	AT_DLC4                                            = 7,
	AT_DLC5                                            = 8,
	AT_DLC6                                            = 9,
	AT_DLC7                                            = 10,
	AT_Meta                                            = 11,
	AT_END                                             = 12
};

// Enum TAGame.AchievementManager_TA.EAchievementGame
enum class EAchievementGame : int
{
	AG_Virtuoso                                        = 0,
	AG_Stocked                                         = 1,
	AG_FarFarAway                                      = 2,
	AG_SuperVictorious                                 = 3,
	AG_Champion                                        = 4,
	AG_TheStreak                                       = 5,
	AG_HelensPride                                     = 6,
	AG_BattleCarCollector                              = 7,
	AG_DropsintheBucket                                = 8,
	AG_Rocketeer                                       = 9,
	AG_GreaseMonkey                                    = 10,
	AG_PitchVeteran                                    = 11,
	AG_RidersBlock                                     = 12,
	AG_BreakShot                                       = 13,
	AG_Turbocharger                                    = 14,
	AG_DrillSergeant                                   = 15,
	AG_MinutetoWinit                                   = 16,
	AG_SpeedDemon                                      = 17,
	AG_PickMeUp                                        = 18,
	AG_WallCrawler                                     = 19,
	AG_TeamPlayer                                      = 20,
	AG_SARPBCForever                                   = 21,
	AG_FeatherinYourRecap                              = 22,
	AG_Winner                                          = 23,
	AG_CleanSheet                                      = 24,
	AG_TripleThreat                                    = 25,
	AG_DoubleUp                                        = 26,
	AG_SinglesClub                                     = 27,
	AG_PerfectStart                                    = 28,
	AG_StillAShowOff                                   = 29,
	AG_KnowTheDrill                                    = 30,
	AG_Traveler                                        = 31,
	AG_Tinkerer                                        = 32,
	AG_FirstTimer                                      = 33,
	AG_BarrasBravas                                    = 34,
	AG_Friendly                                        = 35,
	AG_END                                             = 36
};

// Enum TAGame.AchievementManager_TA.EAchievementEXP0
enum class EAchievementEXP0 : int
{
	AEXP0_SkyHigh                                      = 0,
	AEXP0_AllFours                                     = 1,
	AEXP0_Gladiator                                    = 2,
	AEXP0_END                                          = 3
};

// Enum TAGame.AchievementManager_TA.EAchievementDLC0
enum class EAchievementDLC0 : int
{
	ADLC0_WinningIsWinning                             = 0,
	ADLC0_AnInchAnd62Miles                             = 1,
	ADLC0_RideOrDie                                    = 2,
	ADLC0_DontLookBack                                 = 3,
	ADLC0_FamilyNotFriends                             = 4,
	ADLC0_DriftKing                                    = 5,
	ADLC0_END                                          = 6
};

// Enum TAGame.AchievementManager_TA.EAchievementDLC1
enum class EAchievementDLC1 : int
{
	ADLC1_SurvivalOfTheFittest                         = 0,
	ADLC1_Heartbreaker                                 = 1,
	ADLC1_NaturalProgression                           = 2,
	ADLC1_Throwback                                    = 3,
	ADLC1_HotShotPartTwo                               = 4,
	ADLC1_END                                          = 5
};

// Enum TAGame.AchievementManager_TA.EAchievementDLC2
enum class EAchievementDLC2 : int
{
	ADLC2_MyWorldIsFire                                = 0,
	ADLC2_Spectacular                                  = 1,
	ADLC2_Savage                                       = 2,
	ADLC2_Ruthless                                     = 3,
	ADLC2_PsychoMasterExploder                         = 4,
	ADLC2_END                                          = 5
};

// Enum TAGame.AchievementManager_TA.EAchievementXBO0
enum class EAchievementXBO0 : int
{
	AXBO0_NiceHat                                      = 0,
	AXBO0_MarcusVMasterChief                           = 1,
	AXBO0_END                                          = 2
};

// Enum TAGame.AchievementManager_TA.EAchievementMeta
enum class EAchievementMeta : int
{
	AMeta_PointCollector                               = 0,
	AMeta_END                                          = 1
};

// Enum TAGame.AchievementManager_TA.EAchievementDLC7
enum class EAchievementDLC7 : int
{
	ADLC7_JoinTheClub                                  = 0,
	ADLC7_TogetherIsBetter                             = 1,
	ADLC7_NewChallenger                                = 2,
	ADLC7_PeoplePerson                                 = 3,
	ADLC7_SquadGoals                                   = 4,
	ADLC7_BestOfTheBunch                               = 5,
	ADLC7_END                                          = 6
};

// Enum TAGame.AchievementManager_TA.EAchievementDLC6
enum class EAchievementDLC6 : int
{
	ADLC6_StormTrooper                                 = 0,
	ADLC6_GoodTimes                                    = 1,
	ADLC6_SwapMeet                                     = 2,
	ADLC6_TradeSecret                                  = 3,
	ADLC6_RankUp                                       = 4,
	ADLC6_ComingOnStrong                               = 5,
	ADLC6_END                                          = 6
};

// Enum TAGame.AchievementManager_TA.EAchievementDLC5
enum class EAchievementDLC5 : int
{
	ADLC5_RegisteredVoter                              = 0,
	ADLC5_Metaverse                                    = 1,
	ADLC5_BraveTheElements                             = 2,
	ADLC5_DamageControl                                = 3,
	ADLC5_FullCourse                                   = 4,
	ADLC5_BuckminsterX10                               = 5,
	ADLC5_END                                          = 6
};

// Enum TAGame.AchievementManager_TA.EAchievementDLC4
enum class EAchievementDLC4 : int
{
	ADLC4_GG                                           = 0,
	ADLC4_Trifecta                                     = 1,
	ADLC4_InfinitePower                                = 2,
	ADLC4_StoppedCold                                  = 3,
	ADLC4_SeaTurtle                                    = 4,
	ADLC4_GetUpMrBubbles                               = 5,
	ADLC4_RocketGenocider                              = 6,
	ADLC4_END                                          = 7
};

// Enum TAGame.AchievementManager_TA.EAchievementDLC3
enum class EAchievementDLC3 : int
{
	ADLC3_MadScientist                                 = 0,
	ADLC3_IcingTheCake                                 = 1,
	ADLC3_LeftWingRightWing                            = 2,
	ADLC3_FastBreak                                    = 3,
	ADLC3_BuzzerBeater                                 = 4,
	ADLC3_BuddingArtist                                = 5,
	ADLC3_OneBetter                                    = 6,
	ADLC3_Certifiable                                  = 7,
	ADLC3_END                                          = 8
};

// Enum TAGame.AchievementSave_TA.EAchievementSaveVersion
enum class EAchievementSaveVersion : int
{
	AchievementSaveVersion_FreeToPlayLaunch            = 0,
	AchievementSaveVersion_END                         = 1
};

// Enum TAGame.ActivityFeedManager_TA.EActivityFeedType
enum class EActivityFeedType : int
{
	AF_UnlockedBody                                    = 0,
	AF_DrivenDistance                                  = 1,
	AF_ScoredGoal                                      = 2,
	AF_BlockedShot                                     = 3,
	AF_WonGame                                         = 4,
	AF_MVPScore                                        = 5,
	AF_DefeatedFriend                                  = 6,
	AF_CompletedRegularSeason                          = 7,
	AF_WonChampionship                                 = 8,
	AF_UnlockedItem                                    = 9,
	AF_UnlockedSweetTooth                              = 10,
	AF_END                                             = 11
};

// Enum TAGame.PitchTekDrawingComponent_TA.EPitchTekDecalType
enum class EPitchTekDecalType : int
{
	PTDT_Ball                                          = 0,
	PTDT_Car                                           = 1,
	PTDT_END                                           = 2
};

// Enum TAGame.BTLock.ELockScope
enum class ELockScope : int
{
	LockScope_Local                                    = 0,
	LockScope_Global                                   = 1,
	LockScope_END                                      = 2
};

// Enum TAGame.CameraState_ReplayAutoCam_TA.ECountDownFocus
enum class ECountDownFocus : int
{
	CDF_None                                           = 0,
	CDF_Pan                                            = 1,
	CDF_Rotate                                         = 2,
	CDF_END                                            = 3
};

// Enum TAGame.FXActor_Boost_TA.EmitterSocketBehavior
enum class EmitterSocketBehavior : int
{
	ESB_Default                                        = 0,
	ESB_SingleEmitterAveragePosition                   = 1,
	ESB_END                                            = 2
};

// Enum TAGame.ClientConnectionTracker_TA.EConnectionQualityState
enum class EConnectionQualityState : int
{
	CQS_Good                                           = 0,
	CQS_Mediocre                                       = 1,
	CQS_Bad                                            = 2,
	CQS_END                                            = 3
};

// Enum TAGame.GameEvent_Tutorial_TA.ERotationType
enum class ERotationType : int
{
	Rot_Auto                                           = 0,
	Rot_AutoAim                                        = 1,
	Rot_AutoForward                                    = 2,
	Rot_AutoArch                                       = 3,
	Rot_World                                          = 4,
	Rot_MapCenter                                      = 5,
	Rot_END                                            = 6
};

// Enum TAGame.GFxData_LocalPlayer_TA.ESplitScreenPosition
enum class ESplitScreenPosition : int
{
	SSP_Center                                         = 0,
	SSP_Left                                           = 1,
	SSP_Right                                          = 2,
	SSP_Top                                            = 3,
	SSP_Bottom                                         = 4,
	SSP_TopLeft                                        = 5,
	SSP_TopRight                                       = 6,
	SSP_BottomLeft                                     = 7,
	SSP_BottomRight                                    = 8,
	SSP_END                                            = 9
};

// Enum TAGame.GameplayMusicPlayer_TA.EMusicPlayerState
enum class EMusicPlayerState : int
{
	MusicPlayerState_None                              = 0,
	MusicPlayerState_Enabled                           = 1,
	MusicPlayerState_Muted                             = 2,
	MusicPlayerState_Disabled                          = 3,
	MusicPlayerState_END                               = 4
};

// Enum TAGame.GameplayMusicPlayer_TA.EPlaylistType
enum class EPlaylistType : int
{
	PlaylistType_Training                              = 0,
	PlaylistType_Match                                 = 1,
	PlaylistType_END                                   = 2
};

// Enum TAGame.GFxData_OnlineMatchStatus_TA.SearchMessageType
enum class ESearchMessageType : int
{
	MessageType_Status                                 = 0,
	MessageType_Warning                                = 1,
	MessageType_END                                    = 2
};

// Enum TAGame.GFxData_Party_TA.EPsyNetPartyStatus
enum class EPsyNetPartyStatus : int
{
	PsyNetParty_Disabled                               = 0,
	PsyNetParty_Connecting                             = 1,
	PsyNetParty_Connected                              = 2,
	PsyNetParty_Disconnected                           = 3,
	PsyNetParty_END                                    = 4
};

// Enum TAGame.GFxData_UserSetting_TA.EUserSettingType
enum class EUserSettingType : int
{
	UserSettingType_List                               = 0,
	UserSettingType_Boolean                            = 1,
	UserSettingType_Scalar                             = 2,
	UserSettingType_END                                = 3
};

// Enum TAGame.GFxEngine_TA.ESoundStatePriority
enum class ESoundStatePriority : int
{
	SSP_None                                           = 0,
	SSP_Scoreboard                                     = 1,
	SSP_Replay                                         = 2,
	SSP_MidGameMenu                                    = 3,
	SSP_Pause                                          = 4,
	SSP_BeginRound                                     = 5,
	SSP_EndRound                                       = 6,
	SSP_WinnerMenu                                     = 7,
	SSP_MainMenu                                       = 8,
	SSP_PremiumGarage                                  = 9,
	SSP_Roulette                                       = 10,
	SSP_AudioPreview                                   = 11,
	SSP_MusicPreview                                   = 12,
	SSP_ThirdPartyOverlay                              = 13,
	SSP_LoadingScreen                                  = 14,
	SSP_END                                            = 15
};

// Enum TAGame._TourTypes_TA.ETourSeedType
enum class ETourSeedType : int
{
	TourSeedType_Skill                                 = 0,
	TourSeedType_Random                                = 1,
	TourSeedType_END                                   = 2
};

// Enum TAGame.Replay_TA.EReplayVersion
enum class EReplayVersion : int
{
	ReplayVersion_Base                                 = 0,
	ReplayVersion_OnlineLoadout                        = 1,
	ReplayVersion_CameraSettings                       = 2,
	ReplayVersion_TeamLoadouts                         = 3,
	ReplayVersion_MatchType                            = 4,
	ReplayVersion_ActorName                            = 5,
	ReplayVersion_MutatorSeekFree                      = 6,
	ReplayVersion_ClubColors                           = 7,
	ReplayVersion_CameraTrack                          = 8,
	ReplayVersion_END                                  = 9
};

// Enum TAGame.Replay_TA.EReplayState
enum class EReplayState : int
{
	ReplayState_Idle                                   = 0,
	ReplayState_Recording                              = 1,
	ReplayState_Playing                                = 2,
	ReplayState_END                                    = 3
};

// Enum TAGame.SeqAct_SetLoadout_TA.EForcedTeamOverride
enum class EForcedTeamOverride : int
{
	ForcedTeamOverride_None                            = 0,
	ForcedTeamOverride_Blue                            = 1,
	ForcedTeamOverride_Orange                          = 2,
	ForcedTeamOverride_END                             = 3
};

// Enum TAGame.SkelControlSingleBoneCopy_TA.ECopyAxis
enum class ECopyAxis : int
{
	CopyAxis_X                                         = 0,
	CopyAxis_Y                                         = 1,
	CopyAxis_Z                                         = 2,
	CopyAxis_Pitch                                     = 3,
	CopyAxis_Yaw                                       = 4,
	CopyAxis_Roll                                      = 5,
	CopyAxis_END                                       = 6
};

// Enum TAGame.StatFactory_TA.EFiveHitType
enum class EFiveHitType : int
{
	FiveHit_None                                       = 0,
	FiveHit_Low                                        = 1,
	FiveHit_High                                       = 2,
	FiveHit_END                                        = 3
};

// Enum TAGame.Tutorial_TA.ETutorialOutput
enum class ETutorialOutput : int
{
	TutorialOutput_Ended                               = 0,
	TutorialOutput_Completed                           = 1,
	TutorialOutput_Failed                              = 2,
	TutorialOutput_ScreenFadedIn                       = 3,
	TutorialOutput_ScreenFadedOut                      = 4,
	TutorialOutput_AllMessagesDisplayed                = 5,
	TutorialOutput_Started                             = 6,
	TutorialOutput_Reset                               = 7,
	TutorialOutput_Skipped                             = 8,
	TutorialOutput_AnswerRight                         = 9,
	TutorialOutput_AnswerWrong                         = 10,
	TutorialOutput_END                                 = 11
};

// Enum TAGame.Tutorial_TA.ETutorialStatus
enum class ETutorialStatus : int
{
	TutorialStatus_None                                = 0,
	TutorialStatus_Failed                              = 1,
	TutorialStatus_Completed                           = 2,
	TutorialStatus_END                                 = 3
};

// Enum TAGame.Tutorial_TA.EPlayerDriveType
enum class EPlayerDriveType : int
{
	PlayerDriveType_All                                = 0,
	PlayerDriveType_Player                             = 1,
	PlayerDriveType_Bot                                = 2,
	PlayerDriveType_END                                = 3
};

// Enum TAGame.VehiclePickup_Boost_TA.EBoostType
enum class EBoostType : int
{
	BoostType_Unknown                                  = 0,
	BoostType_Pill                                     = 1,
	BoostType_Pad                                      = 2,
	BoostType_END                                      = 3
};

// Enum TAGame._ShopTypes_TA.EShopDeliverableType
enum class EShopDeliverableType : int
{
	Deliverable_Product                                = 0,
	Deliverable_END                                    = 1
};

// Enum TAGame._ShopTypes_TA.EItemDisplayType
enum class EItemDisplayType : int
{
	DisplayDaily                                       = 0,
	DisplayFull                                        = 1,
	EItemDisplayType_END                               = 2
};

// Enum TAGame.BreakOutActor_Platform_TA.EBreakoutDamageState
enum class EBreakoutDamageState : int
{
	DamageState_Start                                  = 0,
	DamageState_Damaged                                = 1,
	DamageState_Broken                                 = 2,
	DamageState_END                                    = 3
};

// Enum TAGame.SpecialPickup_BallFreeze_TA.BallFreezeState
enum class EBallFreezeState : int
{
	BallFreezeState_Freezing                           = 0,
	BallFreezeState_Frozen                             = 1,
	BallFreezeState_END                                = 2
};

// Enum TAGame.SpecialPickup_GrapplingHook_TA.ERopeState
enum class ERopeState : int
{
	RopeState_Traveling                                = 0,
	RopeState_Attached                                 = 1,
	RopeState_END                                      = 2
};

// Enum TAGame.SpecialPickup_Spring_TA.ESpringState
enum class ESpringState : int
{
	SpringState_Traveling                              = 0,
	SpringState_PostHit                                = 1,
	SpringState_END                                    = 2
};

// Enum TAGame.DistributionFloatSpeed_TA.ESpeedDistributionSpace
enum class ESpeedDistributionSpace : int
{
	SDD_Forward                                        = 0,
	SDD_Side                                           = 1,
	SDD_Up                                             = 2,
	SDD_World                                          = 3,
	SDD_END                                            = 4
};

// Enum TAGame.OrbitHitHandler_TA.EOrbitAxisBehavior
enum class EOrbitAxisBehavior : int
{
	OAB_StaticRotationAxis                             = 0,
	OAB_RandomRotationAxis                             = 1,
	OAB_END                                            = 2
};

// Enum TAGame.OrbitHitHandler_TA.EOrbitCenterLocation
enum class EOrbitCenterLocation : int
{
	OCB_BallHitLocation                                = 0,
	OCB_CenterOfGoal                                   = 1,
	OCB_END                                            = 2
};

// Enum TAGame.ForceVolume_TA.EForceDirection
enum class EForceDirection : int
{
	EFD_VolumeRotation                                 = 0,
	EFD_ActorVelocity                                  = 1,
	EFD_Custom                                         = 2,
	EFD_END                                            = 3
};

// Enum TAGame.InterpTrackSkelControlRotation_TA.ERotationAxis
enum class ERotationAxis : int
{
	ROTAXIS_Yaw                                        = 0,
	ROTAXIS_Pitch                                      = 1,
	ROTAXIS_Roll                                       = 2,
	ROTAXIS_END                                        = 3
};

// Enum TAGame.ItemDropGroup_TA.EDropGroupDisplayOrder
enum class EDropGroupDisplayOrder : int
{
	DropGroupDisplayOrder_Default                      = 0,
	DropGroupDisplayOrder_Challenge                    = 1,
	DropGroupDisplayOrder_RewardDrop                   = 2,
	DropGroupDisplayOrder_GarageSlot                   = 3,
	DropGroupDisplayOrder_LevelUpReward                = 4,
	DropGroupDisplayOrder_Currency                     = 5,
	DropGroupDisplayOrder_Container                    = 6,
	DropGroupDisplayOrder_END                          = 7
};

// Enum TAGame.ProductAssetLoader_TA.EAssetLoadState
enum class EAssetLoadState : int
{
	AssetLoadState_New                                 = 0,
	AssetLoadState_WaitingAsyncLoad                    = 1,
	AssetLoadState_AsyncLoad                           = 2,
	AssetLoadState_Loaded                              = 3,
	AssetLoadState_END                                 = 4
};

// Enum TAGame.ProductEquipProfileSlot_Custom_TA.EEnableSlotCustomization
enum class EEnableSlotCustomization : int
{
	EnableSlotCustomization_Enabled                    = 0,
	EnableSlotCustomization_Disabled                   = 1,
	EnableSlotCustomization_END                        = 2
};

// Enum TAGame.SampleHistory_TA.EGraphSummaryType
enum class EGraphSummaryType : int
{
	GraphSummaryType_Latest                            = 0,
	GraphSummaryType_Avg                               = 1,
	GraphSummaryType_MinValue                          = 2,
	GraphSummaryType_MaxValue                          = 3,
	GraphSummaryType_Sum                               = 4,
	GraphSummaryType_END                               = 5
};

// Enum TAGame.StatGraph_TA.EStatGraphLayer
enum class EStatGraphLayer : int
{
	StatGraphLayer_Background                          = 0,
	StatGraphLayer_Text                                = 1,
	StatGraphLayer_Graph                               = 2,
	StatGraphLayer_END                                 = 3
};

// Enum TAGame.FirstTimeExperienceManager_TA.FTELegacyGroupType
enum class EFTELegacyGroupType : int
{
	LGT_All                                            = 0,
	LGT_NewUser                                        = 1,
	LGT_LegacyUser                                     = 2,
	LGT_END                                            = 3
};

// Enum TAGame.FirstTimeExperienceManager_TA.FTEVersioning
enum class EFTEVersioning : int
{
	FTEV_InitialVersion                                = 0,
	FTEV_CustomizationRework                           = 1,
	FTEV_END                                           = 2
};

// Enum TAGame.GameEditor_Ring_TA.EDetectionType
enum class EDetectionType : int
{
	DT_Ball                                            = 0,
	DT_Player                                          = 1,
	DT_END                                             = 2
};

// Enum TAGame.MusicPlayerSave_TA.EGameplayMusicSetting
enum class EGameplayMusicSetting : int
{
	GameplayMusic_Off                                  = 0,
	GameplayMusic_TraningOnly                          = 1,
	GameplayMusic_MatchesOnly                          = 2,
	GameplayMusic_AlwaysOn                             = 3,
	GameplayMusic_END                                  = 4
};

// Enum TAGame.MusicPlayerSave_TA.EMusicPlayerSave
enum class EMusicPlayerSave : int
{
	MusicPlayerSaveVersion_NewGameplayMusicSettings    = 0,
	MusicPlayerSaveVersion_END                         = 1
};

// Enum TAGame.ProductAttribute_Trademark_TA.ETrademarkGlyph
enum class ETrademarkGlyph : int
{
	TrademarkGlyph_TradeMark                           = 0,
	TrademarkGlyph_Registered                          = 1,
	TrademarkGlyph_Copyright                           = 2,
	TrademarkGlyph_END                                 = 3
};

// Enum TAGame.ProductsArchiveSave_TA.EProductsArchiveSaveVersion
enum class EProductsArchiveSaveVersion : int
{
	ProductsArchiveSaveVersion_ConvertHashIDsToInstanceIDs = 0,
	ProductsArchiveSaveVersion_END                     = 1
};

// Enum TAGame.ProductsFavoriteSave_TA.EProductsFavoriteSaveVersion
enum class EProductsFavoriteSaveVersion : int
{
	EProductsFavoriteSaveVersion_ConvertHashIDsToInstanceIDs = 0,
	EProductsFavoriteSaveVersion_END                   = 1
};

// Enum TAGame.ProfileControlsSave_TA.EProfilePCSaveVersion
enum class UProfileControlsSave_TA_EProfilePCSaveVersion : int
{
	ProfileControlsSaveVersion_NewVibrationSettings    = 0,
	ProfileControlsSaveVersion_END                     = 1
};

// Enum TAGame.ProfileGamepadSave_TA.EProfileGamepadSaveVersion
enum class EProfileGamepadSaveVersion : int
{
	ProfileGamepadSaveVersion_NewDefaultControls       = 0,
	ProfileGamepadSaveVersion_END                      = 1
};

// Enum TAGame.ProfilePCSave_TA.EProfilePCSaveVersion
enum class UProfilePCSave_TA_EProfilePCSaveVersion : int
{
	ProfilePCSaveVersion_NewDefaultControls            = 0,
	ProfilePCSaveVersion_END                           = 1
};

// Enum TAGame.SaveDataVersions_TA.ESaveDataVersion
enum class ESaveDataVersion : int
{
	SaveDataVersion_Initial                            = 0,
	SaveDataVersion_LightShafts                        = 1,
	SaveDataVersion_NewOnlineProductsRemoved           = 2,
	SaveDataVersion_Invisitek                          = 3,
	SaveDataVersion_SoundSettings                      = 4,
	SaveDataVersion_UISavedValues                      = 5,
	SaveDataVersion_MapPrefs                           = 6,
	SaveDataVersion_GarageComplex                      = 7,
	SaveDataVersion_RankedReconnect                    = 8,
	SaveDataVersion_Network                            = 9,
	SaveDataVersion_Achievements                       = 10,
	SaveDataVersion_Tutorial                           = 11,
	SaveDataVersion_BlogTiles                          = 12,
	SaveDataVersion_Products                           = 13,
	SaveDataVersion_PlaylistSkillData                  = 14,
	SaveDataVersion_MatchmakingSettings                = 15,
	SaveDataVersion_ClientXP                           = 16,
	SaveDataVersion_TournamentSettings                 = 17,
	SaveDataVersion_Seasons                            = 18,
	SaveDataVersion_VideoSettings                      = 19,
	SaveDataVersion_GameplaySettings                   = 20,
	SaveDataVersion_CustomMatchSettings                = 21,
	SaveDataVersion_FreeplayMap                        = 22,
	SaveDataVersion_SaveSingleSeason                   = 23,
	SaveDataVersion_MatchesPlayed                      = 24,
	SaveDataVersion_ConsoleLensFlares                  = 25,
	SaveDataVersion_LevelThresholds                    = 26,
	SaveDataVersion_ResetNetworkSettings               = 27,
	SaveDataVersion_NoSaveDLCOwnership_DEPRECATED      = 28,
	SaveDataVersion_ProductsFavoriteSave               = 29,
	SaveDataVersion_CrossplayFlip                      = 30,
	SaveDataVersion_KeyConversion                      = 31,
	SaveDataVersion_END                                = 32
};

// Enum TAGame.SeasonSave_TA.ESeasonSaveVersion
enum class ESeasonSaveVersion : int
{
	SeasonSaveVersion_AddIntroBotDifficulty            = 0,
	SeasonSaveVersion_END                              = 1
};

// Enum TAGame.TourStatus_TA.ETourStatus
enum class ETourStatus : int
{
	TourStatus_None                                    = 0,
	TourStatus_Cancelled                               = 1,
	TourStatus_Full                                    = 2,
	TourStatus_END                                     = 3
};

// Enum TAGame.AssetAttribute_ForceWheelAxle_TA.EAxleToForce
enum class EAxleToForce : int
{
	ForceFrontAxle                                     = 0,
	ForceBackAxle                                      = 1,
	EAxleToForce_END                                   = 2
};

// Enum TAGame.BotConfig_TA.EBotSkill
enum class EBotSkill : int
{
	BotSkill_Intro                                     = 0,
	BotSkill_Easy                                      = 1,
	BotSkill_Medium                                    = 2,
	BotSkill_Hard                                      = 3,
	BotSkill_Unfair                                    = 4,
	BotSkill_END                                       = 5
};

// Enum TAGame._CrowdTypes_TA.ECrowdValueType
enum class ECrowdValueType : int
{
	CVT_Excitement                                     = 0,
	CVT_Tension                                        = 1,
	CVT_Anticipation                                   = 2,
	CVT_Upset                                          = 3,
	CVT_END                                            = 4
};

// Enum TAGame.FirstTimeExperienceRedefinition_TA.FTERedefinitionType
enum class EFTERedefinitionType : int
{
	ER_Group                                           = 0,
	ER_Checkpoint                                      = 1,
	ER_Triggers                                        = 2,
	ER_UserGroup                                       = 3,
	ER_SaveGroup                                       = 4,
	ER_SaveAll                                         = 5,
	ER_END                                             = 6
};

// Enum TAGame.FirstTimeExperienceRedefinition_TA.FTERedefinitionAction
enum class EFTERedefinitionAction : int
{
	RT_Rename                                          = 0,
	RT_Add                                             = 1,
	RT_Remove                                          = 2,
	RT_END                                             = 3
};

// Enum TAGame.ProfileQuickChatSave_TA.EQuickChatVersion
enum class EQuickChatVersion : int
{
	QuickChatVersion_AddPreGameQuickChat               = 0,
	QuickChatVersion_END                               = 1
};

// Enum TAGame.ProfileVersions_TA.EProfileVersion
enum class EProfileVersion : int
{
	ProfileVersion_Initial                             = 0,
	ProfileVersion_LoadoutPlayerTitle                  = 1,
	ProfileVersion_SaveReplayInput                     = 2,
	ProfileVersion_SaveReplayInput2                    = 3,
	ProfileVersion_ChatRebind                          = 4,
	ProfileVersion_SaveReplayInput3                    = 5,
	ProfileVersion_DingoChatFix                        = 6,
	ProfileVersion_CustomMatchSettings                 = 7,
	ProfileVersion_ChatSettings                        = 8,
	ProfileVersion_TeamLoadouts                        = 9,
	ProfileVersion_CarColors                           = 10,
	ProfileVersion_ChatGamepadBindingConsoleOnly       = 11,
	ProfileVersion_PaintFinishInLoadouts               = 12,
	ProfileVersion_MusicPlaylistSelector               = 13,
	ProfileVersion_ResetAccountSelectNNX               = 14,
	ProfileVersion_GameplaySettings                    = 15,
	ProfileVersion_ResetAccountSelectNNXMain           = 16,
	ProfileVersion_BannerSettings                      = 17,
	ProfileVersion_Stats                               = 18,
	ProfileVersion_ControlSettings                     = 19,
	ProfileVersion_PCBindings                          = 20,
	ProfileVersion_AimAssist                           = 21,
	ProfileVersion_CameraSettings                      = 22,
	ProfileVersion_QuickChatSettings                   = 23,
	ProfileVersion_LoadoutData                         = 24,
	ProfileVersion_GamepadSettings                     = 25,
	ProfileVersion_SparseBindingsArrays                = 26,
	ProfileVersion_ClubColors2                         = 27,
	ProfileVersion_CarColors2                          = 28,
	ProfileVersion_END                                 = 29
};

// Enum TAGame.SpecialEventConfig_TA.ESpecialEventState
enum class ESpecialEventState : int
{
	SES_Inactive                                       = 0,
	SES_Active                                         = 1,
	SES_Redemption                                     = 2,
	SES_END                                            = 3
};

// Enum TAGame.StatTitle_TA.EStatTrackingUnitType
enum class EStatTrackingUnitType : int
{
	CountUnit                                          = 0,
	SpeedUnit                                          = 1,
	DistanceUnit                                       = 2,
	EStatTrackingUnitType_END                          = 3
};

// Enum TAGame.ChallengeFolder_TA.EChallengeSort
enum class EChallengeSort : int
{
	ECS_None                                           = 0,
	ECS_TopBottom                                      = 1,
	ECS_END                                            = 2
};

// Enum TAGame.CrumbTrailRedefinition_TA.CrumbRedefinitionType
enum class ECrumbRedefinitionType : int
{
	CR_TrailData                                       = 0,
	CR_Triggers                                        = 1,
	CR_CompletionTriggers                              = 2,
	CR_Crumbs                                          = 3,
	CR_END                                             = 4
};

// Enum TAGame.CrumbTrailRedefinition_TA.CrumbAction
enum class ECrumbAction : int
{
	CA_Add                                             = 0,
	CA_Remove                                          = 1,
	CA_Redo                                            = 2,
	CA_END                                             = 3
};

// Enum TAGame.GameEvent_TrainingEditor_TA.EPlayTestType
enum class EPlayTestType : int
{
	PlayTest_LoopRound                                 = 0,
	PlayTest_IncrementRound                            = 1,
	PlayTest_IncrementRoundLoop                        = 2,
	PlayTest_END                                       = 3
};

// Enum TAGame.GFxData_ProductFilter_TA.EProductFilterType
enum class EProductFilterType : int
{
	ProductFilterType_TradeIn                          = 0,
	ProductFilterType_P2P                              = 1,
	ProductFilterType_Garage                           = 2,
	ProductFilterType_Destruction                      = 3,
	ProductFilterType_END                              = 4
};

// Enum TAGame.GFxData_ProductFilter_TA.EFilterProductAttribute
enum class EFilterProductAttribute : int
{
	FPA_Indestructible                                 = 0,
	FPA_END                                            = 1
};

// Enum TAGame.MenuSequencer_TA.ESequenceStatus
enum class ESequenceStatus : int
{
	SS_Idle                                            = 0,
	SS_Entering                                        = 1,
	SS_Leaving                                         = 2,
	SS_Pending                                         = 3,
	SS_END                                             = 4
};

// Enum TAGame.StatusTrigger_Numerical_TA.TriggerConditionNumericalType
enum class ETriggerConditionNumericalType : int
{
	TCNT_GreaterThan                                   = 0,
	TCNT_LessThan                                      = 1,
	TCNT_Equal                                         = 2,
	TCNT_GreaterEqual                                  = 3,
	TCNT_LessThanEqual                                 = 4,
	TCNT_END                                           = 5
};

// Enum TAGame._UserBugReportTypes_TA.EUserBugReportCategoryType
enum class EUserBugReportCategoryType : int
{
	UBRCT_UserInput                                    = 0,
	UBRCT_AutoReport                                   = 1,
	UBRCT_CustomerSupport                              = 2,
	UBRCT_Parent                                       = 3,
	UBRCT_END                                          = 4
};

// Enum TAGame.CameraState_CameraTrack_TA.ECameraTrackFlyType
enum class ECameraTrackFlyType : int
{
	CameraTrackFly_Never                               = 0,
	CameraTrackFly_WhenMoving                          = 1,
	CameraTrackFly_WhenPaused                          = 2,
	CameraTrackFly_END                                 = 3
};

// Enum TAGame.CameraState_DirectorMoving_TA.ECameraLoopType
enum class ECameraLoopType : int
{
	CLT_StopAtEnd                                      = 0,
	CLT_PingPong                                       = 1,
	CLT_Loop                                           = 2,
	CLT_END                                            = 3
};

// Enum TAGame.CameraStateSelector_Priority_TA.EStatePriority
enum class EStatePriority : int
{
	SP_Default                                         = 0,
	SP_OverrideAny                                     = 1,
	SP_OverrideLower                                   = 2,
	SP_InitialOnly                                     = 3,
	SP_END                                             = 4
};

// Enum TAGame.GFxData_AdHoc_TA.EAdHocState
enum class EAdHocState : int
{
	AHS_Enabled                                        = 0,
	AHS_Disabled                                       = 1,
	AHS_END                                            = 2
};

// Enum TAGame.GFxData_ChallengeManager_TA.EChallengeFilter
enum class EChallengeFilter : int
{
	CF_Default                                         = 0,
	CF_Progress                                        = 1,
	CF_END                                             = 2
};

// Enum TAGame.GFxData_Friends_TA.ENameDisplayRelationshipProxy
enum class ENameDisplayRelationshipProxy : int
{
	NameDisplayRelationshipProxy_NoChange              = 0,
	NameDisplayRelationshipProxy_ForcePlatform         = 1,
	NameDisplayRelationshipProxy_ForcePsyNet           = 2,
	NameDisplayRelationshipProxy_ForceAll              = 3,
	NameDisplayRelationshipProxy_END                   = 4
};

// Enum TAGame.GFxData_LegacyStatus_TA.ELegacyStatusSetState
enum class ELegacyStatusSetState : int
{
	LSSS_NotSet                                        = 0,
	LSSS_Updating                                      = 1,
	LSSS_UnableToUpdate                                = 2,
	LSSS_Set                                           = 3,
	LSSS_END                                           = 4
};

// Enum TAGame.GFxData_MapPrefs_TA.EMapPrefType
enum class EMapPrefType : int
{
	MapPrefType_None                                   = 0,
	MapPrefType_Like                                   = 1,
	MapPrefType_Dislike                                = 2,
	MapPrefType_END                                    = 3
};

// Enum TAGame.GFxData_QuickChatBindings_TA.EQuickChatState
enum class EQuickChatState : int
{
	QCS_InGame                                         = 0,
	QCS_PostGame                                       = 1,
	QCS_PreGame                                        = 2,
	QCS_END                                            = 3
};

// Enum TAGame.GFxData_TourEvent_TA.ETourEventStatus
enum class ETourEventStatus : int
{
	TES_NonePending                                    = 0,
	TES_Registered                                     = 1,
	TES_CheckInOpen                                    = 2,
	TES_CheckedIn                                      = 3,
	TES_GeneratingBrackets                             = 4,
	TES_MatchPending                                   = 5,
	TES_MatchReady                                     = 6,
	TES_InMatch                                        = 7,
	TES_MatchResultsPending                            = 8,
	TES_Paused                                         = 9,
	TES_MatchEnding                                    = 10,
	TES_END                                            = 11
};

// Enum TAGame.GFxData_TrainingModeBrowser_TA.ETrainingModeSearchTypes
enum class ETrainingModeSearchTypes : int
{
	TMST_AllPublic                                     = 0,
	TMST_FeaturedOnly                                  = 1,
	TMST_END                                           = 2
};

// Enum TAGame.SeqAct_CheckRotationAngle_TA.ECheckAxis
enum class ECheckAxis : int
{
	ECA_Pitch                                          = 0,
	ECA_Yaw                                            = 1,
	ECA_Roll                                           = 2,
	ECA_END                                            = 3
};

// Enum TAGame.SpecialPickup_Football_TA.EThrowSetting
enum class EThrowSetting : int
{
	ETS_Forward                                        = 0,
	ETS_Backward                                       = 1,
	ETS_Side                                           = 2,
	ETS_END                                            = 3
};

// Enum TAGame.StaticMeshRBActor_TA.EApplyForceTo
enum class EApplyForceTo : int
{
	EAF_None                                           = 0,
	EAF_Any                                            = 1,
	EAF_CarOnly                                        = 2,
	EAF_BallOnly                                       = 3,
	EAF_END                                            = 4
};

// Enum TAGame.TMetricsShared_TA.EMatchType
enum class EMatchType : int
{
	EmatchType_Online                                  = 0,
	EMatchType_Private                                 = 1,
	EMatchType_Offline                                 = 2,
	EMatchType_END                                     = 3
};

// Enum TAGame.TMetricsShared_TA.EDisconnect
enum class EDisconnect : int
{
	EDisconnect_Timeout                                = 0,
	EDisconnect_Kick                                   = 1,
	EDisconnect_GameFull                               = 2,
	EDisconnect_END                                    = 3
};


/*
# ========================================================================================= #
# Classes
# ========================================================================================= #
*/

// Class TAGame._AITypes_TA
// 0x0000 (0x0060 - 0x0060)
class U_AITypes_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame._AITypes_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame._ShopTypes_TA
// 0x0000 (0x0060 - 0x0060)
class U_ShopTypes_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame._ShopTypes_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame._Types_TA
// 0x0048 (0x0060 - 0x00A8)
class U_Types_TA : public UObject
{
public:
	struct FScriptDelegate                             __AssetLoadedDelegate__Delegate;                  		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __ProductThumbnailRenderedDelegate__Delegate;     		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __MapImageLoadedDelegate__Delegate;               		// 0x0090 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame._Types_TA");
		}

		return uClassPointer;
	};

	struct FString GetKismetSafeString(struct FString InValue);
	int GetTotalStatValue(struct FStatValue Stat);
	unsigned char GetChatUsage(unsigned char Channel);
	struct FLinearColor GammaCorrectColor(struct FLinearColor InColor, float Gamma);
	struct FLoadoutTeamPaint GetLoadoutPaint(struct FLoadoutData InLoadoutData);
	int GetRandomColorID(class UCarColorSet_TA* Set);
	void InitColorSet(class UCarColorSet_TA* Set, TArray<struct FGFxTeamColor>& OutColors);
	struct FString ProductQualityToString(unsigned char Quality);
	bool ProductAttributesAreDifferent(struct FClientLoadoutOnlineData& A, struct FClientLoadoutOnlineData& B);
	bool TeamPaintsAreDifferent(struct FLoadoutData& A, struct FLoadoutData& B);
	bool OnlineProductsAreDifferent(TArray<unsigned long long>& A, TArray<unsigned long long>& B);
	bool ProductsAreDifferent(TArray<int>& A, TArray<int>& B);
	bool LoadoutsAreDifferent(struct FLoadoutData& A, struct FLoadoutData& B);
	float UpdateInputValue(struct FInputRate Rate, float DesiredValue, float OldValue, float DeltaTime);
	struct FClientLoadoutData ConvertToClientLoadout(struct FLoadoutData& FromData);
	void MapImageLoadedDelegate(struct FMapImageLoadResult Result);
	void ProductThumbnailRenderedDelegate(struct FProductThumbnailResult Result);
	void AssetLoadedDelegate(struct FAssetLoadResult Result);
	struct FRandomWeight PickWeightedRandom(TArray<struct FRandomWeight> Arr, int& Index);
	bool VehicleInputHasChangedForKick(struct FVehicleInputs& NewInput, struct FVehicleInputs& OldInput);
};

// Class TAGame.AIController_TA
// 0x0268 (0x04A0 - 0x0708)
class AAIController_TA : public AAIController
{
public:
	class ACar_TA*                                     Car;                                              		// 0x04A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AVehicle_TA*                                 Vehicle;                                          		// 0x04A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UBTComponent*                                BT;                                               		// 0x04B0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UBTProxyType*                                SelfProxyType;                                    		// 0x04B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTProxyType*                                NoneProxyType;                                    		// 0x04C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTProxyType*                                DebugProxyType;                                   		// 0x04C8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTProxyType*                                TeamCarsProxyType;                                		// 0x04D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTProxyType*                                EnemyCarsProxyType;                               		// 0x04D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTProxyType*                                PlayerControlledCarsProxyType;                    		// 0x04E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTProxyType*                                OtherCarsProxyType;                               		// 0x04E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTProxyType*                                BoostPillsProxyType;                              		// 0x04F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTProxyType*                                SelectedProxyType;                                		// 0x04F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   SelfTarget;                                       		// 0x0500 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   NoneTarget;                                       		// 0x0508 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   IteratorTarget;                                   		// 0x0510 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   TeamCarsTarget;                                   		// 0x0518 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   SelectedTarget;                                   		// 0x0520 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   ContextTarget;                                    		// 0x0528 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UBTNode*                                     DebugBTNode;                                      		// 0x0530 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTLockCollection*                           Locks;                                            		// 0x0538 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FSkillRange                                 SkillSteerError;                                  		// 0x0540 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FSkillRange                                 SkillSteerSpeed;                                  		// 0x054C (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FSkillRange                                 SkillThrottleSpeed;                               		// 0x0558 (0x000C) [0x0000000000000001] (CPF_Edit)    
	class AGameEvent_TA*                               GameEvent;                                        		// 0x0568 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AAIManager_TA*                               AIManager;                                        		// 0x0570 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FVehicleInputs                              Input;                                            		// 0x0578 (0x0020) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     ForwardDir;                                       		// 0x0598 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    ForwardRotation;                                  		// 0x05A4 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     GroundNormal;                                     		// 0x05B0 (0x000C) [0x0000000000002000] (CPF_Transient)
	TArray<struct FCachedProxyData>                    CachedProxyDatas;                                 		// 0x05C0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FCachedTargetData>                   CachedTargetDatas;                                		// 0x05D0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FMap_Mirror                                 TargetFilterMap;                                  		// 0x05E0 (0x0050) [0x0000000000003000] (CPF_Native | CPF_Transient)
	TArray<class UBTNode*>                             CachedTargetFilters;                              		// 0x0630 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FVector                                     DebugDriveDestination;                            		// 0x0640 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FCachedObstaclesData                        CachedObstacles;                                  		// 0x0650 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)
	TArray<class ACar_TA*>                             TeamCars;                                         		// 0x0678 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class ACar_TA*>                             EnemyCars;                                        		// 0x0688 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class ACar_TA*>                             PlayerControlledCars;                             		// 0x0698 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class ACar_TA*>                             OtherCars;                                        		// 0x06A8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long                                      bForceUpdateConditions : 1;                       		// 0x06B8 (0x0004) [0x0000000000002002] [0x00000001] (CPF_Const | CPF_Transient)
	unsigned long                                      bCanUseBoost : 1;                                 		// 0x06B8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bBeingReplaced : 1;                               		// 0x06B8 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	class UGameShare_TA*                               GameShare;                                        		// 0x06C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AActor*                                      SelectedActor;                                    		// 0x06C8 (0x0008) [0x0000000000002002] (CPF_Const | CPF_Transient)
	float                                              FieldScalar;                                      		// 0x06D0 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      ForcedTeam;                                       		// 0x06D4 (0x0001) [0x0000000000000000]               
	struct FScriptDelegate                             __EventNamedEvent__Delegate;                      		// 0x06D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSkillChanged__Delegate;                    		// 0x06F0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AIController_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void eventActivatePickup();
	void SetSelectedActor(class AActor* NewActor);
	void AllTargets(class UBTTarget* Target, struct FAIProxyData& OutData);
	bool GetObstacleInRadius(struct FVector Destination, float Radius, struct FVector& HitLocation);
	bool GetObstacle(struct FVector Destination, struct FVector& HitLocation);
	bool eventGetProxyDataInternal(class UBTProxyType* Type, int Index, struct FAIProxyData& OutData);
	bool GetIndexedProxyData(class UBTProxyType* Type, int Index, struct FAIProxyData& OutData);
	bool GetProxyData(class UBTProxyType* Type, struct FAIProxyData& OutData);
	bool GetIndexedTargetData(class UBTTarget* Target, int Index, struct FAIProxyData& OutData);
	bool GetTargetData(class UBTTarget* Target, struct FAIProxyData& OutData);
	struct FAIProxyData eventCreateVehicleProxyData(class AVehicle_TA* InVehicle);
	struct FAIProxyData eventCreateProxyData(class AActor* A, float Radius);
	float GetDriveTime(float Distance);
	float GetDriveDistance(struct FAIProxyData Proxy);
	struct FVector FlattenOffset(struct FVector Offset, float& Height);
	struct FVector FlattenDestination(struct FVector Destination);
	struct FAIProxyData FlattenPhysics(struct FAIProxyData& ProxyData);
	float GetClosestTime2D(float MaxTime, struct FAIProxyData& A, struct FAIProxyData& B);
	bool WillImpact2D(struct FAIProxyData& A, struct FAIProxyData& B, float& CollideTime);
	void AdvancePhysics(float Time, struct FAIProxyData& PhysicsData);
	void PredictPhysics(float Time, float GroundZ, struct FAIProxyData& PhysicsData);
	void PredictLanding(float GroundZ, struct FAIProxyData& Data, float& Time);
	struct FVector AdvanceLocation(float Time, struct FVector& Loc, struct FVector& Vel, struct FVector& Accel);
	void DebugDriveTo(struct FVector Destination);
	void DoNothing();
	void AbortBT();
	void eventDestroyed();
	void OnCarSetup(class ACar_TA* InCar);
	void SetCar();
	void UnPossess();
	void Possess(class APawn* inPawn);
	void SetSkill(float NewSkill, float CanUseBoostThreshold);
	void ReInitBT();
	void HandleOtherCarDestroyed(class APawn_X* InCar);
	void HandleOtherCarDemolished(class ACar_TA* Victim, struct FDemolishData Data);
	void HandleOtherCarTeamChanged(class ACar_TA* InCar);
	void HandleCarSpawned(class AGameEvent_TA* InGameEvent, class ACar_TA* InCar);
	void Init(class AGameEvent_TA* InGameEvent);
	void eventPreBeginPlay();
	void EventSkillChanged(class AAIController_TA* AI);
	void EventNamedEvent(class AAIController_TA* AI, struct FName EventName, class AActor* Sender);
};

// Class TAGame.AIController_Soccar_TA
// 0x00B8 (0x0708 - 0x07C0)
class AAIController_Soccar_TA : public AAIController_TA
{
public:
	class UBTProxyType*                                BallProxyType;                                    		// 0x0708 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTProxyType*                                BallLandingProxyType;                             		// 0x0710 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTProxyType*                                BallTeamGoalLineProxyType;                        		// 0x0718 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTProxyType*                                BallEnemyGoalLineProxyType;                       		// 0x0720 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTProxyType*                                BallProjectedProxyType;                           		// 0x0728 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTProxyType*                                TeamGoalProxyType;                                		// 0x0730 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTProxyType*                                EnemyGoalProxyType;                               		// 0x0738 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTProxyType*                                MidFieldProxyType;                                		// 0x0740 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   BallTarget;                                       		// 0x0748 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   TeamGoalTarget;                                   		// 0x0750 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   EnemyGoalTarget;                                  		// 0x0758 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AGameEvent_Soccar_TA*                        SoccarGame;                                       		// 0x0760 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ABall_TA*                                    Ball;                                             		// 0x0768 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FAICachedGoalInfo                           TeamGoalInfo;                                     		// 0x0770 (0x0018) [0x0000000000082000] (CPF_Transient | CPF_Component)
	struct FAICachedGoalInfo                           EnemyGoalInfo;                                    		// 0x0788 (0x0018) [0x0000000000082000] (CPF_Transient | CPF_Component)
	float                                              LastBallHitTime;                                  		// 0x07A0 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventBallChanged__Delegate;                     		// 0x07A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AIController_Soccar_TA");
		}

		return uClassPointer;
	};

	void DisablePickupAutoActivate();
	bool eventGetProxyDataInternal(class UBTProxyType* Type, int Index, struct FAIProxyData& OutData);
	void GetGoalProxy(class UBTProxyType* Type, struct FAICachedGoalInfo GoalInfo, struct FAIProxyData& OutData);
	void GetBallProxy(struct FAIProxyData& OutData);
	void SetBall(class ABall_TA* InBall);
	void HandleNewPickup();
	void HandleHitBall(class ACar_TA* InCar, class ABall_TA* HitBall, struct FVector HitLocation, struct FVector HitNormal);
	void OnCarSetup(class ACar_TA* InCar);
	void UpdateBall();
	void HandleActiveRoundChanged(class AGameEvent_Soccar_TA* G);
	void HandleBallsChanged(class AGameEvent_Soccar_TA* G, class ABall_TA* B);
	struct FAICachedGoalInfo GetCachedGoalInfo(int TeamNum);
	void Init(class AGameEvent_TA* InGameEvent);
	void EventBallChanged(class AAIController_Soccar_TA* SoccarAI);
};

// Class TAGame.AIManager_TA
// 0x0040 (0x0268 - 0x02A8)
class AAIManager_TA : public AActor
{
public:
	unsigned long                                      bFlushAILogEachLine : 1;                          		// 0x0268 (0x0004) [0x0000000000004003] [0x00000001] (CPF_Edit | CPF_Const | CPF_Config)
	unsigned long                                      bOutputLogToWindow : 1;                           		// 0x0268 (0x0004) [0x0000000000004003] [0x00000002] (CPF_Edit | CPF_Const | CPF_Config)
	unsigned long                                      bPauseForDirtyTrees : 1;                          		// 0x0268 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	class UBTLockCollection*                           Locks;                                            		// 0x0270 (0x0008) [0x000000000408000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class AGameEvent_TA*                               GameEvent;                                        		// 0x0278 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class AAIController_TA*>                    Bots;                                             		// 0x0280 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FCachedNavMeshLocation>              CachedNavMeshLocations;                           		// 0x0290 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class AFileLog*                                    AILogFile;                                        		// 0x02A0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AIManager_TA");
		}

		return uClassPointer;
	};

	void eventDestroyed();
	void RemoveBot(class AAIController_TA* Bot);
	void AddBot(class AAIController_TA* Bot);
	void Init(class AGameEvent_TA* InGameEvent);
	void eventAILog(class UObject* Sender, struct FString Message, unsigned long bVerbose);
};

// Class TAGame.AnimNodeBlend_TA
// 0x000F (0x0145 - 0x0154)
class UAnimNodeBlend_TA : public UAnimNodeBlendBase
{
public:
	float                                              BlendSpeed;                                       		// 0x0148 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Position;                                         		// 0x014C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              DesiredPosition;                                  		// 0x0150 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AnimNodeBlend_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.AnimNodeBlendBoost_TA
// 0x0004 (0x0158 - 0x015C)
class UAnimNodeBlendBoost_TA : public UAnimNodeBlend
{
public:
	float                                              BlendTime;                                        		// 0x0158 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AnimNodeBlendBoost_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.AnimNodeBlendSpeed_TA
// 0x000C (0x01A4 - 0x01B0)
class UAnimNodeBlendSpeed_TA : public UAnimNodeAimOffset
{
public:
	float                                              BlendRate;                                        		// 0x01A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxSpeed;                                         		// 0x01AC (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AnimNodeBlendSpeed_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ArenaReflectionsManager_TA
// 0x0064 (0x0060 - 0x00C4)
class UArenaReflectionsManager_TA : public UObject
{
public:
	class AGameEvent_TA*                               SoccarGame;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
	TArray<struct FSlapbackActorSetup>                 SlapbackSetups;                                   		// 0x0068 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FSlapbackActorSetup>                 ArenaReverbSetups;                                		// 0x0078 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class AAkBusActor*>                         SlapBackActors;                                   		// 0x0088 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class AAkBusActor*>                         ArenaReverbEmitters;                              		// 0x0098 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FName                                       ImpactIntensityKey;                               		// 0x00A8 (0x0008) [0x0000000000000000]               
	struct FName                                       SlapbackDistanceKey;                              		// 0x00B0 (0x0008) [0x0000000000000000]               
	struct FName                                       ReverbBalanceKey;                                 		// 0x00B8 (0x0008) [0x0000000000000000]               
	float                                              BallListenerOffset;                               		// 0x00C0 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ArenaReflectionsManager_TA");
		}

		return uClassPointer;
	};

	struct FVector eventGetPrimaryPlayerPosition();
	void SetReverbBalance(float ReverbBalance);
	void SetArenaReverbSettings(struct FName ArenaReverbShareset);
	void SpawnBusActors(struct FVector& FieldSize);
	float GetSlapbackDistance(struct FVector& ListenerLocation, struct FVector& ImpactLocation, struct FVector& BusActorLocation);
	void UpdateActorParams(float ImpactIntensity, struct FVector& ImpactLocation);
};

// Class TAGame.ArenaSoundSettings_TA
// 0x0108 (0x0060 - 0x0168)
class UArenaSoundSettings_TA : public UObject
{
public:
	class UAkSoundCue*                                 InGameMusicCue;                                   		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bDynamicMusic : 1;                                		// 0x0068 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      UpdateStatSounds : 1;                             		// 0x0068 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	class UAkSoundCue*                                 GoalScoreSound;                                   		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 GameStartStinger;                                 		// 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 GoalScoreStinger;                                 		// 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 EpicSaveStinger;                                  		// 0x0088 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 OvertimeStinger;                                  		// 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 WinStinger;                                       		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 LoseStinger;                                      		// 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 ForfeitStinger;                                   		// 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              GoalScoreStingerDelay;                            		// 0x00B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 Win;                                              		// 0x00B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 Lose;                                             		// 0x00C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 CountdownStart;                                   		// 0x00C8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 CountdownEnd;                                     		// 0x00D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 OneMinRemaining;                                  		// 0x00D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 ThirtySecondsRemaining;                           		// 0x00E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 OvertimeStart;                                    		// 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FArenaStatSound>                     StatSounds;                                       		// 0x00F0 (0x0010) [0x0000000000400041] (CPF_Edit | CPF_EditConstArray | CPF_NeedCtorLink)
	TArray<class UAkSoundCue*>                         CountDownSoundList;                               		// 0x0100 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class UAkSoundCue*>                         RoundCountDownSoundList;                          		// 0x0110 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FAkEnvironment                              GoalStingerEnvironment;                           		// 0x0120 (0x0020) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FAkEnvironment                              LevelDefaultEnvironment;                          		// 0x0140 (0x0020) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FName                                       ArenaReverbShareset;                              		// 0x0160 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ArenaSoundSettings_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.AttachmentBehavior_TA
// 0x0014 (0x0060 - 0x0074)
class UAttachmentBehavior_TA : public UObject
{
public:
	class UProductAsset_TA*                            Asset;                                            		// 0x0060 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UActorComponent*                             Component;                                        		// 0x0068 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	unsigned long                                      bPreview : 1;                                     		// 0x0070 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AttachmentBehavior_TA");
		}

		return uClassPointer;
	};

	class UCarMeshComponent_TA* GetMesh();
	void StopBehavior();
	void SetPreviewing(unsigned long bPreviewing);
	void OnInit();
	void Init(class UProductAsset_TA* InAsset, class UActorComponent* InComponent);
};

// Class TAGame.AttachmentBehavior_Steering_TA
// 0x0044 (0x0074 - 0x00B8)
class UAttachmentBehavior_Steering_TA : public UAttachmentBehavior_TA
{
public:
	struct FName                                       BoneControlName;                                  		// 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAnimTree*                                   AnimTree;                                         		// 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           SteeringToDegreesCurve;                           		// 0x0088 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class USkeletalMeshComponent*                      SkelMeshComponent;                                		// 0x00A0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class USkelControlSingleBone*                      BoneController;                                   		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AVehicle_TA*                                 Vehicle;                                          		// 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AttachmentBehavior_Steering_TA");
		}

		return uClassPointer;
	};

	void HandleAttached(class UCarMeshComponent_TA* Mesh);
	void OnInit();
};

// Class TAGame.RimSpinner_TA
// 0x0050 (0x0074 - 0x00C4)
class URimSpinner_TA : public UAttachmentBehavior_TA
{
public:
	float                                              AccelRate;                                        		// 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DecelRate;                                        		// 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxSpeed;                                         		// 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       BoneControlName;                                  		// 0x0084 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              SpinScale;                                        		// 0x008C (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                WheelIndex;                                       		// 0x0090 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentSpeed;                                     		// 0x0094 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                CurrentRotation;                                  		// 0x0098 (0x0004) [0x0000000000002000] (CPF_Transient)
	class USkeletalMeshComponent*                      SkelMeshComponent;                                		// 0x00A0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class USkelControlSingleBone*                      SpinBoneController;                               		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USkelControlSingleBone*                      WheelBoneController;                              		// 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWheel_TA*                                   Wheel;                                            		// 0x00B8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	unsigned long                                      bIsMainMenu : 1;                                  		// 0x00C0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RimSpinner_TA");
		}

		return uClassPointer;
	};

	void StopBehavior();
	void HandleAttached(class UCarMeshComponent_TA* Mesh);
	void OnInit();
};

// Class TAGame.WheelShimmy_TA
// 0x0044 (0x0074 - 0x00B8)
class UWheelShimmy_TA : public UAttachmentBehavior_TA
{
public:
	float                                              AccumDistance;                                    		// 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Wave1Freq;                                        		// 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Wave2Freq;                                        		// 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OnOffBias;                                        		// 0x0084 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              HighFreq;                                         		// 0x0088 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ShimmyMag;                                        		// 0x008C (0x0004) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	TArray<int>                                        AffectedWheels;                                   		// 0x0090 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class USkeletalMeshComponent*                      SkelMeshComponent;                                		// 0x00A0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UWheel_TA*                                   Wheel;                                            		// 0x00A8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class USkelControlSingleBone*                      RollControl;                                      		// 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.WheelShimmy_TA");
		}

		return uClassPointer;
	};

	void OnInit();
};

// Class TAGame.PlayerControllerBase_TA
// 0x0108 (0x0860 - 0x0968)
class APlayerControllerBase_TA : public APlayerController_X
{
public:
	float                                              SpectatorCameraAccel;                             		// 0x0860 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     SpectatorVelXY;                                   		// 0x0864 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              SpectatorVelZ;                                    		// 0x0870 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPostProcessManager_TA*                      PostProcessManagerArchetype;                      		// 0x0878 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPostProcessManager_TA*                      PostProcessManager;                               		// 0x0880 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                SpectatorPitchDir;                                		// 0x0888 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                SwivelPitchDir;                                   		// 0x088C (0x0004) [0x0000000000002000] (CPF_Transient)
	class ASpectatorVolume_TA*                         SpectatorVolume;                                  		// 0x0890 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              FullRotationScalar;                               		// 0x0898 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              FullRotationMax;                                  		// 0x089C (0x0004) [0x0000000000000002] (CPF_Const)   
	class UVanitySetManager_TA*                        VanityMgr;                                        		// 0x08A0 (0x0008) [0x0000000000000000]               
	unsigned long                                      bVanityInitialized : 1;                           		// 0x08A8 (0x0004) [0x0000000000000000] [0x00000001] 
	class UPlayerBanner_TA*                            PlayerBanner;                                     		// 0x08B0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UPlayerAvatar_TA*                            PlayerAvatar;                                     		// 0x08B8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UPlayerAvatarBorder_TA*                      PlayerBorder;                                     		// 0x08C0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UAudioSpectatorMixComponent_TA*              AudioSpectatorMixComponent;                       		// 0x08C8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UAudioFieldSideComponent_TA*                 AudioFieldSideComponent;                          		// 0x08D0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FScriptDelegate                             __EventLoadingUnfairMatch__Delegate;              		// 0x08D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventRemoveSSPlayer__Delegate;                  		// 0x08F0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventReceivedCurrencyDrop__Delegate;            		// 0x0908 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPlayerInputSet__Delegate;                  		// 0x0920 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __PlayerBanner__ChangeNotify;                     		// 0x0938 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __PlayerBorder__ChangeNotify;                     		// 0x0950 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerControllerBase_TA");
		}

		return uClassPointer;
	};

	void ResetView();
	void QueryCrosshair();
	class AAIController_TA* GetLockedDebugAI();
	struct FVector GetAimLocation();
	void ContextualDebugAction();
	void __PlayerBorder__ChangeNotifyFunc();
	void __PlayerBanner__ChangeNotifyFunc();
	struct FVector UpdateSpectatorLocation(struct FVector CurrentLocation, float DeltaTime);
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void ReceiveCurrencyDrop(struct FCurrency Drop);
	bool FindSpectatorVolumeLocation(struct FVector CurrentLocation, struct FVector NextLocation, struct FVector& NewLocation);
	struct FVector ClampSpectatorLocation(struct FVector NewLocation);
	void SetWorldSelectionUpdate(unsigned long bAllowUpdate);
	void SetWorldSelectionAllowed(unsigned long bAllowSelection);
	void NotifyOnPlayerInputSet(struct FScriptDelegate Callback);
	void SetPlayerInput(class UClass* NewInputClass);
	void StartLanMatch(struct FCustomMatchSettings& Settings);
	struct FString BuildMatchOptionsLan(struct FCustomMatchSettings& Settings);
	void StartSplitscreenMatch(struct FCustomMatchSettings& Settings);
	void StartMatch(struct FName PlaylistName, struct FString URL);
	struct FString BuildMatchOptions(class UGameSettingPlaylist_X* Playlist, TArray<struct FString> Options, struct FCustomMatchSettings& Settings);
	struct FString JoinOption(struct FString FullString, struct FString Value);
	struct FName GetValidMapName(struct FName InName, int GameMode);
	void ClientRemoveSSPlayer(struct FString Reason, struct FString Title);
	void RemoveSSPlayer(struct FString Reason, struct FString Title);
	void OnGameInviteAccepted(struct FString ErrorString, struct FOnlineGameSearchResult& InviteResult);
	void UpdateSpectatorViewRotation(float DeltaTime);
	struct FRotator GetSpectatorViewRotationDeltaRotation(float DeltaTime);
	void EraseChatByType(unsigned char ChatChannel, struct FUniqueNetId PersonaId);
	bool PartyLobbyMessage_TA(struct FUniqueNetId InSenderId, struct FString PlayerName, struct FString Message, unsigned long bIsLocalPlayer);
	void Say_TA(struct FString Message, unsigned char ChatChannel, struct FUniqueNetId Recipient, unsigned long bPreset);
	void ServerSay_TA(struct FString Message, unsigned char ChatChannel, unsigned long bPreset);
	void RepopulateChatHistory(unsigned char ChatChannel, struct FUniqueNetId PersonaId);
	bool InviteHasEnoughSpace(class UOnlineGameSettings* InviteSettings);
	void HandleReadBorder(TArray<struct FUniqueNetId> PlayerIDs);
	void HandleReadAvatar(TArray<struct FUniqueNetId> PlayerIDs);
	void HandleReadBanner(TArray<struct FUniqueNetId> PlayerIDs);
	void UpdateVanities(unsigned long bForceUpdate);
	void InitVanityUI(class UProfile_TA* Profile, class UGFxShell_X* Shell);
	void InitFromProfile(class UProfile_TA* Profile);
	void HandleLoginStatusChanged(class UOnlinePlayer_X* InPlayer);
	class UObject* GetProfileObject(class UClass* saveClass);
	class UObject* GetSaveObject(class UClass* saveClass);
	void OnExternalUIChanged(unsigned long bIsOpening);
	class USaveData_TA* GetSaveData();
	class UProfile_TA* GetProfile();
	class ULocalPlayer_TA* GetLocalPlayer();
	void UpdateForceFeedback();
	void HandleForceFeedback(class UForceFeedbackManager* _);
	void HandleProfileControlsSave(class UProfileControlsSave_TA* ControlsSave);
	void UpdateAAType();
	void HandlePostProcessManager(class UPostProcessManager_TA* PPM);
	void HandleVideoSettingsSavePC(class UVideoSettingsSavePC_TA* VideoSavePC);
	void UpdateCameraShake();
	void HandleCamera(class ACamera_X* Camera);
	void HandleCameraSave(class UProfileCameraSave_TA* CameraSettings);
	void OnReceivedPlayerAndPRI();
	void eventDestroyed();
	void eventReceivedPlayer();
	void eventPostBeginPlay();
	void EventPlayerInputSet();
	void EventReceivedCurrencyDrop(class APlayerControllerBase_TA* PC, struct FCurrency Drop);
	void EventRemoveSSPlayer(class APlayerControllerBase_TA* PC, struct FString Reason);
	void EventLoadingUnfairMatch(class APlayerControllerBase_TA* PlayerControllerBase);
};

// Class TAGame.PlayerController_TA
// 0x02E8 (0x0968 - 0x0C50)
class APlayerController_TA : public APlayerControllerBase_TA
{
public:
	class ACar_TA*                                     Car;                                              		// 0x0968 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APRI_TA*                                     PRI;                                              		// 0x0970 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FVehicleInputs                              VehicleInput;                                     		// 0x0978 (0x0020) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bReceivedServerShutdownMessage : 1;               		// 0x0998 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bUseDebugInputs : 1;                              		// 0x0998 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bJumpPressed : 1;                                 		// 0x0998 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bBoostPressed : 1;                                		// 0x0998 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bHandbrakePressed : 1;                            		// 0x0998 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bHasPitchedOrRolled : 1;                          		// 0x0998 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bAirPitchSafetyEnabled : 1;                       		// 0x0998 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bAllowAsymmetricalMute : 1;                       		// 0x0998 (0x0004) [0x0000000000004000] [0x00000080] (CPF_Config)
	unsigned long                                      bResetCamera : 1;                                 		// 0x0998 (0x0004) [0x0000000000002000] [0x00000100] (CPF_Transient)
	struct FString                                     LoginURL;                                         		// 0x09A0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned char                                      VoiceFilter;                                      		// 0x09B0 (0x0001) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      ChatFilter;                                       		// 0x09B1 (0x0001) [0x0000000000002000] (CPF_Transient)
	struct FChatSpamData                               ChatSpam;                                         		// 0x09B4 (0x0018) [0x0000000000000001] (CPF_Edit)    
	struct FChatSpamData                               ChatSpamHarsh;                                    		// 0x09CC (0x0018) [0x0000000000000000]               
	class ULightBarComponent_TA*                       LightBar;                                         		// 0x09E8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UGameMusicComponent_TA*                      MusicComponent;                                   		// 0x09F0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UAudioPriorityComponent_TA*                  AudioPriorityComponent;                           		// 0x09F8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UAudioMixStateComponent_TA*                  AudioMixStateComponent;                           		// 0x0A00 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class APRI_TA*                                     FollowTarget;                                     		// 0x0A08 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACamera*                                     SpectatorCameraArchetype;                         		// 0x0A10 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AHUD*                                        SpectatorHUDArchetype;                            		// 0x0A18 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UClass*                                      SpectatorInputClass;                              		// 0x0A20 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class ACamera*                                     EditorCameraArchetype;                            		// 0x0A28 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AHUD*                                        EditorHUDArchetype;                               		// 0x0A30 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UClass*                                      EditorInputClass;                                 		// 0x0A38 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UInterface_GameEditor_TA*                    MoveActor;                                        		// 0x0A40 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0A48 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
	struct FVector                                     MoveActorGrabOffset;                              		// 0x0A50 (0x000C) [0x0000000000000000]               
	float                                              MoveActorGrabIncrement;                           		// 0x0A5C (0x0004) [0x0000000000000000]               
	float                                              MinMoveActorGrabDistance;                         		// 0x0A60 (0x0004) [0x0000000000000000]               
	float                                              MouseIncrementSpeed;                              		// 0x0A64 (0x0004) [0x0000000000000000]               
	float                                              BallVelocityIncrementAmount;                      		// 0x0A68 (0x0004) [0x0000000000000000]               
	int                                                BallVelocityIncrementFireCount;                   		// 0x0A6C (0x0004) [0x0000000000000000]               
	float                                              BallVelocityIncrementFireCountMax;                		// 0x0A70 (0x0004) [0x0000000000000000]               
	float                                              BallVelocityIncrementSpeedDefault;                		// 0x0A74 (0x0004) [0x0000000000000000]               
	float                                              BallVelocityIncrementSpeedMax;                    		// 0x0A78 (0x0004) [0x0000000000000000]               
	float                                              CrosshairTraceDistance;                           		// 0x0A7C (0x0004) [0x0000000000000000]               
	class AActor*                                      TracedCrosshairActor;                             		// 0x0A80 (0x0008) [0x0000000000000000]               
	TArray<struct FCrosshairExtentInfo>                CrosshairTraceExtents;                            		// 0x0A88 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UInterface_GameEditor_TA*                    RotatedActor;                                     		// 0x0A98 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData01[0x8];                               		// 0x0AA0 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
	struct FVector                                     RotateActorCameraLocationOffset;                  		// 0x0AA8 (0x000C) [0x0000000000000000]               
	struct FVector                                     RotateActorCameraRotationOffset;                  		// 0x0AB4 (0x000C) [0x0000000000000000]               
	int                                                RotateActorCameraSide;                            		// 0x0AC0 (0x0004) [0x0000000000000000]               
	float                                              DesiredCameraSide;                                		// 0x0AC4 (0x0004) [0x0000000000000000]               
	float                                              PawnTypeChangedTime;                              		// 0x0AC8 (0x0004) [0x0000000000000000]               
	int                                                SelectedSpawnArchetype;                           		// 0x0ACC (0x0004) [0x0000000000000000]               
	struct FVehicleInputs                              DebugInputs;                                      		// 0x0AD0 (0x0020) [0x0000000000002000] (CPF_Transient)
	int                                                MinClientInputRate;                               		// 0x0AF0 (0x0004) [0x0000000000004001] (CPF_Edit | CPF_Config)
	int                                                MedianClientInputRate;                            		// 0x0AF4 (0x0004) [0x0000000000004001] (CPF_Edit | CPF_Config)
	int                                                MaxClientInputRate;                               		// 0x0AF8 (0x0004) [0x0000000000004001] (CPF_Edit | CPF_Config)
	int                                                ConfiguredClientInputRate;                        		// 0x0AFC (0x0004) [0x0000000000004001] (CPF_Edit | CPF_Config)
	float                                              TimeSinceLastMovePacket;                          		// 0x0B00 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimeLastReplicatedMovePacket;                     		// 0x0B04 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPlatformMetrics_TA*                         PlatformMetrics;                                  		// 0x0B08 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	float                                              MouseXDeadZone;                                   		// 0x0B10 (0x0004) [0x0000000000000000]               
	float                                              MouseYDeadZone;                                   		// 0x0B14 (0x0004) [0x0000000000000000]               
	float                                              MouseXDeadZoneAir;                                		// 0x0B18 (0x0004) [0x0000000000000000]               
	float                                              MouseYDeadZoneAir;                                		// 0x0B1C (0x0004) [0x0000000000000000]               
	struct FVehicleInputs                              LastInputs;                                       		// 0x0B20 (0x0020) [0x0000000000000000]               
	class APRI_TA*                                     PendingViewPRI;                                   		// 0x0B40 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UClientConnectionTracker_TA*                 ConnectionTracker;                                		// 0x0B48 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UProfileCameraSave_TA*                       CameraSave;                                       		// 0x0B50 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              LastInputPitchUp;                                 		// 0x0B58 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastInputPitchDown;                               		// 0x0B5C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastInputYawLeft;                                 		// 0x0B60 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastInputYawRight;                                		// 0x0B64 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastInputPitch;                                   		// 0x0B68 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastInputYaw;                                     		// 0x0B6C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              MouseInputMax;                                    		// 0x0B70 (0x0004) [0x0000000000000002] (CPF_Const)   
	class AControllerEventInfo_TA*                     ControllerEventInfoArchetype;                     		// 0x0B78 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AControllerEventInfo_TA*                     ControllerEventInfo;                              		// 0x0B80 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UEngineShare_TA*                             EngineShare;                                      		// 0x0B88 (0x0008) [0x0000000000000000]               
	class UProfileAimAssistSave_TA*                    AimAssistSave;                                    		// 0x0B90 (0x0008) [0x0000000000000000]               
	class ANetworkInputBuffer_TA*                      InputBuffer;                                      		// 0x0B98 (0x0008) [0x0000000000000020] (CPF_Net)     
	class UCrossplayConfig_X*                          CrossplayConfig;                                  		// 0x0BA0 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventLaunchAccountPicker__Delegate;             		// 0x0BA8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventLaunchControllerApplet__Delegate;          		// 0x0BC0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventMuteChanged__Delegate;                     		// 0x0BD8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTrainingEditorActorModified__Delegate;     		// 0x0BF0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSelectBallCamTarget__Delegate;             		// 0x0C08 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventConnectionTrackerAttached__Delegate;       		// 0x0C20 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventChatMessage__Delegate;                     		// 0x0C38 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerController_TA");
		}

		return uClassPointer;
	};

	void HandleCarSet(class APRI_TA* InPRI);
	void SpawnSelectedArchetype();
	bool RemoveActor();
	void ToggleGrabActor();
	void ToggleRotateActor();
	void EditorReleaseActor();
	void EditorCycleActor();
	void DuplicateShot();
	void StopEditing();
	void EditorIncreasePower();
	void EditorDecreasePower();
	void EditorIncreasePowerToggleInterim();
	void EditorDecreasePowerToggleInterim();
	void EditorIncreasePowerToggle(unsigned long bToggle);
	void EditorDecreasePowerToggle(unsigned long bToggle);
	void ModifyEditorPower(int Direction);
	void ToggleCameraPosition();
	void EditorUndo();
	void EditorRedo();
	void EditorIncreaseRoundTime();
	void EditorDecreaseRoundTime();
	void EditorNextRound();
	void EditorPrevRound();
	void UpdateCrosshair();
	void __PlayerController_TA__PostBeginPlay_798600914458A07B872B7B84182268C3(class UObject* Obj);
	void __PlayerController_TA__ReceivedPlayer_A3D9923948233054B48800AD76FAB02D(class UBanSync_TA* BanSync);
	int __PlayerController_TA__ClientNotifyServerShutdown_FF331E58403CEBB3675019A75C37E245(class ATeam_Soccar_TA* T);
	void NetClientInputRate(int Rate);
	void ClientStayAsPartyVoteBegin();
	void ServerUpdateCustomMatchSettings(struct FCustomMatchSettings Settings);
	void ClientUpdateTournamentMatch(struct FTourMatch Match, int GameNum, struct FTourMatchGame GameData);
	void ServerCreateMatchBroadcast(class AGameEvent_Soccar_TA* GameEvent);
	void ClampMoveActorGrabOffset();
	void RevertToDefaultCameraHUDInput();
	void SetCameraHUDInput(class ACamera* InCameraArchetype, class AHUD* InHUDArchetype, class UClass* InPlayerInputClass);
	void SwitchToEditPawn();
	void ToggleEditorRound();
	void ToggleBetweenCarAndEditPawn();
	void Interact();
	void StopMovement(unsigned long bOnlyIfNoAccel);
	struct FVector GetRotateActorCameraOffset(float DeltaTime, unsigned long bSnap);
	void RestoreEditorPawnOrientation();
	void BackupEditorPawnOrientation();
	bool EditorPawnDeSerialize(class UJsonObject* Data);
	struct FString EditorPawnSerialize();
	void UpdateRotatedActorOrientation(float DeltaTime);
	void OnOpenPauseMenu();
	void ResetMouseCenter();
	float CalculateMouseAxis(float Center, float CurrentLocation, float Deadzone, float MaxDist);
	struct FVector CalculateMouseAccelInput(float XDeadZone, float YDeadZone, float XMaxDist, float YMaxDist, struct FVector& CurrentLocation);
	void ShowControllerApplet();
	void ShowAccountPicker();
	void QueSaveReplay();
	void SetFollowTarget(class APRI_TA* InTarget);
	void FollowPlayer(class APRI_TA* InPlayer);
	void ClientSkillUpdated(struct FUpdatedPlayerSkillRating Rating, int Playlist);
	void ServerReportPlayer(unsigned char ReasonID, struct FUniqueNetId PlayerID, struct FString PlayerName);
	void HandleLocalStatEvent(class APRI_TA* InPRI, class UStatEvent_TA* StatEvent, int Count);
	void ClientSplitscreenJoinResponse(struct FUniqueNetId PlayerID, unsigned long bAllow, struct FString Error);
	void ServerRequestSplitscreenJoin(struct FUniqueNetId PlayerID, struct FString PlayerName);
	bool eventPreClientTravel(struct FString PendingURL, unsigned char TravelType, unsigned long bIsSeamlessTravel);
	void NotifyGoalScored(int ScoredOnTeam);
	void eventDestroyed();
	void SetGameHUDArchetype(class AHUD* InArchetype);
	bool ShouldBeMuted(class APlayerController_TA* Other);
	bool IsCommunicationFiltered(unsigned char Filter, class APlayerController_TA* Other, unsigned long bPreset, unsigned long bTactical);
	void RefreshMutedPlayers(unsigned long bForceRefresh);
	void eventServerUnmutePlayer(struct FUniqueNetId PlayerNetId);
	void eventServerMutePlayer(struct FUniqueNetId PlayerNetId);
	void GameplayUnmutePlayer(struct FUniqueNetId PlayerNetId);
	void GameplayMutePlayer(struct FUniqueNetId PlayerNetId);
	struct FString GetDebugMutePlayerName(struct FUniqueNetId PlayerNetId);
	void ServerSetChatFilter(unsigned char InVoiceFilter);
	void ServerSetVoiceFilter(unsigned char InVoiceFilter);
	bool IsExplictlyMuted(struct FUniqueNetId PlayerNetId);
	void DebugAI();
	void SendPendingRPCs();
	bool ApplyChatBanFilter(unsigned long bQuickChatMessage);
	bool ApplyChatSpamFilter(struct FChatSpamData& OutChatSpam);
	bool CanSendMessage(unsigned long bQuickChatMessage);
	void ClientNotifyChatBannedPermanently();
	void ClientNotifyChatBanned(unsigned long long ChatBanExpiration);
	void ClientNotifyChatDisabled(float Time);
	void ChatMessage_TA(class APlayerReplicationInfo* InPRI, struct FString Message, unsigned char ChatChannel, unsigned long bPreset);
	void ServerSayInternal_TA(struct FString Message, unsigned char ChatChannel, unsigned long bPreset);
	void ServerSay_TA(struct FString Message, unsigned char ChatChannel, unsigned long bPreset);
	void Say_TA(struct FString Message, unsigned char ChatChannel, struct FUniqueNetId Recipient, unsigned long bPreset);
	bool CanChatWith(class APlayerController_TA* Other, unsigned long bPreset, unsigned long bTactical);
	bool AllowTextMessage(struct FString msg);
	void PushToTalkEnd();
	void PushToTalk();
	bool ShouldTournamentMatchmake();
	void HandleJoinGameMigrationCompleted(unsigned long bSuccess, struct FString FailReason);
	void ClientNotifyServerShutdown(struct FServerConnectionInfo ConnectionInfo);
	void eventClientUnmutePlayer(struct FUniqueNetId PlayerNetId);
	void eventClientMutePlayer(struct FUniqueNetId PlayerNetId, unsigned long bAddToMuteList);
	void GetOnlineStatus(unsigned long bLocalize, struct FString& PresenceString, struct FString& GameDataString);
	void ClientSetOnlineStatus();
	void HandleGameDataSelected(int PlaylistId, int MutatorIndex);
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	class AGameEvent_TA* GetGameEvent();
	void ClientArbitratedMatchEnded();
	void HandleDisconnected(class UPsyNetConnection_X* Connection);
	void BannedKick();
	void NoReservationKick();
	void IdleKick();
	void ServerReportServer();
	void ReportServer();
	void ClientUseItem(struct FVector UseLocation, struct FRotator UseRotation);
	void ServerTeleportCar(struct FVector SpawnLocation, struct FRotator NewRotation);
	void eventTeleportCar(struct FVector SpawnLocation, struct FRotator NewRotation);
	void ReceiveMessage(struct FMessagePacket Packet);
	void NextPickup();
	void ServerUsePickupReleased();
	void UsePickupReleased();
	void ServerUsePickup(class ASpecialPickup_TA* ActivatedPickup, class ARBActor_TA* Target);
	void UsePickup();
	void ToggleHandbrake(unsigned long bHandbrake);
	void ToggleBoost(unsigned long bBoost);
	void ToggleJump(unsigned long bJump);
	void TargetSelectLeft();
	void TargetSelectRight();
	void ReleaseRearCamera();
	void PressRearCamera();
	void ReleaseSecondaryCamera();
	void PressSecondaryCamera();
	void SetResetCamera(unsigned long bReset);
	void ReleaseResetCamera();
	void PressResetCamera();
	void SetHoldMouseCamera(unsigned long bToggle);
	void ReleaseMouseCameraToggle();
	void PressMouseCameraToggle();
	void ReadyUp();
	void Spectate();
	void ChangeTeam(int TeamNum);
	void SwitchTeam();
	void SetDefaultCameraMode();
	void ResetCameraMode();
	struct FName GetCameraMode();
	void SetCameraMode(struct FName NewCamMode);
	void ProcessMove_TA(struct FVehicleInputs& NewInput);
	void ZeroAllInput();
	void ZeroMoveInput();
	void AddMouseMovementVal(float PositiveInputVal, float NegativeInputVal, float InputDirVal, unsigned long bUsingMouseForPositiveAxis, unsigned long bUsingMouseForNegativeAxis, float& VehicleInputVal, float& CarAirAccelVal);
	void AddInputVal(float InputVal, unsigned long bAddInputCondition, float& VehicleInputVal);
	void ApplyAirPitchSafety();
	void ModifiedAirRotationByMouseInput(class UPlayerInput_TA* InputTA, float DeadZoneX, float DeadZoneY);
	bool UpdateMouseGroundSteer(class UPlayerInput_TA* InputTA, float DeltaTime, float Deadzone, float MaxDist, float BrakingSpeed);
	bool UpdateMouseGroundThrottle(class UPlayerInput_TA* InputTA, float DeltaTime, float Deadzone, float MaxDist);
	void PlayerMove(float DeltaTime);
	void IgnoreMoveInput(unsigned long bNewMoveInput);
	void eventSendClientAdjustment();
	class APlayerController_TA* GetPrimaryPlayerController();
	void HandleAddBoostComponent(class ACarComponent_Boost_TA* Boost);
	void OnPawnChange(class APawn* OldPawn, class APawn* NewPawn);
	void HandleSetProfile(class ULocalPlayer_TA* LocalPlayer);
	class UProductMetrics_TA* GetProductMetrics();
	void ReplicateLoadout();
	void CalculateMouseInput(float& Input);
	bool UsingMouseOnly(struct FName Key);
	bool UsingMouseOnlyTwoAxis(struct FName PosKey, struct FName NegKey);
	void CalculateFinalInput(struct FName SwivelPosKey, struct FName SwivelNegKey, float& Input, float& LastInput, float& InputPos, float& LastInputPos, float& InputNeg, float& LastInputNeg);
	void ResetLastInputs();
	bool AllowMouseInputs();
	void ReplicateCameraRotation();
	void HandleSecondaryCameraChanged(class ACameraSettingsActor_TA* Actor);
	void SetUsingFreecam(unsigned long bFreecam);
	void SetUsingBehindView(unsigned long bBehindView);
	void SetUsingSecondaryCamera(unsigned long bSecondaryCamera);
	void ReplicateCameraSettings();
	void HandleControllerLayoutChanged(class APRI_TA* InPRI);
	void HandlePawnTypeChanged(class APRI_TA* InPRI);
	void HandlePendingViewCarSet(class APRI_TA* InPRI);
	void HandleReplaceBot(class APRI_TA* InPRI);
	void HandleTeamChanged(class APRI_X* InPRI);
	void HandleMatchEnded(class AGameEvent_Soccar_TA* GameEvent);
	void HandleStartNewRound(class AGameEvent_Soccar_TA* GameEvent);
	void HandleGameEventChanged(class APRI_TA* InPRI);
	void HandlePRICameraChanged(class APRI_TA* InPRI);
	void SetupLightBar();
	void HandlePersistentCameraSet(class APRI_TA* InPRI);
	void OnReceivedPlayerAndPRI();
	void HandleProfileGamepadSave(class UProfileGamepadSave_TA* GamepadSave);
	void HandleProfilePCSave(class UProfilePCSave_TA* ProfilePCSave);
	void UpdateVoiceFilter();
	void HandleSoundSettingsSave(class USoundSettingsSave_TA* SoundSettings);
	void HandleGameplaySettingsSave(class UGameplaySettingsSave_TA* GameplaySettings);
	void HandleCameraSave(class UProfileCameraSave_TA* CameraSettings);
	void ClientSetLevelSessionID(struct FGuid Id);
	void ReplicateLevelSessionID();
	void SetInputBuffer(class ANetworkInputBuffer_TA* InBuffer);
	class UClass* GetInputBufferClass(unsigned char Type);
	void ServerInitInputBuffer(unsigned char Type);
	void NetworkInputBufferChanged(class UNetworkSave_TA* NetworkSave);
	void InitNetworkSave(class UNetworkSave_TA* NetworkSave);
	void ServerUpgradeNetworkNext(struct FString SessionTag);
	void eventReceivedPlayer();
	void InitFromGRI(class AGRI_X* GRI);
	void HandleGRISpawned(class AGRI_X* GRI);
	void eventPostBeginPlay();
	void eventReplicatedEvent(struct FName EventName);
	void EventChatMessage(class APlayerController_TA* PC, struct FString Message, unsigned long bPreset);
	void EventConnectionTrackerAttached(class APlayerController_TA* PC, class UClientConnectionTracker_TA* Tracker);
	void EventSelectBallCamTarget(class APlayerController_TA* PC, int Direction);
	void EventTrainingEditorActorModified();
	void EventMuteChanged(class APlayerController_TA* PC, struct FUniqueNetId PlayerID, unsigned long bMuted);
	void EventLaunchControllerApplet();
	void EventLaunchAccountPicker(int ControllerId);
};

// Class TAGame.AudioPriorityComponent_TA
// 0x006C (0x00A4 - 0x0110)
class UAudioPriorityComponent_TA : public UActorComponent_X
{
public:
	struct FInterpCurveFloat                           CarDistanceCurve;                                 		// 0x00A8 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           BallDistanceCurve;                                		// 0x00C0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              DrivingAtListenerDotThreshold;                    		// 0x00D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                DrivingAtPlayerBonus;                             		// 0x00DC (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                BoostingAtPlayerBonus;                            		// 0x00E0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FColor>                              DebugColors;                                      		// 0x00E8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FPriorityCandidate>                  PriorityArray;                                    		// 0x00F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class ABall_TA*                                    Ball;                                             		// 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AudioPriorityComponent_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	struct FPriorityCandidate CreateCandidate(class AVehicle_TA* Vehicle, struct FVector CenterLocation);
	void Tick(float DeltaTime);
	void UpdateBallReference(class AGameEvent_Soccar_TA* InGameEvent, class ABall_TA* InBall);
	void eventDetached();
	void eventAttached();
};

// Class TAGame.BallLocationComponent_TA
// 0x000B (0x009D - 0x00A8)
class UBallLocationComponent_TA : public UActorComponent
{
public:
	class UMaterialInstanceConstant*                   MaterialToApplyBallLocationTo;                    		// 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BallLocationComponent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.BallRadiusVolume_TA
// 0x0020 (0x0268 - 0x0288)
class ABallRadiusVolume_TA : public AActor
{
public:
	float                                              Radius;                                           		// 0x0268 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UDrawSphereComponent*                        PreviewRadius;                                    		// 0x0270 (0x0008) [0x000000000408000A] (CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline)
	TArray<class ABall_TA*>                            InRadius;                                         		// 0x0278 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BallRadiusVolume_TA");
		}

		return uClassPointer;
	};

	void RemoveBall(class ABall_TA* Ball);
	void AddBall(class ABall_TA* Ball);
	void eventTick(float DeltaTime);
};

// Class TAGame.RBActor_TA
// 0x0248 (0x0558 - 0x07A0)
class ARBActor_TA : public APawn_X
{
public:
	struct FPointer                                    VfTable_IITickNotify_TA;                          		// 0x0558 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	float                                              MaxLinearSpeed;                                   		// 0x0560 (0x0004) [0x0000000000000023] (CPF_Edit | CPF_Const | CPF_Net)
	float                                              MaxAngularSpeed;                                  		// 0x0564 (0x0004) [0x0000000000000023] (CPF_Edit | CPF_Const | CPF_Net)
	float                                              RollingFriction;                                  		// 0x0568 (0x0004) [0x0000000000000002] (CPF_Const)   
	unsigned long                                      bDisableSleeping : 1;                             		// 0x056C (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	unsigned long                                      bReplayActor : 1;                                 		// 0x056C (0x0004) [0x0000000000002022] [0x00000002] (CPF_Const | CPF_Net | CPF_Transient)
	unsigned long                                      bFrozen : 1;                                      		// 0x056C (0x0004) [0x0000000000002020] [0x00000004] (CPF_Net | CPF_Transient)
	unsigned long                                      bAutoInitFXEffects : 1;                           		// 0x056C (0x0004) [0x0000000000000002] [0x00000008] (CPF_Const)
	unsigned long                                      bIgnoreSyncing : 1;                               		// 0x056C (0x0004) [0x0000000000002020] [0x00000010] (CPF_Net | CPF_Transient)
	unsigned long                                      bPhysInitialized : 1;                             		// 0x056C (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	struct FNetworkSyncSettingsData                    NetworkSyncSettings;                              		// 0x0570 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FReplicatedRBState                          OldRBState;                                       		// 0x0590 (0x0040) [0x0000000000002002] (CPF_Const | CPF_Transient)
	struct FReplicatedRBState                          RBState;                                          		// 0x05D0 (0x0040) [0x0000000000002002] (CPF_Const | CPF_Transient)
	struct FReplicatedRBState                          ReplicatedRBState;                                		// 0x0610 (0x0040) [0x0000000000002022] (CPF_Const | CPF_Net | CPF_Transient)
	struct FReplicatedRBState                          ClientCorrectionRBState;                          		// 0x0650 (0x0040) [0x0000000000002002] (CPF_Const | CPF_Transient)
	struct FWorldContactData                           WorldContact;                                     		// 0x0690 (0x0028) [0x0000000000002002] (CPF_Const | CPF_Transient)
	struct FVector                                     SyncErrorLocation;                                		// 0x06B8 (0x000C) [0x0000000000002002] (CPF_Const | CPF_Transient)
	float                                              SyncErrorAngle;                                   		// 0x06C4 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	struct FVector                                     SyncErrorAxis;                                    		// 0x06C8 (0x000C) [0x0000000000002002] (CPF_Const | CPF_Transient)
	class UAkParamGroup*                               Ak;                                               		// 0x06D8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class AFXActor_X*                                  FXActorArchetype;                                 		// 0x06E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_X*                                  FXActor;                                          		// 0x06E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UImpactEffectsComponent_TA*                  ImpactEffectsComponent;                           		// 0x06F0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	TArray<struct FAccumulatedRigidBodyCollision>      RBCollisions;                                     		// 0x06F8 (0x0010) [0x0000000000482002] (CPF_Const | CPF_Transient | CPF_Component | CPF_NeedCtorLink)
	class UClass*                                      RBHistoryClass;                                   		// 0x0708 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class URBHistory_TA*                               RBHistory;                                        		// 0x0710 (0x0008) [0x000000000408200A] (CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	int                                                LastRBCollisionsFrame;                            		// 0x0718 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	class UReplayComponent_TA*                         Replay;                                           		// 0x0720 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FWeldingInfo                                WeldedInfo;                                       		// 0x0728 (0x0028) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class ARBActor_TA*                                 WeldedActor;                                      		// 0x0750 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ARBActor_TA*                                 WeldedTo;                                         		// 0x0758 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              PreWeldMass;                                      		// 0x0760 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ReplicatedGravityScale;                           		// 0x0764 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              ReplicatedCollisionScale;                         		// 0x0768 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FPointer                                    Constraint2D;                                     		// 0x0770 (0x0008) [0x0000000000003000] (CPF_Native | CPF_Transient)
	struct FPointer                                    BulletRigidBody;                                  		// 0x0778 (0x0008) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class UPhysicsConfig_TA*                           PhysicsConfig;                                    		// 0x0780 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventRigidBodyCollision__Delegate;              		// 0x0788 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RBActor_TA");
		}

		return uClassPointer;
	};

	void OnWeldedToChanged();
	void eventSetWeldedTo(class ARBActor_TA* RBActor);
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void GetTimeOfImpact(class ARBActor_TA* HitActor, struct FTimeOfImpactData& OutData);
	void SetMass(float NewMass);
	void SetConstrained3D(struct FVector LinearLower, struct FVector LinearUpper, struct FVector AngularLower, struct FVector AngularUpper);
	void SetConstrained2D(unsigned long bConstrain2D);
	void InitCCD();
	void SetPhysicsState(struct FReplicatedRBState NewState);
	void SetGravityScale(float InGravityScale);
	void SetCollisionScale(float InCollisionScale);
	void SetCollisionScaleNative(float NewScale);
	void SetFrozen(unsigned long bEnabled);
	void SetDyingPhysics();
	void SetMaxAngularSpeed(float NewMaxSpeed);
	void SetMaxLinearSpeed(float NewMaxSpeed);
	void eventOnRigidBodyCollision(struct FAccumulatedRigidBodyCollision Collision);
	void AddTorque(struct FVector Torque, unsigned char ForceMode, struct FString DebugSource);
	void AddForce(struct FVector Force, unsigned char ForceMode, struct FString DebugSource);
	void eventPreAsyncTick(float DeltaTime);
	void SetWeldedActor(struct FWeldingInfo Welding);
	void SetWelding(struct FWeldingInfo Welding);
	void UnWeldRBActor(class ARBActor_TA* Other);
	void WeldRBActor(class ARBActor_TA* Other, struct FVector WeldOffset, struct FRotator WeldRotation);
	void eventOnRBPhysInit();
	void ReInitRBPhys();
	void TerminateRBPhys();
	void SetCurrentRBState(struct FReplicatedRBState& NewRBState);
	struct FVector GetCurrentRBLocation();
	struct FReplicatedRBState GetCurrentRBState();
	int GetPhysicsFrame();
	float GetPhysicsTime();
	void PopFXState(class UFXActorEvent_X* Event);
	void PushFXState(class UFXActorEvent_X* Event);
	void InitFX();
	void InitAk();
	void eventPostBeginPlay();
	void eventPreBeginPlay();
	void eventReplicatedEvent(struct FName VarName);
	void EventRigidBodyCollision(class ARBActor_TA* RBActor, struct FAccumulatedRigidBodyCollision Collision);
};

// Class TAGame.Ball_TA
// 0x0288 (0x07A0 - 0x0A28)
class ABall_TA : public ARBActor_TA
{
public:
	class UStaticMeshComponent*                        StaticMesh;                                       		// 0x07A0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UStaticMeshComponent*                        TranslucentStaticMesh;                            		// 0x07A8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	float                                              MeshTranslucency;                                 		// 0x07B0 (0x0004) [0x0000000000000002] (CPF_Const)   
	class UMaterialInterface*                          TranslucentMaterial;                              		// 0x07B8 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FCarBallInteractionSettings                 CarInteraction;                                   		// 0x07C0 (0x0038) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class AFXActor_X*                                  EndOfGameFXArchetype;                             		// 0x07F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AExplosion_X*                                ExplosionArchetype;                               		// 0x0800 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AExplosion_X*                                NoGoalExplosionArchetype;                         		// 0x0808 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bAllowPlayerExplosionOverride : 1;                		// 0x0810 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bNotifyGroundHit : 1;                             		// 0x0810 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bEndOfGameHidden : 1;                             		// 0x0810 (0x0004) [0x0000000000002020] [0x00000004] (CPF_Net | CPF_Transient)
	unsigned long                                      bFadeIn : 1;                                      		// 0x0810 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bFadeOut : 1;                                     		// 0x0810 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bPredictionOnGround : 1;                          		// 0x0810 (0x0004) [0x0000000000002002] [0x00000020] (CPF_Const | CPF_Transient)
	unsigned long                                      bCanBeAttached : 1;                               		// 0x0810 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	unsigned long                                      bItemFreeze : 1;                                  		// 0x0810 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	struct FVector                                     MagnusCoefficient;                                		// 0x0814 (0x000C) [0x0000000000000021] (CPF_Edit | CPF_Net)
	class UBallCamTarget_TA*                           BallCamTarget;                                    		// 0x0820 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	float                                              Radius;                                           		// 0x0828 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              VisualRadius;                                     		// 0x082C (0x0004) [0x0000000000000000]               
	TArray<struct FBallHitInfo>                        Touches;                                          		// 0x0830 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              LastCalculateCarHit;                              		// 0x0840 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     InitialLocation;                                  		// 0x0844 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    InitialRotation;                                  		// 0x0850 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              LastHitWorldTime;                                 		// 0x085C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ReplicatedBallScale;                              		// 0x0860 (0x0004) [0x0000000000000020] (CPF_Net)     
	class UStaticMesh*                                 ReplicatedBallMesh;                               		// 0x0868 (0x0008) [0x0000000000000020] (CPF_Net)     
	float                                              ReplicatedWorldBounceScale;                       		// 0x0870 (0x0004) [0x0000000000000020] (CPF_Net)     
	float                                              ReplicatedBallGravityScale;                       		// 0x0874 (0x0004) [0x0000000000000020] (CPF_Net)     
	float                                              ReplicatedBallMaxLinearSpeedScale;                		// 0x0878 (0x0004) [0x0000000000000020] (CPF_Net)     
	float                                              ReplicatedAddedCarBounceScale;                    		// 0x087C (0x0004) [0x0000000000000020] (CPF_Net)     
	float                                              AdditionalCarGroundBounceScaleZ;                  		// 0x0880 (0x0004) [0x0000000000000000]               
	float                                              AdditionalCarGroundBounceScaleXY;                 		// 0x0884 (0x0004) [0x0000000000000000]               
	class UPhysicalMaterial*                           ReplicatedPhysMatOverride;                        		// 0x0888 (0x0008) [0x0000000000000020] (CPF_Net)     
	unsigned char                                      HitTeamNum;                                       		// 0x0890 (0x0001) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class AGameEvent_Soccar_TA*                        GameEvent;                                        		// 0x0898 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FExplosionData                              ReplicatedExplosionData;                          		// 0x08A0 (0x0018) [0x0000000000082020] (CPF_Net | CPF_Transient | CPF_Component)
	struct FExplosionDataExtended                      ReplicatedExplosionDataExtended;                  		// 0x08B8 (0x0020) [0x0000000000082020] (CPF_Net | CPF_Transient | CPF_Component)
	class AExplosion_X*                                Explosion;                                        		// 0x08D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              ExplosionTime;                                    		// 0x08E0 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     OldLocation;                                      		// 0x08E4 (0x000C) [0x0000000000002000] (CPF_Transient)
	class UMaterialInterface*                          FadeMaterial;                                     		// 0x08F0 (0x0008) [0x0000000000000000]               
	float                                              PredictionTimestep;                               		// 0x08F8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FPredictedPosition>                  PredictedPositions;                               		// 0x0900 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              LastPredictionTime;                               		// 0x0910 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	struct FGoalPenetrationData                        GoalPenetration;                                  		// 0x0918 (0x0028) [0x0000000000082000] (CPF_Transient | CPF_Component)
	float                                              GroundForce;                                      		// 0x0940 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class ACar_TA*                                     CurrentAffector;                                  		// 0x0948 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UBallTrajectoryComponent_TA*                 TrajectoryComponent;                              		// 0x0950 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UPitchTekDrawingComponent_TA*                PitchTekComponent;                                		// 0x0958 (0x0008) [0x000000000408000A] (CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class AGoalExplosionOrientation_TA*                GoalExplosionOrientation;                         		// 0x0960 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventCarTouch__Delegate;                        		// 0x0968 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventHitWorld__Delegate;                        		// 0x0980 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventHitGround__Delegate;                       		// 0x0998 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventHitGoal__Delegate;                         		// 0x09B0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventGameEventSet__Delegate;                    		// 0x09C8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventExploded__Delegate;                        		// 0x09E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventHitTeamNumChanged__Delegate;               		// 0x09F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTrailIntensityChanged__Delegate;           		// 0x0A10 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Ball_TA");
		}

		return uClassPointer;
	};

	void DisableOwnerTranslucency();
	void EnableOwnerTranslucency(class AActor* NewOwner);
	void OnWeldedToChanged();
	float eventGetTrailIntensity();
	struct FLinearColor eventGetActiveTeamColor();
	void PredictGroundPosition(int MaxIterations, struct FBallPredictionInfo& PredictionInfo);
	void PredictPosition(float Time, struct FBallPredictionInfo& PredictionInfo);
	void SetPhysMatOverride(class UPhysicalMaterial* InPhysMatOverride);
	void DisableTrajectory();
	bool CanEverShowTrajectory();
	bool IsTrajectoryEnabled();
	struct FVector GetTrajectoryStartVelocity();
	struct FRotator GetTrajectoryStartRotation();
	struct FVector GetTrajectoryStartLocation();
	void UpdateTrajectoryPredictionPoints(unsigned long bForceUpdate);
	void UpdateTrajectoryEnabled();
	bool ShouldDrawTrajectory();
	float GetAdditionalCarBounceScaleZ(class ACar_TA* Car);
	void SpawnEndOfGameFX();
	void SetEndOfGameHidden();
	void SetExplosionFXActor(class AExplosion_X* InExplosion, class UGoal_TA* ExplosionGoal, class AFXActor_X* ExplosionFX, class AActor* GoalOrientation);
	void InitExplosionFX(class AExplosion_X* InExplosion, class UGoal_TA* ExplosionGoal, class APRI_TA* Scorer);
	void Explode(class UGoal_TA* ExplosionGoal, struct FVector ExplodeLocation, class APRI_TA* Scorer);
	void eventDestroyed();
	void DoDestroy();
	void DoExplode();
	void OnRigidBodyCollision(struct FAccumulatedRigidBodyCollision Collision);
	void Launch(struct FVector LaunchPosition, struct FVector LaunchDirection);
	void OnCarTouch(class ACar_TA* HitCar, unsigned char HitType);
	void SetBallHitData(class ACar_TA* HitCar, struct FVector HitLocation, struct FVector HitNormal, unsigned char HitType);
	void OnHitTeamNumChanged();
	bool SetHitTeamNum(unsigned char TeamNum);
	void SetCarHitTeamNum(unsigned char TeamNum);
	void RecordCarHit(class ACar_TA* HitCar, struct FVector HitLocation, struct FVector HitNormal, unsigned char HitType);
	void eventReset();
	void OnHitWorld(struct FVector HitLoc, struct FVector HitNormal, class UPhysicalMaterial* PhysMat);
	bool IsGroundMaterial(class UPhysicalMaterial* PhysMat);
	bool IsGroundHit(struct FVector HitNormal, class UPhysicalMaterial* PhysMat);
	void FellOutOfWorld();
	bool IsRoundActive();
	void eventOnHitGoal(class UGoal_TA* Goal, struct FVector HitLoc);
	void SetGameEvent(class AGameEvent_Soccar_TA* SoccarGame);
	void TurnOff();
	void InitAk();
	void eventPostBeginPlay();
	void eventPreBeginPlay();
	void SetBallMesh(class UStaticMesh* NewMesh);
	void SetWorldBounceScale(float NewScale);
	void SetCarBounceScale(float NewScale);
	void SetBallMaxLinearSpeedScale(float InMaxLinearSpeedScale);
	void SetBallGravityScale(float InBallGravityScale);
	void SetBallScale(float NewScale);
	void eventReplicatedEvent(struct FName VarName);
	void EventTrailIntensityChanged(class ABall_TA* Ball);
	void EventHitTeamNumChanged(class ABall_TA* Ball);
	void EventExploded(class ABall_TA* Ball);
	void EventGameEventSet(class ABall_TA* Ball);
	void EventHitGoal(class ABall_TA* Ball, class UGoal_TA* Goal);
	void EventHitGround(class ABall_TA* Ball, struct FVector HitLoc, struct FVector HitNormal);
	void EventHitWorld(class ABall_TA* Ball, struct FVector HitLoc, struct FVector HitNormal);
	void EventCarTouch(class ABall_TA* Ball, class ACar_TA* HitCar, unsigned char HitType);
};

// Class TAGame.BallTrajectoryComponent_TA
// 0x006C (0x00A4 - 0x0110)
class UBallTrajectoryComponent_TA : public UActorComponent_X
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bCalculatePoints : 1;                             		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	TArray<struct FVector>                             TrajectoryPoints;                                 		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FTrajectorySetup                            TrajectorySettings;                               		// 0x00C0 (0x0014) [0x0000000000000000]               
	float                                              TotalPathDistance;                                		// 0x00D4 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     StartLocation;                                    		// 0x00D8 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     StartVelocity;                                    		// 0x00E4 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              TrajectoryUpdateTime;                             		// 0x00F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventTrajectoryEnabledChanged__Delegate;        		// 0x00F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BallTrajectoryComponent_TA");
		}

		return uClassPointer;
	};

	int eventGetTrajectoryFXCount();
	void DestroyFXs();
	void eventSetupFXs();
	class APlayerController_TA* eventGetPlayer(int LocalPlayerNum);
	TArray<class APlayerController_TA*> GetViewers();
	void CheckShouldShowTrajectory();
	float GetTrajectoryScale();
	void eventUpdateTrajectoryPrediction(unsigned long bForceUpdate);
	void OnEnabledChanged();
	void SetEnable(unsigned long bEnable);
	void HandleGameStateChanged(class AGameEvent_TA* InGameEvent);
	void OnGameEventSet(class ABall_TA* Ball);
	void HandlePlayerAimAssistChanged();
	void HandleLocalPlayersChanged(class AGameEvent_TA* InGameEvent);
	void eventDetached();
	void eventBeginPlay();
	void EventTrajectoryEnabledChanged(class ABall_TA* Ball);
};

// Class TAGame.BallTrajectoryComponent_Line_TA
// 0x0008 (0x0110 - 0x0118)
class UBallTrajectoryComponent_Line_TA : public UBallTrajectoryComponent_TA
{
public:
	unsigned long                                      bTrajectoryPointsNeedUpdated : 1;                 		// 0x0110 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	struct FColor                                      LineColor;                                        		// 0x0114 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BallTrajectoryComponent_Line_TA");
		}

		return uClassPointer;
	};

	void DestroyFX(int Index);
	void CreateFX(int Index, TArray<class APlayerController_TA*>& Viewers);
	void DestroyFXs();
	void eventSetupFXs();
};

// Class TAGame.BallTrajectoryComponent_Beam_TA
// 0x0018 (0x0118 - 0x0130)
class UBallTrajectoryComponent_Beam_TA : public UBallTrajectoryComponent_Line_TA
{
public:
	TArray<struct FTrajectoryFX>                       TrajectoryFXs;                                    		// 0x0118 (0x0010) [0x0000000000482000] (CPF_Transient | CPF_Component | CPF_NeedCtorLink)
	class UParticleSystem*                             ParticleBeamArchetype;                            		// 0x0128 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BallTrajectoryComponent_Beam_TA");
		}

		return uClassPointer;
	};

	int eventGetTrajectoryFXCount();
	void DestroyFX(int Index);
	void DestroyFXs();
	void CreateFX(int Index, TArray<class APlayerController_TA*>& Viewers);
};

// Class TAGame.BallTrajectoryComponent_Spline_TA
// 0x0024 (0x0118 - 0x013C)
class UBallTrajectoryComponent_Spline_TA : public UBallTrajectoryComponent_Line_TA
{
public:
	TArray<struct FTrajectorySplineFX>                 TrajectoryFXs;                                    		// 0x0118 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class ASplineLoftActorSpawnable_TA*                SplineArchetype;                                  		// 0x0128 (0x0008) [0x0000000000000000]               
	float                                              TangentMultiplier;                                		// 0x0130 (0x0004) [0x0000000000000000]               
	float                                              PulseMultiplier;                                  		// 0x0134 (0x0004) [0x0000000000000000]               
	float                                              MinInterpSpeed;                                   		// 0x0138 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BallTrajectoryComponent_Spline_TA");
		}

		return uClassPointer;
	};

	int eventGetTrajectoryFXCount();
	void DestroyFX(int Index);
	void DestroyFXs();
	void CreateFX(int Index, TArray<class APlayerController_TA*>& Viewers);
	void SetupFXs();
};

// Class TAGame.BallTrajectoryComponent_Mesh_TA
// 0x0040 (0x0110 - 0x0150)
class UBallTrajectoryComponent_Mesh_TA : public UBallTrajectoryComponent_TA
{
public:
	TArray<struct FMeshInfo>                           InterpMeshes;                                     		// 0x0110 (0x0010) [0x0000000000480000] (CPF_Component | CPF_NeedCtorLink)
	class UMaterialInstanceConstant*                   MIC;                                              		// 0x0120 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStaticMesh*                                 StaticMesh;                                       		// 0x0128 (0x0008) [0x0000000000000000]               
	struct FColor                                      BeamColor_Max;                                    		// 0x0130 (0x0004) [0x0000000000000000]               
	struct FColor                                      BeamColor_Mid;                                    		// 0x0134 (0x0004) [0x0000000000000000]               
	struct FColor                                      BeamColor_Min;                                    		// 0x0138 (0x0004) [0x0000000000000000]               
	float                                              MinInterpSpeed;                                   		// 0x013C (0x0004) [0x0000000000000000]               
	float                                              MeshScale;                                        		// 0x0140 (0x0004) [0x0000000000000000]               
	float                                              MeshMoveSpeed;                                    		// 0x0144 (0x0004) [0x0000000000000000]               
	float                                              MeshRotateSpeed;                                  		// 0x0148 (0x0004) [0x0000000000000000]               
	float                                              TrajectoryPlayTestScale;                          		// 0x014C (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BallTrajectoryComponent_Mesh_TA");
		}

		return uClassPointer;
	};

	struct FLinearColor GetBeamColor(float VelocityPower);
	void HandleVelocityStartSpeedChanged(class ABall_GameEditor_TA* Ball);
	void SetupBallEditorMaterial();
	float GetTrajectoryScale();
	float eventGetMeshScale(int MeshIndex);
	int eventGetTrajectoryFXCount();
	void DestroyFXs();
	void eventSetupFXs();
};

// Class TAGame.BoostMesh_TA
// 0x0024 (0x0060 - 0x0084)
class UBoostMesh_TA : public UObject
{
public:
	struct FRandomRange                                FadeInTime;                                       		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FRandomRange                                FadeOutTime;                                      		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FAnimatedMaterialMesh>               MaterialParams;                                   		// 0x0070 (0x0010) [0x0000000000480001] (CPF_Edit | CPF_Component | CPF_NeedCtorLink)
	float                                              MaxMaterialTime;                                  		// 0x0080 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BoostMesh_TA");
		}

		return uClassPointer;
	};

	void ApplyPaint(class UProductAttribute_PaintSettings_TA* PaintSettings, class UProductPaint_TA* Paint);
	void ApplyLinearColorParameter(class UActorComponent* Component, struct FName Param, struct FLinearColor InColor);
	void ApplyColorParameter(class UActorComponent* Component, struct FName Param, struct FVector Value, float Alpha);
	void ApplyVectorParameter(class UActorComponent* Component, struct FName Param, struct FVector Value);
	void ApplyFloatParameter(class UActorComponent* Component, struct FName Param, float Value);
	void ApplyMaterialOverride(class UMaterialInterface* Override, int Index);
	void FadeOut();
	void FadeIn();
	void ResetElapsedTime(float Value);
	void CopyBoostMeshDistributionParameters(class AFXActor_Boost_TA* Archetype);
	void Update(float DeltaTime);
	void Initialize(class AFXActor_X* FXActor);
};

// Class TAGame.BreakOutActor_Platform_TA
// 0x00C0 (0x0268 - 0x0328)
class ABreakOutActor_Platform_TA : public AActor
{
public:
	int                                                Sides;                                            		// 0x0268 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bPrimaryPlayerStart : 1;                          		// 0x026C (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	int                                                TeamIndex;                                        		// 0x0270 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                MaxDamage;                                        		// 0x0274 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UStaticMeshComponent*                        StaticMeshComponent;                              		// 0x0278 (0x0008) [0x00000000040A000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline)
	class UDynamicLightEnvironmentComponent*           LightEnvironment;                                 		// 0x0280 (0x0008) [0x00000000040A000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline)
	class AFXActor_X*                                  FXArchetype;                                      		// 0x0288 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              NeighborRadius;                                   		// 0x0290 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<class ABreakOutActor_Platform_TA*>          Neighbors;                                        		// 0x0298 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	float                                              LastHitTime;                                      		// 0x02A8 (0x0004) [0x0000000000000000]               
	struct FBreakoutDamageState                        DamageState;                                      		// 0x02B0 (0x0020) [0x0000000000000020] (CPF_Net)     
	class AFXActor_X*                                  FXActor;                                          		// 0x02D0 (0x0008) [0x0000000000000000]               
	struct FBreakoutDamageState                        PreReplayState;                                   		// 0x02D8 (0x0020) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventDamageStateChanged__Delegate;              		// 0x02F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventDamaged__Delegate;                         		// 0x0310 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BreakOutActor_Platform_TA");
		}

		return uClassPointer;
	};

	void SetPreReplayState();
	void SavePreReplayState();
	void GatherNeighbors(class ABreakOutActor_Platform_TA* Start, int Iterations, TArray<class ABreakOutActor_Platform_TA*>& ToDamage);
	void HandleTeamColorsChanged(class ATeam_TA* Team);
	void HandleTeamRemoved(class UObject* TeamObj);
	void HandleTeamAdded(class UObject* TeamObj);
	bool IsBroken();
	bool IsDamaged();
	void Reset();
	void SetDamageState(unsigned char InDamageState, class APRI_TA* InDamageCauser, struct FVector InLocation, unsigned long bDirectDamage, unsigned long bImmediate);
	void IncreaseDamage(class APRI_TA* DamageCauser, struct FVector FromLocation, unsigned long bDirectDamage);
	bool NeighborDamage(class ABall_TA* Ball, int InDamage, struct FVector HitLocation);
	bool OnBallHit(class ABall_TA* Ball, int InDamage, struct FVector HitNormal, struct FVector InVelocity, struct FVector HitLocation);
	void ReInitPhysics();
	void ReInitPhysicsDelayed();
	void InitFX();
	void eventPostBeginPlay();
	void eventReplicatedEvent(struct FName VarName);
	void EventDamaged(class ABreakOutActor_Platform_TA* Platform, class APRI_TA* PRI, class ABall_TA* Ball);
	void EventDamageStateChanged(class ABreakOutActor_Platform_TA* Platform, struct FBreakoutDamageState InState);
};

// Class TAGame.BTComponent
// 0x0078 (0x0070 - 0x00E8)
class UBTComponent : public UComponent
{
public:
	class UBTNode*                                     Root;                                             		// 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	unsigned char                                      RootStatus;                                       		// 0x0078 (0x0001) [0x0000000000002002] (CPF_Const | CPF_Transient)
	class AAIController_TA*                            AI;                                               		// 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bPrintStatusLogs : 1;                             		// 0x0088 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bDirtyStatusLogs : 1;                             		// 0x0088 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bEvaluatingConditions : 1;                        		// 0x0088 (0x0004) [0x0000000000002002] [0x00000004] (CPF_Const | CPF_Transient)
	unsigned long                                      bPauseNextTick : 1;                               		// 0x0088 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	TArray<struct FBTStatusLog>                        StatusLogs;                                       		// 0x0090 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int                                                StatusLogsIndex;                                  		// 0x00A0 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	TArray<int>                                        StatusLogsStack;                                  		// 0x00A8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	class UDebugDrawer_X*                              CanvasDrawer;                                     		// 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<struct FBTDynamicLinkData>                  DynamicLinks;                                     		// 0x00C0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventDynamicLinksChanged__Delegate;             		// 0x00D0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTComponent");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	struct FColor GetStatusColor(unsigned char Status);
	struct FString GetDepthSpaces(float Depth);
	void SetDynamicLink(struct FName LinkName, class UBTNode* Node);
	void SetRoot(class UBTNode* NewRootArchetype);
	void Abort();
	void Tick(float DeltaTime);
	void Init(class AAIController_TA* ForAI);
	void EventDynamicLinksChanged(class UBTComponent* BT);
};

// Class TAGame.BTLockCollection
// 0x0040 (0x0070 - 0x00B0)
class UBTLockCollection : public UComponent
{
public:
	TArray<struct FTimedLock>                          Locks;                                            		// 0x0070 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventLockSet__Delegate;                         		// 0x0080 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventLockExpired__Delegate;                     		// 0x0098 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTLockCollection");
		}

		return uClassPointer;
	};

	void UpdateLocks();
	float GetTimeRemaining(struct FName LockName);
	bool IsNameLocked(struct FName LockName);
	void RemoveNamedLock(struct FName LockName);
	void AddNamedLock(struct FName LockName, float ForHowLong);
	void EventLockExpired(struct FName LockName);
	void EventLockSet(struct FName LockName);
};

// Class TAGame.BTNode
// 0x0020 (0x0060 - 0x0080)
class UBTNode : public UObject
{
public:
	TArray<class UBTDecorator*>                        Decorators;                                       		// 0x0060 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	unsigned long                                      bDebugPause : 1;                                  		// 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bDebug : 1;                                       		// 0x0070 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	class AAIController_TA*                            AI;                                               		// 0x0078 (0x0008) [0x0000000000002002] (CPF_Const | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTNode");
		}

		return uClassPointer;
	};

	void SetStatusString(struct FString msg);
};

// Class TAGame.BTConditionalNode
// 0x0030 (0x0080 - 0x00B0)
class UBTConditionalNode : public UBTNode
{
public:
	TArray<class UBTNode*>                             PreConditions;                                    		// 0x0080 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	TArray<class UBTNode*>                             Conditions;                                       		// 0x0090 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	TArray<class UBTNode*>                             SuccessConditions;                                		// 0x00A0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTConditionalNode");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTAction
// 0x000C (0x00B0 - 0x00BC)
class UBTAction : public UBTConditionalNode
{
public:
	float                                              FinishTime;                                       		// 0x00B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AbortTime;                                        		// 0x00B4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              StartTime;                                        		// 0x00B8 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTAction");
		}

		return uClassPointer;
	};

	float GetRunningTime();
	unsigned char OnExecute();
	void eventOnStarted();
	unsigned char eventOnStart();
	void eventOnInit();
};

// Class TAGame.BTAction_Target
// 0x00A4 (0x00BC - 0x0160)
class UBTAction_Target : public UBTAction
{
public:
	class UBTTarget*                                   Target;                                           		// 0x00C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              TargetPredictionTime;                             		// 0x00C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FAIProxyData                                SelfData;                                         		// 0x00D0 (0x0048) [0x0000000000002000] (CPF_Transient)
	struct FAIProxyData                                TargetData;                                       		// 0x0118 (0x0048) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTAction_Target");
		}

		return uClassPointer;
	};

	unsigned char eventOnTargetExecute();
	unsigned char OnExecute();
};

// Class TAGame.BTAction_MoveTo
// 0x0068 (0x0160 - 0x01C8)
class UBTAction_MoveTo : public UBTAction_Target
{
public:
	unsigned long                                      bReverse : 1;                                     		// 0x0160 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bBoost : 1;                                       		// 0x0160 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bAllowPointTurns : 1;                             		// 0x0160 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	unsigned long                                      bPointTurn : 1;                                   		// 0x0160 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	unsigned long                                      bWasFacingDestination : 1;                        		// 0x0160 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	unsigned long                                      bHasPath : 1;                                     		// 0x0160 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	float                                              MinSpeed;                                         		// 0x0164 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxSpeed;                                         		// 0x0168 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RandomMaxSpeedModifier;                           		// 0x016C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinBoostDistance;                                 		// 0x0170 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TeamSeparationDistance;                           		// 0x0174 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ReachDistance;                                    		// 0x0178 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   FaceLocation;                                     		// 0x0180 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   FaceRotation;                                     		// 0x0188 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxTurnRadius;                                    		// 0x0190 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<class UBTMoveModifier*>                     Modifiers;                                        		// 0x0198 (0x0010) [0x0000000004480009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	struct FVector                                     OldPathDestination;                               		// 0x01A8 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     OldPathCarLocation;                               		// 0x01B4 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              CachedMaxGravitySlope;                            		// 0x01C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentRandomMaxSpeedModifier;                    		// 0x01C4 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTAction_MoveTo");
		}

		return uClassPointer;
	};

	void SteerTowardsLocal(struct FVector LocalOffset);
	void DriveAwayFrom(struct FVector TargetLocation, float TargetRadius, float BufferRadius);
	bool SeparateTeammates();
	void SlowDown();
	void SetTemporaryMaxSpeed(float InSpeed);
	void SlowForObstacles();
	struct FVector GetAimedDestination(struct FVector Destination, struct FVector AimDir);
	bool GetAimDir(struct FVector Destination, struct FVector& AimDir);
	void DriveTo(struct FVector Destination);
	void UpdatePath(struct FVector Destination);
	void PathTo(struct FVector Destination);
	void CacheGravityScale();
	struct FVector GetLeadDestination();
	bool HasReachedTarget();
	bool HasPassedTarget();
	unsigned char OnTargetExecute();
	unsigned char eventOnStart();
	void eventOnInit();
};

// Class TAGame.BTMoveModifier
// 0x0004 (0x0070 - 0x0074)
class UBTMoveModifier : public UComponent
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTMoveModifier");
		}

		return uClassPointer;
	};

	void eventAdjustDestination(struct FVector Goal, struct FVector& Destination);
};

// Class TAGame.BTCondition
// 0x000C (0x0080 - 0x008C)
class UBTCondition : public UBTNode
{
public:
	float                                              UpdateDelay;                                      		// 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bFlipResult : 1;                                  		// 0x0084 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bDirty : 1;                                       		// 0x0084 (0x0004) [0x0000000000002002] [0x00000002] (CPF_Const | CPF_Transient)
	unsigned long                                      CachedResult : 1;                                 		// 0x0084 (0x0004) [0x0000000000002002] [0x00000004] (CPF_Const | CPF_Transient)
	float                                              NextUpdateTime;                                   		// 0x0088 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTCondition");
		}

		return uClassPointer;
	};

	bool ShouldProcessTeam(unsigned char CheckTeam, int ActorTeam);
	bool ShouldProcessActor(unsigned char CheckTeam, class AActor* CheckActor);
	void SetDirty();
	bool eventGetResult();
	void eventOnInit();
};

// Class TAGame.BTC_Any
// 0x000C (0x008C - 0x0098)
class UBTC_Any : public UBTCondition
{
public:
	class UBTTarget*                                   Targets;                                          		// 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_Any");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTC_NotAny
// 0x000C (0x008C - 0x0098)
class UBTC_NotAny : public UBTCondition
{
public:
	class UBTTarget*                                   Targets;                                          		// 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_NotAny");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTC_ProxyBase
// 0x005C (0x008C - 0x00E8)
class UBTC_ProxyBase : public UBTCondition
{
public:
	class UBTTarget*                                   Self;                                             		// 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              SelfPredictionTime;                               		// 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FAIProxyData                                SelfData;                                         		// 0x00A0 (0x0048) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_ProxyBase");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTC_TargetBase
// 0x00E8 (0x00E8 - 0x01D0)
class UBTC_TargetBase : public UBTC_ProxyBase
{
public:
	class UBTTarget*                                   Target;                                           		// 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              TargetPredictionTime;                             		// 0x00F0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bFlattenToDrivePlane : 1;                         		// 0x00F4 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	struct FAIProxyData                                TargetData;                                       		// 0x00F8 (0x0048) [0x0000000000002000] (CPF_Transient)
	struct FAIProxyData                                SelfData3D;                                       		// 0x0140 (0x0048) [0x0000000000002000] (CPF_Transient)
	struct FAIProxyData                                TargetData3D;                                     		// 0x0188 (0x0048) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_TargetBase");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTC_Target
// 0x0048 (0x01D0 - 0x0218)
class UBTC_Target : public UBTC_TargetBase
{
public:
	float                                              DistanceGreaterThan;                              		// 0x01D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DistanceLessThan;                                 		// 0x01D4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              HeightGreaterThan;                                		// 0x01D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              HeightLessThan;                                   		// 0x01DC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SpeedGreaterThan;                                 		// 0x01E0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SpeedLessThan;                                    		// 0x01E4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SpeedTowardsGreaterThan;                          		// 0x01E8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SpeedTowardsLessThan;                             		// 0x01EC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SideSpeedGreaterThan;                             		// 0x01F0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SideSpeedLessThan;                                		// 0x01F4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RelativeSpeedGreaterThan;                         		// 0x01F8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RelativeSpeedLessThan;                            		// 0x01FC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RelativeSpeedTowardsGreaterThan;                  		// 0x0200 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RelativeSpeedTowardsLessThan;                     		// 0x0204 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RelativeSideSpeedGreaterThan;                     		// 0x0208 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RelativeSideSpeedLessThan;                        		// 0x020C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AngleGreaterThan;                                 		// 0x0210 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AngleLessThan;                                    		// 0x0214 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_Target");
		}

		return uClassPointer;
	};

	bool eventGetResult();
};

// Class TAGame.BTC_SelectActor
// 0x000C (0x008C - 0x0098)
class UBTC_SelectActor : public UBTCondition
{
public:
	class UBTTarget*                                   Targets;                                          		// 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_SelectActor");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTAction_Input
// 0x0024 (0x00BC - 0x00E0)
class UBTAction_Input : public UBTAction
{
public:
	struct FVehicleInputs                              Input;                                            		// 0x00C0 (0x0020) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTAction_Input");
		}

		return uClassPointer;
	};

	unsigned char OnExecute();
};

// Class TAGame.BTAction_Stop
// 0x0008 (0x00BC - 0x00C4)
class UBTAction_Stop : public UBTAction
{
public:
	unsigned long                                      bWasGoingForward : 1;                             		// 0x00C0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTAction_Stop");
		}

		return uClassPointer;
	};

	unsigned char OnExecute();
	unsigned char eventOnStart();
};

// Class TAGame.BTAction_HitBall
// 0x0020 (0x01C8 - 0x01E8)
class UBTAction_HitBall : public UBTAction_MoveTo
{
public:
	float                                              RandomTargetOffset;                               		// 0x01C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AimOffsetScale;                                   		// 0x01CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     CurrentRandomTargetOffset;                        		// 0x01D0 (0x000C) [0x0000000000002000] (CPF_Transient)
	class AAIController_Soccar_TA*                     SoccarAI;                                         		// 0x01E0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTAction_HitBall");
		}

		return uClassPointer;
	};

	struct FVector GetAimedDestination(struct FVector Destination, struct FVector AimDir);
	struct FVector GetLeadDestination();
	unsigned char OnTargetExecute();
	bool HasHitBall();
	void OnStarted();
	void OnInit();
};

// Class TAGame.BTAction_CatchBall
// 0x0004 (0x01E8 - 0x01EC)
class UBTAction_CatchBall : public UBTAction_HitBall
{
public:
	float                                              FallTime;                                         		// 0x01E8 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTAction_CatchBall");
		}

		return uClassPointer;
	};

	void DriveTo(struct FVector Destination);
	unsigned char OnTargetExecute();
};

// Class TAGame.BTAction_WiggleTires
// 0x0004 (0x00BC - 0x00C0)
class UBTAction_WiggleTires : public UBTAction
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTAction_WiggleTires");
		}

		return uClassPointer;
	};

	unsigned char OnExecute();
};

// Class TAGame.BTNodeParent
// 0x0014 (0x00B0 - 0x00C4)
class UBTNodeParent : public UBTConditionalNode
{
public:
	TArray<class UBTNode*>                             Children;                                         		// 0x00B0 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	int                                                RunningChild;                                     		// 0x00C0 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTNodeParent");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTExecutor
// 0x0004 (0x00C4 - 0x00C8)
class UBTExecutor : public UBTNodeParent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTExecutor");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTRandomSelector
// 0x0024 (0x00C4 - 0x00E8)
class UBTRandomSelector : public UBTNodeParent
{
public:
	TArray<float>                                      ChildWeights;                                     		// 0x00C8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<int>                                        RemainingChildren;                                		// 0x00D8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTRandomSelector");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTSelector
// 0x0004 (0x00C4 - 0x00C8)
class UBTSelector : public UBTNodeParent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTSelector");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTEvaluator
// 0x0000 (0x00C8 - 0x00C8)
class UBTEvaluator : public UBTSelector
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTEvaluator");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTSequence
// 0x0004 (0x00C4 - 0x00C8)
class UBTSequence : public UBTNodeParent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTSequence");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTDecorator
// 0x0008 (0x0080 - 0x0088)
class UBTDecorator : public UBTNode
{
public:
	class UBTNode*                                     Child;                                            		// 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTDecorator");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTDeco_RandomSteer
// 0x0010 (0x0088 - 0x0098)
class UBTDeco_RandomSteer : public UBTDecorator
{
public:
	float                                              MinDuration;                                      		// 0x0088 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxDuration;                                      		// 0x008C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TimeRemaining;                                    		// 0x0090 (0x0004) [0x0000000000000000]               
	float                                              ExtraSteer;                                       		// 0x0094 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTDeco_RandomSteer");
		}

		return uClassPointer;
	};

	void eventAdjustSteer();
};

// Class TAGame.BTDeco_Success
// 0x0000 (0x0088 - 0x0088)
class UBTDeco_Success : public UBTDecorator
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTDeco_Success");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTDynamicLink
// 0x0018 (0x0088 - 0x00A0)
class UBTDynamicLink : public UBTDecorator
{
public:
	struct FName                                       LinkName;                                         		// 0x0088 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	unsigned long                                      bUnlinkedSuccess : 1;                             		// 0x0090 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class UBTNode*                                     ChildArchetype;                                   		// 0x0098 (0x0008) [0x0000000000002002] (CPF_Const | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTDynamicLink");
		}

		return uClassPointer;
	};

	void SetChildArchetype(class UBTNode* NewChildArchetype);
	void HandleDynamicLinksChanged(class UBTComponent* BT);
	void eventInit();
};

// Class TAGame.BTLock
// 0x0024 (0x0088 - 0x00AC)
class UBTLock : public UBTDecorator
{
public:
	unsigned char                                      LockScope;                                        		// 0x0088 (0x0001) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       LockName;                                         		// 0x008C (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              Time;                                             		// 0x0094 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RandomTime;                                       		// 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UBTLockCollection*                           Locks;                                            		// 0x00A0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	float                                              LockTime;                                         		// 0x00A8 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTLock");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTWeight
// 0x0004 (0x0088 - 0x008C)
class UBTWeight : public UBTDecorator
{
public:
	float                                              Weight;                                           		// 0x0088 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTWeight");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTProxyType
// 0x0004 (0x0060 - 0x0064)
class UBTProxyType : public UObject
{
public:
	unsigned long                                      bStatic : 1;                                      		// 0x0060 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTProxyType");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTTarget
// 0x0030 (0x0060 - 0x0090)
class UBTTarget : public UObject
{
public:
	class UBTProxyType*                                Type;                                             		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     LocalOffset;                                      		// 0x0068 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     WorldOffset;                                      		// 0x0074 (0x000C) [0x0000000000000001] (CPF_Edit)    
	TArray<class UBTNode*>                             Filters;                                          		// 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTTarget");
		}

		return uClassPointer;
	};

};

// Class TAGame.BugReport_TA
// 0x000C (0x01B4 - 0x01C0)
class UBugReport_TA : public UBugReport_X
{
public:
	class UReplay_TA*                                  Replay;                                           		// 0x01B8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BugReport_TA");
		}

		return uClassPointer;
	};

	class UReplay_TA* eventGetReplay();
};

// Class TAGame.CachedUnlockedProducts_TA
// 0x0028 (0x0060 - 0x0088)
class UCachedUnlockedProducts_TA : public UObject
{
public:
	TArray<int>                                        Products;                                         		// 0x0060 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __Products__ChangeNotify;                         		// 0x0070 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CachedUnlockedProducts_TA");
		}

		return uClassPointer;
	};

	void __Products__ChangeNotifyFunc();
	int Length();
	void Clear();
	void Set(TArray<int>& ProductIDs);
	void Remove(int ProductID);
	void Add(int ProductID);
	TArray<class UProduct_TA*> GetProducts();
	bool ContainsAllProducts(class UProductSlot_TA* Slot, unsigned char UnlockMethod);
	bool ContainsProductsForSlot(class UProductSlot_TA* Slot);
	bool Contains(int ProductID);
};

// Class TAGame.CarColorSet_TA
// 0x0054 (0x0080 - 0x00D4)
class UCarColorSet_TA : public UColorPalette_X
{
public:
	TArray<struct FLinearColor>                        Grayscales;                                       		// 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FLinearColor>                        H;                                                		// 0x0090 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FLinearColor>                        SV;                                               		// 0x00A0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FLinearColor                                ColorBlindColor;                                  		// 0x00B0 (0x0010) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FDebugColor>                         DebugColors;                                      		// 0x00C0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	float                                              MinStadiumBrightness;                             		// 0x00D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarColorSet_TA");
		}

		return uClassPointer;
	};

	void RebuildColors();
	struct FLinearColor GetFontColor(int ColorID);
	float GetMinStadiumBrightness();
	TArray<struct FLinearColor> eventGetStadiumColors(int ColorID);
};

// Class TAGame.CarComponent_TA
// 0x0058 (0x0268 - 0x02C0)
class ACarComponent_TA : public AActor
{
public:
	class AFXActor_X*                                  FXActorArchetype;                                 		// 0x0268 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UFXActorEvent_X*                             FXEvent;                                          		// 0x0270 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bDisabled : 1;                                    		// 0x0278 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bAutoActivate : 1;                                		// 0x0278 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bSimulateComponent : 1;                           		// 0x0278 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	unsigned long                                      bCreated : 1;                                     		// 0x0278 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	unsigned long                                      bActive : 1;                                      		// 0x0278 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	unsigned long                                      bRemovedFromCar : 1;                              		// 0x0278 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	unsigned char                                      ComponentData;                                    		// 0x027C (0x0001) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      ReplicatedActive;                                 		// 0x027D (0x0001) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class APRI_TA*                                     Activator;                                        		// 0x0280 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AVehicle_TA*                                 Vehicle;                                          		// 0x0288 (0x0008) [0x0000000000000020] (CPF_Net)     
	class ACar_TA*                                     Car;                                              		// 0x0290 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              ActivityTime;                                     		// 0x0298 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ReplicatedActivityTime;                           		// 0x029C (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class AFXActor_X*                                  FXActor;                                          		// 0x02A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventActivationChanged__Delegate;               		// 0x02A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarComponent_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void eventFellOutOfWorld();
	void HandleCarDestroyed(class APawn_X* InCar);
	void eventDestroyed();
	float GetInactiveTime();
	float GetActiveTime();
	void ApplyForces(float ActiveTime);
	void PrePhysicsStep(float DeltaTime);
	void RemoveFromCar();
	bool CanDeactivate();
	bool ConditionalDeactivate();
	bool CanActivate();
	bool ConditionalActivate();
	void SetActive(unsigned long bNewActive);
	void Deactivate();
	void Activate();
	void RemoveFX();
	void ReInitFX();
	void InitFX();
	void UnregisterCarEvents();
	void RegisterCarEvents();
	void OnCreated();
	void HandleVehicleSetup(class ACar_TA* InCar);
	void OnVehicleSetupComplete();
	void Create(class ACar_TA* OwnerCar, class APRI_TA* InActivator);
	class ACarComponent_TA* ArchetypeCreateFor(class ACar_TA* OwnerCar);
	void ClientUpdateActive();
	void eventReplicatedEvent(struct FName VarName);
	void EventActivationChanged(class ACarComponent_TA* CarComponent);
};

// Class TAGame.CarComponent_AirControl_TA
// 0x0020 (0x02C0 - 0x02E0)
class ACarComponent_AirControl_TA : public ACarComponent_TA
{
public:
	struct FRotator                                    AirTorque;                                        		// 0x02C0 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    AirDamping;                                       		// 0x02CC (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              ThrottleForce;                                    		// 0x02D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AirControlSensitivity;                            		// 0x02DC (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarComponent_AirControl_TA");
		}

		return uClassPointer;
	};

	void PrePhysicsStep(float DeltaTime);
	void ApplyForces(float ActiveTime);
	void OnCreated();
};

// Class TAGame.CarComponent_AirControl_Robin_TA
// 0x0018 (0x02E0 - 0x02F8)
class ACarComponent_AirControl_Robin_TA : public ACarComponent_AirControl_TA
{
public:
	struct FWaveParams                                 RandomPitch;                                      		// 0x02E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FWaveParams                                 RandomYaw;                                        		// 0x02E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FWaveParams                                 RandomRoll;                                       		// 0x02F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarComponent_AirControl_Robin_TA");
		}

		return uClassPointer;
	};

	void ApplyForces(float ActiveTime);
};

// Class TAGame.CarComponent_Boost_TA
// 0x0068 (0x02C0 - 0x0328)
class ACarComponent_Boost_TA : public ACarComponent_TA
{
public:
	float                                              BoostConsumptionRate;                             		// 0x02C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxBoostAmount;                                   		// 0x02C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              StartBoostAmount;                                 		// 0x02C8 (0x0004) [0x0000000000000021] (CPF_Edit | CPF_Net)
	float                                              CurrentBoostAmount;                               		// 0x02CC (0x0004) [0x0000000000000021] (CPF_Edit | CPF_Net)
	float                                              BoostModifier;                                    		// 0x02D0 (0x0004) [0x0000000000000021] (CPF_Edit | CPF_Net)
	float                                              LastBoostAmountRequestTime;                       		// 0x02D4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastBoostAmount;                                  		// 0x02D8 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bPendingConfirmBoostAmount : 1;                   		// 0x02DC (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bRechargeGroundOnly : 1;                          		// 0x02DC (0x0004) [0x0000000000000020] [0x00000002] (CPF_Net)
	unsigned long                                      bNoBoost : 1;                                     		// 0x02DC (0x0004) [0x0000000000000021] [0x00000004] (CPF_Edit | CPF_Net)
	float                                              BoostForce;                                       		// 0x02E0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinBoostTime;                                     		// 0x02E4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RechargeRate;                                     		// 0x02E8 (0x0004) [0x0000000000000020] (CPF_Net)     
	float                                              RechargeDelay;                                    		// 0x02EC (0x0004) [0x0000000000000020] (CPF_Net)     
	int                                                UnlimitedBoostRefCount;                           		// 0x02F0 (0x0004) [0x0000000000000021] (CPF_Edit | CPF_Net)
	unsigned char                                      ReplicatedBoostAmount;                            		// 0x02F4 (0x0001) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UProductAsset_Boost_TA*                      BoostAsset;                                       		// 0x02F8 (0x0008) [0x0000000000000000]               
	class UFXActorEvent_X*                             BoostShakeState;                                  		// 0x0300 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UProfileControlsSave_TA*                     ControlsSave;                                     		// 0x0308 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventBoostAmountChanged__Delegate;              		// 0x0310 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarComponent_Boost_TA");
		}

		return uClassPointer;
	};

	bool ShouldPredictBoostConsumption();
	void __CarComponent_Boost_TA__OnCreated_DE67D11E44672D48DA74D8ADF3889A1D(class UObject* Obj);
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void ReadReplicatedBoostAmount();
	void eventSetReplicatedBoostAmount();
	void ApplyForces(float ActiveTime);
	void PrePhysicsStep(float DeltaTime);
	void ClientGiveBoost(float Amount);
	void ConfirmBoostAmount();
	void SendConfirmBoostAmount();
	void ClientFixBoostAmount(float TimeStamp, float Amount);
	void ServerConfirmBoostAmount(float TimeStamp, float Amount);
	void SetRechargeGroundOnly(unsigned long bInGroundOnly);
	void SetRechargeDelay(float InRechargeDelay);
	void SetRechargeRate(float InRechargeRate);
	bool HasUnlimitedBoost();
	void SetNoBoost(unsigned long Enabled);
	void SetUnlimitedBoost(unsigned long Enabled);
	void SetUnlimitedBoostDelayed(unsigned long Enabled);
	void SetBoostModifier(float Modifier);
	void SetBoostAmount(float Amount);
	void GiveBoost(float Amount);
	void GiveStartingBoost();
	void GiveFullBoost();
	float GetPercentBoostFull();
	bool IsFull();
	void RemoveFromCar();
	bool CanDeactivate();
	bool CanActivate();
	void InitFX();
	void HandleBoostAsset(class UProductAsset_Boost_TA* Asset);
	void OnCreated();
	void eventReplicatedEvent(struct FName VarName);
	void EventBoostAmountChanged(class ACarComponent_Boost_TA* Boost);
};

// Class TAGame.CarComponent_Dodge_TA
// 0x0088 (0x02C0 - 0x0348)
class ACarComponent_Dodge_TA : public ACarComponent_TA
{
public:
	float                                              DodgeInputThreshold;                              		// 0x02C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SideDodgeImpulse;                                 		// 0x02C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SideDodgeImpulseMaxSpeedScale;                    		// 0x02C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ForwardDodgeImpulse;                              		// 0x02CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ForwardDodgeImpulseMaxSpeedScale;                 		// 0x02D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BackwardDodgeImpulse;                             		// 0x02D4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BackwardDodgeImpulseMaxSpeedScale;                		// 0x02D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SideDodgeTorque;                                  		// 0x02DC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ForwardDodgeTorque;                               		// 0x02E0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DodgeTorqueTime;                                  		// 0x02E4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinDodgeTorqueTime;                               		// 0x02E8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DodgeZDamping;                                    		// 0x02EC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DodgeZDampingDelay;                               		// 0x02F0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DodgeZDampingUpTime;                              		// 0x02F4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DodgeImpulseScale;                                		// 0x02F8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DodgeTorqueScale;                                 		// 0x02FC (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UFXActorEvent_X*                             JumpEvent;                                        		// 0x0300 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UFXActorEvent_X*                             DoubleJumpEvent;                                  		// 0x0308 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UFXActorEvent_X*                             DodgeEvent;                                       		// 0x0310 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     DodgeTorque;                                      		// 0x0318 (0x000C) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FVector                                     DodgeDirection;                                   		// 0x0324 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventActivateDodge__Delegate;                   		// 0x0330 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarComponent_Dodge_TA");
		}

		return uClassPointer;
	};

	void SetDodgeSettings();
	void PrePhysicsStep(float DeltaTime);
	void ApplyTorqueForces(float ActiveTime);
	void ApplyDodgeImpulse();
	struct FVector GetDodgeImpulse(struct FVector DodgeDir);
	void ApplyForces(float ActiveTime);
	bool CanActivate();
	void OnCreated();
	void EventActivateDodge(class ACarComponent_Dodge_TA* DodgeComponent);
};

// Class TAGame.CarComponent_DoubleJump_TA
// 0x0008 (0x02C0 - 0x02C8)
class ACarComponent_DoubleJump_TA : public ACarComponent_TA
{
public:
	float                                              JumpImpulse;                                      		// 0x02C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ImpulseScale;                                     		// 0x02C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarComponent_DoubleJump_TA");
		}

		return uClassPointer;
	};

	void PrePhysicsStep(float DeltaTime);
	void ApplyForces(float ActiveTime);
	void OnCreated();
};

// Class TAGame.CarComponent_DoubleJump_Robin_TA
// 0x0018 (0x02C8 - 0x02E0)
class ACarComponent_DoubleJump_Robin_TA : public ACarComponent_DoubleJump_TA
{
public:
	struct FWaveParams                                 RandomPitch;                                      		// 0x02C8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FWaveParams                                 RandomYaw;                                        		// 0x02D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FWaveParams                                 RandomRoll;                                       		// 0x02D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarComponent_DoubleJump_Robin_TA");
		}

		return uClassPointer;
	};

	void ApplyForces(float ActiveTime);
};

// Class TAGame.CarComponent_FlipCar_TA
// 0x0010 (0x02C0 - 0x02D0)
class ACarComponent_FlipCar_TA : public ACarComponent_TA
{
public:
	float                                              FlipCarImpulse;                                   		// 0x02C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FlipCarTorque;                                    		// 0x02C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FlipCarTime;                                      		// 0x02C8 (0x0004) [0x0000000000000021] (CPF_Edit | CPF_Net)
	unsigned long                                      bFlipRight : 1;                                   		// 0x02CC (0x0004) [0x0000000000002020] [0x00000001] (CPF_Net | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarComponent_FlipCar_TA");
		}

		return uClassPointer;
	};

	void InitFlip();
	void PrePhysicsStep(float DeltaTime);
	void ApplyForces(float ActiveTime);
	bool CanActivate();
	void OnCreated();
};

// Class TAGame.CarComponent_Jump_TA
// 0x0028 (0x02C0 - 0x02E8)
class ACarComponent_Jump_TA : public ACarComponent_TA
{
public:
	float                                              MinJumpTime;                                      		// 0x02C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              JumpImpulse;                                      		// 0x02C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              JumpForce;                                        		// 0x02C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              JumpForceTime;                                    		// 0x02CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PodiumJumpForceTime;                              		// 0x02D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              JumpImpulseSpeed;                                 		// 0x02D4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              JumpAccel;                                        		// 0x02D8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              MaxJumpHeight;                                    		// 0x02DC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              MaxJumpHeightTime;                                		// 0x02E0 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bDeactivate : 1;                                  		// 0x02E4 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarComponent_Jump_TA");
		}

		return uClassPointer;
	};

	void PrePhysicsStep(float DeltaTime);
	void ApplyForces(float ActiveTime);
	void CacheJumpData();
	void OnCreated();
};

// Class TAGame.CarComponent_Jump_Robin_TA
// 0x0018 (0x02E8 - 0x0300)
class ACarComponent_Jump_Robin_TA : public ACarComponent_Jump_TA
{
public:
	struct FWaveParams                                 RandomPitch;                                      		// 0x02E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FWaveParams                                 RandomYaw;                                        		// 0x02F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FWaveParams                                 RandomRoll;                                       		// 0x02F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarComponent_Jump_Robin_TA");
		}

		return uClassPointer;
	};

	void ApplyForces(float ActiveTime);
};

// Class TAGame.SpecialPickup_TA
// 0x0090 (0x02C0 - 0x0350)
class ASpecialPickup_TA : public ACarComponent_TA
{
public:
	struct FString                                     PickupName;                                       		// 0x02C0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long                                      bHudIgnoreUseTime : 1;                            		// 0x02D0 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bHasActivated : 1;                                		// 0x02D0 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bIsActive : 1;                                    		// 0x02D0 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	float                                              ActivationDuration;                               		// 0x02D4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_X*                                  PickupFXArchetype;                                		// 0x02D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FPickupReplacement>                  BodyReplacements;                                 		// 0x02E0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UShakeComponent_X*                           ShakeComponentArchetype;                          		// 0x02F0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UAkSoundCue*                                 ActivateSFX;                                      		// 0x02F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 LocalActivateSFX;                                 		// 0x0300 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_X*                                  PickupFX;                                         		// 0x0308 (0x0008) [0x0000000000000000]               
	class UShakeComponent_X*                           ShakeComp;                                        		// 0x0310 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	int                                                PickupSlot;                                       		// 0x0318 (0x0004) [0x0000000000000000]               
	int                                                CooldownSeconds;                                  		// 0x031C (0x0004) [0x0000000000000020] (CPF_Net)     
	struct FScriptDelegate                             __EventActivated__Delegate;                       		// 0x0320 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventDeactivated__Delegate;                     		// 0x0338 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_TA");
		}

		return uClassPointer;
	};

	bool DisableBallImpactForces();
	bool GetShouldHideActivateUI();
	bool HasActivated();
	class ARBActor_TA* GetClientTarget();
	void OnVehicleSetupComplete();
	void RemovePickupFX();
	void InitPickupFX();
	float GetActiveTimePercent();
	void PreActivatedTick(float DeltaTime);
	void PickupTick(float DeltaTime);
	void PickupEnd();
	void PickupStart();
	class ACarComponent_Boost_TA* GetBoostComponent();
	void UsePickupReleased();
	void DeactivatePickup();
	bool TryActivate(class ARBActor_TA* TargetOverride);
	void eventDestroyed();
	void HandleDemolish(class ACar_TA* InCar, struct FDemolishData Data);
	void OnCreated();
	bool CanPickup(class ACar_TA* InCar);
	class ASpecialPickup_TA* ApplyPickup(class ACar_TA* InCar);
	void eventRecordHit(class ARBActor_TA* HitActor, struct FVector Normal, unsigned char HitType);
	void EventDeactivated(class ACar_TA* InCar, class ASpecialPickup_TA* Pickup);
	void EventActivated(class ACar_TA* InCar, class ASpecialPickup_TA* Pickup);
};

// Class TAGame.SpecialPickup_BallGravity_TA
// 0x0098 (0x0350 - 0x03E8)
class ASpecialPickup_BallGravity_TA : public ASpecialPickup_TA
{
public:
	float                                              BallGravity;                                      		// 0x0350 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Range;                                            		// 0x0354 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     Offset;                                           		// 0x0358 (0x000C) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bDeactivateOnTouch : 1;                           		// 0x0364 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class UParticleSystem*                             BeamPSArchetype;                                  		// 0x0368 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       BeamPSParam;                                      		// 0x0370 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              RecordBallHitRate;                                		// 0x0378 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UMaterialInstanceConstant*                   BallMIC;                                          		// 0x0380 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       BallMICParam;                                     		// 0x0388 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_TA*                                 BallFXArchetype;                                  		// 0x0390 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           BallMICCurve;                                     		// 0x0398 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UAkSoundCue*                                 BallSFX;                                          		// 0x03B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              LastRecordedBallHitTime;                          		// 0x03B8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UParticleSystemComponent*                    BeamPSC;                                          		// 0x03C0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class AFXActor_TA*                                 BallFX;                                           		// 0x03C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStaticMeshComponent*                        CopiedBallMesh;                                   		// 0x03D0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UMaterialInstanceConstant*                   BMIC;                                             		// 0x03D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ABall_TA*                                    PrevBall;                                         		// 0x03E0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_BallGravity_TA");
		}

		return uClassPointer;
	};

	void HandleHitBall(class ACar_TA* InCar, class ABall_TA* Ball, struct FVector HitLocation, struct FVector HitNormal);
	void RemoveBallFX();
	void UpdateBallFX(class ABall_TA* Ball, struct FVector BallContactPos);
	void RemoveBeamFX();
	void UpdateBeamFX(class ABall_TA* Ball);
	class ABall_TA* GetBallInRange();
	void UpdateVisual();
	void PickupTick(float DeltaTime);
	void ApplyForces(float ActiveTime);
	void PickupEnd();
	void PickupStart();
};

// Class TAGame.SpecialPickup_HauntedBallBeam_TA
// 0x0040 (0x03E8 - 0x0428)
class ASpecialPickup_HauntedBallBeam_TA : public ASpecialPickup_BallGravity_TA
{
public:
	unsigned long                                      bIsPhasingBall : 1;                               		// 0x03E8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bIsInRange : 1;                                   		// 0x03E8 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bSFxLoopIsPlaying : 1;                            		// 0x03E8 (0x0004) [0x0000000000000000] [0x00000004] 
	class ABall_Haunted_TA*                            PrevHauntedBall;                                  		// 0x03F0 (0x0008) [0x0000000000000000]               
	int                                                MaxSimulatedClients;                              		// 0x03F8 (0x0004) [0x0000000000000000]               
	float                                              ArrivalDistance;                                  		// 0x03FC (0x0004) [0x0000000000000000]               
	struct FVector                                     CarAvoidenceOffset;                               		// 0x0400 (0x000C) [0x0000000000000000]               
	class UAkSoundCue*                                 BeamEndSFX;                                       		// 0x0410 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 ConnectedBeamLoopSFX;                             		// 0x0418 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 BeamLoopSFX;                                      		// 0x0420 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_HauntedBallBeam_TA");
		}

		return uClassPointer;
	};

	void RemoveBeamFX();
	void UpdateBeamFX(class ABall_TA* Ball);
	void RemovePhase();
	class ABall_TA* GetBallInRange();
	void PickupTick(float DeltaTime);
	void PickupEnd();
	void PickupStart();
	void ApplyForces(float ActiveTime);
};

// Class TAGame.SpecialPickup_Targeted_TA
// 0x0038 (0x0350 - 0x0388)
class ASpecialPickup_Targeted_TA : public ASpecialPickup_TA
{
public:
	unsigned long                                      bCanTargetBall : 1;                               		// 0x0350 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bCanTargetCars : 1;                               		// 0x0350 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bCanTargetEnemyCars : 1;                          		// 0x0350 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	unsigned long                                      bCanTargetTeamCars : 1;                           		// 0x0350 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	unsigned long                                      bUseDirectionalTargeting : 1;                     		// 0x0350 (0x0004) [0x0000000000000001] [0x00000010] (CPF_Edit)
	unsigned long                                      bRequireTrace : 1;                                		// 0x0350 (0x0004) [0x0000000000000001] [0x00000020] (CPF_Edit)
	float                                              Range;                                            		// 0x0354 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DirectionalTargetingAccuracy;                     		// 0x0358 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class ARBActor_TA*                                 ClientTarget;                                     		// 0x0360 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ARBActor_TA*                                 Targeted;                                         		// 0x0368 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FScriptDelegate                             __EventNewTarget__Delegate;                       		// 0x0370 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_Targeted_TA");
		}

		return uClassPointer;
	};

	class ARBActor_TA* GetClientTarget();
	void TargetChanged();
	void OnTargetChanged();
	void PreActivatedTick(float DeltaTime);
	bool TryActivate(class ARBActor_TA* TargetOverride);
	bool ValidateTargetTrace(class ARBActor_TA* InTarget);
	bool ValidateTarget(class ARBActor_TA* InTarget);
	class ARBActor_TA* GetTarget();
	void eventReplicatedEvent(struct FName VarName);
	void EventNewTarget();
};

// Class TAGame.SpecialPickup_BallFreeze_TA
// 0x0098 (0x0388 - 0x0420)
class ASpecialPickup_BallFreeze_TA : public ASpecialPickup_Targeted_TA
{
public:
	class AFXActor_X*                                  FreezeBreakFXArchetype;                           		// 0x0388 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_X*                                  FreezeFXArchetype;                                		// 0x0390 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMaterialInstanceConstant*                   FreezeMIC;                                        		// 0x0398 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       FreezeMaterialParam;                              		// 0x03A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           FreezeInterpTime;                                 		// 0x03A8 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long                                      bMaintainMomentum : 1;                            		// 0x03C0 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bTouched : 1;                                     		// 0x03C0 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	float                                              TimeToStop;                                       		// 0x03C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              StopMomentumPercentage;                           		// 0x03C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 FreezeSFX;                                        		// 0x03D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 BreakSFX;                                         		// 0x03D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UStaticMeshComponent*                        CopiedBallMesh;                                   		// 0x03E0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class ABall_TA*                                    Ball;                                             		// 0x03E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     OrigLinearVelocity;                               		// 0x03F0 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     OrigAngularVelocity;                              		// 0x03FC (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              OrigSpeed;                                        		// 0x0408 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              RepOrigSpeed;                                     		// 0x040C (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UMaterialInstanceConstant*                   FreezeMat;                                        		// 0x0410 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AFXActor_X*                                  FreezeFX;                                         		// 0x0418 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_BallFreeze_TA");
		}

		return uClassPointer;
	};

	void PickupEnd();
	void SpawnBreakFX();
	void HandleBallExploded(class ABall_TA* InBall);
	void HandleBallHit(class ABall_TA* InBall, class ACar_TA* InCar, unsigned char HitType);
	void RemovePickupFX();
	void TickPickupFX(float DeltaTime);
	void ApplyForces(float ActiveTime);
	void PickupTick(float DeltaTime);
	void InitPickupFX();
	void OnTargetChanged();
	void PickupStart();
};

// Class TAGame.SpecialPickup_GrapplingHook_TA
// 0x0108 (0x0388 - 0x0490)
class ASpecialPickup_GrapplingHook_TA : public ASpecialPickup_Targeted_TA
{
public:
	float                                              Impulse;                                          		// 0x0388 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Force;                                            		// 0x038C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxRopeLength;                                    		// 0x0390 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PredictionSpeed;                                  		// 0x0394 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bDeactivateOnTouch : 1;                           		// 0x0398 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bInstant : 1;                                     		// 0x0398 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bBlocked : 1;                                     		// 0x0398 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	unsigned long                                      bAttachedToBall : 1;                              		// 0x0398 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	struct FInterpCurveFloat                           RopeLengthCurve;                                  		// 0x03A0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UStaticMesh*                                 RopeMesh;                                         		// 0x03B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     RopeMeshScale;                                    		// 0x03C0 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              RopeMeshInitialSize;                              		// 0x03CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    RopeRotationOffset;                               		// 0x03D0 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       RopeMeshSlackParam;                               		// 0x03DC (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       RopeMeshGravityParam;                             		// 0x03E4 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class USkeletalMesh*                               HookMesh;                                         		// 0x03F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     HookMeshScale;                                    		// 0x03F8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     HookMeshOffset;                                   		// 0x0404 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    HookRotationOffset;                               		// 0x0410 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              HitDistanceOffset;                                		// 0x041C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AfterAttachDuration;                              		// 0x0420 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UAnimSet*                                    HookAnimSet;                                      		// 0x0428 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       HookClosedAnim;                                   		// 0x0430 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       HookOpenAnim;                                     		// 0x0438 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              BlockedRequiredMoveDistance;                      		// 0x0440 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BlockedRequiredMoveTime;                          		// 0x0444 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BlockedStartTime;                                 		// 0x0448 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     BlockedStartPos;                                  		// 0x044C (0x000C) [0x0000000000002000] (CPF_Transient)
	class UStaticMeshComponent_TA*                     RMC;                                              		// 0x0458 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UMaterialInstance*                           RMI;                                              		// 0x0460 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USkeletalMeshComponent_TA*                   HMC;                                              		// 0x0468 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class ABall_TA*                                    Ball;                                             		// 0x0470 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     RopeOrigin;                                       		// 0x0478 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              RopeToTime;                                       		// 0x0484 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentRopeLength;                                		// 0x0488 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              AttachTime;                                       		// 0x048C (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_GrapplingHook_TA");
		}

		return uClassPointer;
	};

	void HandleBallExploded(class ABall_TA* InBall);
	void PickupEnd();
	void ScaleMeshToLocation(struct FVector NewLocation, struct FVector TargetLocation);
	struct FVector GetPredictedBallLocation(class ABall_TA* InBall);
	struct FVector GetTargetedLocation();
	void HandleCollision(class ARBActor_TA* RB, struct FAccumulatedRigidBodyCollision Collision);
	void UpdateVisual(float DeltaTime);
	void PickupTick(float DeltaTime);
	void ApplyForces(float ActiveTime);
	void DoAttach();
	void RemovePickupFX();
	void InitPickupFX();
	void PickupStart();
};

// Class TAGame.SpecialPickup_Spring_TA
// 0x01A8 (0x0388 - 0x0530)
class ASpecialPickup_Spring_TA : public ASpecialPickup_Targeted_TA
{
public:
	float                                              Force;                                            		// 0x0388 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              VerticalForce;                                    		// 0x038C (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     Torque;                                           		// 0x0390 (0x000C) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bApplyRelativeForce : 1;                          		// 0x039C (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bApplyConstantForce : 1;                          		// 0x039C (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bBreakConstantForceWithHit : 1;                   		// 0x039C (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	unsigned long                                      bApplyRelativeConstantForce : 1;                  		// 0x039C (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	unsigned long                                      bInstant : 1;                                     		// 0x039C (0x0004) [0x0000000000000001] [0x00000010] (CPF_Edit)
	unsigned long                                      bFollowAfterHit : 1;                              		// 0x039C (0x0004) [0x0000000000000001] [0x00000020] (CPF_Edit)
	unsigned long                                      bSpringed : 1;                                    		// 0x039C (0x0004) [0x0000000000000000] [0x00000040] 
	struct FInterpCurveFloat                           RelativeForceCurve;                               		// 0x03A0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              RelativeForceNormalDirection;                     		// 0x03B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxSpringLength;                                  		// 0x03BC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ConstantForce;                                    		// 0x03C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           RelativeConstantForceCurve;                       		// 0x03C8 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           SpringLengthCurve;                                		// 0x03E0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FVector                                     FromOffset;                                       		// 0x03F8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	class UStaticMesh*                                 SpringMesh;                                       		// 0x0408 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     SpringMeshScale;                                  		// 0x0410 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              SpringMeshInitialSize;                            		// 0x041C (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    SpringRotationOffset;                             		// 0x0420 (0x000C) [0x0000000000000001] (CPF_Edit)    
	class UStaticMesh*                                 HittingMesh;                                      		// 0x0430 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     HittingMeshScale;                                 		// 0x0438 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     HittingMeshOffset;                                		// 0x0444 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    HittingRotationOffset;                            		// 0x0450 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              HitDistanceOffset;                                		// 0x045C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AfterSpringDuration;                              		// 0x0460 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      BallHitType;                                      		// 0x0464 (0x0001) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           AfterHitLengthCurve;                              		// 0x0468 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class AFXActor_TA*                                 HitFXArchetype;                                   		// 0x0480 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_TA*                                 ShootFXArchetype;                                 		// 0x0488 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 HitSFX;                                           		// 0x0490 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       FadeOutParam;                                     		// 0x0498 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           FadeOutCurve;                                     		// 0x04A0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              MinSpringLength;                                  		// 0x04B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              WeldedForceScalar;                                		// 0x04BC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              WeldedVerticalForce;                              		// 0x04C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CurrentSpringLength;                              		// 0x04C4 (0x0004) [0x0000000000000000]               
	float                                              SpringedTime;                                     		// 0x04C8 (0x0004) [0x0000000000000000]               
	class UStaticMeshComponent_TA*                     SMC;                                              		// 0x04D0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UMaterialInstance*                           SMI;                                              		// 0x04D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStaticMeshComponent_TA*                     HMC;                                              		// 0x04E0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	TArray<class UMaterialInstance*>                   HMI;                                              		// 0x04E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              AfterSpringTime;                                  		// 0x04F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              SpringToTime;                                     		// 0x04FC (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     SpringOrigin;                                     		// 0x0500 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     SpringedLocation;                                 		// 0x050C (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     SpringedNormal;                                   		// 0x0518 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              SpringedLength;                                   		// 0x0524 (0x0004) [0x0000000000002000] (CPF_Transient)
	class AFXActor_TA*                                 ShootFX;                                          		// 0x0528 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_Spring_TA");
		}

		return uClassPointer;
	};

	void PickupEnd();
	void HandleCarTouchedBall(class ABall_TA* Ball, class ACar_TA* OtherCar, unsigned char HitType);
	void ScaleSpringMeshToLocation(struct FVector NewLocation, struct FVector TargetLoction);
	void UpdateVisual(float DeltaTime);
	void PickupTick(float DeltaTime);
	void eventUpdateCarTouchedEvent();
	void ApplyForces(float ActiveTime);
	struct FVector GetRelativeConstantForce(struct FVector Direction);
	struct FVector GetRelativeImpulse(struct FVector Direction);
	void SpawnHitFX();
	void DoSpring(unsigned long bFirstHit);
	void RemovePickupFX();
	void InitPickupFX();
	void PickupStart();
};

// Class TAGame.SpecialPickup_BallLasso_TA
// 0x0008 (0x0530 - 0x0538)
class ASpecialPickup_BallLasso_TA : public ASpecialPickup_Spring_TA
{
public:
	struct FName                                       SpringMeshSlackParam;                             		// 0x0530 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_BallLasso_TA");
		}

		return uClassPointer;
	};

	void ScaleSpringMeshToLocation(struct FVector NewLocation, struct FVector TargetLocation);
	void DoSpring(unsigned long bFirstHit);
};

// Class TAGame.SpecialPickup_Tornado_TA
// 0x0168 (0x0350 - 0x04B8)
class ASpecialPickup_Tornado_TA : public ASpecialPickup_TA
{
public:
	float                                              Height;                                           		// 0x0350 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Radius;                                           		// 0x0354 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     Offset;                                           		// 0x0358 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           VerticalForceCurve;                               		// 0x0368 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              RotationalForce;                                  		// 0x0380 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           CentripetalForceCurve;                            		// 0x0388 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           CarDirectionForceCurve;                           		// 0x03A0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              Torque;                                           		// 0x03B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     FXScale;                                          		// 0x03BC (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     FXOffset;                                         		// 0x03C8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	class UStaticMesh*                                 TornadoMesh;                                      		// 0x03D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     MeshOffset;                                       		// 0x03E0 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     MeshScale;                                        		// 0x03EC (0x000C) [0x0000000000000001] (CPF_Edit)    
	class UMaterialInstanceConstant*                   TornadoMIC0;                                      		// 0x03F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMaterialInstanceConstant*                   TornadoMIC1;                                      		// 0x0400 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMaterialInstanceConstant*                   TornadoMIC2;                                      		// 0x0408 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMaterialInstanceConstant*                   TornadoMIC3;                                      		// 0x0410 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMaterialInstanceConstant*                   TornadoMIC4;                                      		// 0x0418 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMaterialInstanceConstant*                   TornadoMIC5;                                      		// 0x0420 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           OpacityCurve;                                     		// 0x0428 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              MaxVelocityOffset;                                		// 0x0440 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BallMultiplier;                                   		// 0x0444 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bDebugVis : 1;                                    		// 0x0448 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	float                                              VelocityEase;                                     		// 0x044C (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 BallSFX;                                          		// 0x0450 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 CarSFX;                                           		// 0x0458 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UStaticMeshComponent*                        SMC;                                              		// 0x0460 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UMaterialInstanceConstant*                   MIC0;                                             		// 0x0468 (0x0008) [0x0000000000000000]               
	class UMaterialInstanceConstant*                   MIC1;                                             		// 0x0470 (0x0008) [0x0000000000000000]               
	class UMaterialInstanceConstant*                   MIC2;                                             		// 0x0478 (0x0008) [0x0000000000000000]               
	class UMaterialInstanceConstant*                   MIC3;                                             		// 0x0480 (0x0008) [0x0000000000000000]               
	class UMaterialInstanceConstant*                   MIC4;                                             		// 0x0488 (0x0008) [0x0000000000000000]               
	class UMaterialInstanceConstant*                   MIC5;                                             		// 0x0490 (0x0008) [0x0000000000000000]               
	struct FVector                                     Vel;                                              		// 0x0498 (0x000C) [0x0000000000002000] (CPF_Transient)
	TArray<class ARBActor_TA*>                         Affecting;                                        		// 0x04A8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_Tornado_TA");
		}

		return uClassPointer;
	};

	void ApplyForces(float ActiveTime);
	void RemovePickupFX();
	void PlayCarSFX(class ARBActor_TA* InActor);
	void PlayBallSFX(class ARBActor_TA* InActor);
	void TickPickupFX(float DeltaTime);
	void PickupTick(float DeltaTime);
	void InitPickupFX();
};

// Class TAGame.CertifiedStat_TA
// 0x0018 (0x0060 - 0x0078)
class UCertifiedStat_TA : public UObject
{
public:
	class UClass*                                      StatClass;                                        		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<int>                                        RankThresholds;                                   		// 0x0068 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CertifiedStat_TA");
		}

		return uClassPointer;
	};

	struct FString GetRankLabel(int StatValue);
	int GetRank(int StatValue);
	struct FString GetDescription();
	int GetID();
};

// Class TAGame.CertifiedStatDatabase_TA
// 0x0064 (0x0060 - 0x00C4)
class UCertifiedStatDatabase_TA : public UObject
{
public:
	TArray<class UCertifiedStat_TA*>                   Stats;                                            		// 0x0060 (0x0010) [0x0000000000420003] (CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink)
	struct FMap_Mirror                                 StatNameToStatID;                                 		// 0x0070 (0x0050) [0x0000000000001002] (CPF_Const | CPF_Native)
	unsigned long                                      bClickToRebuild : 1;                              		// 0x00C0 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CertifiedStatDatabase_TA");
		}

		return uClassPointer;
	};

	class UCertifiedStat_TA* GetStatByName(struct FName StatName);
	class UCertifiedStat_TA* GetStat(int Id);
	struct FName GetStatName(int StatId);
	int GetStatId(struct FName StatName);
};

// Class TAGame.ClientInputData_TA
// 0x0024 (0x0060 - 0x0084)
class UClientInputData_TA : public UObject
{
public:
	class APlayerController_TA*                        PC;                                               		// 0x0060 (0x0008) [0x0000000000000000]               
	TArray<struct FClientFrameData>                    InputFrames;                                      		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              LastPacketTimestamp;                              		// 0x0078 (0x0004) [0x0000000000000000]               
	int                                                LastProcessedFrame;                               		// 0x007C (0x0004) [0x0000000000000000]               
	int                                                LastProcessedReceivedFrame;                       		// 0x0080 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ClientInputData_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ClientJitterBuffer_TA
// 0x001C (0x0060 - 0x007C)
class UClientJitterBuffer_TA : public UObject
{
public:
	class UNetworkJitterSettings_TA*                   JitterSettings;                                   		// 0x0060 (0x0008) [0x0000000000000000]               
	float                                              LastPacketTime;                                   		// 0x0068 (0x0004) [0x0000000000000000]               
	float                                              PacketTimeMu;                                     		// 0x006C (0x0004) [0x0000000000000000]               
	float                                              PacketTimeVariance;                               		// 0x0070 (0x0004) [0x0000000000000000]               
	float                                              BufferTime;                                       		// 0x0074 (0x0004) [0x0000000000000000]               
	int                                                BufferSize;                                       		// 0x0078 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ClientJitterBuffer_TA");
		}

		return uClassPointer;
	};

	void Reset();
	void UpdateBufferSize();
	void ReceivedPacket();
};

// Class TAGame.CollisionTestComponent_TA
// 0x004F (0x009D - 0x00EC)
class UCollisionTestComponent_TA : public UActorComponent
{
public:
	class AActor*                                      LineStart;                                        		// 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      LineEnd;                                          		// 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      ArchetypeToSpawn;                                 		// 0x00B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     CachedCenter;                                     		// 0x00B8 (0x000C) [0x0000000000000002] (CPF_Const)   
	struct FVector                                     CachedStart;                                      		// 0x00C4 (0x000C) [0x0000000000000002] (CPF_Const)   
	struct FVector                                     CachedEnd;                                        		// 0x00D0 (0x000C) [0x0000000000000002] (CPF_Const)   
	float                                              Speed;                                            		// 0x00DC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Step;                                             		// 0x00E0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Time;                                             		// 0x00E4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bEnabled : 1;                                     		// 0x00E8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CollisionTestComponent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ContentConfig_TA
// 0x0000 (0x0088 - 0x0088)
class UContentConfig_TA : public UContentConfig_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ContentConfig_TA");
		}

		return uClassPointer;
	};

	void Apply();
	void UpdateAvailableContent();
};

// Class TAGame.CrowdActorSettings_TA
// 0x0118 (0x0060 - 0x0178)
class UCrowdActorSettings_TA : public UObject
{
public:
	float                                              NoiseRiseRate;                                    		// 0x0060 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              NoiseFallRate;                                    		// 0x0064 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FRandomRange                                IdleNoise;                                        		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FRandomRange                                IdleNoiseDuration;                                		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UCrowdNoiseModifier_TA*                      CountdownStartNoise;                              		// 0x0078 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class UCrowdNoiseModifier_TA*                      CountdownEndNoise;                                		// 0x0080 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class UCrowdNoiseModifier_TA*                      OvertimeStartNoise;                               		// 0x0088 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class UCrowdNoiseModifier_TA*                      TimeAlmostOutNoise;                               		// 0x0090 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	TArray<struct FStatCrowdNoise>                     StatNoises;                                       		// 0x0098 (0x0010) [0x0000000000400041] (CPF_Edit | CPF_EditConstArray | CPF_NeedCtorLink)
	class UAkSoundCue*                                 RandomChantsSound;                                		// 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FRandomRange                                RandomChantsDelay;                                		// 0x00B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      UpdateStatNoises : 1;                             		// 0x00B8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	struct FInterpCurveFloat                           BallGoalDistanceNoiseCurve;                       		// 0x00C0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FVector                                     GoalDotDirection;                                 		// 0x00D8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              MinGoalDotAngle;                                  		// 0x00E4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FBallHitCrowdNoise>                  BallHitNoises;                                    		// 0x00E8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              BallHitNoiseDelay;                                		// 0x00F8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<class UAkSoundCue*>                         CountDownSoundList;                               		// 0x0100 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class UAkSoundCue*>                         RoundCountDownSoundList;                          		// 0x0110 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UAkSoundCue*                                 OneMinRemaining;                                  		// 0x0120 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 ThirtySecondsRemaining;                           		// 0x0128 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 CrowdStingerWin;                                  		// 0x0130 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 CrowdStingerLose;                                 		// 0x0138 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 CrowdStingerForfeit;                              		// 0x0140 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 CrowdStartOverTimeSound;                          		// 0x0148 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 MatchEndedEncore;                                 		// 0x0150 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              MatchEndedEncoreDelay;                            		// 0x0158 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FCrowdDefenseSettings                       DefenseChant;                                     		// 0x0160 (0x0018) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CrowdActorSettings_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.CrowdNoiseModifier_TA
// 0x0018 (0x0060 - 0x0078)
class UCrowdNoiseModifier_TA : public UObject
{
public:
	float                                              ValueMin;                                         		// 0x0060 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ValueMax;                                         		// 0x0064 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DurationMin;                                      		// 0x0068 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DurationMax;                                      		// 0x006C (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 OneShotSound;                                     		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CrowdNoiseModifier_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.DataAsset_ESportsTeam_TA
// 0x0010 (0x0060 - 0x0070)
class UDataAsset_ESportsTeam_TA : public UObject
{
public:
	int                                                TeamID;                                           		// 0x0060 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UProductAssetReference_TA*                   ESportsTeamReference;                             		// 0x0068 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DataAsset_ESportsTeam_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.DataAssetDatabase_TA
// 0x006C (0x0060 - 0x00CC)
class UDataAssetDatabase_TA : public UObject
{
public:
	class UClass*                                      DataAssetClass;                                   		// 0x0060 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	TArray<class UObject*>                             DataAssets;                                       		// 0x0068 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FMap_Mirror                                 NameToId;                                         		// 0x0078 (0x0050) [0x0000000000001002] (CPF_Const | CPF_Native)
	unsigned long                                      bClickToRebuild : 1;                              		// 0x00C8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DataAssetDatabase_TA");
		}

		return uClassPointer;
	};

	class UObject* GetAssetFromName(class UClass* ObjClass, struct FName DataAssetName);
	class UObject* GetAssetFromID(class UClass* ObjClass, int DataAssetID);
	struct FName GetName(int DataAssetID);
	int GetID(struct FName DataAssetName);
};

// Class TAGame.DataAssetDatabase_ESportsTeam_TA
// 0x0004 (0x00CC - 0x00D0)
class UDataAssetDatabase_ESportsTeam_TA : public UDataAssetDatabase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DataAssetDatabase_ESportsTeam_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.DecalComponent_Constrained_TA
// 0x0008 (0x03E0 - 0x03E8)
class UDecalComponent_Constrained_TA : public UDecalComponent
{
public:
	float                                              WorldZ;                                           		// 0x03E0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bAttachedRotation : 1;                            		// 0x03E4 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DecalComponent_Constrained_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.DistributionFloatSpeed_TA
// 0x0014 (0x00A1 - 0x00B5)
class UDistributionFloatSpeed_TA : public UDistributionFloatParameterBase
{
public:
	struct FVector                                     VelocityScale;                                    		// 0x00A8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      VelocitySpace;                                    		// 0x00B4 (0x0001) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DistributionFloatSpeed_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.DistributionFloatSteer_TA
// 0x0007 (0x00A1 - 0x00A8)
class UDistributionFloatSteer_TA : public UDistributionFloatParameterBase
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DistributionFloatSteer_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.DLCPack_TA
// 0x0080 (0x0060 - 0x00E0)
class UDLCPack_TA : public UObject
{
public:
	TArray<unsigned char>                              UnlockedPlatforms;                                		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<unsigned char>                              DiscUnlockedPlatforms;                            		// 0x0070 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UProductSlot_TA*                             LabelSlot;                                        		// 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                SteamID;                                          		// 0x0088 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FString                                     PS4ID;                                            		// 0x0090 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     XboxOneID;                                        		// 0x00A0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     SwitchID;                                         		// 0x00B0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     EpicId;                                           		// 0x00C0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class UProduct_TA*>                         Products;                                         		// 0x00D0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DLCPack_TA");
		}

		return uClassPointer;
	};

	struct FString GetDLCID(unsigned char InOnlinePlatform);
	int GetDLCLabelSlotProductID(int SubIdx);
};

// Class TAGame.EngineAudioBaseComponent_TA
// 0x005C (0x00A4 - 0x0100)
class UEngineAudioBaseComponent_TA : public UActorComponent_X
{
public:
	class UAkPlaySoundComponent*                       EngineAudio;                                      		// 0x00A8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UAkPlaySoundComponent*                       ExhaustAudio;                                     		// 0x00B0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UEngineAudioBlowoffComponent_TA*             BlowoffComponent;                                 		// 0x00B8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UWheelSpeedComponent_TA*                     WheelSpeed;                                       		// 0x00C0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UThrottleStateComponent_TA*                  ThrottleComponent;                                		// 0x00C8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UAkSoundCue*                                 GearChangeSound;                                  		// 0x00D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMaxActorsGroup_TA*                          MaxActorsGroup;                                   		// 0x00D8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class AVehicle_TA*                                 Car;                                              		// 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __GetNormalizedRpmDelegate__Delegate;             		// 0x00E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioBaseComponent_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void eventGearChanged();
	void HandleSplitScreenTypeChanged(class UGameViewportClient_TA* ViewportClient);
	void HandleDisabled();
	void HandleEnabled();
	void InitFromAsset(class UProductAsset_EngineAudio_TA* EngineAsset);
	void eventDetached();
	void eventAttached();
	float GetNormalizedRpmDelegate();
};

// Class TAGame.EngineAudioComponent_TA
// 0x0020 (0x0100 - 0x0120)
class UEngineAudioComponent_TA : public UEngineAudioBaseComponent_TA
{
public:
	class UEngineAudioProfile_TA*                      Profile;                                          		// 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FCarStateData                               OldCarState;                                      		// 0x0108 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FPointer                                    NativeState;                                      		// 0x0118 (0x0008) [0x0000000000003002] (CPF_Const | CPF_Native | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioComponent_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	float GetNormalizedRpm();
	struct FName GetNativeStateName();
	void DestroyNativeState();
	void HandleDisabled();
	void InitFromAsset(class UProductAsset_EngineAudio_TA* EngineAsset);
};

// Class TAGame.EngineAudioREVComponent_TA
// 0x00A0 (0x0100 - 0x01A0)
class UEngineAudioREVComponent_TA : public UEngineAudioBaseComponent_TA
{
public:
	class UEngineAudioProfileREV_TA*                   Profile;                                          		// 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkRevPhysicsSimulation*                     PhysicsSim;                                       		// 0x0108 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UEngineAudioRevSimLimiter_TA*                RevLimiter;                                       		// 0x0110 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UEngineAudioRevSimReverse_TA*                Reverse;                                          		// 0x0118 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UEngineAudioRevSimVelocitySync_TA*           VelocitySync;                                     		// 0x0120 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UEngineAudioRevSimBoost_TA*                  Boost;                                            		// 0x0128 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UEngineAudioRevSimBoostLevel_TA*             BoostLevel;                                       		// 0x0130 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UEngineAudioRevSimResistance_TA*             Resistance;                                       		// 0x0138 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UEngineAudioRevSimGearManager_TA*            GearManager;                                      		// 0x0140 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FAkRevSimFrame                              SimFrame;                                         		// 0x0148 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FAkRevSimUpdateParams                       CachedUpdateParams;                               		// 0x0158 (0x0048) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioREVComponent_TA");
		}

		return uClassPointer;
	};

	float __EngineAudioREVComponent_TA__InitFromAsset_DB266C214355FFF697CB2BB0BA6BF6FC();
	void __EngineAudioREVComponent_TA__InitFromAsset_AD1DCF3246810007B41437A84B8ECD5B(class UAkRevPhysicsSimulation* S);
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void InitFromAsset(class UProductAsset_EngineAudio_TA* EngineAsset);
};

// Class TAGame.EngineAudioBlowoffComponent_TA
// 0x0020 (0x00A4 - 0x00C4)
class UEngineAudioBlowoffComponent_TA : public UActorComponent_X
{
public:
	class UAkSoundCue*                                 BlowoffSound;                                     		// 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              BlowoffThrottleTime;                              		// 0x00B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AVehicle_TA*                                 Car;                                              		// 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              FullThrottleTime;                                 		// 0x00C0 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioBlowoffComponent_TA");
		}

		return uClassPointer;
	};

	void eventAttached();
};

// Class TAGame.EngineAudioPreviewBase_TA
// 0x0024 (0x0060 - 0x0084)
class UEngineAudioPreviewBase_TA : public UObject
{
public:
	float                                              StartDelay;                                       		// 0x0060 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AccelerateDelay;                                  		// 0x0064 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AccelerateLength;                                 		// 0x0068 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              IdleLength;                                       		// 0x006C (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UProductAsset_EngineAudio_TA*                EngineAsset;                                      		// 0x0070 (0x0008) [0x0000000000000000]               
	class UAkParamGroup*                               Ak;                                               		// 0x0078 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	float                                              Throttle;                                         		// 0x0080 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioPreviewBase_TA");
		}

		return uClassPointer;
	};

	void GotoPreviewState();
	void eventGearChanged(int GearNum);
	void Update(float DeltaTime);
	void StartAccelerating();
	void StopAccelerating();
	void StopPreview();
	void StartPreview();
	void Init(class UProductAsset_EngineAudio_TA* InAsset, class UAkParamGroup* InAkParams);
};

// Class TAGame.EngineAudioPreview_TA
// 0x0044 (0x0084 - 0x00C8)
class UEngineAudioPreview_TA : public UEngineAudioPreviewBase_TA
{
public:
	class UEngineAudioProfile_TA*                      Profile;                                          		// 0x0088 (0x0008) [0x0000000000000000]               
	struct FPointer                                    NativeState;                                      		// 0x0090 (0x0008) [0x0000000000001002] (CPF_Const | CPF_Native)
	struct FInterpCurveFloat                           GearToWheelSpeedAccel;                            		// 0x0098 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              PreviewSpeed;                                     		// 0x00B0 (0x0004) [0x0000000000000000]               
	float                                              MaxPreviewSpeed;                                  		// 0x00B4 (0x0004) [0x0000000000000000]               
	float                                              WheelSpeedToPreviewSpeed;                         		// 0x00B8 (0x0004) [0x0000000000000000]               
	float                                              BrakeFactor;                                      		// 0x00BC (0x0004) [0x0000000000000000]               
	struct FName                                       IsLocalRTPC;                                      		// 0x00C0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioPreview_TA");
		}

		return uClassPointer;
	};

	void eventGearChanged(int GearNum);
	void DestroyNativeState();
	void UpdateNativeState(float DeltaTime);
	void Init(class UProductAsset_EngineAudio_TA* InAsset, class UAkParamGroup* InAkParams);
};

// Class TAGame.EngineAudioProfileBase_TA
// 0x0010 (0x0060 - 0x0070)
class UEngineAudioProfileBase_TA : public UObject
{
public:
	float                                              BlowoffThrottleTime;                              		// 0x0060 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              WheelForwardSpeedInterpRate;                      		// 0x0064 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              WheelSideSpeedInterpRate;                         		// 0x0068 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxWheelSpeed;                                    		// 0x006C (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioProfileBase_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.EngineAudioProfile_TA
// 0x0050 (0x0070 - 0x00C0)
class UEngineAudioProfile_TA : public UEngineAudioProfileBase_TA
{
public:
	TArray<struct FAudioGear>                          Gears;                                            		// 0x0070 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              GearSwitchTime;                                   		// 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RPMAccelStart;                                    		// 0x0084 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RPMAccelEnd;                                      		// 0x0088 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RPMAccelClutched;                                 		// 0x008C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RPMDecelClutched;                                 		// 0x0090 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RPMMaxClutched;                                   		// 0x0094 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RPMAccelFactor;                                   		// 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RPMDecelFactor;                                   		// 0x009C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RPMAccelBoostStart;                               		// 0x00A0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RPMAccelBoostEnd;                                 		// 0x00A4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RPMShiftUpBoost;                                  		// 0x00A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RPMMaxLoad;                                       		// 0x00AC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              EngineLoadSmoothFactor;                           		// 0x00B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AirMaxThrottleTime;                               		// 0x00B4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RevLimitRPM;                                      		// 0x00B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RevLimitRPMDecel;                                 		// 0x00BC (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioProfile_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.EngineAudioProfileREV_TA
// 0x0030 (0x0070 - 0x00A0)
class UEngineAudioProfileREV_TA : public UEngineAudioProfileBase_TA
{
public:
	struct FAkRevSimPhysicsControls                    Controls;                                         		// 0x0070 (0x0020) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UAkRevPhysicsSimulation*                     PhysicsSim;                                       		// 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UEngineAudioRevSimLimiter_TA*                RevLimiter;                                       		// 0x0098 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioProfileREV_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.EngineAudioRevSimBoost_TA
// 0x0010 (0x0070 - 0x0080)
class UEngineAudioRevSimBoost_TA : public UComponent
{
public:
	float                                              InterpTime;                                       		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              InterpScale;                                      		// 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              InterpExp;                                        		// 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ActiveTime;                                       		// 0x007C (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioRevSimBoost_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.EngineAudioRevSimBoostLevel_TA
// 0x0020 (0x0070 - 0x0090)
class UEngineAudioRevSimBoostLevel_TA : public UComponent
{
public:
	float                                              ActivatedInterpTime;                              		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              InactiveInterpTime;                               		// 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              InterpExp;                                        		// 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ActivatedSpeedSq;                                 		// 0x007C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              InterpTime;                                       		// 0x0080 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              InterpValue;                                      		// 0x0084 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              InterpTimeElapsed;                                		// 0x0088 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TargetValue;                                      		// 0x008C (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioRevSimBoostLevel_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
};

// Class TAGame.EngineAudioRevSimGearManager_TA
// 0x0014 (0x0070 - 0x0084)
class UEngineAudioRevSimGearManager_TA : public UComponent
{
public:
	int                                                RealGear;                                         		// 0x0070 (0x0004) [0x0000000000000000]               
	int                                                FakeGear;                                         		// 0x0074 (0x0004) [0x0000000000000000]               
	unsigned long                                      bPendingSilentDownShift : 1;                      		// 0x0078 (0x0004) [0x0000000000000000] [0x00000001] 
	float                                              TimeRemaining;                                    		// 0x007C (0x0004) [0x0000000000000000]               
	float                                              SilentDownShiftDelay;                             		// 0x0080 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioRevSimGearManager_TA");
		}

		return uClassPointer;
	};

	void TickGear(float DeltaTime, struct FAkRevSimFrame& SimFrame, struct FAkRevSimUpdateParams& SimUpdate);
};

// Class TAGame.EngineAudioRevSimLimiter_TA
// 0x0018 (0x0070 - 0x0088)
class UEngineAudioRevSimLimiter_TA : public UComponent
{
public:
	float                                              LimitTime;                                        		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SideSpeedThresh;                                  		// 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DecelScale;                                       		// 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AirMaxThrottleTime;                               		// 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TimeRemaining;                                    		// 0x0080 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimeActiveInAir;                                  		// 0x0084 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioRevSimLimiter_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
};

// Class TAGame.EngineAudioRevSimResistance_TA
// 0x002C (0x0070 - 0x009C)
class UEngineAudioRevSimResistance_TA : public UComponent
{
public:
	float                                              Clutched;                                         		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ZScale;                                           		// 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           SideSpeedCurve;                                   		// 0x0078 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              SideFriction;                                     		// 0x0090 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ZFriction;                                        		// 0x0094 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              SideAngle;                                        		// 0x0098 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioRevSimResistance_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
};

// Class TAGame.EngineAudioRevSimReverse_TA
// 0x0004 (0x0070 - 0x0074)
class UEngineAudioRevSimReverse_TA : public UComponent
{
public:
	float                                              ReverseGearScale;                                 		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioRevSimReverse_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.EngineAudioRevSimVelocitySync_TA
// 0x001C (0x0070 - 0x008C)
class UEngineAudioRevSimVelocitySync_TA : public UComponent
{
public:
	float                                              NoThrottleTime;                                   		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              NoThrottleTimeElapsed;                            		// 0x0074 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              RealToSimScale;                                   		// 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              InterpSpeed;                                      		// 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              InterpTime;                                       		// 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              InterpTimeLeft;                                   		// 0x0084 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              FirstGearThrottleThreshold;                       		// 0x0088 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioRevSimVelocitySync_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
};

// Class TAGame.EngineShare_TA
// 0x00E0 (0x0180 - 0x0260)
class UEngineShare_TA : public UEngineShare_X
{
public:
	unsigned long                                      bEnableClientPrediction : 1;                      		// 0x0180 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	unsigned long                                      bClientPhysicsUpdate : 1;                         		// 0x0180 (0x0004) [0x0000000000002002] [0x00000002] (CPF_Const | CPF_Transient)
	unsigned long                                      bDisableClientCorrections : 1;                    		// 0x0180 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	unsigned long                                      bRunningPhysicsFrame : 1;                         		// 0x0180 (0x0004) [0x0000000000000002] [0x00000008] (CPF_Const)
	unsigned long                                      bDebugClientCorrections : 1;                      		// 0x0180 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bForceClientCorrection : 1;                       		// 0x0180 (0x0004) [0x0000000000000000] [0x00000020] 
	class UReplayManager_TA*                           ReplayManager;                                    		// 0x0188 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UAdManager_TA*                               AdManager;                                        		// 0x0190 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineProductStore_TA*                      OnlineProductStore;                               		// 0x0198 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	float                                              PhysicsFramerate;                                 		// 0x01A0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                MaxPhysicsSubsteps;                               		// 0x01A4 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int                                                MaxUploadedClientFrames;                          		// 0x01A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                MaxClientReplayFrames;                            		// 0x01AC (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	int                                                PhysicsFrame;                                     		// 0x01B0 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	float                                              RenderAlpha;                                      		// 0x01B4 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	int                                                ReplicatedPhysicsFrame;                           		// 0x01B8 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	int                                                DirtyPhysicsFrame;                                		// 0x01BC (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	int                                                ForceCorrectionFrames;                            		// 0x01C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<class UITickNotify_TA*>                     TickNotifies;                                     		// 0x01C8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int                                                TickNotifyIndex;                                  		// 0x01D8 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	struct FString                                     ShellArchetypePath;                               		// 0x01E0 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class USystemSettingsManager_TA*                   SystemSettingsManager;                            		// 0x01F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              LastBugReportTime;                                		// 0x01F8 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	float                                              DebugClientCorrectionStartTime;                   		// 0x01FC (0x0004) [0x0000000000000000]               
	int                                                DebugClientCorrectionCount;                       		// 0x0200 (0x0004) [0x0000000000000000]               
	class UStatGraphSystem_TA*                         StatGraphs;                                       		// 0x0208 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UPhysicsConfig_TA*                           PhysicsConfig;                                    		// 0x0210 (0x0008) [0x0000000000000000]               
	TArray<class ANetworkInputBuffer_TA*>              InputBuffers;                                     		// 0x0218 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              LastPhysicsDeltaTimeScale;                        		// 0x0228 (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             __EventPostPhysicsStep__Delegate;                 		// 0x0230 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPreAsyncTick__Delegate;                    		// 0x0248 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineShare_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void eventOnReliablePacketsBlocked();
	void DebugClientCorrections();
	float GetBulletFixedDeltaTime();
	void RunPhysicsStep(int BulletSceneIndex, float DeltaTime);
	void DrawBuildInfo(class UCanvas* C);
	void UpdateReplicatedPhysicsFrame(int ServerFrame);
	void DebugDedicatedServer(float ForHowLong);
	float GetPhysicsTime();
	void SetTickNotify(class UITickNotify_TA* Obj, unsigned long bNotify);
	class UObject* LoadStandaloneObject(class UClass* ExpectedClass, struct FName ObjectName, int LoadFlags);
	void InitOnlineGame(class UOnlineSubsystem* NewOnlineSubsystem);
	void eventRecordAppStart();
	void eventInit();
	struct FString GetVersionString();
	void EventPreAsyncTick(float DeltaTime);
	void EventPostPhysicsStep(float DeltaTime);
};

// Class TAGame.Errors_TA
// 0x00F8 (0x0080 - 0x0178)
class UErrors_TA : public UErrorList
{
public:
	class UErrorType*                                  ReplayImport;                                     		// 0x0080 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  ReplayExport;                                     		// 0x0088 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  ReplayNoReplay;                                   		// 0x0090 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  ReplayExportNoSpace;                              		// 0x0098 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  UpdateRequired;                                   		// 0x00A0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TradeInMaxed;                                     		// 0x00A8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TransactionInProgress;                            		// 0x00B0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  OrderNotFound;                                    		// 0x00B8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  InventoryOutOfSync;                               		// 0x00C0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TimedOut;                                         		// 0x00C8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TrainingModeNotFound;                             		// 0x00D0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TrainingModeInvalidFavoritedCodes;                		// 0x00D8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TrainingModeListPlayerTrainingFailed;             		// 0x00E0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TrainingModeAddFailed;                            		// 0x00E8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TrainingModeUpdateFailed;                         		// 0x00F0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TrainingNameInvalid;                              		// 0x00F8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  CodeIsNotValid;                                   		// 0x0100 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  CodeHasBeenRedeemed;                              		// 0x0108 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  CodeMaxIncorrectAttempts;                         		// 0x0110 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  GarageSlotIsLocked;                               		// 0x0118 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  GarageSlotAlreadyUnlocked;                        		// 0x0120 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  GarageSlotCostNotFound;                           		// 0x0128 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  GarageNotEnoughCurrency;                          		// 0x0130 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  LoadoutTemplateDoesNotExist;                      		// 0x0138 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  PlayerAlreadyLinked;                              		// 0x0140 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  InvalidPlayerPlatformAuth;                        		// 0x0148 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  OnlineAchievementsSaveDataNotFound;               		// 0x0150 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  ShopItemPlayerPurchaseMax;                        		// 0x0158 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  MicrotransactionProductPurchaseLimitReached;      		// 0x0160 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TwoFactorAuthenticationRequired;                  		// 0x0168 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  MatchHasConcluded;                                		// 0x0170 (0x0008) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Errors_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ExplosionHitHandler_TA
// 0x005C (0x00F4 - 0x0150)
class UExplosionHitHandler_TA : public UExplosionHitHandler_X
{
public:
	unsigned long                                      bApplyToAllCars : 1;                              		// 0x00F8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bIsActive : 1;                                    		// 0x00F8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	struct FMap_Mirror                                 VehicleToContactInfo;                             		// 0x0100 (0x0050) [0x0000000000003000] (CPF_Native | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ExplosionHitHandler_TA");
		}

		return uClassPointer;
	};

	void DrawDebugLine(struct FColor LineColor, struct FVector& Start, struct FVector& End);
	void DrawDebugSphere(float Radius, struct FColor SphereColor, struct FVector& Location);
	void ApplyImpulse(class ACar_TA* CarHit, struct FVector HitLocation, float DamageScale, struct FContactInformation& ContactInfo);
	void eventProcessHit(class AActor* Victim, struct FVector HitLocation, float DamageScale, struct FContactInformation& ContactInfo);
};

// Class TAGame.DefaultHitHandler_TA
// 0x0004 (0x0150 - 0x0154)
class UDefaultHitHandler_TA : public UExplosionHitHandler_TA
{
public:
	float                                              ImpulseVelocityMultiplier;                        		// 0x0150 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DefaultHitHandler_TA");
		}

		return uClassPointer;
	};

	struct FVector GetImpulseDirection(struct FVector& HitLocation, struct FVector& ImpulseLocation, struct FRotator& ImpulseRotation);
	void ApplyImpulseTowardDirection(class ACar_TA* CarHit, float DamageScale, struct FVector& HitLocation, struct FVector& ImpulseLocation, struct FVector& ImpulseDirection);
	void ApplyImpulse(class ACar_TA* CarHit, struct FVector HitLocation, float DamageScale, struct FContactInformation& ContactInfo);
};

// Class TAGame.OrbitHitHandler_TA
// 0x0074 (0x0154 - 0x01C8)
class UOrbitHitHandler_TA : public UDefaultHitHandler_TA
{
public:
	struct FVector                                     RotationAxis;                                     		// 0x0158 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CarDistanceBeforeOrbit;                           		// 0x0164 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              StartAffectedRadius;                              		// 0x0168 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              EndAffectedRadius;                                		// 0x016C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              StartOrbitDistance;                               		// 0x0170 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              EndOrbitDistance;                                 		// 0x0174 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              StartOrbitSpeed;                                  		// 0x0178 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              EndOrbitSpeed;                                    		// 0x017C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              FarAwayOrbitSpeedMultiplier;                      		// 0x0180 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MaxDeactivationVelocity;                          		// 0x0184 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	unsigned char                                      OrbitCenterLocation;                              		// 0x0188 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	unsigned char                                      OrbitAxisBehavior;                                		// 0x0189 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      AffectedAreaColor;                                		// 0x018C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      OrbitCenterColor;                                 		// 0x0190 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      OrbitLocationColor;                               		// 0x0194 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	TArray<struct FOrbitCarData>                       OrbitingCars;                                     		// 0x0198 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FVector                                     OrbitCenter;                                      		// 0x01A8 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     NormalizedRotationAxis;                           		// 0x01B4 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              AffectedRadiusSquared;                            		// 0x01C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              OrbitDistance;                                    		// 0x01C4 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OrbitHitHandler_TA");
		}

		return uClassPointer;
	};

	void UpdateOrbitData(float OrbitSpeed, float DeltaTime, struct FOrbitCarData& CarData);
	int RegisterNewCarAndGetIndex(class AVehicle_TA* CarHit, struct FVector& HitLocation);
	void Init(class UActorComponent_X* ExplosionGoal);
	void ApplyImpulse(class ACar_TA* CarHit, struct FVector HitLocation, float DamageScale, struct FContactInformation& ContactInfo);
};

// Class TAGame.GreenScreenEffectHandler_TA
// 0x0018 (0x0150 - 0x0168)
class UGreenScreenEffectHandler_TA : public UExplosionHitHandler_TA
{
public:
	struct FColor                                      ColorToApply;                                     		// 0x0150 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FadeInDuration;                                   		// 0x0154 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FadeOutDuration;                                  		// 0x0158 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bUseSystemSettings : 1;                           		// 0x015C (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class AGreenScreen_TA*                             GreenScreenActor;                                 		// 0x0160 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GreenScreenEffectHandler_TA");
		}

		return uClassPointer;
	};

	void eventDetached();
};

// Class TAGame.JiggleHitHandler_TA
// 0x0038 (0x0150 - 0x0188)
class UJiggleHitHandler_TA : public UExplosionHitHandler_TA
{
public:
	float                                              JiggleDistance;                                   		// 0x0150 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              JiggleSpeed;                                      		// 0x0154 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              JiggleSlowDownSpeed;                              		// 0x0158 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UParticleSystem*                             BounceOffParticleSystem;                          		// 0x0160 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FJiggleCarData>                      JigglingCars;                                     		// 0x0168 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class AActor*>                              SpawnedParticleActors;                            		// 0x0178 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.JiggleHitHandler_TA");
		}

		return uClassPointer;
	};

	void RecordOrBounceNewCar(class AVehicle_TA* CarHit, struct FVector& HitLocation);
	void Destroy();
	void ApplyImpulse(class ACar_TA* CarHit, struct FVector HitLocation, float DamageScale, struct FContactInformation& ContactInfo);
};

// Class TAGame.FeatureFilterTest_TA
// 0x0000 (0x0060 - 0x0060)
class UFeatureFilterTest_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FeatureFilterTest_TA");
		}

		return uClassPointer;
	};

	int GetImplementationMacro();
	void Test();
};

// Class TAGame.FlockActor_TA
// 0x006C (0x0268 - 0x02D4)
class AFlockActor_TA : public AActor
{
public:
	class UStaticMesh*                                 AgentMesh;                                        		// 0x0268 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInstancedStaticMeshComponent*               FlockInstancedMesh;                               		// 0x0270 (0x0008) [0x000000000408000A] (CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline)
	int                                                FlockSize;                                        		// 0x0278 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SeperationWeight;                                 		// 0x027C (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     FlockRadius;                                      		// 0x0280 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              AgentSpeed;                                       		// 0x028C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SeperationIdealDistance;                          		// 0x0290 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class ASplineActor*                                Spline;                                           		// 0x0298 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              SpawnSpreadDistanceAlongSpline;                   		// 0x02A0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bRestartTimerEnabled : 1;                         		// 0x02A4 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      UpdateFlockMovement : 1;                          		// 0x02A4 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      ResetFlockOnToggleUpdateMovement : 1;             		// 0x02A4 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	float                                              WaitTimeInSeconds;                                		// 0x02A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinAgentScale;                                    		// 0x02AC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxAgentScale;                                    		// 0x02B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CurrentRestartTime;                               		// 0x02B4 (0x0004) [0x0000000000000000]               
	TArray<struct FFlockAgent>                         Agents;                                           		// 0x02B8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FVector                                     AverageAgentPosition;                             		// 0x02C8 (0x000C) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FlockActor_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ForceVolume_TA
// 0x0024 (0x02A4 - 0x02C8)
class AForceVolume_TA : public AVolume
{
public:
	struct FPointer                                    VfTable_IITickNotify_TA;                          		// 0x02A8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	unsigned char                                      ForceDirection;                                   		// 0x02B0 (0x0001) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      ConstantForceMode;                                		// 0x02B1 (0x0001) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      EnterForceMode;                                   		// 0x02B2 (0x0001) [0x0000000000000001] (CPF_Edit)    
	float                                              ConstantForce;                                    		// 0x02B4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              EnterForce;                                       		// 0x02B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      CustomForceDirection;                             		// 0x02C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ForceVolume_TA");
		}

		return uClassPointer;
	};

	void eventUnTouch(class AActor* Other);
	struct FVector GetForceDirection(class ARBActor_TA* RB);
	void eventTouch(class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal);
	void eventPrePhysicsStep(float DeltaTime);
};

// Class TAGame.FpsBucketRecorder_TA
// 0x001B (0x009D - 0x00B8)
class UFpsBucketRecorder_TA : public UActorComponent
{
public:
	TArray<struct FFpsBucketData>                      Buckets;                                          		// 0x00A0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	int                                                MinFPS;                                           		// 0x00B0 (0x0004) [0x0000000000000000]               
	int                                                MaxFPS;                                           		// 0x00B4 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FpsBucketRecorder_TA");
		}

		return uClassPointer;
	};

	struct FFpsBucketData GetTotalAverage();
	TArray<struct FFpsBucketData> GetAverages();
};

// Class TAGame.FriendsListBuilder_TA
// 0x0030 (0x0060 - 0x0090)
class UFriendsListBuilder_TA : public UObject
{
public:
	TArray<struct FPersonaDataId>                      PlatformFriends;                                  		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FPersonaDataId>                      EpicFriends;                                      		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FPersonaDataId>                      AllFriends;                                       		// 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FriendsListBuilder_TA");
		}

		return uClassPointer;
	};

	void Build(class UOnlineFriendMap_X* AllFriendsMap, class UOnlineFriendMap_X* PlatformFriendsMap, class UOnlineFriendMap_X* EpicFriendsMap, class ULinkedAccountMap_X* PlatformToEpicAccountMap, class UPersonas_TA* Personas);
};

// Class TAGame.FriendsListUtils_TA
// 0x0000 (0x0060 - 0x0060)
class UFriendsListUtils_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FriendsListUtils_TA");
		}

		return uClassPointer;
	};

	struct FFriendInfoCounts UpdateFriendCounts(class UPersonas_TA* Personas, TArray<struct FPersonaDataId>& Friends);
	TArray<struct FPersonaDataId> NetIdToPersonaId(TArray<struct FUniqueNetId>& Ids);
	TArray<struct FUniqueNetId> PersonaIdToNetId(TArray<struct FPersonaDataId>& Ids);
};

// Class TAGame.FXActor_GameEditorActor_TA
// 0x001C (0x0328 - 0x0344)
class AFXActor_GameEditorActor_TA : public AFXActor_X
{
public:
	float                                              SpeedMultiplier;                                  		// 0x0328 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UFXActorEvent_X*                             EditingState;                                     		// 0x0330 (0x0008) [0x0000000000000000]               
	struct FVector                                     PrevLocation;                                     		// 0x0338 (0x000C) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FXActor_GameEditorActor_TA");
		}

		return uClassPointer;
	};

	void HandleSelectionChange(class UInterface_GameEditor_TA* EditorObject, unsigned long bSelected);
	void TickFX(float DeltaTime);
	void PostBeginPlay();
};

// Class TAGame.FXActor_TA
// 0x0038 (0x0328 - 0x0360)
class AFXActor_TA : public AFXActor_X
{
public:
	class UFXActorEvent_X*                             HideWorldUIState;                                 		// 0x0328 (0x0008) [0x0000000000000000]               
	class UFXActorEvent_X*                             PreviewState;                                     		// 0x0330 (0x0008) [0x0000000000000000]               
	class UFXActorEvent_X*                             PaintedState;                                     		// 0x0338 (0x0008) [0x0000000000000000]               
	class UFXActorEvent_X*                             BoostEndEvent;                                    		// 0x0340 (0x0008) [0x0000000000000000]               
	TArray<class UFXActorEvent_X*>                     TeamStates;                                       		// 0x0348 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class ULocalPlayerAudioParamsComponent_TA*         LocalPlayerAudioParamsComponent;                  		// 0x0358 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FXActor_TA");
		}

		return uClassPointer;
	};

	void __FXActor_TA__ClearPaintParameters_7E210246457A8E2D680A41A2BCD65D5D(class UParticleSystemComponent* BeamPSC);
	void OnSetParticleSysParam(class USeqAct_SetParticleSysParam* Action);
	void ClearPaintParameters(class AFXActor_X* FXActor);
	void ApplyPaintToAttachment(class UProductAttribute_PaintSettings_TA* PaintSettings, class UProductPaint_TA* Paint, struct FFXAttachment& FXAttach);
	void ApplyPaint(class UProductAttribute_PaintSettings_TA* PaintSettings, class UProductPaint_TA* Paint);
	void HandleHideWorldUIChanged(class UGameShare_TA* G);
	void SetCarActorParam(class ACar_TA* InCar);
	void eventOnOwnerChanged();
	void PostBeginPlay();
};

// Class TAGame.FXActor_Ball_TA
// 0x0060 (0x0360 - 0x03C0)
class AFXActor_Ball_TA : public AFXActor_TA
{
public:
	float                                              SuperSonicSpeed;                                  		// 0x0360 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxGoalProximityDistance;                         		// 0x0364 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BallFadeInSpeed;                                  		// 0x0368 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BallFadeOutSpeed;                                 		// 0x036C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TrailOpacityLerpSpeed;                            		// 0x0370 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CurrentTrailOpacity;                              		// 0x0374 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              BallFadeSpeed;                                    		// 0x0378 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              BallFadeOpacity;                                  		// 0x037C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ShockwaveParamMin;                                		// 0x0380 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ShockwaveParamMax;                                		// 0x0384 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ShockwaveParamTime;                               		// 0x0388 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UFXActorEvent_X*                             InAirState;                                       		// 0x0390 (0x0008) [0x0000000000000000]               
	class UFXActorEvent_X*                             SuperSonicState;                                  		// 0x0398 (0x0008) [0x0000000000000000]               
	class ABall_TA*                                    Ball;                                             		// 0x03A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              TouchingWorldTime;                                		// 0x03A8 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bInAir : 1;                                       		// 0x03AC (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bSuperSonic : 1;                                  		// 0x03AC (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	float                                              CurrentTrailDilation;                             		// 0x03B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              MaxTrailDilation;                                 		// 0x03B4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       TrailIntensityName;                               		// 0x03B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FXActor_Ball_TA");
		}

		return uClassPointer;
	};

	void __FXActor_Ball_TA__PostBeginPlay_8F94172F4BB252D7403DB383D5A77107(class ABall_TA* _);
	void __FXActor_Ball_TA__PostBeginPlay_A45BE1D34E8A2A10683EFDA13C5C96EB(class ABall_TA* _);
	void eventDestroyed();
	void UpdateBallPenetration();
	void HandleBallExploded(class ABall_TA* InBall);
	void HandleBallGameEventSet(class ABall_TA* InBall);
	void ClearBallPositionMaterials();
	void SetBallPositionMaterials(struct FLinearColor LocParam, float ShockwaveParam);
	void UpdateBallPositionMaterials();
	float GetClosestLocalPlayerDistance();
	float GetPrimaryCameraDistance();
	void UpdateTrailIntensity();
	void UpdateTrailColor();
	void UpdateGoalProximity();
	void UpdateBallFade(float DeltaTime);
	void StartBallFadeOut();
	void StartBallFadeIn();
	void TickFX(float DeltaTime);
	void PostBeginPlay();
};

// Class TAGame.FXActor_BallBreakout_TA
// 0x0060 (0x03C0 - 0x0420)
class AFXActor_BallBreakout_TA : public AFXActor_Ball_TA
{
public:
	class UAkSoundCue*                                 MaxChargeSFX;                                     		// 0x03C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 SwitchTeamSFX;                                    		// 0x03C8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 IdleSFX;                                          		// 0x03D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 ResetSFX;                                         		// 0x03D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<class UAkSoundCue*>                         ChargeSFX;                                        		// 0x03E0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class UAkSoundCue*>                         DamageSFX;                                        		// 0x03F0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class UFXActorEvent_X*>                     DamageEvents;                                     		// 0x0400 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class ABall_Breakout_TA*                           BallBreakout;                                     		// 0x0410 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                LastDamage;                                       		// 0x0418 (0x0004) [0x0000000000000000]               
	float                                              LastNoDamageHit;                                  		// 0x041C (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FXActor_BallBreakout_TA");
		}

		return uClassPointer;
	};

	void UpdateGoalProximity();
	void UpdateBallFade(float DeltaTime);
	void StartBallFadeOut();
	void StartBallFadeIn();
	void HandleAppliedDamage(class ABall_Breakout_TA* InBall, struct FAppliedBreakoutDamage Damage);
	void HandleNoDamageHit(class ABall_Breakout_TA* InBall);
	void HandleLastTeamTouchChanged(class ABall_Breakout_TA* InBall, unsigned char InLastTeamTouch);
	void HandleDamageIndexChanged(class ABall_Breakout_TA* InBall, int InDamageIndex);
	void PostBeginPlay();
};

// Class TAGame.FXActor_BallHaunted_TA
// 0x0080 (0x03C0 - 0x0440)
class AFXActor_BallHaunted_TA : public AFXActor_Ball_TA
{
public:
	class UAkSoundCue*                                 SwitchTeamSFX;                                    		// 0x03C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 IdleSFX;                                          		// 0x03C8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 BeamBreakSFX;                                     		// 0x03D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 BallEnterTrapSFX;                                 		// 0x03D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 BallExitTrapSFX;                                  		// 0x03E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 BallCountdownSFX;                                 		// 0x03E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<class UFXActorEvent_X*>                     DamageEvents;                                     		// 0x03F0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UParticleSystem*                             PulsePSArchetype;                                 		// 0x0400 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       PulsePSParam;                                     		// 0x0408 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              BallPulseTimeModifier;                            		// 0x0410 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BrokenBeamResetTime;                              		// 0x0414 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxTimePercentageToPerformPulse;                  		// 0x0418 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class ABall_Haunted_TA*                            BallHaunted;                                      		// 0x0420 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                DamageIndex;                                      		// 0x0428 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bBallExploded : 1;                                		// 0x042C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bBeamIsBroken : 1;                                		// 0x042C (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	float                                              CurrentBrokenTime;                                		// 0x0430 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              NextPulseTime;                                    		// 0x0434 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UParticleSystemComponent*                    PulsePSC;                                         		// 0x0438 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FXActor_BallHaunted_TA");
		}

		return uClassPointer;
	};

	void __FXActor_BallHaunted_TA__PostBeginPlay_C3979A5C4C3A456F5FD0988B13681A4C(class ABall_Haunted_TA* _);
	void UpdateGoalProximity();
	void UpdateBallFade(float DeltaTime);
	void SetTimeInGoalRTPC(float Value);
	void ClearFXActor();
	void HandleBallExploded(class ABall_TA* InBall);
	void PulseBallInTrap();
	void HandleIsTrapped(class ABall_Haunted_TA* InBall, unsigned long bIsTrapped, class UGoal_TA* Goal);
	void HandleLastTeamTouchChanged(class ABall_Haunted_TA* InBall, unsigned char InLastTeamTouch);
	void SetBeamIsBroken(unsigned long bValue);
	void SetDamageIndex(int InDamageIndex);
	void eventTick(float DeltaTime);
	void StartBallFadeOut();
	void StartBallFadeIn();
	void HandleActiveRoundChanged(class AGameEvent_Soccar_TA* GameEvent);
	void HandleGameEventSet(class ABall_TA* InBall);
	void eventDestroyed();
	void PostBeginPlay();
};

// Class TAGame.FXActor_Boost_TA
// 0x00C0 (0x0360 - 0x0420)
class AFXActor_Boost_TA : public AFXActor_TA
{
public:
	TArray<struct FParticleParameterSet>               ParametersPerExtraBoostSockets;                   		// 0x0360 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FParticleBodyParameterSet>           BodyParticleParameters;                           		// 0x0370 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UAkSoundCue*                                 DryFireSound;                                     		// 0x0380 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                CarBoostGlowColor;                                		// 0x0388 (0x0010) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FAnimatedMaterialMesh>               BoostMeshMaterialParams;                          		// 0x0398 (0x0010) [0x0000000000480001] (CPF_Edit | CPF_Component | CPF_NeedCtorLink)
	TArray<struct FBoostMeshMaterialOverride>          BoostMeshMaterialOverrides;                       		// 0x03A8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UBoostMesh_TA*                               BoostMeshArchetype;                               		// 0x03B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBoostMesh_TA*                               BoostMesh;                                        		// 0x03C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FRandomRange                                BoostMeshFadeInTime;                              		// 0x03C8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FRandomRange                                BoostMeshFadeOutTime;                             		// 0x03D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<class UParticleSystemComponent*>            MultipleBoostsOverride;                           		// 0x03D8 (0x0010) [0x0000000004480009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	unsigned char                                      BoostEmitterSocketBehavior;                       		// 0x03E8 (0x0001) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FPreviewParticleOverride>            PreviewParticleOverrides;                         		// 0x03F0 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	unsigned long                                      bWasBoosting : 1;                                 		// 0x0400 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bWasInputBoosting : 1;                            		// 0x0400 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	float                                              MaxBoostMeshMaterialTime;                         		// 0x0404 (0x0004) [0x0000000000002000] (CPF_Transient)
	class AVehicle_TA*                                 Vehicle;                                          		// 0x0408 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACarPreviewActor_TA*                         CarPreview;                                       		// 0x0410 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UCarMeshComponentBase_TA*                    CarMesh;                                          		// 0x0418 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FXActor_Boost_TA");
		}

		return uClassPointer;
	};

	void HandleUpdatedPaintSettings(class UCarMeshComponentBase_TA* CarMeshComponent);
	void HandleCarDemolished(class ACar_TA* Car, struct FDemolishData Data);
	void ApplyPaint(class UProductAttribute_PaintSettings_TA* PaintSettings, class UProductPaint_TA* Paint);
	void ApplyPreviewParticleOverrides();
	void StopAllEffects();
	void BoostMeshFadeOut();
	void BoostMeshFadeIn();
	void ResetBoostMeshElapsedTime(float Value);
	void CopyBoostMeshDistributionParameters(class AFXActor_Boost_TA* Archetype);
	void UpdateBoostMeshMaterials(float DeltaTime);
	void InitializeBoostMesh();
	void CreateBoostMeshMaterials(class AFXActor_X* FXActor);
	void Inherit(class AFXActor_X* Other);
	bool eventIsPRInfoInGameState(struct FName GameState);
	void TickFX(float DeltaTime);
	void SetBodyParticleParams(class AFXActor_X* BodyFXActor);
	void MoveToAverageBoostLocation(class UProductAsset_Body_TA* BodyAsset);
	void InitExtraBoostComponents(class UProductAsset_Body_TA* BodyAsset);
	void DuplicateAttachment(class UProductAsset_Body_TA* BodyAsset, int AttachmentIdx);
	void SetParticleParams(struct FName AttachmentName, TArray<struct FParticleSysParam> Params);
	void SetAttachmentActor(class AActor* AttachToActor);
};

// Class TAGame.FXActor_BreakoutPlatform_TA
// 0x0090 (0x0360 - 0x03F0)
class AFXActor_BreakoutPlatform_TA : public AFXActor_TA
{
public:
	class UMaterialInterface*                          PlatformMaterial;                                 		// 0x0360 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMaterialInterface*                          RaysMaterial;                                     		// 0x0368 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       LocationParam;                                    		// 0x0370 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FPlatformParam>                      DamagedParams;                                    		// 0x0378 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FPlatformParam>                      BrokenParams;                                     		// 0x0388 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UAkSoundCue*                                 DamageSFX;                                        		// 0x0398 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 DirectBreakSFX;                                   		// 0x03A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 IndirectBreakSFX;                                 		// 0x03A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              DamageDistanceSpeed;                              		// 0x03B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UFXActorEvent_X*                             DamagedState;                                     		// 0x03B8 (0x0008) [0x0000000000000000]               
	class UFXActorEvent_X*                             BrokenState;                                      		// 0x03C0 (0x0008) [0x0000000000000000]               
	class ABreakOutActor_Platform_TA*                  BreakoutPlatform;                                 		// 0x03C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMaterialInstanceConstant*                   MIC;                                              		// 0x03D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMaterialInstanceConstant*                   RaysMIC;                                          		// 0x03D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      DamageState;                                      		// 0x03E0 (0x0001) [0x0000000000002000] (CPF_Transient)
	float                                              DamageTime;                                       		// 0x03E4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              BrokenTime;                                       		// 0x03E8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              RemainingTime;                                    		// 0x03EC (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FXActor_BreakoutPlatform_TA");
		}

		return uClassPointer;
	};

	void SetTeamColor(struct FLinearColor TeamColor);
	void PlayDestroyIndirectSFX();
	void PlayDestroyDirectSFX();
	void PlayDamageSFX();
	void UpdateParamsAtTime(TArray<struct FPlatformParam> Params, float Time);
	void UpdateDamageParams(float DeltaTime);
	void TickFX(float DeltaTime);
	void HandleDamageStateChanged(class ABreakOutActor_Platform_TA* Platform, struct FBreakoutDamageState InState);
	void SetAttachmentActor(class AActor* AttachToActor);
};

// Class TAGame.FXActor_Car_TA
// 0x010C (0x0360 - 0x046C)
class AFXActor_Car_TA : public AFXActor_TA
{
public:
	class UEffectsMap_X*                               WheelEffectsMap;                                  		// 0x0360 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 AkWheelImpactSound;                               		// 0x0368 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 AkWheelDriveSound;                                		// 0x0370 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 AkEnterSupersonicSound;                           		// 0x0378 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 AkLoopSupersonicSound;                            		// 0x0380 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              MinImpactMomentum;                                		// 0x0388 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       AkImpactTypeKey;                                  		// 0x038C (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       AkImpactIntensityKey;                             		// 0x0394 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UCameraShake*                                WheelImpactShake;                                 		// 0x03A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UForceFeedbackWaveform*                      WheelImpactForceFeedback;                         		// 0x03A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           ShakeScaleCurve;                                  		// 0x03B0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UParticleSystem*                             SupersonicWheelTemplate;                          		// 0x03C8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              BoostGlowRate;                                    		// 0x03D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UShakeComponent_X*                           ShakeComponent;                                   		// 0x03D8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class AVehicle_TA*                                 Vehicle;                                          		// 0x03E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bThrottle : 1;                                    		// 0x03E8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bInAir : 1;                                       		// 0x03E8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bBrake : 1;                                       		// 0x03E8 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	unsigned long                                      bWasBoosting : 1;                                 		// 0x03E8 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	unsigned long                                      bWasBoostFlying : 1;                              		// 0x03E8 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	unsigned long                                      bWasSuperSonic : 1;                               		// 0x03E8 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	unsigned long                                      bWasOnWall : 1;                                   		// 0x03E8 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	unsigned long                                      bEnabled : 1;                                     		// 0x03E8 (0x0004) [0x0000000000000000] [0x00000080] 
	class UFXActorEvent_X*                             ThrottleState;                                    		// 0x03F0 (0x0008) [0x0000000000000000]               
	class UFXActorEvent_X*                             SuperSonicState;                                  		// 0x03F8 (0x0008) [0x0000000000000000]               
	class UFXActorEvent_X*                             InAirState;                                       		// 0x0400 (0x0008) [0x0000000000000000]               
	class UFXActorEvent_X*                             BoostState;                                       		// 0x0408 (0x0008) [0x0000000000000000]               
	class UFXActorEvent_X*                             BoostPreviewState;                                		// 0x0410 (0x0008) [0x0000000000000000]               
	class UFXActorEvent_X*                             BoostFlyState;                                    		// 0x0418 (0x0008) [0x0000000000000000]               
	class UFXActorEvent_X*                             OnWallState;                                      		// 0x0420 (0x0008) [0x0000000000000000]               
	class UFXActorEvent_X*                             SuperSonicEndState;                               		// 0x0428 (0x0008) [0x0000000000000000]               
	class UPhysicalMaterial*                           ContactPhysMat;                                   		// 0x0430 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPhysicalMaterialProperty_TA*                ContactPhysMatProp;                               		// 0x0438 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<struct FWheelFX>                            WheelEffects;                                     		// 0x0440 (0x0010) [0x0000000000482000] (CPF_Transient | CPF_Component | CPF_NeedCtorLink)
	class UParticleSystem*                             WheelEffectsParticle;                             		// 0x0450 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UCarMeshComponent_TA*                        CarMesh;                                          		// 0x0458 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UMaxActorsGroup_TA*                          MaxActorsGroup;                                   		// 0x0460 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	float                                              BoostGlow;                                        		// 0x0468 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FXActor_Car_TA");
		}

		return uClassPointer;
	};

	void PlayWheelLandCameraShake(float ImpactSpeed);
	void SetWheelEffectActive(int WheelIdx, unsigned long bEffectActive);
	void SetContactPhysMat(class UPhysicalMaterial* NewPhysMat);
	void UpdateContactPhysMat();
	void PlaySpawnFX(class ACar_TA* Car);
	void eventSetBraking(unsigned long bNewBraking);
	void eventTickFX(float DeltaTime);
	void HandleTeamChanged(class ACar_TA* InCar);
	class AFXActor_TA* InstantiateTrailFXActor(class UProductAsset_SupersonicTrail_TA* TrailAsset, class AFXActor_TA* TrailFX, class ACar_TA* Car);
	void InitSupersonicFX(class ACar_TA* Car, class UProductAsset_SupersonicTrail_TA* TrailAsset);
	void HandleProductLoaded(class UProductAsset_TA* Product);
	void HandleWheelLoaded(class UProductAsset_Wheel_TA* Product);
	void HandleProductAssets(class UProductAsset_SupersonicTrail_TA* Product);
	void InitWheelBones(class ACar_TA* Car);
	void HandleVehicleSetup(class ACar_TA* Car);
	void StopWheelEffects();
	void StopAllEffects();
	void HandleDisabled();
	void HandleEnabled();
	void eventDestroyed();
	void PostBeginPlay();
};

// Class TAGame.FXTrait_BoostParticle_TA
// 0x004C (0x0060 - 0x00AC)
class UFXTrait_BoostParticle_TA : public UFXAttachmentTraitBase_X
{
public:
	class UParticleSystem*                             ParticlePreview;                                  		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UParticleSystem*                             DuplicateParticle;                                		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UParticleSystem*                             DuplicateParticlePreview;                         		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FParticleSysParam>                   SharedParameters;                                 		// 0x0078 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FParticleSysParam>                   DuplicateParameters;                              		// 0x0088 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FParticleSysParam>                   PreviewOverrideParameters;                        		// 0x0098 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long                                      bConvertedDuplicateParametersToSharedParameters : 1;		// 0x00A8 (0x0004) [0x0000000000000002] [0x00000001] (CPF_Const)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FXTrait_BoostParticle_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GameData_TA
// 0x0250 (0x0060 - 0x02B0)
class UGameData_TA : public UObject
{
public:
	class UProductDatabase_TA*                         Products;                                         		// 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UXPManager_TA*                               XPManager;                                        		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                MaxTeamSize;                                      		// 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	TArray<class UProductSlot_TA*>                     ProductSlots;                                     		// 0x0078 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	TArray<class UProductSlot_TA*>                     SlotLoadOrder;                                    		// 0x0088 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UProductSlot_TA*                             BodySlot;                                         		// 0x0098 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             SkinSlot;                                         		// 0x00A0 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             WheelSlot;                                        		// 0x00A8 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             BoostSlot;                                        		// 0x00B0 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             AntennaSlot;                                      		// 0x00B8 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             HatSlot;                                          		// 0x00C0 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             FrontSlot;                                        		// 0x00C8 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             PaintFinishSlot;                                  		// 0x00D0 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             BotSlot;                                          		// 0x00D8 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             LogoSlot;                                         		// 0x00E0 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             UnderGlowSlot;                                    		// 0x00E8 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             PremiumInventorySlot;                             		// 0x00F0 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             CustomFinishSlot;                                 		// 0x00F8 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             EngineAudioSlot;                                  		// 0x0100 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             SupersonicTrailSlot;                              		// 0x0108 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             GoalExplosionSlot;                                		// 0x0110 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             PlayerBannerSlot;                                 		// 0x0118 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             PlayerTitleSlot;                                  		// 0x0120 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             ESportsTeamSlot;                                  		// 0x0128 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             ArchiveSlot;                                      		// 0x0130 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             AllSlot;                                          		// 0x0138 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             ShopItemSlot;                                     		// 0x0140 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             CurrencySlot;                                     		// 0x0148 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             PlayerAvatarSlot;                                 		// 0x0150 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             PlayerAvatarBorderSlot;                           		// 0x0158 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             GiftPackSlot;                                     		// 0x0160 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             BlueprintSlot;                                    		// 0x0168 (0x0008) [0x0000000000000000]               
	class UProductSlot_TA*                             MusicStingersSlot;                                		// 0x0170 (0x0008) [0x0000000000000000]               
	TArray<struct FString>                             TeamArchetypePaths;                               		// 0x0178 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	TArray<class ATeam_TA*>                            TeamArchetypes;                                   		// 0x0188 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     GameModeListPath;                                 		// 0x0198 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UGameModeList_TA*                            GameModeList;                                     		// 0x01A8 (0x0008) [0x0000000000002002] (CPF_Const | CPF_Transient)
	struct FLoadoutData                                DefaultLoadouts[0x2] ;                            		// 0x01B0 (0x0080) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FClientLoadoutData                          DefaultClientLoadout;                             		// 0x0230 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	class UCarColorSet_TA*                             CustomColorSet;                                   		// 0x0240 (0x0008) [0x0000000000000000]               
	class UCarColorSet_TA*                             ClubColorSet;                                     		// 0x0248 (0x0008) [0x0000000000000000]               
	class UCarColorSet_TA*                             ClubColorSet_v1;                                  		// 0x0250 (0x0008) [0x0000000000000000]               
	class UCarColorSet_TA*                             PlayerBannerColorSet;                             		// 0x0258 (0x0008) [0x0000000000000000]               
	class UCarColorSet_TA*                             PlayerVanityColorSet;                             		// 0x0260 (0x0008) [0x0000000000000000]               
	class UMapList_TA*                                 MapList;                                          		// 0x0268 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UGlobalLookupTexture_TA*                     GlobalLookupTexture;                              		// 0x0270 (0x0008) [0x0000000000000000]               
	TArray<class UClass*>                              OnlineProductAttributes;                          		// 0x0278 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	class USkinOverrideTable_TA*                       SkinOverrideTable;                                		// 0x0288 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPaintDatabase_TA*                           PaintDB;                                          		// 0x0290 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UCertifiedStatDatabase_TA*                   CertifiedStatDB;                                  		// 0x0298 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USpecialEditionDatabase_TA*                  SpecialEditionDB;                                 		// 0x02A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UDataAssetDatabase_ESportsTeam_TA*           ESportsTeamDB;                                    		// 0x02A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameData_TA");
		}

		return uClassPointer;
	};

	class UCarColorSet_TA* GetClubColorSet();
	struct FString GetMapName(unsigned long bLocalize);
	TArray<class UProductSlot_TA*> GetUnlockableLoadoutSlots();
	TArray<class UProductSlot_TA*> GetVanityLoadoutSlots();
	TArray<class UProductSlot_TA*> eventGetLoadoutSlots();
	TArray<class UProductSlot_TA*> GetGarageLoadoutSlots();
	bool CanProductBeInSlot(class UProduct_TA* Product, class UProductSlot_TA* Slot);
	class UProductDatabase_TA* GetProductDB();
	void SetDefaultTeamColors();
	void eventSetGlobalTeamColors(TArray<struct FLinearColor> Colors);
};

// Class TAGame.GameEngine_TA
// 0x0008 (0x0B48 - 0x0B50)
class UGameEngine_TA : public UGameEngine_X
{
public:
	class UServerConfig_X*                             ServerConfig;                                     		// 0x0B48 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEngine_TA");
		}

		return uClassPointer;
	};

	bool __GameEngine_TA__FlushOnlineSaveData_BDDBD2A24C92EB138484BEBD6172A5CE(class UEOSOnlineStorageUploader_TA* U);
	bool __GameEngine_TA__FlushOnlineSaveData_0EF1D6CB4BDB42DDA25A8F892B0533FB(class UEOSOnlineStorageUploader_TA* U);
	class UEOSOnlineStorageUploader_TA* __GameEngine_TA__FlushOnlineSaveData_D3003735446B60394729EA90BE5F6465(class ULocalPlayer_TA* P);
	void FlushOnlineSaveData();
	struct FString GetBuildInfo(struct FString Key);
	void eventConstruct();
};

// Class TAGame.GameEvent_TA
// 0x0498 (0x0268 - 0x0700)
class AGameEvent_TA : public AActor
{
public:
	class UGroupComponent_ORS*                         RegistryGroup;                                    		// 0x0268 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UMatchType_TA*                               MatchType;                                        		// 0x0270 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UClass*                                      MatchTypeClass;                                   		// 0x0278 (0x0008) [0x0000000000000021] (CPF_Edit | CPF_Net)
	struct FName                                       EventType;                                        		// 0x0280 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       AudioSoundMode;                                   		// 0x0288 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       MatchTypeName;                                    		// 0x0290 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class ACar_TA*                                     CarArchetype;                                     		// 0x0298 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UClass*                                      PREIClass;                                        		// 0x02A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                CountdownTime;                                    		// 0x02A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                FinishTime;                                       		// 0x02AC (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bMultiplayer : 1;                                 		// 0x02B0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	unsigned long                                      bCountdownMessagesDisabled : 1;                   		// 0x02B0 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bFillWithAI : 1;                                  		// 0x02B0 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	unsigned long                                      bAllowQueueSaveReplay : 1;                        		// 0x02B0 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	unsigned long                                      bAllowReadyUp : 1;                                		// 0x02B0 (0x0004) [0x0000000000002020] [0x00000010] (CPF_Net | CPF_Transient)
	unsigned long                                      bRestartingMatch : 1;                             		// 0x02B0 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bRandomizedBotLoadouts : 1;                       		// 0x02B0 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bHasLeaveMatchPenalty : 1;                        		// 0x02B0 (0x0004) [0x0000000000002020] [0x00000080] (CPF_Net | CPF_Transient)
	unsigned long                                      bCanVoteToForfeit : 1;                            		// 0x02B0 (0x0004) [0x0000000000002020] [0x00000100] (CPF_Net | CPF_Transient)
	unsigned long                                      bDisableAimAssist : 1;                            		// 0x02B0 (0x0004) [0x0000000000000002] [0x00000200] (CPF_Const)
	unsigned long                                      bAwardAchievements : 1;                           		// 0x02B0 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bIsBotMatch : 1;                                  		// 0x02B0 (0x0004) [0x0000000000000020] [0x00000800] (CPF_Net)
	int                                                MinPlayers;                                       		// 0x02B4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                MaxPlayers;                                       		// 0x02B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<class AActor*>                              SpawnPoints;                                      		// 0x02C0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class AAIManager_TA*                               AIManagerArchetype;                               		// 0x02D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AAIManager_TA*                               AIManager;                                        		// 0x02D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APylon_Soccar_TA*                            Pylon;                                            		// 0x02E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AAIController_TA*                            BotArchetype;                                     		// 0x02E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              BotSkill;                                         		// 0x02F0 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	TArray<class UMutator_TA*>                         DefaultMutators;                                  		// 0x02F8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class UMutator_TA*>                         Mutators;                                         		// 0x0308 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              MatchTimeDilation;                                		// 0x0318 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AHUD*                                        HUDArchetype;                                     		// 0x0320 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class APlayerController_TA*                        Activator;                                        		// 0x0328 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACar_TA*                                     ActivatorCar;                                     		// 0x0330 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	TArray<class AController*>                         Players;                                          		// 0x0338 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class APRI_TA*>                             PRIs;                                             		// 0x0348 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class ACar_TA*>                             Cars;                                             		// 0x0358 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class APlayerController_TA*>                LocalPlayers;                                     		// 0x0368 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                StartPointIndex;                                  		// 0x0378 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      ReplicatedStateIndex;                             		// 0x037C (0x0001) [0x0000000000002022] (CPF_Const | CPF_Net | CPF_Transient)
	TArray<struct FName>                               DeprecatedIndexToState;                           		// 0x0380 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FName                                       ReplicatedStateName;                              		// 0x0390 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UMessage_TA*                                 GameFullMessage;                                  		// 0x0398 (0x0008) [0x0000000000000000]               
	class UMessage_TA*                                 OtherActiveMessage;                               		// 0x03A0 (0x0008) [0x0000000000000000]               
	class UMessage_TA*                                 NotEnoughPlayersMessage;                          		// 0x03A8 (0x0008) [0x0000000000000000]               
	class UMessage_TA*                                 TooManyPlayersMessage;                            		// 0x03B0 (0x0008) [0x0000000000000000]               
	class UMessage_TA*                                 NotPartyLeaderMessage;                            		// 0x03B8 (0x0008) [0x0000000000000000]               
	TArray<class UMessage_TA*>                         CountdownMessages;                                		// 0x03C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UMessage_TA*                                 GoMessage;                                        		// 0x03D0 (0x0008) [0x0000000000000000]               
	TArray<class UMessage_TA*>                         ReplacingBotCountdownMessages;                    		// 0x03D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UMessage_TA*                                 ReplacingBotGoMessage;                            		// 0x03E8 (0x0008) [0x0000000000000000]               
	TArray<struct FPlayerChatMessage>                  ChatHistory;                                      		// 0x03F0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                GameStateTimeRemaining;                           		// 0x0400 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                ReplicatedGameStateTimeRemaining;                 		// 0x0404 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UBotConfig_TA*                               BotConfig;                                        		// 0x0408 (0x0008) [0x0000000000000000]               
	TArray<struct FUniqueNetId>                        ForfeitInitiatorIDs;                              		// 0x0410 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        BannedPlayers;                                    		// 0x0420 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class APRI_TA*                                     GameOwner;                                        		// 0x0430 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FCustomMatchSettings                        MatchSettings;                                    		// 0x0438 (0x0090) [0x0000000000402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     RichPresenceString;                               		// 0x04C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UMatchAdminComponent_TA*                     MatchAdmin;                                       		// 0x04D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UListenServer_TA*                            ListenServer;                                     		// 0x04E0 (0x0008) [0x0000000000000000]               
	int                                                ReplicatedRoundCountDownNumber;                   		// 0x04E8 (0x0004) [0x0000000000000020] (CPF_Net)     
	class UMatchRecorder_TA*                           MatchRecorder;                                    		// 0x04F0 (0x0008) [0x0000000000000000]               
	TArray<class UProductAsset_Bot_TA*>                RandomizedBots;                                   		// 0x04F8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UGameState_TA*>                       GameStates;                                       		// 0x0508 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UGameState_TA*                               GameState;                                        		// 0x0518 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventMatchStarted__Delegate;                    		// 0x0520 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventGameStateChanged__Delegate;                		// 0x0538 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventGameStateTimeUpdated__Delegate;            		// 0x0550 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventFinished__Delegate;                        		// 0x0568 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventDestroyed__Delegate;                       		// 0x0580 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPlayerRestarted__Delegate;                 		// 0x0598 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPlayerAdded__Delegate;                     		// 0x05B0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPlayerRemoved__Delegate;                   		// 0x05C8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventCarAdded__Delegate;                        		// 0x05E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventCarRemoved__Delegate;                      		// 0x05F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventReplicatedDemolish__Delegate;              		// 0x0610 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPenaltyChanged__Delegate;                  		// 0x0628 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventCanVoteForfeitChanged__Delegate;           		// 0x0640 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventCountDownTimeUpdated__Delegate;            		// 0x0658 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventGameOwnerUpdated__Delegate;                		// 0x0670 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventMatchTypeSet__Delegate;                    		// 0x0688 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventLocalPlayersChanged__Delegate;             		// 0x06A0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventMatchSettingsChanged__Delegate;            		// 0x06B8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPlayerResetTraining__Delegate;             		// 0x06D0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __Pylon__ChangeNotify;                            		// 0x06E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_TA");
		}

		return uClassPointer;
	};

	void InitCountDown();
	void StartCountdownTimer();
	void AllowReadyUp();
	class APRI_TA* FindPlayerPRI(struct FUniqueNetId UniqueId);
	void HandlePlayerRemoved(class AGameEvent_TA* GameEvent, class APRI_TA* PRI);
	void UpdateGameOwner();
	void SetGameOwner(class APRI_TA* NewOwner);
	void __GameEvent_TA__PostBeginPlay_CBBF6048414AE7BF2C2496AA9EA27E3F(class UOnlineGameDedicatedServer_X* _, struct FCustomMatchSettings Settings);
	class UMutator_TA* __GameEvent_TA__GetOnlineGameSettingsMutators_42BAE78F4A2DB2F7B0FA7290C936D13D(class UMutatorGameSetting_TA* Setting);
	void __GameEvent_TA__InitMutators_D904A4CB463034499D02CBA197FC8C41(class UMutator_TA* Mutator);
	void __GameEvent_TA__SetAllowReadyUp_2DFEC1FF4F00ACA74D989F9EA7C04150(class APRI_TA* P);
	bool __GameEvent_TA__CheckPlayersReady_36C985CC4AB02DDB8863E28DDAA24DE7(class APRI_TA* P);
	struct FUniqueNetId __GameEvent_TA__CheckForBannedPlayers_8B8C1DF84FB0F9ACD8A2E680831ED01F(class APRI_TA* PRI);
	bool __GameEvent_TA__CheckForBannedPlayers_E04422B64DFCFA6E136E15B26771AAFC(class APRI_TA* PRI);
	void __Pylon__ChangeNotifyFunc();
	bool DisableNamePlates();
	bool GetPlayerHUDPosition(class APRI_TA* PRI, struct FVector& Out_Position);
	void SetStaticDataPaused(unsigned long bPause);
	bool AllowPausing(class APlayerController* PC);
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void PlayerResetTraining();
	bool SuppressModalDialogs();
	bool ShouldShowBallIndicator();
	class UGameMode_TA* GetGameMode();
	void CheckInitiatedForfeit(class APRI_TA* PRI);
	void HandleSyncedBanStatus(class UBanSync_TA* BanSync);
	class APlayerController_TA* FindPCForUniqueID(struct FUniqueNetId PlayerID);
	void CheckForBannedPlayers();
	bool AllowSplitScreenPlayer();
	void AddPlayerChatMessage(struct FUniqueNetId PlayerID, unsigned char ChatChannel, class ATeamInfo* Team, struct FString Message);
	void ConditionalStartSpectatorMatch();
	struct FString LocalizePresence(struct FString GameDataString);
	void GetPresenceStatus(unsigned long bLocalize, struct FString& Out_PresenceString, struct FString& Out_GameDataString);
	struct FName GetMatchTypeName();
	bool IsPlayingFTE();
	bool IsPlayingTraining();
	bool IsPlayingLan();
	bool IsPlayingOffline();
	bool IsPlayingPrivate();
	bool IsPlayingPublic();
	bool IsOnlineMultiplayer();
	void CreateMatchType(struct FString Options);
	bool AllPlayersSelectedTeam();
	int PlayersOnFieldCount();
	int PlayersSelectedTeamCount(int& PlayersHavingSelected, int& TotalPlayers, int& Spectators);
	bool CanQueSaveReplay();
	void ForceMatchStart();
	void ConditionalStartMatch();
	bool DisableStatXP();
	bool GiveExtraXP();
	void SaveLocalPlayerStats();
	bool CanUseBallCam();
	bool HandleNextGame();
	struct FName GetDesiredSoundGameMode();
	struct FName GetDesiredSoundState();
	void SetMaxPlayers(int InMaxPlayers);
	void SetRestartingMatch(unsigned long bRestart);
	class UIOnlineGameHost_X* GetOnlineGameHost();
	class UOnlineGameLanServer_X* GetOnlineGameLanServer();
	class UOnlineGameDedicatedServer_TA* GetOnlineGameDedicatedServer();
	bool ShouldBeFullScreen();
	bool IsFinished();
	void OnAllPlayersReady();
	void CheckPlayersReady();
	void SetAllowReadyUp(unsigned long bAllow);
	void AutoReadyPlayers();
	bool ShouldAutoReadyUp(class APRI_TA* PRI);
	void SendGoMessage(class APlayerController_TA* Player);
	void SendCountdownMessage(int Seconds, class APlayerController_TA* Player);
	void BroadcastCountdownMessage(int Seconds);
	void BroadcastGoMessage();
	bool AllowShutdown();
	void HandleCarAddCarComponent(class UObject* O);
	float GetRealDeltaTime(float ElapsedTime);
	void SetTimeDilation(float NewTimeDilation);
	void ReplaceBotsWithAwaitingPlayers();
	void OnReplicatedDemolish(struct FDemolishData Data);
	void RemoveCar(class ACar_TA* Car);
	void AddCar(class ACar_TA* Car);
	void SetBotSkillByTeam(int Team, float NewSkill, float BoostThreshold);
	void SetBotSkill(float NewSkill);
	class AAIController_TA* SpawnBotController();
	class APlayerController_TA* GetLocalPrimaryPlayer();
	void AddBot(class AAIController_TA* Bot, class UProductAsset_Bot_TA* BotAsset);
	bool GetGeneratedBotName(struct FString& Out_BotName);
	class AAIController_TA* SpawnBot();
	class UProductAsset_Bot_TA* ChooseBotAsset(class AAIController_TA* Bot);
	bool HasPlayerNamed(struct FString PlayerName);
	void RandomizeBots();
	bool MoveToGround(class AActor* Mover, float HeightCheck);
	void SetAllDriving(unsigned long bDriving);
	void eventDestroyed();
	void OnFinished();
	void StartEvent();
	void StartCountDown();
	void StartInitialCountDown();
	void OnGameStateTimeLapsed();
	void OnGameStateTimeUpdated();
	void UpdateGameStateTime();
	void SetGameStateTimeRemaining(int StateTime, unsigned long bFromReplication);
	void SetGameStateTime(int StateTime);
	class UGameState_TA* GetGameState(struct FName StateName);
	void SetGameStateComponents(struct FName StateName);
	void GotoStateInternal(struct FName StateName);
	void GotoGameState(struct FName StateName);
	void OnPlayerRestarted(class ACar_TA* PlayerCar);
	void TeleportCar(class ACar_TA* PlayerCar);
	void OnCarSpawned(class ACar_TA* NewCar);
	class ACar_TA* SpawnCar(class AController* NewPlayer, struct FVector SpawnLoc, struct FRotator SpawnRot);
	bool FindValidCarSpawnOffset(struct FRotator StartRotation, int TestCount, struct FVector& out_Location);
	bool SpotIsEncroached(struct FVector Spot);
	bool GetSpawnOrientation(class AController* ForPlayer, struct FVector& out_Location, struct FRotator& out_Rotation);
	void RandomizeSpawnPoints();
	bool RestartPlayer(class AController* NewPlayer);
	bool PlayerCanRestart(class AController* aPlayer);
	void RestartPlayers();
	void RemoveLocalPlayer(class APlayerController_TA* Player);
	void AddLocalPlayer(class APlayerController_TA* Player);
	void RemovePRI(class APRI_TA* PRI);
	void AddPRI(class APRI_TA* PRI);
	void AddForfeitInitiator(struct FUniqueNetId PlayerID);
	void BanPlayerID(struct FUniqueNetId PlayerID);
	void BanConnection(class UNetConnection* Connection);
	void OnPlayerRemoved(class AController* OldPlayer);
	void RemovePlayer(class AController* Player);
	int GetMaxHumans();
	int GetNumHumans();
	void AddPlayers(TArray<class AController*> PlayersToAdd);
	bool ReplacePlayer(class APRI_TA* NewPlayer, struct FVector& CarLocation, struct FRotator& CarRotation, struct FVector& CarVelocity);
	bool ReplaceBot(class APRI_TA* PRI, class APRI_TA* Replace, struct FVector& CarLocation, struct FRotator& CarRotation, struct FVector& CarVelocity);
	bool FindBotReplacement(class APRI_TA* PRI);
	void UpdateBotCount();
	void TimerUpdateBotCount();
	void HandleSelectedLoadout(class APRI_TA* PlayerPRI);
	void OnPlayerAdded(class AController* NewPlayer);
	bool AddPlayer(class AController* Player, class UMessage_TA*& ErrorMsg);
	void ResetPickups();
	void ResetPlayers();
	void DestroyCars();
	bool IsAIDebugger(class AController* C);
	void OnInit();
	void HandleAverageSkillChanged(class UOnlineGameDedicatedServer_X* Server);
	void InitBotSkill();
	void MutateObject(class UObject* O);
	bool HasMutatorType(class UClass* MutatorClass);
	bool HasMutatorNamed(struct FName MutatorName);
	void InitMutators();
	TArray<class UMutator_TA*> GetOnlineGameSettingsMutators();
	void HandleDestroyed(class AGameEvent_TA* GameEvent);
	void Init(class APlayerController_TA* InActivator);
	class UClass* GetMatchTypeFromOptions(struct FString Options);
	void InitListenServer();
	void eventInitGame(struct FString Options);
	bool PlayerCanStartEvent(class APlayerController_TA* InActivator, class UMessage_TA*& ErrorMsg);
	class UOnlineGame_Base_X* GetOnlineGame();
	void NotifyKismetGameStateChanged();
	void OnGameStateChanged();
	void OnCanVoteForfeitChanged();
	void UpdateCanVoteToForfeit();
	bool ShouldAllowVoteToForfeit();
	void OnPenaltyChanged();
	void UpdateLeaveMatchPenalty();
	class UGameSettingPlaylist_X* GetPlaylist();
	bool ShouldHaveLeaveMatchPenalty();
	class UGameMetrics_TA* GetMetrics();
	void OnMatchSettingsChanged();
	void SetCustomMatchSettings(struct FCustomMatchSettings NewSettings);
	void ClearGameScoreFromCustomSettings();
	void eventReplicatedEvent(struct FName VarName);
	struct FString MatchGUID();
	void eventPostBeginPlay();
	void EventPlayerResetTraining(class AGameEvent_TA* GameEvent);
	void EventMatchSettingsChanged(class AGameEvent_TA* GameEvent, struct FCustomMatchSettings NewMatchSettings);
	void EventLocalPlayersChanged(class AGameEvent_TA* GameEvent);
	void EventMatchTypeSet(class AGameEvent_TA* GameEvent);
	void EventGameOwnerUpdated(class AGameEvent_TA* GameEvent, class APRI_TA* NewGameOwner);
	void EventCountDownTimeUpdated(class AGameEvent_TA* GameEvent, int Seconds);
	void EventCanVoteForfeitChanged(class AGameEvent_TA* GameEvent);
	void EventPenaltyChanged(class AGameEvent_TA* GameEvent);
	void EventReplicatedDemolish(class AGameEvent_TA* GameEvent, struct FDemolishData Data);
	void EventCarRemoved(class AGameEvent_TA* GameEvent, class ACar_TA* Car);
	void EventCarAdded(class AGameEvent_TA* GameEvent, class ACar_TA* Car);
	void EventPlayerRemoved(class AGameEvent_TA* GameEvent, class APRI_TA* PRI);
	void EventPlayerAdded(class AGameEvent_TA* GameEvent, class APRI_TA* PRI);
	void EventPlayerRestarted(class AGameEvent_TA* GameEvent, class ACar_TA* PlayerCar);
	void EventDestroyed(class AGameEvent_TA* GameEvent);
	void EventFinished(class AGameEvent_TA* GameEvent);
	void EventGameStateTimeUpdated(class AGameEvent_TA* GameEvent);
	void EventGameStateChanged(class AGameEvent_TA* GameEvent);
	void EventMatchStarted(class AGameEvent_TA* GameEvent);
};

// Class TAGame.GameEvent_Team_TA
// 0x0068 (0x0700 - 0x0768)
class AGameEvent_Team_TA : public AGameEvent_TA
{
public:
	TArray<class ATeam_TA*>                            TeamArchetypes;                                   		// 0x0700 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class ATeam_TA*>                            Teams;                                            		// 0x0710 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                MaxTeamSize;                                      		// 0x0720 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int                                                NumBots;                                          		// 0x0724 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bMuteOppositeTeams : 1;                           		// 0x0728 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bDisableMutingOtherTeam : 1;                      		// 0x0728 (0x0004) [0x0000000000002020] [0x00000002] (CPF_Net | CPF_Transient)
	unsigned long                                      bForfeit : 1;                                     		// 0x0728 (0x0004) [0x0000000000002020] [0x00000004] (CPF_Net | CPF_Transient)
	unsigned long                                      bUnfairTeams : 1;                                 		// 0x0728 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	unsigned long                                      bAlwaysAutoSelectTeam : 1;                        		// 0x0728 (0x0004) [0x0000000000000000] [0x00000010] 
	class AVoteActor_TA*                               RematchVoteArchetype;                             		// 0x0730 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AVoteActor_TA*                               RematchVote;                                      		// 0x0738 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class UProductAsset_TA*>                    PreloadedBotAssets;                               		// 0x0740 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTeamsCreated__Delegate;                    		// 0x0750 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Team_TA");
		}

		return uClassPointer;
	};

	void StartRematchVote();
	void CheckRematchVote();
	bool __GameEvent_Team_TA__AllTeamsHaveHumans_53A74DDB4984FE784F32E884BC1085AB(class ATeam_TA* Team);
	void UpdatePlayerShortcuts();
	void ClearTemporarySpawnSpots();
	void ResetPlayers();
	class ATeam_TA* GetOtherTeam(class ATeamInfo* Team);
	bool ChooseTeam(int TeamIndex, class APlayerController_TA* Player);
	void OnPenaltyChanged();
	void OnTeamForfeited(class ATeam_TA* Team);
	void HandleTeamForfeit(class ATeam_TA* Team);
	void MuteOppositeTeams(unsigned long bMute);
	void UpdateBotCount();
	bool ReplacePlayer(class APRI_TA* PRI, struct FVector& CarLocation, struct FRotator& CarRotation, struct FVector& CarVelocity);
	bool ReplaceBot(class APRI_TA* PRI, class APRI_TA* Replace, struct FVector& CarLocation, struct FRotator& CarRotation, struct FVector& CarVelocity);
	bool FindBotReplacement(class APRI_TA* PRI);
	void EndGame();
	void ForceNoContest();
	void CheckForForfeit(class AController* RemovedPlayer, class ATeam_TA* Team);
	void OnPlayerRemoved(class AController* OldPlayer);
	class ATeam_TA* PickTeam(class AController* C);
	bool ShouldAutoSelectTeam(class AController* NewPlayer);
	void AddTemporarySpawnSpot(class ATeam_TA* Team, class ACar_TA* Car);
	bool RestartPlayer(class AController* NewPlayer);
	void SetPlayerTeam(class AController* Player, int Team);
	void RemovePlayerFromTeam(class AController* Player);
	void AddPlayerToTeam(class ATeam_TA* NewTeam, class AController* NewPlayer);
	void HandleSelectedLoadout(class APRI_TA* PlayerPRI);
	void OnPlayerAdded(class AController* NewPlayer);
	void eventDestroyed();
	void DestroyTeams();
	void NotifyAllTeamsCreated(struct FScriptDelegate Callback);
	void OnAllTeamsCreated();
	void AssignCustomTeamSettings();
	void OnMatchSettingsChanged();
	bool AllTeamsHaveHumans();
	bool AllTeamsCreated();
	void SetTeam(int TeamNum, class ATeam_TA* NewTeam);
	void CreateTeams();
	void PreloadBot(class UProductAsset_Bot_TA* Bot);
	void PreloadBots();
	void OnInit();
	void SetMaxTeamSize(int MaxSize);
	void UpdateMaxTeamSize();
	void SetUnfairTeams(unsigned long bUnfair);
	void InitBotSkill();
	void eventInitGame(struct FString Options);
	void EventTeamsCreated(class AGameEvent_Team_TA* GameEvent);
};

// Class TAGame.GameMode_TA
// 0x0048 (0x0060 - 0x00A8)
class UGameMode_TA : public UObject
{
public:
	class AGameInfo*                                   GameArchetype;                                    		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMapSet_TA*                                  MapSet;                                           		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMapSet_TA*                                  FreeplayMapSet;                                   		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMapSet_TA*                                  StandardMapSet;                                   		// 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FName>                               DisallowedMutatorCategories;                      		// 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UClass*                                      GameInfoClass;                                    		// 0x0090 (0x0008) [0x0000000000000000]               
	struct FString                                     GameArchetypePath;                                		// 0x0098 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameMode_TA");
		}

		return uClassPointer;
	};

	struct FString GetLocalizedName();
};

// Class TAGame.GameModeList_TA
// 0x0010 (0x0060 - 0x0070)
class UGameModeList_TA : public UObject
{
public:
	TArray<class UGameMode_TA*>                        GameModes;                                        		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameModeList_TA");
		}

		return uClassPointer;
	};

	class UGameMode_TA* GetGameModeForFreeplayMap(struct FName MapName);
	class UGameMode_TA* GetGameModeForClass(class UClass* GameInfoClass);
	class UMapSet_TA* GetStandardMapSet(int GameModeIndex);
	class UMapSet_TA* GetMapSet(int GameModeIndex);
	struct FString GetGameURL(int GameModeIndex);
};

// Class TAGame.GameObserver_TA
// 0x0194 (0x00A4 - 0x0238)
class UGameObserver_TA : public UActorComponent_X
{
public:
	float                                              HitTimeToBallMin;                                 		// 0x00A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              HitTimeToBallMax;                                 		// 0x00AC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              HitPredictDistMax;                                		// 0x00B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              HitPredictDistMin;                                		// 0x00B4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OffenseDotBetweenMin;                             		// 0x00B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OffenseDotBetweenMax;                             		// 0x00BC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OffenseDistToGoalMin;                             		// 0x00C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OffenseDistToGoalMax;                             		// 0x00C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OffenseDistToBallMin;                             		// 0x00C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OffenseDistToBallMax;                             		// 0x00CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DefenseDotBetweenMin;                             		// 0x00D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DefenseDotBetweenMax;                             		// 0x00D4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DefenseDistToGoalMin;                             		// 0x00D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DefenseDistToGoalMax;                             		// 0x00DC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DefenseDistToBallMin;                             		// 0x00E0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DefenseDistToBallMax;                             		// 0x00E4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ScorabilityDistToBallMin;                         		// 0x00E8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ScorabilityDistToBallMax;                         		// 0x00EC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ScorabilityDistToBallWeight;                      		// 0x00F0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ScorabilityDotToBallMin;                          		// 0x00F4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ScorabilityDotToBallMax;                          		// 0x00F8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ScorabilityDotToBallWeight;                       		// 0x00FC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ScorabilityOffenseWeight;                         		// 0x0100 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ScorabilityDefenseWeight;                         		// 0x0104 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CarBallAerialBlend;                               		// 0x0108 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxAerialHitProbability;                          		// 0x010C (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bDebugCarData : 1;                                		// 0x0110 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bDebugGoalData : 1;                               		// 0x0110 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bDebugBallData : 1;                               		// 0x0110 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bDebugPrediction : 1;                             		// 0x0110 (0x0004) [0x0000000000000000] [0x00000008] 
	TArray<struct FCarData>                            RelevantCars;                                     		// 0x0118 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FGoalData>                           RelevantGoals;                                    		// 0x0128 (0x0010) [0x0000000000480000] (CPF_Component | CPF_NeedCtorLink)
	float                                              MinAerialAltitude;                                		// 0x0138 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxAerialAltitude;                                		// 0x013C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AerialLikelyhood;                                 		// 0x0140 (0x0004) [0x0000000000000000]               
	float                                              MaxCalculatedTimeToBall;                          		// 0x0144 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FBallData                                   RelevantBall;                                     		// 0x0148 (0x0020) [0x0000000000000000]               
	TArray<class UObject*>                             Listeners;                                        		// 0x0168 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              HighestScorability;                               		// 0x0178 (0x0004) [0x0000000000000000]               
	float                                              ClosestBallToGoal;                                		// 0x017C (0x0004) [0x0000000000000000]               
	struct FCarData                                    HighestAerialCar;                                 		// 0x0180 (0x0058) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FGoalData                                   ClosestGoalToBall;                                		// 0x01D8 (0x0048) [0x0000000000080000] (CPF_Component)
	struct FScriptDelegate                             __EventCarHitBall__Delegate;                      		// 0x0220 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameObserver_TA");
		}

		return uClassPointer;
	};

	void __GameObserver_TA__InitCars_1B3FD935489A4234F4D76986CC12165C(class ACar_TA* C);
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void eventDrawGoalData(struct FGoalData Data);
	void eventDrawCarData(struct FCarData Data);
	void eventDrawBallData(struct FBallData Data);
	float GetAerialSkill(float Altitude);
	struct FVector GetLocationAtTime(class ARBActor_TA* InActor, float inTime);
	struct FVector ClampLocationToGoal(class UGoal_TA* InGoal, struct FVector InLocation);
	void GetCarGoalData(class AVehicle_TA* ForCar, struct FGoalData& ForGoal, struct FCarGoalData& Data);
	struct FGoalData GetOffensiveGoal(class AVehicle_TA* ForCar);
	struct FGoalData GetDefensiveGoal(class AVehicle_TA* ForCar);
	void UpdateCarData(float DeltaTime, struct FCarData& Data);
	struct FCarData GetCarDataForPRI(class APRI_TA* PRI);
	struct FCarData GetCarData(class AVehicle_TA* ForCar);
	void UpdateCarsData(float DeltaTime);
	void UpdateGoalData(float DeltaTime, struct FGoalData& Data);
	void UpdateGoalsData(float DeltaTime);
	void UpdateBallData();
	void eventTick(float DeltaTime);
	class AGameEvent_Soccar_TA* GetSoccarEvent();
	class ABall_TA* GetBall();
	void HandleCarHitBall(class ACar_TA* InCar, class ABall_TA* InBall, struct FVector HitLocation, struct FVector HitNormal);
	void HandleCarRemoved(class AGameEvent_TA* G, class ACar_TA* InCar);
	void HandleCarAdded(class AGameEvent_TA* G, class ACar_TA* InCar);
	void InitCars();
	void HandleBallRemoved(class AGameEvent_Soccar_TA* InGameEvent, class ABall_TA* InBall);
	void HandleBallAdded(class AGameEvent_Soccar_TA* InGameEvent, class ABall_TA* InBall);
	void InitBall();
	void InitFieldProperties();
	void eventAttached();
	void EventCarHitBall(class ACar_TA* InCar, class ABall_TA* InBall);
};

// Class TAGame.GameShare_TA
// 0x00D8 (0x0060 - 0x0138)
class UGameShare_TA : public UObject
{
public:
	class UMaxActorsGroup_TA*                          CarEngineAudioGroup;                              		// 0x0060 (0x0008) [0x000000000408000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline)
	TArray<class UMaterialInstance*>                   BallPositionMaterialInstances;                    		// 0x0068 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class AVehiclePickup_Boost_TA*>             ActiveBoostPills;                                 		// 0x0078 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long                                      bHideWorldUI : 1;                                 		// 0x0088 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	TArray<class UNameplateComponent_TA*>              Nameplates;                                       		// 0x0090 (0x0010) [0x0000000004482008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	TArray<class ACarPreviewActor_TA*>                 CarPreviewActors;                                 		// 0x00A0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UAkSoundSource*>                      SoundSourcePool;                                  		// 0x00B0 (0x0010) [0x000000000448200A] (CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	struct FScriptDelegate                             __EventHideWorldUIChanged__Delegate;              		// 0x00C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventNameplateAdded__Delegate;                  		// 0x00D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventNameplateRemoved__Delegate;                		// 0x00F0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventCarPreviewActorAdded__Delegate;            		// 0x0108 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventCarPreviewActorRemoved__Delegate;          		// 0x0120 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameShare_TA");
		}

		return uClassPointer;
	};

	void NotifyCarPreviewActorAdded(struct FScriptDelegate Callback);
	void RemoveCarPreviewActor(class ACarPreviewActor_TA* PreviewCar);
	void AddCarPreviewActor(class ACarPreviewActor_TA* PreviewCar);
	void RemoveNameplate(class UNameplateComponent_TA* Nameplate);
	void AddNameplate(class UNameplateComponent_TA* Nameplate);
	void SetWorldUIHidden(unsigned long bHidden);
	void NotifyHideWorldUIChanged(struct FScriptDelegate Callback);
	void EventCarPreviewActorRemoved(class UGameShare_TA* GameShare, class ACarPreviewActor_TA* PreviewCar);
	void EventCarPreviewActorAdded(class UGameShare_TA* GameShare, class ACarPreviewActor_TA* PreviewCar);
	void EventNameplateRemoved(class UGameShare_TA* GameShare, class UNameplateComponent_TA* NameplateComponent);
	void EventNameplateAdded(class UGameShare_TA* GameShare, class UNameplateComponent_TA* NameplateComponent);
	void EventHideWorldUIChanged(class UGameShare_TA* GameShare);
	class UAkSoundSource* GetPooledSoundSource();
};

// Class TAGame.GameViewportClient_TA
// 0x00D8 (0x02B0 - 0x0388)
class UGameViewportClient_TA : public UGameViewportClient_X
{
public:
	unsigned long                                      bSplitScreenDisabled : 1;                         		// 0x02B0 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bUpdateSplitscreenSizes : 1;                      		// 0x02B0 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bDrawWorldFullScreen : 1;                         		// 0x02B0 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	unsigned long                                      bDrawBuildInfo : 1;                               		// 0x02B0 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	TArray<float>                                      LastSplitJoinTryTimes;                            		// 0x02B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              UIScaleModifier;                                  		// 0x02C8 (0x0004) [0x0000000000000000]               
	float                                              NameplateScaleModifier;                           		// 0x02CC (0x0004) [0x0000000000000000]               
	class AGameEvent_TA*                               GameEvent;                                        		// 0x02D0 (0x0008) [0x0000000000000000]               
	class UOnlineGame_X*                               OnlineGame;                                       		// 0x02D8 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventPostInit__Delegate;                        		// 0x02E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSplitScreenTypeChanged__Delegate;          		// 0x02F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventDrawWorldFullScreenChanged__Delegate;      		// 0x0310 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventUIScaleModifierUpdated__Delegate;          		// 0x0328 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSafeZoneRatioUpdated__Delegate;            		// 0x0340 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventUpdatedNumLocalPlayers__Delegate;          		// 0x0358 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventNameplateScaleModifierUpdated__Delegate;   		// 0x0370 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameViewportClient_TA");
		}

		return uClassPointer;
	};

	void __GameViewportClient_TA__Init_C5B2F51C46D061DA82E0728EF1CE16BA();
	void __GameViewportClient_TA__Init_D6FE26B149D90FF18B1FB2A1D7AC990D(unsigned long bIsOpening);
	void __GameViewportClient_TA__Init_E61DA0694CD61DBF67DDD7BE0DAD8FA9(class AGameEvent_TA* _);
	void __GameViewportClient_TA__Init_1870A34F4E04F5C5976E4BB2B1CA5912(class ULocalPlayer* _);
	void __GameViewportClient_TA__Init_7126C4F24084A3C7EA5DB3A01AD9E02F(class ULocalPlayer* _);
	int __GameViewportClient_TA__AddSplitScreenPlayer_8C716793472EAC52D24A0C8F38C52CAA(class ULocalPlayer* LP);
	void eventSetProgressMessage(unsigned char MessageType, struct FString Message, struct FString Title, unsigned long bIgnoreFutureNetworkMessages);
	void NotifyPlayerRemoved(int PlayerIndex, class ULocalPlayer* RemovedPlayer);
	void SetNameplateScaleModifier(float Value);
	void SetUIScaleModifier(float Value);
	void SetSafeZone(float Value);
	void HandlePrimaryPlayerChange(class ULocalPlayer* OldPrimary, class ULocalPlayer* NewPrimary);
	int GetLocalPlayerCount();
	void NotifyOnNumLocalPlayersUpdated(struct FScriptDelegate Callback);
	void UpdateNumLocalPlayers();
	float GetAspectRatio(class ULocalPlayer* Player);
	class ULocalPlayer* eventCreatePlayer(int ControllerId, unsigned long bSpawnActor, struct FString& OutError);
	void AddSplitScreenPlayer();
	void HandleUserSignInComplete_CreateSplitScreenPlayer(unsigned char LocalUserNum);
	void InitiateAsyncLoginForSplitscreen(int ControllerId);
	bool HandleSplitScreenJoinAsync(int ControllerId);
	bool HandleKeyPress(int ControllerId, struct FName Key, unsigned char EventType, float AmountDepressed, unsigned long bGamepad);
	void SplitscreenJoinResponse(struct FUniqueNetId PlayerID, unsigned long bAllow, struct FString Error);
	void RequestSplitscreenJoin(int ControllerId);
	bool AllowTournamentSplitscreen(int ControllerId);
	bool GameEventAllowSplitScreenPlayer();
	void CreateSplitScreenPlayer(int ControllerId);
	void HandleSplitscreenJoinPrivilegeCheck(class UPrivilegeCheck_X* PrivilegeCheck);
	void TryToCreateSplitScreenPlayer(int ControllerId);
	void HandleUserSwitchComplete(unsigned char LocalUserNum);
	bool IsPlayingOnline();
	bool GameWantsFullScreen();
	void eventLayoutPlayers();
	void SetSplitscreenSizes();
	class APlayerControllerBase_TA* GetPrimaryPlayerController();
	void UpdateActiveSplitscreenType();
	void DrawTransition(class UCanvas* Canvas);
	void NotifyConnectionError(unsigned char MessageType, struct FString Message, struct FString Title);
	bool eventInit(struct FString& OutError);
	void EventNameplateScaleModifierUpdated(class UGameViewportClient_TA* GVC);
	void EventUpdatedNumLocalPlayers(class UGameViewportClient_TA* GVC, int LocalPlayerCount);
	void EventSafeZoneRatioUpdated(class UGameViewportClient_TA* GVC);
	void EventUIScaleModifierUpdated(class UGameViewportClient_TA* GVC);
	void EventDrawWorldFullScreenChanged(class UGameViewportClient_TA* GVC);
	void EventSplitScreenTypeChanged(class UGameViewportClient_TA* GVC);
	void EventPostInit(class UGameViewportClient_TA* GVC);
};

// Class TAGame.GFxData_Personas_TA
// 0x0058 (0x0098 - 0x00F0)
class UGFxData_Personas_TA : public UGFxDataSingleton_X
{
public:
	struct FMap_Mirror                                 PersonaMap;                                       		// 0x0098 (0x0050) [0x0000000000001000] (CPF_Native)  
	class UPersonas_TA*                                PersonasData;                                     		// 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Personas_TA");
		}

		return uClassPointer;
	};

	int GetOrCreatePersonaDataFromID(struct FUniqueNetId PlayerID);
	class UGFxData_Persona_TA* GetOrCreatePersonaData(class UPersona_TA* Persona);
	void HandlePartyMemberAdded(class UOnlineGameParty_X* PartyObject, struct FUniqueNetId InMemberId);
	void HandleLocalPlayerAdded(class ULocalPlayer_TA* InLocalPlayer);
	class UGFxData_Persona_TA* GetOrCreateFromID(class UGFxShell_X* InShell, struct FUniqueNetId PlayerID);
	class UGFxData_Persona_TA* GetOrCreate(class UGFxShell_X* InShell, class UPersona_TA* Persona);
	void eventOnRemoved();
	void eventOnShellSet();
	int GetFromMap(struct FUniqueNetId PlayerID);
	void AddToMap(struct FUniqueNetId PlayerID, int RowIdx);
};

// Class TAGame.GFxEngine_TA
// 0x0028 (0x0190 - 0x01B8)
class UGFxEngine_TA : public UGFxEngine_X
{
public:
	TArray<struct FSoundStateItem>                     UISoundStates;                                    		// 0x0190 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long                                      bViewingOnlineScene : 1;                          		// 0x01A0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class ULoadingScreen_TA*                           LoadingScreen;                                    		// 0x01A8 (0x0008) [0x0000000000000000]               
	class UOnlineSubsystem*                            OnlineSubsystem;                                  		// 0x01B0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxEngine_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	int UISoundStatePrioritySort(struct FSoundStateItem A, struct FSoundStateItem B);
	void UpdateUISoundState();
	void OnShellDestroyed(class UGFxShell_X* Shell);
	void eventOnGameSessionEnded();
	void OnExternalUIChanged(unsigned long bIsOpening);
	unsigned char GetSoundStatePriority(struct FName StateName);
	void ClearUISoundState(class UGFxShell_X* Shell);
	void PopUISoundState(struct FName StateName, class UGFxShell_X* Shell);
	void PushUniqueUISoundState(struct FName StateName, class UGFxShell_X* Shell);
	void PushUISoundState(struct FName StateName, class UGFxShell_X* Shell);
	void InitOnlineSub();
	void Init();
};

// Class TAGame.GlobalLookupTexture_TA
// 0x007C (0x01B0 - 0x022C)
class UGlobalLookupTexture_TA : public UScriptedTexture
{
public:
	struct FIntVector                                  EnvironmentAPosition;                             		// 0x01B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FIntVector                                  EnvironmentBPosition;                             		// 0x01B8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FIntVector                                  SunlightPosition;                                 		// 0x01C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FIntVector                                  WorldLightPosition;                               		// 0x01C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int                                                TeamsPositionX;                                   		// 0x01D0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int                                                PlayersPositionX;                                 		// 0x01D4 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	TArray<struct FLinearColor>                        TopTeamColors;                                    		// 0x01D8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FLinearColor>                        BottomTeamColors;                                 		// 0x01E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UObject*>                             Players;                                          		// 0x01F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FLinearColor>                        TopPlayerColors;                                  		// 0x0208 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FLinearColor>                        BottomPlayerColors;                               		// 0x0218 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long                                      bDebug : 1;                                       		// 0x0228 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GlobalLookupTexture_TA");
		}

		return uClassPointer;
	};

	void OnRender(class UCanvas* Canvas);
	struct FLinearColor GetFullBrightColor(struct FLinearColor InColor, float ValueScale);
	void Update();
	void SetTeamColors(int Team, struct FLinearColor Primary, struct FLinearColor Secondary);
	void RemovePlayer(class UObject* Player);
	float AddPlayer(class UObject* Player, struct FLinearColor Primary, struct FLinearColor Secondary);
};

// Class TAGame.Goal_TA
// 0x011C (0x00A4 - 0x01C0)
class UGoal_TA : public UActorComponent_X
{
public:
	class AActor*                                      GoalOrientation;                                  		// 0x00A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class AActor*                                      ReplayOrientation;                                		// 0x00B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	TArray<class AActor*>                              OverrideGoalIndicatorOrientations;                		// 0x00B8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FVector                                     SaveCheckDirectionOffset;                         		// 0x00C8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              EpicSaveMinSpeed;                                 		// 0x00D4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              EpicSaveArriveTime;                               		// 0x00D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      TeamNum;                                          		// 0x00DC (0x0001) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_X*                                  ScoreFX;                                          		// 0x00E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FString                                     GoalIndicatorArchetype;                           		// 0x00E8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	unsigned long                                      bNoGoalIndicator : 1;                             		// 0x00F8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bOnlyGoalsFromDirection : 1;                      		// 0x00F8 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bAllowPostMatchLobbyReset : 1;                    		// 0x00F8 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	unsigned long                                      bEnabled : 1;                                     		// 0x00F8 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	unsigned long                                      bShowFocusExtent : 1;                             		// 0x00F8 (0x0004) [0x0000000000000001] [0x00000010] (CPF_Edit)
	class AActor*                                      GoalDirection;                                    		// 0x0100 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int                                                PointsToAward;                                    		// 0x0108 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     AutoCamFocusExtent;                               		// 0x010C (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     GoalFocusLocationOffset;                          		// 0x0118 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxGoalScorerAttachRadius;                        		// 0x0124 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     GoalScoredDotDirection;                           		// 0x0128 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              MinAttachGoalToScorerDot;                         		// 0x0134 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     Location;                                         		// 0x0138 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     Direction;                                        		// 0x0144 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     Right;                                            		// 0x0150 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     Up;                                               		// 0x015C (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    Rotation;                                         		// 0x0168 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     LocalExtent;                                      		// 0x0174 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     WorldCenter;                                      		// 0x0180 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     WorldExtent;                                      		// 0x018C (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     WorldFrontCenter;                                 		// 0x0198 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FBox                                        WorldBox;                                         		// 0x01A4 (0x001C) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Goal_TA");
		}

		return uClassPointer;
	};

	void SetEnabled(unsigned long bValue);
	struct FVector GetSaveCheckDirection();
	struct FVector GetGoalFocusExtentCenter();
	class AActor* GetReplayOrientation();
	class AActor* GetGoalOverrideOrientationFromBallLocation(class ABall_TA* Ball);
	void Init();
	void eventBeginPlay();
};

// Class TAGame.GroundStaticMeshActor_TA
// 0x0004 (0x0288 - 0x028C)
class AGroundStaticMeshActor_TA : public AStaticMeshActor
{
public:
	float                                              HideLocationOffset;                               		// 0x0288 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GroundStaticMeshActor_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.HandlingPreset_TA
// 0x0080 (0x0060 - 0x00E0)
class UHandlingPreset_TA : public UObject
{
public:
	struct FVehicleAxleData                            FrontAxle;                                        		// 0x0060 (0x0014) [0x0000000000000001] (CPF_Edit)    
	struct FVehicleAxleData                            BackAxle;                                         		// 0x0074 (0x0014) [0x0000000000000001] (CPF_Edit)    
	class UPhysicsAsset*                               PhysAsset;                                        		// 0x0088 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FSimpleSpringSettings                       ChassisSpringDefaults;                            		// 0x0090 (0x0050) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.HandlingPreset_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.HideLevelAssetsBase_TA
// 0x0020 (0x0268 - 0x0288)
class AHideLevelAssetsBase_TA : public AActor
{
public:
	TArray<class AActor*>                              ActorsInLevel;                                    		// 0x0268 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UClass*>                              ActorClasses;                                     		// 0x0278 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.HideLevelAssetsBase_TA");
		}

		return uClassPointer;
	};

	void FindLevelActors();
};

// Class TAGame.GreenScreen_TA
// 0x0014 (0x0288 - 0x029C)
class AGreenScreen_TA : public AHideLevelAssetsBase_TA
{
public:
	TArray<class UPrimitiveComponent*>                 HiddenPrimitives;                                 		// 0x0288 (0x0010) [0x0000000004480008] (CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	unsigned long                                      bOn : 1;                                          		// 0x0298 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GreenScreen_TA");
		}

		return uClassPointer;
	};

	void ChangeBackgroundColor(float R, float G, float B);
	void End(unsigned long bUseSystemSettings);
	void Start(float R, float G, float B, unsigned long bUseSystemSetting);
};

// Class TAGame.ToggleActorVisibility_TA
// 0x0000 (0x0288 - 0x0288)
class AToggleActorVisibility_TA : public AHideLevelAssetsBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ToggleActorVisibility_TA");
		}

		return uClassPointer;
	};

	void ToggleActorVisibility(int Index);
};

// Class TAGame.ICanEquip_TA
// 0x0000 (0x0060 - 0x0060)
class UICanEquip_TA : public UInterface
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ICanEquip_TA");
		}

		return uClassPointer;
	};

	bool CanEquip(TArray<int>& EquippedProducts);
};

// Class TAGame.IdenticalProductCache_TA
// 0x0050 (0x0070 - 0x00C0)
class UIdenticalProductCache_TA : public UComponent
{
public:
	struct FMap_Mirror                                 Products;                                         		// 0x0070 (0x0050) [0x0000000000003002] (CPF_Const | CPF_Native | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IdenticalProductCache_TA");
		}

		return uClassPointer;
	};

	TArray<class UOnlineProduct_TA*> FindProductsWithIdenticalAttributes(class UOnlineProduct_TA* OnlineProduct, TArray<class UClass*> AttributesToIgnore);
	class UOnlineProduct_TA* FindProduct(unsigned long long InstanceID);
	class UOnlineProduct_TA* FindProductFromHash(struct FProductHashID HashID);
	TArray<class UOnlineProduct_TA*> GetProductsFromHash(struct FProductHashID HashID);
	TArray<class UOnlineProduct_TA*> MapHashIDs(TArray<struct FProductHashID>& HashIDs);
	TArray<class UOnlineProduct_TA*> GetUniqueProducts();
	TArray<class UOnlineProduct_TA*> GetAllProducts();
	TArray<unsigned long long> GetAllInstanceIDs();
	TArray<class UOnlineProduct_TA*> GetIdentical(class UOnlineProduct_TA* Product);
	int GetQuantity(class UOnlineProduct_TA* Product);
	int GetNumProducts();
	bool HasAnyProducts();
	void Clear();
	void RemoveInstanceID(unsigned long long InstanceID);
	void Remove(class UOnlineProduct_TA* OnlineProduct);
	void Add(class UOnlineProduct_TA* OnlineProduct);
	void Append(class UIdenticalProductCache_TA* ProductCache);
	void Set(TArray<class UOnlineProduct_TA*>& OnlineProducts);
};

// Class TAGame.ImpactEffectsComponent_TA
// 0x0154 (0x00A4 - 0x01F8)
class UImpactEffectsComponent_TA : public UActorComponent_X
{
public:
	int                                                SoundPriority;                                    		// 0x00A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UEffectsMap_X*                               ImpactEffectsMap;                                 		// 0x00B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 AkImpactSound;                                    		// 0x00B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 AkSlideSound;                                     		// 0x00C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              AkSlideSoundDelay;                                		// 0x00C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AkSlideMomentumMin;                               		// 0x00CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       AkImpactTypeKey;                                  		// 0x00D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       AkImpactIntensityKey;                             		// 0x00D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              MinImpactMomentum;                                		// 0x00E0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinImpactDelay;                                   		// 0x00E4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UCameraShake*                                ImpactCameraShake;                                		// 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UForceFeedbackWaveform*                      ImpactForceFeedback;                              		// 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           ShakeScaleCurve;                                  		// 0x00F8 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              LastWorldImpactTime;                              		// 0x0110 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastActorImpactTime;                              		// 0x0114 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              SlideTime;                                        		// 0x0118 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UParticleSystemComponent*                    SlideParticleComponent;                           		// 0x0120 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UAkPlaySoundComponent*                       SlideAudioComponent;                              		// 0x0128 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UShakeComponent_X*                           ShakeComponent;                                   		// 0x0130 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	struct FCollisionEffectData                        LastCollisionEffectData;                          		// 0x0138 (0x0058) [0x0000000000002000] (CPF_Transient)
	struct FCollisionEffectData                        SlideCollisionEffectData;                         		// 0x0190 (0x0058) [0x0000000000002000] (CPF_Transient)
	class UPhysicalMaterialProperty_TA*                SlidePhysMatProp;                                 		// 0x01E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UArenaReflectionsManager_TA*                 SlapbackManager;                                  		// 0x01F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ImpactEffectsComponent_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	class UParticleSystemComponent* eventPlayPooledParticle(class UParticleSystem* Template, struct FVector Location, struct FRotator Rotation, class AActor* AttachTo);
	void HandleCollision(struct FAccumulatedRigidBodyCollision& Collision);
};

// Class TAGame.InputRecorder_TA
// 0x0044 (0x0268 - 0x02AC)
class AInputRecorder_TA : public AActor
{
public:
	struct FPointer                                    VfTable_IITickNotify_TA;                          		// 0x0268 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	float                                              MaxRecordTime;                                    		// 0x0270 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bRecording : 1;                                   		// 0x0274 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bPlaying : 1;                                     		// 0x0274 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	TArray<struct FReplicatedRBState>                  CarStates;                                        		// 0x0278 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FReplicatedRBState>                  BallStates;                                       		// 0x0288 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FVehicleInputs>                      Inputs;                                           		// 0x0298 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                InputIndex;                                       		// 0x02A8 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.InputRecorder_TA");
		}

		return uClassPointer;
	};

	void eventFinished();
	struct FReplicatedRBState eventGetBallState();
	struct FReplicatedRBState eventGetCarState();
	class ABall_TA* GetBall();
	class ACar_TA* GetCar();
	void StartPlayback();
	void StopRecord();
	void HandleDestroyed(class APawn_X* P);
	void StartRecord();
};

// Class TAGame.InterpTrackAnimControlWithSensibleDefault_TA
// 0x0004 (0x0114 - 0x0118)
class UInterpTrackAnimControlWithSensibleDefault_TA : public UInterpTrackAnimControl
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.InterpTrackAnimControlWithSensibleDefault_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.InterpTrackBoostToggle_TA
// 0x0040 (0x00DC - 0x011C)
class UInterpTrackBoostToggle_TA : public UInterpTrackToggle
{
public:
	class UProductAsset_Boost_TA*                      OverrideBoost;                                    		// 0x00E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<class UParticleSystemComponent*>            AttachedParticleSystems;                          		// 0x00E8 (0x0010) [0x0000000004480008] (CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	TArray<struct FName>                               AttachedSocketNames;                              		// 0x00F8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class AActor*                                      CurrentActor;                                     		// 0x0108 (0x0008) [0x0000000000000000]               
	class AFXActor_Boost_TA*                           CurrentBoostFX;                                   		// 0x0110 (0x0008) [0x0000000000000000]               
	unsigned long                                      bIsBoostActive : 1;                               		// 0x0118 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.InterpTrackBoostToggle_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.InterpTrackCameraShake_TA
// 0x0020 (0x00DC - 0x00FC)
class UInterpTrackCameraShake_TA : public UInterpTrackToggle
{
public:
	class UCameraShake*                                Shake;                                            		// 0x00E0 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	float                                              ShakeScale;                                       		// 0x00E8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      PlaySpace;                                        		// 0x00EC (0x0001) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    PlaySpaceRotation;                                		// 0x00F0 (0x000C) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.InterpTrackCameraShake_TA");
		}

		return uClassPointer;
	};

	void eventSetShakeActive(class UCameraModifier_CameraShake* InCameraShake, unsigned long bActive);
};

// Class TAGame.InterpTrackPostProcess_TA
// 0x02D4 (0x00DC - 0x03B0)
class UInterpTrackPostProcess_TA : public UInterpTrackToggle
{
public:
	struct FPostProcessSettings                        SettingsToApply;                                  		// 0x00E0 (0x0168) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FPostProcessSettings                        PreviousCameraSettings;                           		// 0x0248 (0x0168) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.InterpTrackPostProcess_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.InterpTrackPostProcessIntensity_TA
// 0x0000 (0x00F0 - 0x00F0)
class UInterpTrackPostProcessIntensity_TA : public UInterpTrackFloatProp
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.InterpTrackPostProcessIntensity_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.InterpTrackSkelControlRotation_TA
// 0x000D (0x00E4 - 0x00F1)
class UInterpTrackSkelControlRotation_TA : public UInterpTrackFloatBase
{
public:
	struct FName                                       SkelControlName;                                  		// 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      RotAxis;                                          		// 0x00F0 (0x0001) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.InterpTrackSkelControlRotation_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ItemDropGroup_TA
// 0x0050 (0x0060 - 0x00B0)
class UItemDropGroup_TA : public UObject
{
public:
	TArray<struct FCurrency>                           Currency;                                         		// 0x0060 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FProductDrop>                        Products;                                         		// 0x0070 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                XP;                                               		// 0x0080 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class UClass*                                      GFxDataClass;                                     		// 0x0088 (0x0008) [0x0000000000000002] (CPF_Const)   
	unsigned char                                      DisplayOrder;                                     		// 0x0090 (0x0001) [0x0000000000000000]               
	struct FScriptDelegate                             __EventItemDropGroupHandled__Delegate;            		// 0x0098 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ItemDropGroup_TA");
		}

		return uClassPointer;
	};

	bool IsValid();
	void InsertGroup(class UItemDropGroup_TA* NewGroup, TArray<class UItemDropGroup_TA*>& ItemDropGroups);
	void EventItemDropGroupHandled(class UItemDropGroup_TA* ItemDropGroup);
};

// Class TAGame.ITickNotify_TA
// 0x0000 (0x0060 - 0x0060)
class UITickNotify_TA : public UInterface
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ITickNotify_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.LightCurveType_TA
// 0x0004 (0x0060 - 0x0064)
class ULightCurveType_TA : public UObject
{
public:
	int                                                ParameterValue;                                   		// 0x0060 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.LightCurveType_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.LocalPlayer_TA
// 0x0070 (0x04D8 - 0x0548)
class ULocalPlayer_TA : public ULocalPlayer_X
{
public:
	class USaveGameManager_TA*                         SaveGameManager;                                  		// 0x04D8 (0x0008) [0x0000000000000000]               
	class UProfile_TA*                                 Profile;                                          		// 0x04E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UObjectProvider*                             ProfileObjectProvider;                            		// 0x04E8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	unsigned char                                      SplitScreenPosition;                              		// 0x04F0 (0x0001) [0x0000000000002000] (CPF_Transient)
	unsigned long long                                 SuspendingEventToken;                             		// 0x04F8 (0x0008) [0x0000000000000000]               
	unsigned long long                                 SignoutStartedEventToken;                         		// 0x0500 (0x0008) [0x0000000000000000]               
	unsigned long                                      bOpenedStartMenu : 1;                             		// 0x0508 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bPendingBroadcastLoadout : 1;                     		// 0x0508 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bPendingBroadcastProfile : 1;                     		// 0x0508 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	class UControllerLayoutStack*                      ControllerLayouts;                                		// 0x0510 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventProfileSet__Delegate;                      		// 0x0518 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSplitScreenPositionChanged__Delegate;      		// 0x0530 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.LocalPlayer_TA");
		}

		return uClassPointer;
	};

	void __LocalPlayer_TA__OnCreated_7F3F16264BF0BF5ECAC6A293FA3C3CBA(class UOnlineLegalText_X* O);
	void ApplyNetworkSettings(class UNetworkSave_TA* NetworkSave);
	class USaveData_TA* GetSaveData();
	class UObject* GetProfileObject(class UClass* saveClass);
	class UObject* GetSaveObject(class UClass* saveClass);
	void HandleNewEula(class UOnlineLegalText_X* Eula);
	void CheckForRankedReconnect();
	void SetOpenedStartMenu(unsigned long bOpen);
	void HandleOnlineLoginChanged(class UOnlinePlayerAuthentication_X* Auth);
	void UpdateRankedReconnect();
	void HandleGameStateChanged(class AGameEvent_TA* GameEvent);
	void ClearLoginDelegates();
	void OnContinueWithNoUser(class UGFxModal_X* Modal);
	void OnShowAccountPicker(class UGFxModal_X* Modal);
	void OnLoginCancelled();
	void OnLoginFailed(unsigned char LocalUserNum, unsigned char ErrorCode);
	void OnControllerPairingChanged(int NewLocalUserNum, int PreviousLocalUserNum);
	void OnLoginChange(unsigned char LocalUserNum);
	void OnEpicLoginChange(unsigned char LocalUserNum);
	void ForceSaveGame();
	bool IsControllerAssociatedWithLoggedInUser(unsigned char LocalUserNum);
	bool IsUserLoggedIn();
	void UnregisterUserStatusChangeFunctions();
	void RegisterUserStatusChangeFunctions();
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	unsigned char GetSplitScreenPosition(class UGameViewportClient* InViewportClient);
	void HandleSplitScreenTypeChanged(class UGameViewportClient_TA* InViewportClient);
	void NotifyWhenProfileSet(struct FScriptDelegate Callback);
	void SetProfile(class UProfile_TA* NewProfile);
	void SetDefaultProfile();
	void HandleSaveDataLoaded(class USaveGameManager_TA* Manager, class USaveData_TA* SaveData, class UError* Error);
	void HandleLocalPlayerLeave(class ULocalPlayer* Player);
	void HandlePreLoadMap(struct FString MapName);
	void HandleRegisteredController(int InLocalPlayerNum, int InControllerID);
	void OnRemoved();
	void OnCreated();
	struct FUniqueNetId eventGetUniqueNetId();
	struct FString eventGetNickname();
	void EventSplitScreenPositionChanged(class ULocalPlayer_TA* LocalPlayer);
	void EventProfileSet(class ULocalPlayer_TA* LocalPlayer);
};

// Class TAGame.MapData_TA
// 0x0018 (0x0060 - 0x0078)
class UMapData_TA : public UObject
{
public:
	class UTexture2D*                                  Thumbnail;                                        		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMapData_TA*                                 VariantOf;                                        		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      WeatherVariant;                                   		// 0x0070 (0x0001) [0x0000000000000001] (CPF_Edit)    
	float                                              RandomWeight;                                     		// 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MapData_TA");
		}

		return uClassPointer;
	};

	float __MapData_TA__PickRandomMap_67DA47FC4D0FB355787646B3BD7B4ECE(float Sum, class UMapData_TA* M);
	class UMapData_TA* GetNewMapData(struct FString MapName, float InRandomWeight, class UMapData_TA* InVariantOf, class UObject* Owner);
	class UMapData_TA* PickPreferredRandomMap(int NumPlayers, float ForcedIndexRandWeight, float ForcedMapRandWeight, TArray<class UMapData_TA*>& Maps, TArray<struct FName>& Likes, TArray<struct FName>& Dislikes);
	TArray<class UMapData_TA*> GetMapTypes(TArray<class UMapData_TA*> Maps);
	int GetWeightedIndex(TArray<float> PreferredWeights, float ForcedRandWeight);
	TArray<float> GetPreferredWeights(int NumPlayers, struct FName MapSetName, TArray<class UMapData_TA*>& Maps, TArray<struct FName>& Likes, TArray<struct FName>& Dislikes);
	TArray<float> GetWeightsFromPoints(TArray<class UMapData_TA*> Maps, TArray<int> Points, int NumPlayers, struct FName MapSetName);
	TArray<int> GetPoints(TArray<class UMapData_TA*> Maps, TArray<struct FName> Likes, TArray<struct FName> Dislikes);
	TArray<class UMapData_TA*> GetNonVariantMaps(TArray<class UMapData_TA*>& Maps);
	class UMapData_TA* PickRandomMap(TArray<class UMapData_TA*> Maps, float ForcedRandomWeight);
	struct FString GetLocalizedVariantName();
	struct FString GetLocalizedBaseName();
	struct FString eventGetLocalizedName();
};

// Class TAGame.MapDataLoader_TA
// 0x0020 (0x0060 - 0x0080)
class UMapDataLoader_TA : public UObject
{
public:
	TArray<struct FMapSelectorPair>                    MapSelectors;                                     		// 0x0060 (0x0010) [0x0000000000480000] (CPF_Component | CPF_NeedCtorLink)
	TArray<struct FMapImageLoadRequest>                MapImageLoadRequests;                             		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MapDataLoader_TA");
		}

		return uClassPointer;
	};

	void eventUpdateAvailableMaps();
	void LoadLargeMapImage(class UMapData_TA* Map, struct FScriptDelegate OnLoaded);
	class UMapSelector_TA* GetMapSelector(class UMapSet_TA* MapSet);
	class UMapDataLoader_TA* GetInstance();
};

// Class TAGame.MapList_TA
// 0x00A8 (0x0060 - 0x0108)
class UMapList_TA : public UObject
{
public:
	TArray<class UMapData_TA*>                         AllMaps;                                          		// 0x0060 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	TArray<class UMapData_TA*>                         AllMaps_Pristine;                                 		// 0x0070 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	TArray<class UMapData_TA*>                         SortedMaps;                                       		// 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class UMapData_TA*>                         SortedMaps_Pristine;                              		// 0x0090 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FName>                               AdditionalCookedMaps;                             		// 0x00A0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FMapGroup>                           MapGroups;                                        		// 0x00B0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FMapGroup>                           GeneratedMapGroups;                               		// 0x00C0 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	TArray<struct FMapGroup>                           GeneratedMapGroups_Pristine;                      		// 0x00D0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	class UMapSet_TA*                                  SelectableMaps;                                   		// 0x00E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMapSet_TA*                                  SeasonMaps;                                       		// 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMapSet_TA*                                  SeasonPlayoffsMaps;                               		// 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<class UMapSet_TA*>                          AllMapSets;                                       		// 0x00F8 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MapList_TA");
		}

		return uClassPointer;
	};

	TArray<class UMapData_TA*> GetSortedMaps(TArray<class UMapData_TA*> UnsortedMaps);
	class UMapData_TA* GetMap(struct FName MapName);
};

// Class TAGame.MapSet_TA
// 0x0060 (0x0060 - 0x00C0)
class UMapSet_TA : public UObject
{
public:
	TArray<class UMapSet_TA*>                          IncludeSets;                                      		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class UMapSet_TA*>                          ExcludeSets;                                      		// 0x0070 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class UMapData_TA*>                         IncludeMaps;                                      		// 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class UMapData_TA*>                         ExcludeMaps;                                      		// 0x0090 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class UMapData_TA*>                         Maps;                                             		// 0x00A0 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	TArray<class UMapData_TA*>                         Maps_Pristine;                                    		// 0x00B0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MapSet_TA");
		}

		return uClassPointer;
	};

	class UMapData_TA* GetMap(struct FName MapName);
	class UMapData_TA* GetRandomMap();
};

// Class TAGame.MatchBroadcast_TA
// 0x0038 (0x0268 - 0x02A0)
class AMatchBroadcast_TA : public AActor
{
public:
	class AGameEvent_Soccar_TA*                        GameEvent;                                        		// 0x0268 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	TArray<class APlayerReplicationInfo*>              RecordedPlayers;                                  		// 0x0270 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long                                      bBroadcasting : 1;                                		// 0x0280 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	struct FScriptDelegate                             __EventLog__Delegate;                             		// 0x0288 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchBroadcast_TA");
		}

		return uClassPointer;
	};

	struct FName __MatchBroadcast_TA__RecordStartEvents_37380AFF480D4C1E60E0F6B52406EDEE(class UMutator_TA* M);
	void eventClientLog(struct FString EventJson);
	void RecordFunction();
	int GetPlayerID(class APlayerReplicationInfo* PRI);
	void RecordMatchEnd();
	void RecordOvertime();
	void RecordPlayerStat(int PlayerID, struct FName Stat);
	void RecordPlayerAttackStat(int AttackerID, int VictimID, struct FName Stat, struct FVector AttackerLocation, struct FVector AttackerVelocity, struct FRotator AttackerRotation);
	void RecordPlayerHitBallStat(int PlayerID, struct FName Stat, float HitTime, struct FVector CarLocation, struct FVector CarVelocity, struct FRotator CarRotation, struct FVector BallLocation, struct FVector BallVelocity);
	void RecordGoalScored(int AttackingTeam, int DefendingTeam, struct FVector BallLocation, struct FVector BallVelocity);
	void RecordPlayerScoreHit(int PlayerID, float HitTime, struct FVector CarLocation, struct FVector CarVelocity, struct FRotator CarRotation, struct FVector BallLocation, struct FVector BallVelocity);
	void RecordTeamScore(int Team, int Score);
	void RecordLeaveTeam(int PlayerID);
	void RecordJoinTeam(int PlayerID, int Team);
	void RecordLeaveGame(int PlayerID);
	void RecordJoinServer(int PlayerID, struct FUniqueNetId PlayerNetId, struct FString PlayerName, struct FUniqueNetId PartyLeaderNetID, struct FString IP);
	void RecordJoinGame(int PlayerID, struct FUniqueNetId PlayerNetId, struct FString PlayerName);
	void RecordMatchStart(unsigned long long UTC, struct FString MapName, struct FName GameType, struct FName MatchType, int PlaylistId, TArray<struct FName> Mutators);
	float eventGetGameTimeSeconds();
	void HandleScoreUpdated(class ATeam_TA* Team);
	void RecordInitialScores();
	void RecordInitialPlayers();
	void RecordStartEvents();
	void HandleMatchEnded(class AGameEvent_Soccar_TA* G);
	void HandleOvertime(class AGameEvent_Soccar_TA* G);
	void HandleStat(class AStatFactory_TA* Factory, class APRI_TA* PRI, class UStatEvent_TA* StatEvent, class ABall_TA* Ball, int BallHitIndex, class APRI_TA* Victim);
	void HandleGoalScored(class AGameEvent_Soccar_TA* G, class ABall_TA* Ball, class UGoal_TA* Goal, int ScoreIndex, int AssistIdx);
	void HandleTeamChanged(class APRI_X* PRI);
	void HandlePlayerRemoved(class AGameEvent_TA* G, class APRI_TA* PRI);
	struct FString GetIP(class APRI_TA* PRI);
	struct FUniqueNetId GetPartyLeader(struct FUniqueNetId Member);
	void HandlePlayerAdded(class AGameEvent_TA* G, class APRI_TA* PRI);
	void StopRecording();
	void StartRecording();
	void HandleStatFactory(class AGameEvent_Soccar_TA* G);
	void HandleTeamsCreated(class AGameEvent_Team_TA* G);
	void eventDestroyed();
	void Start();
	void ServerStart();
	void Init(class AGameEvent_Soccar_TA* InGameEvent);
	void ClientCheckReady();
	void eventOnOwnerChanged();
	void eventReplicatedEvent(struct FName VarName);
	void EventLog(class AMatchBroadcast_TA* Broadcast, struct FString EventJson);
};

// Class TAGame.MatchBroadcastLog_TA
// 0x0008 (0x0060 - 0x0068)
class UMatchBroadcastLog_TA : public UObject
{
public:
	struct FPointer                                    Log;                                              		// 0x0060 (0x0008) [0x0000000000001000] (CPF_Native)  
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchBroadcastLog_TA");
		}

		return uClassPointer;
	};

	void Append(struct FString EventJson);
	void Init(struct FString Filename);
};

// Class TAGame.MaterialParamsSet_TA
// 0x0030 (0x0060 - 0x0090)
class UMaterialParamsSet_TA : public UObject
{
public:
	TArray<struct FMaterialTextureParam>               TextureParameters;                                		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FMaterialVectorParam>                VectorParameters;                                 		// 0x0070 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FMaterialScalarParam>                ScalarParameters;                                 		// 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MaterialParamsSet_TA");
		}

		return uClassPointer;
	};

	void Apply(class UMaterialInstanceConstant* MatInst);
};

// Class TAGame.MaxActorsGroup_TA
// 0x0040 (0x0070 - 0x00B0)
class UMaxActorsGroup_TA : public UComponent
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x0070 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	int                                                MaxActors;                                        		// 0x0078 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              UpdateDelay;                                      		// 0x007C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              NextUpdateTime;                                   		// 0x0080 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	TArray<struct FMaxActorCallback>                   Actors;                                           		// 0x0088 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnToggledDelegate__Delegate;                    		// 0x0098 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MaxActorsGroup_TA");
		}

		return uClassPointer;
	};

	struct FString GetEnabledActorsString();
	void RemoveListener(class AActor* CheckActor, struct FScriptDelegate OnEnabled, struct FScriptDelegate OnDisabled);
	void AddListener(class AActor* CheckActor, struct FScriptDelegate OnEnabled, struct FScriptDelegate OnDisabled);
	void OnToggledDelegate();
};

// Class TAGame.Message_TA
// 0x00A0 (0x0060 - 0x0100)
class UMessage_TA : public UObject
{
public:
	struct FName                                       Type;                                             		// 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkSoundCue*                                 Sound;                                            		// 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkSoundCue*                                 PrimaryPlayerSound;                               		// 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FString                                     Key;                                              		// 0x0078 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FString                                     Section;                                          		// 0x0088 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	unsigned char                                      MessageLevel;                                     		// 0x0098 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FString                                     LocalizedMessage;                                 		// 0x00A0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FName>                               ParamNames;                                       		// 0x00B0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FString>                             ParamTokens;                                      		// 0x00C0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	struct FMessagePacket                              Packet;                                           		// 0x00D0 (0x0018) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FMessagePacket                              DefaultPacket;                                    		// 0x00E8 (0x0018) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Message_TA");
		}

		return uClassPointer;
	};

	struct FString eventGetObjectTextW(class UObject* O);
	void Trigger(class APlayerController_TA* Receiver, struct FMessagePacket InPacket);
	struct FMessagePacket GetPacket();
	void BroadcastLocal(TArray<class AController*> Receivers);
	void Broadcast(TArray<class AController*> Receivers);
	void SendTo(class APlayerController_TA* Receiver);
	class UMessage_TA* SetInt(struct FName ParamName, int Value);
	class UMessage_TA* SetObject(struct FName ParamName, class UObject* Value);
	class UMessage_TA* Set(struct FName ParamName, struct FString Value);
	struct FString GetText(struct FMessagePacket InPacket);
};

// Class TAGame.MutatorGameSetting_TA
// 0x0034 (0x0064 - 0x0098)
class UMutatorGameSetting_TA : public UGameSetting_X
{
public:
	TArray<struct FString>                             RequiresMutators;                                 		// 0x0068 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FString>                             DisallowedWithMutators;                           		// 0x0078 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     MutatorPackage;                                   		// 0x0088 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MutatorGameSetting_TA");
		}

		return uClassPointer;
	};

	class UMutator_TA* GetMutator();
	struct FString eventGetMutatorArchetypePath();
};

// Class TAGame.NavigationHandle_TA
// 0x000C (0x01A8 - 0x01B4)
class UNavigationHandle_TA : public UNavigationHandle
{
public:
	struct FVector                                     OldDriveLocation;                                 		// 0x01A8 (0x000C) [0x0000000000002002] (CPF_Const | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NavigationHandle_TA");
		}

		return uClassPointer;
	};

	void GetNextDriveDestination(struct FVector CurrentDestination, struct FVector& OutDestination);
	bool PathCache_Empty();
};

// Class TAGame.NetworkConfig_TA
// 0x003C (0x0078 - 0x00B4)
class UNetworkConfig_TA : public UOnlineConfig_X
{
public:
	struct FNetworkLimit                               ReplicationRate;                                  		// 0x0078 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FNetworkLimit                               ClientRate;                                       		// 0x0088 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FNetworkLimit                               ClientInputRate;                                  		// 0x0098 (0x0010) [0x0000000000000001] (CPF_Edit)    
	int                                                MaxClientUploadFrames;                            		// 0x00A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bForceNetPackets : 1;                             		// 0x00AC (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	float                                              ForcePacketSignificantDistance;                   		// 0x00B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NetworkConfig_TA");
		}

		return uClassPointer;
	};

	void UndoNetworkLimit(struct FNetworkLimit& Limit, int& Min, int& Max);
	void ApplyNetworkLimit(struct FNetworkLimit& Limit, int& Min, int& Max);
	void Undo();
	void Apply();
};

// Class TAGame.NetworkInputBuffer_TA
// 0x0060 (0x0268 - 0x02C8)
class ANetworkInputBuffer_TA : public AActor
{
public:
	class UPhysicsConfig_TA*                           PhysicsConfig;                                    		// 0x0268 (0x0008) [0x0000000000000000]               
	class UNetworkJitterSettings_TA*                   JitterSettings;                                   		// 0x0270 (0x0008) [0x0000000000000000]               
	class UEngineShare_TA*                             EngineShare;                                      		// 0x0278 (0x0008) [0x0000000000000000]               
	class UClientInputData_TA*                         PrimaryClient;                                    		// 0x0280 (0x0008) [0x0000000000000000]               
	TArray<class UClientInputData_TA*>                 Clients;                                          		// 0x0288 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              TimeSinceLastMovePacket;                          		// 0x0298 (0x0004) [0x0000000000000000]               
	int                                                MaxInputFramesPerPacket;                          		// 0x029C (0x0004) [0x0000000000000000]               
	TArray<float>                                      PingTimestamps;                                   		// 0x02A0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              LastTickTime;                                     		// 0x02B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FInputBufferStats                           Stats;                                            		// 0x02B4 (0x0008) [0x0000000000000000]               
	class UNetworkPingEvent_X*                         PingEvent;                                        		// 0x02C0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NetworkInputBuffer_TA");
		}

		return uClassPointer;
	};

	void ResetInputBuffer();
	void ServerResetInputBuffer();
	void UpdatePing();
	void ClientAckFrame(float TimeStamp, int InClientFrame, struct FInputBufferStats InStats);
	void ResetStats();
	void SendClientAck(float TimeStamp);
	void eventServerTick();
	void TrimInputFrames(class UClientInputData_TA* Client);
	void ReceiveClientFrames(class UClientInputData_TA* Client, struct FClientPacketData& Packet);
	void ReceiveNewClientPacket(class UClientInputData_TA* Client, struct FClientPacketData& Packet);
	void ReceiveClientPacket(class UClientInputData_TA* Client, struct FClientPacketData& Packet);
	void ServerReceivePacket(class APlayerController_TA* PC, struct FClientPacketData Packet);
	void ClientSendPacket(class UClientInputData_TA* Client);
	void SendClientMovePackets();
	bool ShouldSendClientMovePackets();
	void eventClientTick();
	void RemoveClient(class APlayerController_TA* PC);
	class UClientInputData_TA* AddClient(class APlayerController_TA* PC);
	class UClientInputData_TA* GetClient(class APlayerController_TA* PC);
	void eventDestroyed();
	void eventPostBeginPlay();
};

// Class TAGame.NetworkInputBuffer_CSTS_TA
// 0x0030 (0x02C8 - 0x02F8)
class ANetworkInputBuffer_CSTS_TA : public ANetworkInputBuffer_TA
{
public:
	class UPhysicsConfig_TA*                           Config;                                           		// 0x02C8 (0x0008) [0x0000000000000000]               
	float                                              LastPacketReceiveTime;                            		// 0x02D0 (0x0004) [0x0000000000000000]               
	float                                              CurrentTimeDilation;                              		// 0x02D4 (0x0004) [0x0000000000000000]               
	int                                                SequentialMissedInputs;                           		// 0x02D8 (0x0004) [0x0000000000000000]               
	int                                                BufferLowWatermark;                               		// 0x02DC (0x0004) [0x0000000000000000]               
	TArray<int>                                        BufferLowHistory;                                 		// 0x02E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                BufferLowHistoryIndex;                            		// 0x02F0 (0x0004) [0x0000000000000000]               
	int                                                ExtraBuffer;                                      		// 0x02F4 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NetworkInputBuffer_CSTS_TA");
		}

		return uClassPointer;
	};

	void ClientAckFrame_CSTS(float TimeStamp, int InClientFrame, struct FInputBufferStats InStats, unsigned char SatLevel);
	unsigned char GetInputBufferSaturationLevel(int InputBufferSize);
	void SendClientAck(float TimeStamp);
	void UpdateExtraBuffer();
	void StartUpdatingExtraBuffer();
	void ResetInputBuffer();
	void ReceiveNewClientPacket(class UClientInputData_TA* Client, struct FClientPacketData& Packet);
	void eventPostBeginPlay();
};

// Class TAGame.NetworkInputBuffer_ServerConsume_TA
// 0x000C (0x02C8 - 0x02D4)
class ANetworkInputBuffer_ServerConsume_TA : public ANetworkInputBuffer_TA
{
public:
	class UClientJitterBuffer_TA*                      JitterBuffer;                                     		// 0x02C8 (0x0008) [0x0000000000000000]               
	unsigned long                                      bFillingBuffer : 1;                               		// 0x02D0 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NetworkInputBuffer_ServerConsume_TA");
		}

		return uClassPointer;
	};

	void ResetInputBuffer();
	void ReceiveNewClientPacket(class UClientInputData_TA* Client, struct FClientPacketData& Packet);
	void eventPostBeginPlay();
};

// Class TAGame.NetworkInputBuffer_STS_TA
// 0x0030 (0x02C8 - 0x02F8)
class ANetworkInputBuffer_STS_TA : public ANetworkInputBuffer_TA
{
public:
	class UClientJitterBuffer_TA*                      JitterBuffer;                                     		// 0x02C8 (0x0008) [0x0000000000000000]               
	float                                              ExtraSimTimeRemaining;                            		// 0x02D0 (0x0004) [0x0000000000000000]               
	struct FSimTimeAdjustDebugData                     Debug;                                            		// 0x02D4 (0x0008) [0x0000000000000000]               
	float                                              TimeLastSimTimeAdjustment;                        		// 0x02DC (0x0004) [0x0000000000000000]               
	float                                              TimeClientAckdAdjustSimTime;                      		// 0x02E0 (0x0004) [0x0000000000000000]               
	unsigned char                                      ReplicatedInputBufferSize;                        		// 0x02E4 (0x0001) [0x0000000000000020] (CPF_Net)     
	unsigned long                                      bAdjustingSimTime : 1;                            		// 0x02E8 (0x0004) [0x0000000000000000] [0x00000001] 
	int                                                BufferSizeLowWatermark;                           		// 0x02EC (0x0004) [0x0000000000000000]               
	float                                              TimeLastMissedInput;                              		// 0x02F0 (0x0004) [0x0000000000000000]               
	float                                              TimeLastTightenUpBufferCheck;                     		// 0x02F4 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NetworkInputBuffer_STS_TA");
		}

		return uClassPointer;
	};

	void eventServerFinishedSimTimeAdjust();
	void eventClientAdjustSimTime(int FrameAdjustment);
	void NotifyClientAdjustSimTime(int FrameAdjustment);
	bool CanTellClientToAdjustSimTime();
	bool CanTightenUpInputBufferSize();
	void eventServerTick();
	void BufferSizeChanged(int PrevBufferSize, int BufferSize);
	void ReceiveNewClientPacket(class UClientInputData_TA* Client, struct FClientPacketData& Packet);
	void eventReplicatedEvent(struct FName VarName);
	void eventPostBeginPlay();
};

// Class TAGame.NetworkJitterSettings_TA
// 0x001C (0x0060 - 0x007C)
class UNetworkJitterSettings_TA : public UObject
{
public:
	float                                              MinTimeBetweenPackets;                            		// 0x0060 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxTimeBetweenPackets;                            		// 0x0064 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BufferStdDeviations;                              		// 0x0068 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinBufferTime;                                    		// 0x006C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RollingAverageTime;                               		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              InputBufferTightenUpSizeFrequency;                		// 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                MaxSingleAdjustmentFrames;                        		// 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NetworkJitterSettings_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.Note_Linked_TA
// 0x0010 (0x0278 - 0x0288)
class ANote_Linked_TA : public ANote
{
public:
	class ANote_Linked_TA*                             NextNote;                                         		// 0x0278 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class ANote_Linked_TA*                             PrevNote;                                         		// 0x0280 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Note_Linked_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.Notification_TA
// 0x00B0 (0x0060 - 0x0110)
class UNotification_TA : public UObject
{
public:
	int                                                NotificationID;                                   		// 0x0060 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     Title;                                            		// 0x0068 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Body;                                             		// 0x0078 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long                                      bPopUp : 1;                                       		// 0x0088 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bRemoveAfterDisplayed : 1;                        		// 0x0088 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bPopUpShown : 1;                                  		// 0x0088 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bSave : 1;                                        		// 0x0088 (0x0004) [0x0000000000000002] [0x00000008] (CPF_Const)
	float                                              PopUpDuration;                                    		// 0x008C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 Expiration;                                       		// 0x0090 (0x0008) [0x0000000000000000]               
	class UNotificationManager_TA*                     NotificationManager;                              		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UClass*                                      GFxDataClass;                                     		// 0x00A0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UCrossplayConfig_X*                          CrossplayConfig;                                  		// 0x00A8 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             AcceptCallBack;                                   		// 0x00B0 (0x0018) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             DenyCallBack;                                     		// 0x00C8 (0x0018) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __ClickDelegate__Delegate;                        		// 0x00E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventRemoveNotification__Delegate;              		// 0x00F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Notification_TA");
		}

		return uClassPointer;
	};

	bool IsCrossplayNotificationAllowed(struct FUniqueNetId OtherPlayerID);
	bool ShouldShow();
	struct FUniqueNetId GetSenderID();
	class UNotification_TA* SetDenyDelegate(struct FScriptDelegate Callback);
	class UNotification_TA* SetAcceptDelegate(struct FScriptDelegate Callback);
	void RemoveNotification();
	void HandleNotificationSaveAdded(class UNotificationSave_TA* NotificationSave);
	void eventSaveNotification();
	class ULocalPlayer_TA* GetLocalPlayer();
	void OnPopUpDisplayed();
	class UNotification_TA* SetBody(struct FString InBody);
	class UNotification_TA* SetTitle(struct FString InTitle);
	void eventOnPopUpOnlyNotificationCreated();
	void eventOnNotificationCreated(unsigned long bSuppressPopup);
	void ClickDeny();
	void ClickAccept();
	bool IsExpired();
	void Expire();
	void UpdateExpiration();
	void SetExpiration(unsigned long long InExpiration);
	void eventInit(class UNotificationManager_TA* InNotificationManager);
	void EventRemoveNotification(class UNotification_TA* Notification);
	void ClickDelegate(class UNotification_TA* Notification);
};

// Class TAGame.GenericNotification_TA
// 0x0000 (0x0110 - 0x0110)
class UGenericNotification_TA : public UNotification_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GenericNotification_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.NotificationManager_TA
// 0x0078 (0x0060 - 0x00D8)
class UNotificationManager_TA : public UObject
{
public:
	TArray<class UNotification_TA*>                    Notifications;                                    		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                CurrentNotificationID;                            		// 0x0070 (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             __EventNotificationAdded__Delegate;               		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventNotificationRemoved__Delegate;             		// 0x0090 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __HasExistingNotificationDelegate__Delegate;      		// 0x00A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __NotificationFilterFunction__Delegate;           		// 0x00C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NotificationManager_TA");
		}

		return uClassPointer;
	};

	int TypeCount(class UClass* NotificationClass);
	void RemoveNotificationsOfType(class UClass* NotificationClass);
	void RemoveNotification(class UNotification_TA* Notification);
	void RemoveAllNotificationsFromSender(struct FUniqueNetId SenderId);
	class UNotification_TA* PopUpOnlyNotification(class UClass* NotificationClass);
	class UNotification_TA* AddNotification(class UClass* NotificationClass, unsigned long bSuppressPopup);
	int GetNewNotificationID();
	bool HasExistingNotification(struct FScriptDelegate HasExistingDelegate);
	void RemoveNotificationTypeFromSender(class UClass* NotificationClass, struct FUniqueNetId SenderId);
	void HandleChallengesSynced(class UChallengeDefaultManager_TA* DefaultManager);
	void HandleNotificationSaveAdded(class UNotificationSave_TA* NotificationSave);
	class ULocalPlayer_TA* GetLocalPlayer();
	void eventConstruct();
	bool NotificationFilterFunction(class UNotification_TA* InNotification);
	bool HasExistingNotificationDelegate(class UNotification_TA* OtherNotification);
	void EventNotificationRemoved(class UNotificationManager_TA* NotificationManager, class UNotification_TA* Notification);
	void EventNotificationAdded(class UNotificationManager_TA* NotificationManager, class UNotification_TA* Notification);
};

// Class TAGame.NxForceFieldCapsule_TA
// 0x003C (0x02BC - 0x02F8)
class ANxForceFieldCapsule_TA : public ANxForceField
{
public:
	class UDrawCapsuleComponent*                       InnerDrawComponent;                               		// 0x02C0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UDrawCapsuleComponent*                       OuterDrawComponent;                               		// 0x02C8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	float                                              InnerRadius;                                      		// 0x02D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OuterRadius;                                      		// 0x02D4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Length;                                           		// 0x02D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              InnerStrength;                                    		// 0x02DC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OuterStrength;                                    		// 0x02E0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              InnerMaxSpeed;                                    		// 0x02E4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OuterMaxSpeed;                                    		// 0x02E8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FPointer                                    Kernel;                                           		// 0x02F0 (0x0008) [0x0000000000003002] (CPF_Const | CPF_Native | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NxForceFieldCapsule_TA");
		}

		return uClassPointer;
	};

	void DoInitRBPhys();
};

// Class TAGame.OnlineProduct_TA
// 0x0068 (0x0060 - 0x00C8)
class UOnlineProduct_TA : public UObject
{
public:
	int                                                ProductID;                                        		// 0x0060 (0x0004) [0x0000000000000000]               
	unsigned long long                                 InstanceID;                                       		// 0x0068 (0x0008) [0x0000000000000000]               
	TArray<class UProductAttribute_TA*>                Attributes;                                       		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                SeriesID;                                         		// 0x0080 (0x0004) [0x0000000000000000]               
	int                                                TradeHold;                                        		// 0x0084 (0x0004) [0x0000000000000000]               
	unsigned long long                                 AddedTimestamp;                                   		// 0x0088 (0x0008) [0x0000000000000000]               
	struct FString                                     CachedSortLabel;                                  		// 0x0090 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     CachedShortSortLabel;                             		// 0x00A0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	struct FProductHashID                              CachedHash;                                       		// 0x00B0 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	struct FString                                     CachedLocalizedSeries;                            		// 0x00B8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineProduct_TA");
		}

		return uClassPointer;
	};

	struct FOnlineProductAttribute __OnlineProduct_TA__InstanceTempOnlineProduct_3C9B4E684CE9F3C89F2F5DAEC9AF44CA(class UProductAttribute_TA* A);
	bool __OnlineProduct_TA__RequiresDynamicThumbnail_DE6D0CA642C8A26163C493B541118316(class UProductAttribute_TA* Att);
	void __OnlineProduct_TA__OnLoaded_C4E48D6B4A3782F6A02300B80D4A2961(class UProductAttribute_Certified_TA* Certified);
	bool __OnlineProduct_TA__OnLoaded_68CAA40B4A8FBFE7175902BD59CA303F(class UProductAttribute_Certified_TA* Certified);
	void __OnlineProduct_TA__OnLoaded_422E9B7B4C562FEBCCEBCFB87FDF50FB(class UProductAttribute_TA* A);
	int __OnlineProduct_TA__SortOnlineProductsByQuality_AAA6E6FF42542ABE3FBF358D353A1686(class UOnlineProduct_TA* L, class UOnlineProduct_TA* R);
	void SetTradehold(int InTradehold);
	TArray<class UOnlineProduct_TA*> SortOnlineProductsByQuality(TArray<class UOnlineProduct_TA*>& Products);
	int SortOnlineProductsBySlot(class UOnlineProduct_TA* P0, class UOnlineProduct_TA* P1);
	void OnLoaded();
	void RemoveAttributes(class UClass* AttributeClass);
	void RemoveAttribute(class UProductAttribute_TA* InAttribute);
	void AddAttribute(class UProductAttribute_TA* InAttribute);
	void SetProductID(int InProductID);
	bool GetIsUntradeable();
	void SortByTradeHoldAscending(TArray<class UOnlineProduct_TA*>& Products);
	void SortByTradeHoldDescending(TArray<class UOnlineProduct_TA*>& Products);
	bool CanBeArchived();
	bool RequiresDynamicThumbnail();
	struct FString GetDebugString();
	bool HasAttributesOtherThanGiven(TArray<class UClass*>& AttributeClasses);
	struct FString GetAttributeString(TArray<class UClass*> AttributesToIgnore);
	struct FProductHashID OnlineProductHash();
	struct FProductHashID OnlineProductHashV1();
	void GetPaintedColorAttribute(struct FString& ProductPaintColorName, struct FColor& ProductPaintColor);
	unsigned char GetQuality();
	TArray<class UProductAttribute_TA*> GetReplicatedAttributes();
	TArray<class UProductAttribute_TA*> GetAttributes();
	struct FString GetLocalizedSeries();
	struct FString GetLongLabel();
	int GetBlueprintSeriesID();
	unsigned char GetBlueprintType();
	bool IsBlueprint();
	class UProduct_TA* GetProduct();
	class UProductAttribute_TA* GetAttribute(class UClass* AttributeClass);
	struct FOnlineProductData InstanceOnlineProductData();
	class UOnlineProduct_TA* InstanceTempOnlineProduct(struct FProductHashID HashID);
	class UOnlineProduct_TA* CreateOnlineProduct(struct FOnlineProductData& ProductData);
	void ProcessOnlineData(TArray<class UOnlineProduct_TA*>& OutProducts, TArray<struct FOnlineProductData>& InProductData);
};

// Class TAGame.OnlineProductStore_TA
// 0x0018 (0x0070 - 0x0088)
class UOnlineProductStore_TA : public UComponent
{
public:
	TArray<class UOnlineProductStoreSet_TA*>           Sets;                                             		// 0x0070 (0x0010) [0x0000000004480008] (CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	unsigned long long                                 CurrentTempInstanceID;                            		// 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineProductStore_TA");
		}

		return uClassPointer;
	};

	bool __OnlineProductStore_TA__HasAnyProducts_1ABBC01744FC8E44E5E64C944440CC12(class UOnlineProductStoreSet_TA* S);
	bool HasAnyProducts();
	unsigned long long GetTempInstanceID();
	int GetProductIDFromOnlineID(unsigned long long InstanceID);
	TArray<class UOnlineProduct_TA*> FindProductsFromHash(struct FProductHashID HashID);
	class UOnlineProduct_TA* FindProductFromHash(struct FProductHashID HashID);
	class UOnlineProduct_TA* FindProduct(unsigned long long InstanceID);
	void RemoveSet(class UOnlineProductStoreSet_TA* Set);
	class UOnlineProductStoreSet_TA* CreateSet();
	class UOnlineProductStore_TA* GetInstance();
};

// Class TAGame.OnlineSaveRecord_TA
// 0x0028 (0x0060 - 0x0088)
class UOnlineSaveRecord_TA : public UObject
{
public:
	int                                                Version;                                          		// 0x0060 (0x0004) [0x0000000000000000]               
	unsigned long long                                 TimeStamp;                                        		// 0x0068 (0x0008) [0x0000000000000000]               
	int                                                SaveTick;                                         		// 0x0070 (0x0004) [0x0000000000000000]               
	TArray<struct FOnlineSaveObject>                   SaveObjects;                                      		// 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineSaveRecord_TA");
		}

		return uClassPointer;
	};

	bool DeserializeRecord(class UOnlineSaveRecord_TA* Record, class UObject* SaveObjectOuter, TArray<unsigned char>& FileContents);
	bool SerializeRecord(class UOnlineSaveRecord_TA* Record, TArray<unsigned char>& FileContents);
};

// Class TAGame.PaintDatabase_TA
// 0x0064 (0x0060 - 0x00C4)
class UPaintDatabase_TA : public UObject
{
public:
	TArray<class UProductPaint_TA*>                    Paints;                                           		// 0x0060 (0x0010) [0x0000000000420003] (CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink)
	struct FMap_Mirror                                 PaintNameToPaintID;                               		// 0x0070 (0x0050) [0x0000000000001002] (CPF_Const | CPF_Native)
	unsigned long                                      bClickToRebuild : 1;                              		// 0x00C0 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PaintDatabase_TA");
		}

		return uClassPointer;
	};

	void ComputeHSLDifferenceBetweenTwoPaints(int DestinationPaintID, int SourcePaintID, float& Hue, float& Saturation, float& Lightness);
	class UProductPaint_TA* GetPaintByName(struct FName PaintName);
	class UProductPaint_TA* GetPaint(int Id);
	struct FName GetPaintName(int PaintID);
	int GetPaintID(struct FName PaintName);
};

// Class TAGame.ParticleSystemComponent_TA
// 0x0018 (0x03E0 - 0x03F8)
class UParticleSystemComponent_TA : public UParticleSystemComponent
{
public:
	struct FVector                                     PreviewFakeVelocity;                              		// 0x03E0 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     PodiumFakeVelocity;                               		// 0x03EC (0x000C) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ParticleSystemComponent_TA");
		}

		return uClassPointer;
	};

	void AttachToWheel(class UParticleSystemComponent* PSC, class USkeletalMeshComponent* WheelMesh, class UProductAsset_Wheel_TA* WheelAsset, struct FName Socket, TArray<class UProductAttribute_TA*>& AttributesToApply);
};

// Class TAGame.Persona_TA
// 0x0160 (0x0060 - 0x01C0)
class UPersona_TA : public UObject
{
public:
	struct FString                                     PlayerName;                                       		// 0x0060 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     UnSanitizedPlayerName;                            		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FUniqueNetId                                PlayerID;                                         		// 0x0080 (0x0048) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned char                                      OnlinePresenceState;                              		// 0x00C8 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      OnlinePresenceState_Platform;                     		// 0x00C9 (0x0001) [0x0000000000000000]               
	unsigned char                                      OnlinePresenceState_PsyNet;                       		// 0x00CA (0x0001) [0x0000000000000000]               
	unsigned char                                      OnlinePresenceState_Epic;                         		// 0x00CB (0x0001) [0x0000000000000000]               
	unsigned char                                      Platform;                                         		// 0x00CC (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      SecondaryPlatform;                                		// 0x00CD (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     OnlinePresenceMessage;                            		// 0x00D0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     OnlinePresenceMessage_Platform;                   		// 0x00E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     OnlinePresenceMessage_PsyNet;                     		// 0x00F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     OnlinePresenceMessage_Epic;                       		// 0x0100 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long                                      bBlockedStatus : 1;                               		// 0x0110 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bPlatformFriend : 1;                              		// 0x0110 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bPsyNetFriend : 1;                                		// 0x0110 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bEpicFriend : 1;                                  		// 0x0110 (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	unsigned long                                      bNameSanitized : 1;                               		// 0x0110 (0x0004) [0x0000000040000000] [0x00000010] (CPF_EditInlineNotify)
	int                                                GroupId;                                          		// 0x0114 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 LastActive;                                       		// 0x0118 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     PlayerNote;                                       		// 0x0120 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     PsyTagName;                                       		// 0x0130 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                PsyTagCode;                                       		// 0x0140 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     ClubTag;                                          		// 0x0148 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     SecondaryPlayerName;                              		// 0x0158 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     UnsanitizedSecondaryPlayerName;                   		// 0x0168 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventUpdated__Delegate;                         		// 0x0178 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventNameSanitized__Delegate;                   		// 0x0190 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventBlockStatusChanged__Delegate;              		// 0x01A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Persona_TA");
		}

		return uClassPointer;
	};

	void __Persona_TA__SetSecondaryPlayerName_E165CAB541705083D231EFA28FD5CC9D(struct FString Original, struct FString Sanitized);
	struct FString GetComboNameDisplay();
	struct FString GetSingleOrMultiDisplayName(unsigned long bPlatformRelationship, unsigned long bPsyNetRelationship);
	struct FString GetSingleDisplayName(unsigned long bPlatformRelationship, unsigned long bPsyNetRelationship);
	void SetBlockStatus(unsigned long bBlocked);
	void SetPsyTag(struct FPsyTag InTag, struct FString PlatformName);
	void NotifyOnNameSanitized(struct FScriptDelegate Callback);
	void SetPlayerNameSanitized(struct FString Original, struct FString Sanitized);
	void SetPlayerNameInternal(struct FString NewName, unsigned long bPrimaryName, struct FScriptDelegate Callback, struct FString& OutName, struct FString& OutUnsanitizedName);
	void SetSecondaryPlayerName(struct FString NewName);
	void SetPlayerName(struct FString NewName);
	bool CanSendPartyInvite();
	void SetPresenceMessage(struct FString PresenceInfo);
	bool IsFriendInGame();
	bool IsEpicFriendInGame();
	bool IsPurePsyNetFriendInGame();
	bool IsPlatformFriendInGame();
	bool IsSamePlatformPsyNetFriendsAllowed();
	bool IsFriend();
	void ReconcilePresence();
	void SetFriendGroupIDFromPresenceState();
	void SetOnlinePresenceState(unsigned char InOnlinePresenceState, unsigned char Origin);
	void SetEpicOnlinePresenceState(unsigned char InOnlinePresenceState, unsigned char InOrigin, struct FString InPresenceInfo);
	void SetEpicPresenceMessage(struct FString PresenceInfo);
	void SetPlatformPresenceMessage(struct FString PresenceInfo);
	class UPersona_TA* eventUpdateFromOnlineFriend(struct FOnlineFriend OnlineInfo, unsigned char Origin);
	void EventBlockStatusChanged(class UPersona_TA* Persona);
	void EventNameSanitized(class UPersona_TA* Persona);
	void EventUpdated(class UPersona_TA* Persona);
};

// Class TAGame.Personas_TA
// 0x0080 (0x0060 - 0x00E0)
class UPersonas_TA : public UObject
{
public:
	struct FMap_Mirror                                 PersonaMap;                                       		// 0x0060 (0x0050) [0x0000000000001000] (CPF_Native)  
	unsigned long                                      bVerbosePresenceSort : 1;                         		// 0x00B0 (0x0004) [0x0000000000004002] [0x00000001] (CPF_Const | CPF_Config)
	struct FString                                     DeletedAccountDisplayName;                        		// 0x00B8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventAdded__Delegate;                           		// 0x00C8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Personas_TA");
		}

		return uClassPointer;
	};

	bool ShouldCombineFriends(struct FOnlineFriend& PlatformFriend, struct FOnlineFriend& EpicFriend);
	class UPersona_TA* CreatePersonaFromOnlineFriend(unsigned char Origin, struct FOnlineFriend& FriendData);
	class UPersona_TA* CreatePersona(struct FUniqueNetId PlayerID, struct FString PlayerName, unsigned char Origin);
	class UPersona_TA* AddPersona(class UPersona_TA* Persona);
	class UPersona_TA* eventUpdatePersonaFromData(unsigned char Origin, struct FOnlineFriend& FriendData);
	void SortPersonaDataAlphabetically(TArray<struct FPersonaDataId>& OutPersonaData);
	void SortPersonaData(TArray<struct FPersonaDataId>& OutPersonaData);
	void GetAllPersonasInGroup(int GroupId, TArray<class UPersona_TA*>& OutPersonas);
	void AddToMap(class UPersona_TA* Persona);
	class UPersona_TA* GetPersonaFromID(struct FUniqueNetId PlayerID);
	void ShowBlockedInteractionError(class UPersona_TA* BlockedPersona, class UGFxShell_TA* Shell);
	class UPersona_TA* GetOrCreateFromOnlineFriend(unsigned char Origin, struct FOnlineFriend& FriendData);
	class UPersona_TA* UpdatePersonaName(struct FUniqueNetId PlayerID, struct FString PlayerName);
	class UPersona_TA* GetOrCreate(struct FUniqueNetId PlayerID, struct FString PlayerName, unsigned char Origin);
	void CreateDefaultPersonas();
	void EventAdded(class UPersonas_TA* PersonasManager, class UPersona_TA* Persona);
};

// Class TAGame.PhysicalMaterialProperty_TA
// 0x0010 (0x0060 - 0x0070)
class UPhysicalMaterialProperty_TA : public UPhysicalMaterialPropertyBase
{
public:
	struct FName                                       AkSwitchValue;                                    		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bStickyWheels : 1;                                		// 0x0068 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bConsiderForGround : 1;                           		// 0x0068 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	float                                              GroundToleranceZ;                                 		// 0x006C (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PhysicalMaterialProperty_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PhysicsConfig_TA
// 0x0178 (0x0078 - 0x01F0)
class UPhysicsConfig_TA : public UOnlineConfig_X
{
public:
	TArray<struct FString>                             EnabledFeatures;                                  		// 0x0078 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FString>                             DisabledFeatures;                                 		// 0x0088 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FCarInteractionConfig                       CarInteractionSettings;                           		// 0x0098 (0x0108) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FSuperSonicConfig                           SuperSonicSettings;                               		// 0x01A0 (0x000C) [0x0000000000000000]               
	unsigned long                                      bUseAckermannSteering : 1;                        		// 0x01AC (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bPredictContacts : 1;                             		// 0x01AC (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bQuantizePhysics : 1;                             		// 0x01AC (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bOverrideServerPhysicsState : 1;                  		// 0x01AC (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bBackupVehicleInputs : 1;                         		// 0x01AC (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bUseNEQ : 1;                                      		// 0x01AC (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bExtrapolateRendering : 1;                        		// 0x01AC (0x0004) [0x0000000000000001] [0x00000040] (CPF_Edit)
	unsigned long                                      bEnableCustomExplosionPhysics : 1;                		// 0x01AC (0x0004) [0x0000000000000000] [0x00000080] 
	float                                              JumpLeaveGroundTime;                              		// 0x01B0 (0x0004) [0x0000000000000000]               
	struct FSimTimeScaleSettings                       STS;                                              		// 0x01B4 (0x0004) [0x0000000000000000]               
	struct FContinuousSimTimeScaleSettings             CSTS;                                             		// 0x01B8 (0x0034) [0x0000000000000000]               
	float                                              PushForceConstantScale;                           		// 0x01EC (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PhysicsConfig_TA");
		}

		return uClassPointer;
	};

	void DisableFeature(struct FString Feature);
	void EnableFeature(struct FString Feature);
	void Reset();
	void Apply();
};

// Class TAGame.PitchTekDrawingComponent_TA
// 0x0033 (0x009D - 0x00D0)
class UPitchTekDrawingComponent_TA : public UActorComponent
{
public:
	struct FVector                                     PreviousOwnerPosition;                            		// 0x00A0 (0x000C) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      DecalType;                                        		// 0x00AC (0x0001) [0x0000000000000000]               
	TArray<struct FWheelContactData>                   WheelContacts;                                    		// 0x00B0 (0x0010) [0x0000000000482000] (CPF_Transient | CPF_Component | CPF_NeedCtorLink)
	struct FPitchTekCarBodyContactData                 CarBodyContactData;                               		// 0x00C0 (0x0010) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PitchTekDrawingComponent_TA");
		}

		return uClassPointer;
	};

	void QueueJumpBlastDecal(struct FVector JumpBlastLocation);
	void QueueDemolitionExplosionDecal(struct FVector DemolitionExplosionLocation);
	void QueueGoalExplosionDecal(struct FVector GoalExplosionLocation);
};

// Class TAGame.PlayerVanity_TA
// 0x0120 (0x0070 - 0x0190)
class UPlayerVanity_TA : public UComponent
{
public:
	struct FString                                     MovieReference;                                   		// 0x0070 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UTexture*                                    ToPlayer;                                         		// 0x0080 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	class UTexture2D*                                  PaintableLayer;                                   		// 0x0088 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	class UTexture2D*                                  TintableLayer;                                    		// 0x0090 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	unsigned long                                      bColorable : 1;                                   		// 0x0098 (0x0004) [0x0000000040002000] [0x00000001] (CPF_Transient | CPF_EditInlineNotify)
	unsigned long                                      bIsDirty : 1;                                     		// 0x0098 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	int                                                ColorID;                                          		// 0x009C (0x0004) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	struct FColor                                      ColorValue;                                       		// 0x00A0 (0x0004) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	struct FColor                                      DefaultColorValue;                                		// 0x00A4 (0x0004) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	struct FColor                                      PaintColor;                                       		// 0x00A8 (0x0004) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	unsigned long long                                 InstanceID;                                       		// 0x00B0 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	int                                                ProductID;                                        		// 0x00B8 (0x0004) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	struct FProductHashID                              HashID;                                           		// 0x00BC (0x0004) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	struct FColor                                      RawDefaultColorValue;                             		// 0x00C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<class UProductAttribute_TA*>                Attributes;                                       		// 0x00C8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     PlayerName;                                       		// 0x00D8 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UProfile_TA*                                 Profile;                                          		// 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPlayerVanitySave_TA*                        VanitySaveObject;                                 		// 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      VanityType;                                       		// 0x0140 (0x0001) [0x0000000000000002] (CPF_Const)   
	struct FScriptDelegate                             OnLoadCompleteCallback;                           		// 0x0148 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventOnLoadComplete__Delegate;                  		// 0x0160 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventEquipProduct__Delegate;                    		// 0x0178 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerVanity_TA");
		}

		return uClassPointer;
	};

	void __PlayerVanity_TA__InitWithProfile_F6387368427C128E493EA3A86FC5E489(class USaveData_TA* _);
	bool HasPlayerID(struct FUniqueNetId Id);
	void ClearVanity();
	void ApplyColor(struct FColor InColor);
	int GetDefaultColor(unsigned long long ProductInstanceID);
	void EquipColor(int InColorID);
	void EquipProduct_Internal(unsigned long long InInstanceId, int InProductID, int InSelectedColorValue);
	void HandleEquippedProductLoaded(struct FAssetLoadResult Result, unsigned long long InInstanceId, int InProductID);
	void EquipProduct(class UProfile_TA* InProfile, struct FProductHashID InHashID);
	void UpdateColorFromProfile(class UProfile_TA* InProfile, int InProductID, int InColorID);
	bool IsEmpty();
	void UpdateFromAsset(class UProductAsset_PlayerVanity_TA* Asset);
	void HandleLoaded(struct FAssetLoadResult Result);
	class UClass* GetSaveType();
	void SetPlayerID(struct FUniqueNetId InPlayerId);
	void UpdateSaveObject();
	void Init(int InProductID, unsigned long long InInstanceId, struct FProductHashID InHashID, TArray<class UProductAttribute_TA*> InAttributes, struct FScriptDelegate Callback);
	void InitWithPlayerName(struct FString InPlayerName, int InProductID, struct FScriptDelegate Callback);
	void InitWithPlayerID(struct FUniqueNetId InPlayerId, int InProductID, unsigned long long InInstanceId, struct FProductHashID InHashID, TArray<class UProductAttribute_TA*> InAttributes, struct FScriptDelegate Callback);
	void InitWithSaveObject();
	void HandleRemovedOnlineProduct(class USaveData_TA* Data, class UOnlineProduct_TA* OnlineProduct);
	void HandleProfileDataChanged(class UPlayerVanitySave_TA* InData);
	void InitWithProfile(class UProfile_TA* InProfile);
	void EventEquipProduct(class UPlayerVanity_TA* PlayerVanity, unsigned long long NewInstanceID, unsigned long long PrevInstanceID);
	void EventOnLoadComplete(class UPlayerVanity_TA* PlayerVanity);
};

// Class TAGame.PlayerAvatar_TA
// 0x0008 (0x0190 - 0x0198)
class UPlayerAvatar_TA : public UPlayerVanity_TA
{
public:
	class UProductAsset_PlayerAvatar_TA*               Asset;                                            		// 0x0190 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerAvatar_TA");
		}

		return uClassPointer;
	};

	void HandleLoaded(struct FAssetLoadResult Result);
	void HandleUpdateTexture(class UTexture* AvatarTexture);
};

// Class TAGame.PlayerAvatarBorder_TA
// 0x0008 (0x0190 - 0x0198)
class UPlayerAvatarBorder_TA : public UPlayerVanity_TA
{
public:
	class UProductAsset_PlayerAvatarBorder_TA*         Asset;                                            		// 0x0190 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerAvatarBorder_TA");
		}

		return uClassPointer;
	};

	void HandleLoaded(struct FAssetLoadResult Result);
	class UClass* GetSaveType();
};

// Class TAGame.PlayerBanner_TA
// 0x0008 (0x0190 - 0x0198)
class UPlayerBanner_TA : public UPlayerVanity_TA
{
public:
	class UProductAsset_PlayerBanner_TA*               Asset;                                            		// 0x0190 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerBanner_TA");
		}

		return uClassPointer;
	};

	void HandleLoaded(struct FAssetLoadResult Result);
	class UClass* GetSaveType();
};

// Class TAGame.PremiumSkin_TA
// 0x0080 (0x0060 - 0x00E0)
class UPremiumSkin_TA : public UObject
{
public:
	class UMaterialInstanceConstant*                   MIC;                                              		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      Quality;                                          		// 0x0068 (0x0001) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      SkinType;                                         		// 0x0069 (0x0001) [0x0000000000000001] (CPF_Edit)    
	struct FMaterialParams                             SkinParameters;                                   		// 0x0070 (0x0030) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UTexture2D*                                  Thumbnail;                                        		// 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bTeamFinishDisabled : 1;                          		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bCustomFinishDisabled : 1;                        		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	TArray<class UProductAssetAttribute_TA*>           Attributes;                                       		// 0x00B0 (0x0010) [0x0000000004400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInline)
	TArray<class UPremiumSkinSet_TA*>                  SkinSets;                                         		// 0x00C0 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class UProductAsset_Skin_TA*                       AssetTemplate;                                    		// 0x00D0 (0x0008) [0x0000000004400008] (CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UProductTemplate_TA*                         ProductTemplate;                                  		// 0x00D8 (0x0008) [0x0000000004400008] (CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PremiumSkin_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PremiumSkinSet_TA
// 0x0018 (0x0060 - 0x0078)
class UPremiumSkinSet_TA : public UObject
{
public:
	class UProductAsset_Body_TA*                       Body;                                             		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FPremiumSkinSetItem>                 Skins;                                            		// 0x0068 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PremiumSkinSet_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAsset_TA
// 0x0098 (0x0060 - 0x00F8)
class UProductAsset_TA : public UObject
{
public:
	class UProductTemplate_TA*                         Product;                                          		// 0x0060 (0x0008) [0x0000000004020001] (CPF_Edit | CPF_EditConst | CPF_EditInline)
	class UTexture2D*                                  Thumbnail;                                        		// 0x0068 (0x0008) [0x0000000000200003] (CPF_Edit | CPF_Const)
	class UThumbnailRenderer_TA*                       ThumbnailRenderer;                                		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMaterialInterface*                          ThumbnailMaterial;                                		// 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              ThumbnailKeyLightBrightnessScale;                 		// 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     ThumbnailCameraTranslationOffset;                 		// 0x0084 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FRotator                                    ThumbnailCameraRotationOffset;                    		// 0x0090 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ThumbnailCameraFOV;                               		// 0x009C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FRotator                                    ThumbnailProductRotation;                         		// 0x00A0 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     ThumbnailProductTranslationOffset;                		// 0x00AC (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     ThumbnailProductDrawScale3D;                      		// 0x00B8 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ParticleWarmupTime;                               		// 0x00C4 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              AnimationWarmupTime;                              		// 0x00C8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     ParticleFakeVelocity;                             		// 0x00CC (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     SkeletalMeshAnimationOffset;                      		// 0x00D8 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	unsigned long                                      bForceRebuildThumbnail : 1;                       		// 0x00E4 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	unsigned long                                      bPreviewDynamicThumbnail : 1;                     		// 0x00E4 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	unsigned long                                      bServerSideOnlyWasSetInitially : 1;               		// 0x00E4 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	TArray<class UProductAssetAttribute_TA*>           Attributes;                                       		// 0x00E8 (0x0010) [0x0000000004400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_TA");
		}

		return uClassPointer;
	};

	void SetupDynamicThumbnail(class UPrimitiveComponent* PrimComp);
	class UTexture2D* RenderAssetThumbnail(struct FString TextureName, class UPackage* InPackage);
	struct FName GetThumbnailAssetName();
	struct FName GetThumbnailAssetPackageName();
	struct FString GetAssetPackagePath();
	struct FString GetProductPackagePath();
	class UObject* GetAttribute(class UClass* AttributeClass);
	void AddFXActorToThumbnailScene(class AFXActor_X* FXActor, class UCarMeshComponent_TA* SKMToAttachTo, class UThumbnailScene_TA* Scene, TArray<class UProductAttribute_TA*>& InAttributes);
	bool CreateAndAttachThumbnailPSC(struct FFXAttachment Attachment, class AFXActor_X* FXActor, int AttachmentIdx, class USkeletalMeshComponent* Owner, TArray<class UProductAttribute_TA*>& InAttributes);
	class UParticleSystem* GetParticleSystemThumbnailOverride(class AFXActor_X* FXActor, int AttachmentIdx, struct FFXAttachment& Attachment);
	void eventModifyThumbnailScene(class UThumbnailScene_TA* Scene, TArray<class UProductAttribute_TA*>& InAttributes);
	struct FString eventCheckCanSave();
	class UProduct_TA* GetProduct();
};

// Class TAGame.ProductAsset_Attachment_TA
// 0x0018 (0x00F8 - 0x0110)
class UProductAsset_Attachment_TA : public UProductAsset_TA
{
public:
	TArray<struct FProductAttachment>                  Attachments;                                      		// 0x00F8 (0x0010) [0x0000000000480001] (CPF_Edit | CPF_Component | CPF_NeedCtorLink)
	struct FName                                       CustomAnimName;                                   		// 0x0108 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_Attachment_TA");
		}

		return uClassPointer;
	};

	void ModifyThumbnailMesh(class UMeshComponent* Component, struct FProductAttachment& Attachment, TArray<class UProductAttribute_TA*>& InAttributes);
	class USkeletalMeshComponent* GetSceneSkeletalMesh(class UThumbnailScene_TA* Scene, int AttachmentIdx);
	class UStaticMeshComponent* GetSceneStaticMesh(class UThumbnailScene_TA* Scene, int AttachmentIdx);
	void PrepParticleSystem(class USkeletalMeshComponent* AttachSKC, class UParticleSystemComponent* PSC, struct FName SocketName, TArray<class UProductAttribute_TA*>& InAttributes);
	void HandleAttachedParticleSystem(class UParticleSystemComponent* ParticleSystemAttachment, class USkeletalMeshComponent*& AttachSKC, class UStaticMeshComponent*& AttachSMC, struct FProductAttachment& Attachment, TArray<class UProductAttribute_TA*>& InAttributes);
	void HandleAttachedSkeletalMesh(class USkeletalMeshComponent*& AttachSKC, class USkeletalMesh*& InSkeletalMesh, struct FProductAttachment& Attachment, TArray<class UProductAttribute_TA*>& InAttributes);
	void HandleAttachedStaticMesh(class UStaticMeshComponent*& AttachSMC, class UStaticMesh*& InStaticMesh, struct FProductAttachment& Attachment, TArray<class UProductAttribute_TA*>& InAttributes);
	void eventModifyThumbnailScene(class UThumbnailScene_TA* Scene, TArray<class UProductAttribute_TA*>& InAttributes);
};

// Class TAGame.ProductAsset_Body_TA
// 0x0278 (0x00F8 - 0x0370)
class UProductAsset_Body_TA : public UProductAsset_TA
{
public:
	class USkeletalMesh*                               Mesh;                                             		// 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAnimTree*                                   AnimTreeTemplate;                                 		// 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<class UAnimSet*>                            AnimSets;                                         		// 0x0108 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UPhysicsAsset*                               PhysicsAsset;                                     		// 0x0118 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UHandlingPreset_TA*                          HandlingPreset;                                   		// 0x0120 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              HandlingPresetZOffset;                            		// 0x0128 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVehicleAxleSettings                        FrontAxle;                                        		// 0x012C (0x0028) [0x0000000000000001] (CPF_Edit)    
	struct FVehicleAxleSettings                        BackAxle;                                         		// 0x0154 (0x0028) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FVehicleAxleSettings>                AdditionalAxles;                                  		// 0x0180 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              SteerScale;                                       		// 0x0190 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FSimpleSpringSettings                       ChassisSpring;                                    		// 0x0194 (0x0050) [0x0000000000000001] (CPF_Edit)    
	float                                              ChassisRotationScale;                             		// 0x01E4 (0x0004) [0x0000000000220001] (CPF_Edit | CPF_EditConst)
	float                                              ChassisTranslationScale;                          		// 0x01E8 (0x0004) [0x0000000000220001] (CPF_Edit | CPF_EditConst)
	float                                              SuspensionTravelMax;                              		// 0x01EC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SuspensionTravelMin;                              		// 0x01F0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bUseLegacySuspensionOffsets : 1;                  		// 0x01F4 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bOverrideBoostFlapsAngle : 1;                     		// 0x01F4 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	class UAkSoundCue*                                 EngineSound;                                      		// 0x01F8 (0x0008) [0x0000000020000000]  CPF_Deprecated)
	class UAkSoundCue*                                 ExhaustSound;                                     		// 0x0200 (0x0008) [0x0000000020000000]  CPF_Deprecated)
	class UAkSoundCue*                                 BlowoffSound;                                     		// 0x0208 (0x0008) [0x0000000020000000]  CPF_Deprecated)
	class UEngineAudioProfile_TA*                      EngineAudioProfile;                               		// 0x0210 (0x0008) [0x0000000020000000]  CPF_Deprecated)
	class UProductAsset_EngineAudio_TA*                EngineAudioAsset;                                 		// 0x0218 (0x0008) [0x0000000020000000]  CPF_Deprecated)
	TArray<class UProductAsset_EngineAudio_TA*>        EngineAudioAssets;                                		// 0x0220 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	int                                                EngineAudioProductID;                             		// 0x0230 (0x0004) [0x0000000020020000] (CPF_EditConst | CPF_Deprecated)
	class UProductAssetReference_TA*                   EngineAudioReference;                             		// 0x0238 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class AFXActor_X*                                  FXActor;                                          		// 0x0240 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                SkinMaterialIndex;                                		// 0x0248 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                BrakelightMaterialIndex;                          		// 0x024C (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                ChassisMaterialIndex;                             		// 0x0250 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FName>                               BoostEmitterSockets;                              		// 0x0258 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              BoostFlapsAngle;                                  		// 0x0268 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                ForcedTeamColors[0x2] ;                           		// 0x026C (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                ForcedCustomColor;                                		// 0x028C (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     SupersonicTrailOffset;                            		// 0x029C (0x000C) [0x0000000000000001] (CPF_Edit)    
	TArray<class UProduct_TA*>                         AdditionalUnlocks2;                               		// 0x02A8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UProductEquipProfile_TA*                     EquipProfile;                                     		// 0x02B8 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	TArray<struct FProductAttachment>                  Attachments;                                      		// 0x02C0 (0x0010) [0x0000000000480001] (CPF_Edit | CPF_Component | CPF_NeedCtorLink)
	TArray<struct FParticleSysParam>                   BoostParticleParameters;                          		// 0x02D0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UParticleSystem*                             SupersonicWheelTemplate;                          		// 0x02E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_X*                                  DemolishFX;                                       		// 0x02E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_X*                                  SpawnFX;                                          		// 0x02F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_X*                                  ExitFX;                                           		// 0x02F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              WheelPreviewAnimTranslateScale;                   		// 0x0300 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FBoostAttachmentToggle>              BoostAttachmentsToModify;                         		// 0x0308 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FMaterialParams                             SkinParameters;                                   		// 0x0318 (0x0030) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UProductAssetReferenceWheel_TA*              ThumbnailWheelAsset;                              		// 0x0348 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	TArray<struct FSkeletalMeshLODDistanceInfo>        LODDistanceInfo;                                  		// 0x0350 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UObject*>                             MutatorArchetypes;                                		// 0x0360 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_Body_TA");
		}

		return uClassPointer;
	};

	bool CanEquip(class UProduct_TA* InProduct);
	bool HasBone(struct FName InBoneName);
	void FixPhysicsBoxTranslation();
	void ApplyBoostAttachmentDisablesToFXActor(class AFXActor_X* OutFXActor);
	void ModifyAttachment(class AFXActor_X* OutFXActor, int AttachmentIndex, struct FBoostAttachmentToggle& EventsToUse);
	void eventModifyThumbnailScene(class UThumbnailScene_TA* Scene, TArray<class UProductAttribute_TA*>& InAttributes);
	struct FString eventCheckCanSave();
};

// Class TAGame.ProductAsset_Boost_TA
// 0x0018 (0x00F8 - 0x0110)
class UProductAsset_Boost_TA : public UProductAsset_TA
{
public:
	class AFXActor_Boost_TA*                           FXActor;                                          		// 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_Boost_TA*                           PaintedFXActor;                                   		// 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              PreviewFrontWheelSpinSpeed;                       		// 0x0108 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PreviewBackWheelSpinSpeed;                        		// 0x010C (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_Boost_TA");
		}

		return uClassPointer;
	};

	void eventModifyThumbnailScene(class UThumbnailScene_TA* Scene, TArray<class UProductAttribute_TA*>& InAttributes);
	class AFXActor_Boost_TA* GetBoostFXActorForMesh(class UCarMeshComponentBase_TA* CarMesh);
	class UParticleSystem* GetParticleSystemThumbnailOverride(class AFXActor_X* InFXActor, int AttachmentIdx, struct FFXAttachment& Attachment);
	struct FString eventCheckCanSave();
};

// Class TAGame.ProductAsset_Bot_TA
// 0x001C (0x00F8 - 0x0114)
class UProductAsset_Bot_TA : public UProductAsset_TA
{
public:
	TArray<class UProduct_TA*>                         LoadoutProducts2;                                 		// 0x00F8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	int                                                BlueTeamColorID;                                  		// 0x0108 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                OrangeTeamColorID;                                		// 0x010C (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                CustomColorID;                                    		// 0x0110 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_Bot_TA");
		}

		return uClassPointer;
	};

	struct FLoadoutData GetLoadout(int TeamIndex);
};

// Class TAGame.ProductAsset_Container_TA
// 0x0000 (0x00F8 - 0x00F8)
class UProductAsset_Container_TA : public UProductAsset_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_Container_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAsset_EngineAudio_TA
// 0x0040 (0x00F8 - 0x0138)
class UProductAsset_EngineAudio_TA : public UProductAsset_TA
{
public:
	class UAkSoundCue*                                 EngineSound;                                      		// 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 ExhaustSound;                                     		// 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 IgnitionSound;                                    		// 0x0108 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 BlowoffSound;                                     		// 0x0110 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 ThrottleEngageSound;                              		// 0x0118 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 ThrottleReleaseSound;                             		// 0x0120 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 GearChangeSound;                                  		// 0x0128 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UEngineAudioProfileBase_TA*                  Profile;                                          		// 0x0130 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_EngineAudio_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAsset_GoalExplosion_TA
// 0x0028 (0x00F8 - 0x0120)
class UProductAsset_GoalExplosion_TA : public UProductAsset_TA
{
public:
	class AFXActor_X*                                  GoalExplosionFX;                                  		// 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_X*                                  PaintedGoalExplosionFX;                           		// 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<class UExplosionHitHandler_X*>              ExplosionComponents;                              		// 0x0108 (0x0010) [0x0000000004480009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	unsigned long                                      bUseOverrideGoalOrientations : 1;                 		// 0x0118 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	struct FIgnoredGoalRotations                       IgnoredRotations;                                 		// 0x011C (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_GoalExplosion_TA");
		}

		return uClassPointer;
	};

	void OverrideSpawnRotation(struct FRotator& SpawnRotation);
	void eventModifyThumbnailScene(class UThumbnailScene_TA* Scene, TArray<class UProductAttribute_TA*>& InAttributes);
	class AFXActor_X* GetExplosionFXActorForPRI(class APRI_TA* PRI);
	class AFXActor_X* GetExplosionFXActorForMesh(class UCarMeshComponentBase_TA* CarMesh);
	struct FString eventCheckCanSave();
};

// Class TAGame.ProductAsset_Pack_TA
// 0x0000 (0x00F8 - 0x00F8)
class UProductAsset_Pack_TA : public UProductAsset_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_Pack_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAsset_PaintFinish_TA
// 0x0060 (0x00F8 - 0x0158)
class UProductAsset_PaintFinish_TA : public UProductAsset_TA
{
public:
	class ULightCurveType_TA*                          LightCurveType;                                   		// 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTexture*                                    DetailNormal;                                     		// 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              SpecularTint;                                     		// 0x0108 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RimLightTint;                                     		// 0x010C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DiffuseDetailNormalStrength;                      		// 0x0110 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SpecularDetailNormalStrength;                     		// 0x0114 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SpecularStrength;                                 		// 0x0118 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              EnvironmentStrength;                              		// 0x011C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SparkleStrength;                                  		// 0x0120 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PearlescentStrength;                              		// 0x0124 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FTextureParameterValue>              TextureParameterValues;                           		// 0x0128 (0x0010) [0x0000000000420003] (CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink)
	TArray<struct FScalarParameterValue>               ScalarParameterValues;                            		// 0x0138 (0x0010) [0x0000000000420003] (CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink)
	TArray<struct FVectorParameterValue>               VectorParameterValues;                            		// 0x0148 (0x0010) [0x0000000000420003] (CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_PaintFinish_TA");
		}

		return uClassPointer;
	};

	void eventModifyThumbnailScene(class UThumbnailScene_TA* Scene, TArray<class UProductAttribute_TA*>& InAttributes);
	void SetPaintFinishParametersOnMaterial(class UMaterialInstance* MatInst, class UProductAsset_PaintFinish_TA* Finish, struct FString Prefix);
};

// Class TAGame.ProductAsset_PlayerVanity_TA
// 0x0030 (0x00F8 - 0x0128)
class UProductAsset_PlayerVanity_TA : public UProductAsset_TA
{
public:
	class USwfMovie*                                   MovieReference;                                   		// 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTexture2D*                                  ToPlayer;                                         		// 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTexture2D*                                  PaintableLayer;                                   		// 0x0108 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTexture2D*                                  TintableLayer;                                    		// 0x0110 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                DefaultPaintColor;                                		// 0x0118 (0x0010) [0x0000000000000003] (CPF_Edit | CPF_Const)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_PlayerVanity_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAsset_PlayerAvatar_TA
// 0x0000 (0x0128 - 0x0128)
class UProductAsset_PlayerAvatar_TA : public UProductAsset_PlayerVanity_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_PlayerAvatar_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAsset_PlayerAvatarBorder_TA
// 0x0000 (0x0128 - 0x0128)
class UProductAsset_PlayerAvatarBorder_TA : public UProductAsset_PlayerVanity_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_PlayerAvatarBorder_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAsset_PlayerBanner_TA
// 0x0000 (0x0128 - 0x0128)
class UProductAsset_PlayerBanner_TA : public UProductAsset_PlayerVanity_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_PlayerBanner_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAsset_Skin_TA
// 0x0100 (0x00F8 - 0x01F8)
class UProductAsset_Skin_TA : public UProductAsset_TA
{
public:
	class UMaterialInterface*                          Skin;                                             		// 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FSkinBodySettings>                   BodySettings;                                     		// 0x0100 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FBodyChassisOverride>                BodyChassisOverrides;                             		// 0x0110 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned char                                      SkinType;                                         		// 0x0120 (0x0001) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                ThumbnailTeamColor;                               		// 0x0124 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                ThumbnailCustomColor;                             		// 0x0134 (0x0010) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bTeamFinishDisabled : 1;                          		// 0x0144 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bCustomFinishDisabled : 1;                        		// 0x0144 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	struct FParameterInformation                       TeamFinishToApply;                                		// 0x0148 (0x0038) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FParameterInformation                       CustomFinishToApply;                              		// 0x0180 (0x0038) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FLinearColor                                ForcedTeamColors[0x2] ;                           		// 0x01B8 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                ForcedCustomColor[0x2] ;                          		// 0x01D8 (0x0020) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_Skin_TA");
		}

		return uClassPointer;
	};

	bool IsAnimatedSkinType();
	bool HasForcedCustomColor(int TeamIndex);
	bool HasForcedTeamColor(int TeamIndex);
	bool HasForcedCustomFinish();
	bool HasForcedTeamFinish();
	void eventModifyThumbnailScene(class UThumbnailScene_TA* Scene, TArray<class UProductAttribute_TA*>& InAttributes);
	int GetThumbnailBodyID(class UProfile_TA* Profile, int EquippedBodyID);
	struct FSkinBodySettings GetSkinBodySettings(class UProductAsset_Body_TA* ForBody);
	struct FMaterialParams GetSkinParameters(class UProductAsset_Body_TA* ForBody);
	void AttemptApplyChassisOverride(class UCarMeshComponentBase_TA* CarMesh, class UProductAsset_Body_TA*& ForBody);
	struct FString eventCheckCanSave();
};

// Class TAGame.ProductAsset_SupersonicTrail_TA
// 0x0028 (0x00F8 - 0x0120)
class UProductAsset_SupersonicTrail_TA : public UProductAsset_TA
{
public:
	class AFXActor_TA*                                 FXActor;                                          		// 0x00F8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class AFXActor_TA*                                 LeftFXActor;                                      		// 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_TA*                                 RightFXActor;                                     		// 0x0108 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 AkEnterSound;                                     		// 0x0110 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 AkLoopSound;                                      		// 0x0118 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_SupersonicTrail_TA");
		}

		return uClassPointer;
	};

	void eventModifyThumbnailScene(class UThumbnailScene_TA* Scene, TArray<class UProductAttribute_TA*>& InAttributes);
};

// Class TAGame.ProductAsset_Wheel_TA
// 0x00B8 (0x00F8 - 0x01B0)
class UProductAsset_Wheel_TA : public UProductAsset_TA
{
public:
	float                                              MeshRadius;                                       		// 0x00F8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MeshWidth;                                        		// 0x00FC (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UWheelAssetGenerator_TA*                     Generator;                                        		// 0x0100 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UWheelAssetGenerator_TA*                     PrevGenerator;                                    		// 0x0108 (0x0008) [0x000000000408000A] (CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UStaticMesh*                                 CollisionMesh;                                    		// 0x0110 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 CustomWheelDriveSound;                            		// 0x0118 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 CustomWheelImpactSound;                           		// 0x0120 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      MirrorMode;                                       		// 0x0128 (0x0001) [0x0000000000000002] (CPF_Const)   
	class UStaticMesh*                                 StaticMesh;                                       		// 0x0130 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UStaticMesh*                                 RearStaticMesh;                                   		// 0x0138 (0x0008) [0x0000000000000002] (CPF_Const)   
	class USkeletalMesh*                               SkeletalMesh;                                     		// 0x0140 (0x0008) [0x0000000000000002] (CPF_Const)   
	class USkeletalMesh*                               RearSkeletalMesh;                                 		// 0x0148 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UAnimTree*                                   AnimTree;                                         		// 0x0150 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UAnimTree*                                   LeftAnimTree;                                     		// 0x0158 (0x0008) [0x0000000000000002] (CPF_Const)   
	TArray<class UAttachmentBehavior_TA*>              Behaviors;                                        		// 0x0160 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FWheelAttachment                            Attachment;                                       		// 0x0170 (0x0030) [0x0000000000480002] (CPF_Const | CPF_Component | CPF_NeedCtorLink)
	TArray<struct FWheelAttachment>                    Attachments;                                      		// 0x01A0 (0x0010) [0x0000000000480002] (CPF_Const | CPF_Component | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_Wheel_TA");
		}

		return uClassPointer;
	};

	void ApplyPaintToWheelAttachment(class UPrimitiveComponent* PrimComp, struct FWheelAttachment InAttachment, TArray<class UProductAttribute_TA*>& InAttributes);
	void eventModifyThumbnailScene(class UThumbnailScene_TA* Scene, TArray<class UProductAttribute_TA*>& InAttributes);
	struct FString eventCheckCanSave();
};

// Class TAGame.ProductAssetAttribute_TA
// 0x0000 (0x0060 - 0x0060)
class UProductAssetAttribute_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAssetAttribute_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.AssetAttribute_TeamEdition_TA
// 0x0024 (0x0060 - 0x0084)
class UAssetAttribute_TeamEdition_TA : public UProductAssetAttribute_TA
{
public:
	TArray<class UProductOverride_TA*>                 Template;                                         		// 0x0060 (0x0010) [0x0000000004400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInline)
	TArray<struct FTeamEditionOverrides>               TeamEditions;                                     		// 0x0070 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long                                      bAddAllAvailableTeams : 1;                        		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AssetAttribute_TeamEdition_TA");
		}

		return uClassPointer;
	};

	void eventApplyPaintOverrides(int TeamID, class UProductPaint_TA* Paint, class UObject* Target);
	void eventApplyToObject(int TeamID, class UObject* Target);
	int GetIndexFromTeamID(int TeamID);
};

// Class TAGame.ProductAttribute_PaintSettings_TA
// 0x00A8 (0x0060 - 0x0108)
class UProductAttribute_PaintSettings_TA : public UProductAssetAttribute_TA
{
public:
	struct FPaintMaterialGroup                         MaterialGroups[0x2] ;                             		// 0x0060 (0x0020) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long                                      bPaintParticles : 1;                              		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bPaintBody : 1;                                   		// 0x0080 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bGammaCorrect : 1;                                		// 0x0080 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	struct FName                                       PaintParameterName;                               		// 0x0084 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      PaintType;                                        		// 0x008C (0x0001) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FPaintAttributeParameter>            PaintAdditionalParameters;                        		// 0x0090 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              PaintEmissiveMultiplier;                          		// 0x00A0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<class UMaterialInterface*>                  PaintableMaterials;                               		// 0x00A8 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	TArray<class UMaterialInterface*>                  PaintableMaterialsMetallic;                       		// 0x00B8 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	TArray<class UProductPaint_TA*>                    IncludePaints;                                    		// 0x00C8 (0x0010) [0x0000000000402003] (CPF_Edit | CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	TArray<class UProductPaint_TA*>                    ExcludePaints;                                    		// 0x00D8 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	TArray<class UProductPaint_TA*>                    UnsupportedPaints;                                		// 0x00E8 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	TArray<struct FPaintWithOverride>                  PaintsToOverride;                                 		// 0x00F8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_PaintSettings_TA");
		}

		return uClassPointer;
	};

	class UProductPaint_TA* GetPaintFromProductOverride(class UProductOverride_TA* ProductOverrideToFind);
	struct FString GetError();
};

// Class TAGame.ProductAssetLoader_TA
// 0x0018 (0x0060 - 0x0078)
class UProductAssetLoader_TA : public UObject
{
public:
	unsigned long                                      bDebug : 1;                                       		// 0x0060 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bLoadingAssetAsync : 1;                           		// 0x0060 (0x0004) [0x0000000000002002] [0x00000002] (CPF_Const | CPF_Transient)
	unsigned long                                      bAssetLoadedThisFrame : 1;                        		// 0x0060 (0x0004) [0x0000000000002002] [0x00000004] (CPF_Const | CPF_Transient)
	TArray<struct FAssetLoadRequest>                   LoadAssetQueue;                                   		// 0x0068 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAssetLoader_TA");
		}

		return uClassPointer;
	};

	void Tick(float DeltaTime);
	void eventSetTickEnabled(unsigned long bTick);
	void FlushAsyncLoading();
	void CancelLoadAsset(int ProductID, class UObject* Listener);
	void CancelLoadAssets(class UObject* Listener);
	void LoadAssetByNameAsync(struct FName AssetName, struct FScriptDelegate OnLoaded);
	void LoadThumbnailAssetAsync(int ProductID, struct FScriptDelegate OnLoaded);
	void LoadAssetAsync(int ProductID, struct FScriptDelegate OnLoaded);
	class UProductAsset_TA* LoadAssetByName(struct FName AssetName);
	class UProductAsset_TA* LoadAsset(int ProductID);
	class UProductAssetLoader_TA* GetInstance();
};

// Class TAGame.ProductAssetReferenceBase_TA
// 0x000C (0x0060 - 0x006C)
class UProductAssetReferenceBase_TA : public UObject
{
public:
	class UProductAsset_TA*                            ProductAsset;                                     		// 0x0060 (0x0008) [0x0000000000000000]               
	int                                                ProductID;                                        		// 0x0068 (0x0004) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAssetReferenceBase_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAssetReference_TA
// 0x000C (0x006C - 0x0078)
class UProductAssetReference_TA : public UProductAssetReferenceBase_TA
{
public:
	class UProductAsset_TA*                            Asset;                                            		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAssetReference_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAssetReferenceBody_TA
// 0x000C (0x006C - 0x0078)
class UProductAssetReferenceBody_TA : public UProductAssetReferenceBase_TA
{
public:
	class UProductAsset_Body_TA*                       BodyAsset;                                        		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAssetReferenceBody_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAssetReferencePaintFinish_TA
// 0x000C (0x006C - 0x0078)
class UProductAssetReferencePaintFinish_TA : public UProductAssetReferenceBase_TA
{
public:
	class UProductAsset_PaintFinish_TA*                PaintFinishAsset;                                 		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAssetReferencePaintFinish_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAssetReferenceSkin_TA
// 0x000C (0x006C - 0x0078)
class UProductAssetReferenceSkin_TA : public UProductAssetReferenceBase_TA
{
public:
	class UProductAsset_Skin_TA*                       SkinAsset;                                        		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAssetReferenceSkin_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAssetReferenceWheel_TA
// 0x000C (0x006C - 0x0078)
class UProductAssetReferenceWheel_TA : public UProductAssetReferenceBase_TA
{
public:
	class UProductAsset_Wheel_TA*                      WheelAsset;                                       		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAssetReferenceWheel_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_TA
// 0x0020 (0x0060 - 0x0080)
class UProductAttribute_TA : public UObject
{
public:
	struct FName                                       Typename;                                         		// 0x0060 (0x0008) [0x0000000000000002] (CPF_Const)   
	unsigned long                                      bReplicated : 1;                                  		// 0x0068 (0x0004) [0x0000000000000002] [0x00000001] (CPF_Const)
	unsigned long                                      bRequiresDynamicThumbnail : 1;                    		// 0x0068 (0x0004) [0x0000000000000002] [0x00000002] (CPF_Const)
	struct FString                                     Label;                                            		// 0x0070 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_TA");
		}

		return uClassPointer;
	};

	class UProductAttribute_SpecialEdition_TA* __ProductAttribute_TA__ModifyLoadout_1C297F6E40A9B3A8EC831EB6213837B2(struct FClientLoadoutOnlineProduct P);
	bool HasLoadedAllAdditionalReferences(class ULoadingProduct_TA* ProductData);
	void LoadAdditionalAssets(struct FScriptDelegate Callback);
	bool ShouldLoadAdditionalAssets();
	struct FString eventGetSortLabel();
	struct FString GetTypeHashID();
	struct FString eventGetHashID();
	struct FString GetOnlineProductAttributeValue();
	struct FOnlineProductAttribute InstanceOnlineProductAttribute();
	TArray<int> ModifyLoadout(TArray<int> OnlineProductIDs, TArray<int>& LoadoutProductIDs, struct FClientLoadoutOnlineData& OnlineLoadout);
	void ApplyToObject(class UProductAsset_TA* Asset, class UObject* Target);
	int SortAttributes(class UProductAttribute_TA* A, class UProductAttribute_TA* B);
	void ApplyAttributeOverrides(class UProductAsset_TA* Asset, class UObject* Target, TArray<class UProductAttribute_TA*>& Attributes, TArray<class UClass*>& AttributesToIgnore);
	void ApplyAttributes(class UProductAsset_TA* Asset, class UObject* Target, TArray<class UProductAttribute_TA*>& Attributes, TArray<class UClass*>& AttributesToIgnore);
	void OnLoaded();
	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& OtherAttributes);
	bool eventInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& OtherAttributes);
	class UProductAttribute_TA* Get(class UClass* AttributeClass, TArray<class UProductAttribute_TA*> Attributes);
};

// Class TAGame.ProductAttribute_AnimatedSkinLabel_TA
// 0x0010 (0x0080 - 0x0090)
class UProductAttribute_AnimatedSkinLabel_TA : public UProductAttribute_TA
{
public:
	struct FString                                     AnimatedLabel;                                    		// 0x0080 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_AnimatedSkinLabel_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_Blueprint_TA
// 0x0008 (0x0080 - 0x0088)
class UProductAttribute_Blueprint_TA : public UProductAttribute_TA
{
public:
	int                                                ProductID;                                        		// 0x0080 (0x0004) [0x0000000000000000]               
	int                                                CachedBlueprintSeriesID;                          		// 0x0084 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Blueprint_TA");
		}

		return uClassPointer;
	};

	void __ProductAttribute_Blueprint_TA__OnInit_B366C04C4FB9FD670569CF8373874748(class UGFxData_ContainerDrops_TA* _);
	void UpdateBlueprintSeriesID();
	struct FString GetSortLabel();
	struct FString GetTypeHashID();
	struct FString eventGetHashID();
	struct FString GetOnlineProductAttributeValue();
	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& OtherAttributes);
};

// Class TAGame.ProductAttribute_BodyCompatibility_TA
// 0x0010 (0x0080 - 0x0090)
class UProductAttribute_BodyCompatibility_TA : public UProductAttribute_TA
{
public:
	TArray<class UProduct_TA*>                         CompatibleBodies;                                 		// 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_BodyCompatibility_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_Certified_TA
// 0x0030 (0x0080 - 0x00B0)
class UProductAttribute_Certified_TA : public UProductAttribute_TA
{
public:
	struct FName                                       ValueKeyName;                                     		// 0x0080 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UCertifiedStat_TA*                           CertifiedStat;                                    		// 0x0088 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                StatId;                                           		// 0x0090 (0x0004) [0x0000000000000000]               
	int                                                StatValue;                                        		// 0x0094 (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             __EventRankedUp__Delegate;                        		// 0x0098 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Certified_TA");
		}

		return uClassPointer;
	};

	struct FString GetSortLabel();
	struct FString eventGetHashID();
	struct FString GetTypeHashID();
	struct FString GetDescription();
	struct FString GetRankLabel();
	int GetRank();
	void AddStatValue(int InValue);
	struct FString GetOnlineProductAttributeValue();
	void OnLoaded();
	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& Attributes);
	class UProductAttribute_Certified_TA* CreateInstance(struct FName StatName);
	void EventRankedUp(class UProductAttribute_Certified_TA* CertifiedAttribute);
};

// Class TAGame.ProductAttribute_CompatibleProducts_TA
// 0x0018 (0x0080 - 0x0098)
class UProductAttribute_CompatibleProducts_TA : public UProductAttribute_TA
{
public:
	struct FPointer                                    VfTable_IICanEquip_TA;                            		// 0x0080 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	TArray<class UProduct_TA*>                         CompatibleProducts;                               		// 0x0088 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_CompatibleProducts_TA");
		}

		return uClassPointer;
	};

	bool CanEquip(TArray<int>& EquippedProducts);
};

// Class TAGame.ProductAttribute_Container_TA
// 0x0004 (0x0080 - 0x0084)
class UProductAttribute_Container_TA : public UProductAttribute_TA
{
public:
	unsigned long                                      bUnlocked : 1;                                    		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bSkipRoulette : 1;                                		// 0x0080 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bGiftbox : 1;                                     		// 0x0080 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Container_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_Currency_TA
// 0x0004 (0x0080 - 0x0084)
class UProductAttribute_Currency_TA : public UProductAttribute_TA
{
public:
	int                                                CurrencyID;                                       		// 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Currency_TA");
		}

		return uClassPointer;
	};

	struct FString GetSortLabel();
	struct FString GetTypeHashID();
	struct FString eventGetHashID();
	struct FString GetOnlineProductAttributeValue();
	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& OtherAttributes);
};

// Class TAGame.ProductAttribute_Key_TA
// 0x0004 (0x0080 - 0x0084)
class UProductAttribute_Key_TA : public UProductAttribute_TA
{
public:
	unsigned long                                      bMagicKey : 1;                                    		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Key_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_Licensed_TA
// 0x0008 (0x0080 - 0x0088)
class UProductAttribute_Licensed_TA : public UProductAttribute_TA
{
public:
	class UProduct_TA*                                 ReplacementProduct;                               		// 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Licensed_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_LicenseGroup_TA
// 0x0008 (0x0080 - 0x0088)
class UProductAttribute_LicenseGroup_TA : public UProductAttribute_TA
{
public:
	unsigned char                                      Group;                                            		// 0x0080 (0x0001) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bRequireSameLicenseGroupOnBody : 1;               		// 0x0084 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_LicenseGroup_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_Painted_TA
// 0x0004 (0x0080 - 0x0084)
class UProductAttribute_Painted_TA : public UProductAttribute_TA
{
public:
	int                                                PaintID;                                          		// 0x0080 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Painted_TA");
		}

		return uClassPointer;
	};

	TArray<class UProductOverride_TA*> __ProductAttribute_Painted_TA__ApplyPaintOverridesToObject_7BDEDAF444770A796BA6079A3EAD0D58(struct FPaintWithOverride O);
	bool __ProductAttribute_Painted_TA__ApplyToSetParameter_2FE8B1EE4CBC41F088362A9A30597464(struct FPaintAttributeParameter PaintParam);
	struct FString GetSortLabel();
	struct FString eventGetHashID();
	struct FString GetTypeHashID();
	void ApplyToPlayerVanity(class UPlayerVanity_TA* Vanity, class UProductPaint_TA* Paint);
	void ApplyToFXActor(class UProductAttribute_PaintSettings_TA* PaintSettings, class UProductPaint_TA* Paint, class AFXActor_TA* FXActor);
	struct FLinearColor GetPaintColor(class UProductAttribute_PaintSettings_TA* PaintSettings, class UProductPaint_TA* Paint, unsigned char PaintVariant, unsigned long bGammaCorrect);
	void ApplyToSetParameter(class UProductAttribute_PaintSettings_TA* PaintSettings, class UProductPaint_TA* Paint, class UISetParameter* Target);
	void OverrideMeshMaterial(class UProductAttribute_PaintSettings_TA* PaintSettings, class UProductPaint_TA* Paint, class UMeshComponent* Mesh, int InMaterialIndex, class UMaterialInterface* InMaterial);
	void ApplyToBody(class UProductAttribute_PaintSettings_TA* PaintSettings, class UProductPaint_TA* Paint, class UCarMeshComponentBase_TA* Mesh);
	void ApplyToSkin(class UProductAttribute_PaintSettings_TA* PaintSettings, class UProductPaint_TA* Paint, class UCarMeshComponentBase_TA* Mesh);
	void ApplyToMesh(class UProductAttribute_PaintSettings_TA* PaintSettings, class UProductPaint_TA* Paint, class UMeshComponent* Mesh, TArray<class UMaterialInterface*> InPaintMats);
	void ApplyPaintOverridesToObject(class UProductAttribute_PaintSettings_TA* PaintSettings, class UProductPaint_TA* Paint, class UObject* Target);
	void ApplyPaintToObject(class UProductAttribute_PaintSettings_TA* PaintSettings, class UProductPaint_TA* Paint, class UObject* Target, class UProductAsset_TA* Asset);
	void ApplyToObject(class UProductAsset_TA* Asset, class UObject* Target);
	struct FString GetOnlineProductAttributeValue();
	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& Attributes);
	class UProductAttribute_Painted_TA* CreateInstance(int InPaintID);
};

// Class TAGame.ProductAttribute_PaintSettingsUpload_TA
// 0x0010 (0x0080 - 0x0090)
class UProductAttribute_PaintSettingsUpload_TA : public UProductAttribute_TA
{
public:
	TArray<int>                                        ExcludePaints;                                    		// 0x0080 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_PaintSettingsUpload_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_PlatformExclusive_TA
// 0x0018 (0x0080 - 0x0098)
class UProductAttribute_PlatformExclusive_TA : public UProductAttribute_TA
{
public:
	TArray<unsigned char>                              InclusiveConsoles;                                		// 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UProduct_TA*                                 ReplacementProduct;                               		// 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_PlatformExclusive_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_PreviewOnly_TA
// 0x0000 (0x0080 - 0x0080)
class UProductAttribute_PreviewOnly_TA : public UProductAttribute_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_PreviewOnly_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_Quality_TA
// 0x0001 (0x0080 - 0x0081)
class UProductAttribute_Quality_TA : public UProductAttribute_TA
{
public:
	unsigned char                                      Quality;                                          		// 0x0080 (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Quality_TA");
		}

		return uClassPointer;
	};

	struct FString ProductQualityToString(unsigned char InQuality);
	struct FString eventGetHashID();
	struct FString GetTypeHashID();
	struct FString GetOnlineProductAttributeValue();
	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& Attributes);
};

// Class TAGame.ProductAttribute_QualityProductDBOverride_TA
// 0x0001 (0x0080 - 0x0081)
class UProductAttribute_QualityProductDBOverride_TA : public UProductAttribute_TA
{
public:
	unsigned char                                      QualityOverride;                                  		// 0x0080 (0x0001) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_QualityProductDBOverride_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_RequiresOwnedProduct_TA
// 0x0008 (0x0080 - 0x0088)
class UProductAttribute_RequiresOwnedProduct_TA : public UProductAttribute_TA
{
public:
	class UProduct_TA*                                 Product;                                          		// 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_RequiresOwnedProduct_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_Schematic_TA
// 0x0000 (0x0080 - 0x0080)
class UProductAttribute_Schematic_TA : public UProductAttribute_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Schematic_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_SortingLabel_TA
// 0x0044 (0x0080 - 0x00C4)
class UProductAttribute_SortingLabel_TA : public UProductAttribute_TA
{
public:
	struct FString                                     LocalizationKey;                                  		// 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     ReplacementKey;                                   		// 0x0090 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     ReplacementValue;                                 		// 0x00A0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     SortingLabel;                                     		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                MaxReplacementSize;                               		// 0x00C0 (0x0004) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_SortingLabel_TA");
		}

		return uClassPointer;
	};

	void ReplaceKeyWithValue(struct FString Value, struct FString& InLabel);
	void UpdateSortingLabel(struct FString& InLabel);
};

// Class TAGame.ProductAttribute_SpecialEdition_TA
// 0x0004 (0x0080 - 0x0084)
class UProductAttribute_SpecialEdition_TA : public UProductAttribute_TA
{
public:
	int                                                EditionID;                                        		// 0x0080 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_SpecialEdition_TA");
		}

		return uClassPointer;
	};

	bool __ProductAttribute_SpecialEdition_TA__GetOverrideProductID_2FF422B248758F656BFE0E927BE3C1AC(struct FSpecialEditionConfig E);
	struct FString GetSortLabel();
	struct FString eventGetHashID();
	struct FString GetTypeHashID();
	struct FString GetOnlineProductAttributeValue();
	int GetOverrideProductID(int ProductID);
	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& Attributes);
	class UProductAttribute_SpecialEdition_TA* CreateInstance(int InEditionID);
};

// Class TAGame.ProductAttribute_SpecialEditionSettings_TA
// 0x0020 (0x0080 - 0x00A0)
class UProductAttribute_SpecialEditionSettings_TA : public UProductAttribute_TA
{
public:
	TArray<struct FSpecialEditionConfig>               Editions;                                         		// 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class UProductSpecialEdition_TA*>           SupportedEditions;                                		// 0x0090 (0x0010) [0x0000000000402003] (CPF_Edit | CPF_Const | CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_SpecialEditionSettings_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_TeamEdition_TA
// 0x0004 (0x0080 - 0x0084)
class UProductAttribute_TeamEdition_TA : public UProductAttribute_TA
{
public:
	int                                                Id;                                               		// 0x0080 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_TeamEdition_TA");
		}

		return uClassPointer;
	};

	bool HasLoadedAllAdditionalReferences(class ULoadingProduct_TA* ProductData);
	void LoadAdditionalAssets(struct FScriptDelegate Callback);
	bool ShouldLoadAdditionalAssets();
	struct FString GetSortLabel();
	struct FString GetTypeHashID();
	struct FString eventGetHashID();
	void ApplyPaintOverrides(class UProductPaint_TA* Paint, class UProductAsset_TA* Asset, class UObject* Target);
	void ApplyToObject(class UProductAsset_TA* Asset, class UObject* Target);
	struct FString GetOnlineProductAttributeValue();
	class UProductAttribute_TeamEdition_TA* CreateInstance(int TeamID);
	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& OtherAttributes);
};

// Class TAGame.ProductAttribute_TeamEditionUpload_TA
// 0x0010 (0x0080 - 0x0090)
class UProductAttribute_TeamEditionUpload_TA : public UProductAttribute_TA
{
public:
	TArray<int>                                        SupportedTeamEditions;                            		// 0x0080 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_TeamEditionUpload_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_TeamForcedProduct_TA
// 0x0010 (0x0080 - 0x0090)
class UProductAttribute_TeamForcedProduct_TA : public UProductAttribute_TA
{
public:
	class UProductAssetReference_TA*                   Teams[0x2] ;                                      		// 0x0080 (0x0010) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_TeamForcedProduct_TA");
		}

		return uClassPointer;
	};

	int ValidateProduct(int TeamIndex, int ProductID);
	bool eventCanEquip(int ProductID);
};

// Class TAGame.ProductAttribute_TeamOverride_TA
// 0x0028 (0x0080 - 0x00A8)
class UProductAttribute_TeamOverride_TA : public UProductAttribute_TA
{
public:
	unsigned char                                      Team;                                             		// 0x0080 (0x0001) [0x0000000000000001] (CPF_Edit)    
	TArray<class UMaterialInterface*>                  Materials;                                        		// 0x0088 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FName                                       AssetName;                                        		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTexture*                                    Thumbnail;                                        		// 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_TeamOverride_TA");
		}

		return uClassPointer;
	};

	void ApplyToMesh(class UMeshComponent* Mesh, TArray<class UMaterialInterface*>& InMaterials);
	void ApplyToObject(class UProductAsset_TA* Asset, class UObject* Target);
};

// Class TAGame.ProductAttribute_Tiered_TA
// 0x0004 (0x0080 - 0x0084)
class UProductAttribute_Tiered_TA : public UProductAttribute_TA
{
public:
	int                                                TierIndex;                                        		// 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Tiered_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_TitleID_TA
// 0x0008 (0x0080 - 0x0088)
class UProductAttribute_TitleID_TA : public UProductAttribute_TA
{
public:
	struct FName                                       TitleId;                                          		// 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_TitleID_TA");
		}

		return uClassPointer;
	};

	struct FString eventGetHashID();
	struct FString GetTypeHashID();
	struct FString GetOnlineProductAttributeValue();
	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& OtherAttributes);
};

// Class TAGame.ProductAttribute_UnlockMethod_TA
// 0x0001 (0x0080 - 0x0081)
class UProductAttribute_UnlockMethod_TA : public UProductAttribute_TA
{
public:
	unsigned char                                      UnlockMethod;                                     		// 0x0080 (0x0001) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_UnlockMethod_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_UserColor_TA
// 0x0004 (0x0080 - 0x0084)
class UProductAttribute_UserColor_TA : public UProductAttribute_TA
{
public:
	struct FColor                                      ColorValue;                                       		// 0x0080 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_UserColor_TA");
		}

		return uClassPointer;
	};

	struct FString GetOnlineProductAttributeValue();
	void ApplyToObject(class UProductAsset_TA* Asset, class UObject* Target);
	class UProductAttribute_UserColor_TA* CreateInstance(struct FColor InColorValue);
	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& OtherAttributes);
};

// Class TAGame.ProductDatabase_Builder_TA
// 0x0004 (0x0060 - 0x0064)
class UProductDatabase_Builder_TA : public UObject
{
public:
	unsigned long                                      bPrime : 1;                                       		// 0x0060 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bClickToBuildMarked : 1;                          		// 0x0060 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductDatabase_Builder_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductDatabase_TA
// 0x01D4 (0x0060 - 0x0234)
class UProductDatabase_TA : public UObject
{
public:
	TArray<class UProduct_TA*>                         Products_New;                                     		// 0x0060 (0x0010) [0x0000000000420003] (CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink)
	TArray<class UProduct_TA*>                         Products_Pristine;                                		// 0x0070 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	TArray<class UDLCPack_TA*>                         DLCPacks;                                         		// 0x0080 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	TArray<class UDLCPack_TA*>                         DLCPacks_Pristine;                                		// 0x0090 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	TArray<class UProductAsset_TA*>                    AlwaysLoadedAssets;                               		// 0x00A0 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	TArray<struct FBodyToEngineAudioPair>              BodyToEngineAudioMap;                             		// 0x00B0 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	TArray<struct FBodyToEngineAudioPair>              BodyToEngineAudioMap_Pristine;                    		// 0x00C0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	struct FGarageFolderData                           GarageFolderInfo;                                 		// 0x00D0 (0x0060) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	struct FMap_Mirror                                 ProductNameToProductID;                           		// 0x0130 (0x0050) [0x0000000000001002] (CPF_Const | CPF_Native)
	struct FMap_Mirror                                 ProductNameToProductID_Pristine;                  		// 0x0180 (0x0050) [0x0000000000003002] (CPF_Const | CPF_Native | CPF_Transient)
	struct FMap_Mirror                                 DuplicateToAssetSourceMap;                        		// 0x01D0 (0x0050) [0x0000000000001002] (CPF_Const | CPF_Native)
	TArray<struct FTemporaryProduct>                   TemporaryProducts;                                		// 0x0220 (0x0010) [0x0000000000406000] (CPF_Transient | CPF_Config | CPF_NeedCtorLink)
	unsigned long                                      bUseQualityToCheckForOnlineProduct : 1;           		// 0x0230 (0x0004) [0x0000000000004000] [0x00000001] (CPF_Config)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductDatabase_TA");
		}

		return uClassPointer;
	};

	void ResetLabels();
	bool IsOnlineUnlock(unsigned char UnlockMethod);
	class UOnlineProduct_TA* FindProductByProductID(int ProductID, TArray<class UOnlineProduct_TA*>& OnlineProducts);
	class UOnlineProduct_TA* FindProductByInstanceID(unsigned long long InstanceID, TArray<class UOnlineProduct_TA*>& OnlineProducts);
	bool IsOfflineUnlock(class UProduct_TA* Product);
	bool IsDefaultProduct(class UProduct_TA* Product);
	bool IsOnlineProduct(class UProduct_TA* Product);
	bool ContainsOnlineProducts(TArray<unsigned long long>& List);
	bool StaticIsOnlineQuality(unsigned char Quality);
	bool IsOnlineID(unsigned long long ProductID);
	bool IsProductIDInDLCPack(int ProductID);
	bool DoesPlayerOwnProduct(int ProductID, unsigned long bCheckUnlockMethod, struct FUniqueNetId& PlayerID);
	void RemoveIncompatibleProducts(TArray<int>& OutProducts);
	void RemoveIncompatibleLoadout(struct FLoadoutData& Loadout);
	int ReplaceIncompatibleProduct(int ProductID, TArray<int>& EquippedProducts);
	bool CanEquip(int ProductID, TArray<int>& EquippedProducts);
	void ConvertProductIDs(TArray<int>& ProductIDs, TArray<class UProduct_TA*>& OutProducts);
	class UProductAsset_TA* LoadAssetByName(struct FName AssetName);
	void TLoadAsset();
	class UProductAsset_TA* LoadAsset(int ProductID);
	TArray<class UProduct_TA*> GetAllProductsBySlot(class UProductSlot_TA* Slot);
	void AllProductsBySlot(class UProductSlot_TA* Slot, class UProduct_TA*& Product);
	void AllProducts(class UProduct_TA*& Product);
	class UProduct_TA* GetProductByName(struct FName ProductName);
	class UProduct_TA* GetProductByHashID(struct FProductHashID HashID);
	class UProduct_TA* GetProduct(int Id);
	struct FName GetProductThumbnailName(int ProductID);
	struct FName GetProductName(int ProductID);
	int GetProductID(struct FName ProductName);
};

// Class TAGame.ProductEquipProfile_TA
// 0x0088 (0x0060 - 0x00E8)
class UProductEquipProfile_TA : public UObject
{
public:
	class UProductEquipProfileSlot_TA*                 Skin;                                             		// 0x0060 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class UProductEquipProfileSlot_TA*                 Wheel;                                            		// 0x0068 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class UProductEquipProfileSlot_TA*                 Boost;                                            		// 0x0070 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class UProductEquipProfileSlot_TA*                 Antenna;                                          		// 0x0078 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class UProductEquipProfileSlot_TA*                 Hat;                                              		// 0x0080 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class UProductEquipProfileSlot_TA*                 PaintFinish;                                      		// 0x0088 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class UProductEquipProfileSlot_TA*                 CustomFinish;                                     		// 0x0090 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class UProductEquipProfileSlot_TA*                 EngineAudio;                                      		// 0x0098 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class UProductEquipProfileSlot_TA*                 SupersonicTrail;                                  		// 0x00A0 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class UProductEquipProfileSlot_TA*                 GoalExplosion;                                    		// 0x00A8 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	TArray<unsigned char>                              LicenseWhitelist;                                 		// 0x00B0 (0x0010) [0x0000000004400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInline)
	TArray<unsigned char>                              LicenseBlacklist;                                 		// 0x00C0 (0x0010) [0x0000000004400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInline)
	unsigned long                                      bWhitelistAll : 1;                                		// 0x00D0 (0x0004) [0x0000000004000001] [0x00000001] (CPF_Edit | CPF_EditInline)
	TArray<class UProductEquipProfileSlot_TA*>         AllSlots;                                         		// 0x00D8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductEquipProfile_TA");
		}

		return uClassPointer;
	};

	int __ProductEquipProfile_TA__GetForcedProducts_3B222A8F4F8A07F17C4F709F4B4D2251(class UProductEquipProfileSlot_TA* FP);
	bool __ProductEquipProfile_TA__GetForcedProducts_91DC397B4A8408D5AE37A195CC5600C9(class UProductEquipProfileSlot_TA* Slot);
	int __ProductEquipProfile_TA__GetDefaultProducts_D395B4C84F7822C7420D63BB2992A103(class UProductEquipProfileSlot_TA* FP);
	bool __ProductEquipProfile_TA__GetDefaultProducts_9E51A5264917B36687CF68BF8D83CDB7(class UProductEquipProfileSlot_TA* Slot);
	TArray<int> GetDefaultProducts();
	TArray<int> GetForcedProducts();
	bool IsIPAllowed(class UProduct_TA* BodyProduct, class UProduct_TA* ItemProduct);
	bool CanEquip(class UProduct_TA* InProduct);
};

// Class TAGame.ProductEquipProfileSlot_TA
// 0x0000 (0x0060 - 0x0060)
class UProductEquipProfileSlot_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductEquipProfileSlot_TA");
		}

		return uClassPointer;
	};

	bool CanEquip(class UProduct_TA* Product);
};

// Class TAGame.ProductEquipProfileSlot_Custom_TA
// 0x002C (0x0060 - 0x008C)
class UProductEquipProfileSlot_Custom_TA : public UProductEquipProfileSlot_TA
{
public:
	unsigned char                                      SlotCustomization;                                		// 0x0060 (0x0001) [0x0000000000000001] (CPF_Edit)    
	TArray<class UProductAssetReference_TA*>           WhitelistProducts;                                		// 0x0068 (0x0010) [0x0000000004400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInline)
	TArray<class UProductAssetReference_TA*>           BlacklistProducts;                                		// 0x0078 (0x0010) [0x0000000004400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInline)
	unsigned long                                      bUseWhitelistAsDefault : 1;                       		// 0x0088 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductEquipProfileSlot_Custom_TA");
		}

		return uClassPointer;
	};

	int GetDefaultProductID();
	bool CanEquip(class UProduct_TA* Product);
};

// Class TAGame.ProductEquipProfileSlot_Disabled_TA
// 0x0000 (0x0060 - 0x0060)
class UProductEquipProfileSlot_Disabled_TA : public UProductEquipProfileSlot_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductEquipProfileSlot_Disabled_TA");
		}

		return uClassPointer;
	};

	bool CanEquip(class UProduct_TA* Product);
};

// Class TAGame.ProductEquipProfileSlot_Enabled_TA
// 0x0000 (0x0060 - 0x0060)
class UProductEquipProfileSlot_Enabled_TA : public UProductEquipProfileSlot_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductEquipProfileSlot_Enabled_TA");
		}

		return uClassPointer;
	};

	bool CanEquip(class UProduct_TA* Product);
};

// Class TAGame.ProductEquipProfileSlot_ForcedProduct_TA
// 0x0008 (0x0060 - 0x0068)
class UProductEquipProfileSlot_ForcedProduct_TA : public UProductEquipProfileSlot_TA
{
public:
	class UProductAssetReference_TA*                   ForcedProduct;                                    		// 0x0060 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductEquipProfileSlot_ForcedProduct_TA");
		}

		return uClassPointer;
	};

	int GetDefaultProductID();
	int GetForcedProductID();
	bool CanEquip(class UProduct_TA* Product);
};

// Class TAGame.ProductFilter_TA
// 0x0000 (0x0060 - 0x0060)
class UProductFilter_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductFilter_TA");
		}

		return uClassPointer;
	};

	void AddLogLevel(unsigned char LogLevel, struct FProductFilter& Filter);
	struct FString GetFilterLogString(struct FProductFilter Filter);
	TArray<struct FProductHashID> GetSortedHashIDs(unsigned char SortType, class UIdenticalProductCache_TA* IdenticalProductCache, unsigned long bUseShortName, TArray<class UOnlineProduct_TA*>& OnlineProducts, TArray<class UProduct_TA*>& UnlockedProducts, TArray<int>& FavoritedHashes, TArray<unsigned long long>& InstanceIDs);
	TArray<unsigned long long> FilterProducts(struct FProductFilter& Filter);
	TArray<class UProduct_TA*> GetDisplayableOfflineProducts(unsigned long bIgnoreLockedProducts, TArray<class UOnlineProduct_TA*>& OnlineProducts, TArray<int>& OfflineProducts);
};

// Class TAGame.ProductLoader_TA
// 0x0050 (0x0070 - 0x00C0)
class UProductLoader_TA : public UComponent
{
public:
	TArray<class UProduct_TA*>                         RemainingProducts;                                		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UProductAsset_TA*>                    Assets;                                           		// 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventAssetLoaded__Delegate;                     		// 0x0090 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventAllAssetsLoaded__Delegate;                 		// 0x00A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductLoader_TA");
		}

		return uClassPointer;
	};

	bool __ProductLoader_TA__LoadProducts_A65FFC7847C2BEA6E10C31838C1671A0(class UProduct_TA* P);
	void __ProductLoader_TA__LoadRemainingProducts_ED99AFB74197CED67AC0E091445D2016(class UProduct_TA* P);
	bool __ProductLoader_TA__AddEngineAudio_4908B81F43BFC412EF72FFBEC02068B7(class UProduct_TA* P);
	class UProduct_TA* __ProductLoader_TA__AddMissingSlots_FDBB77A84874B69C28ADA58A7D5D480B(class UProductSlot_TA* Slot);
	class UProductSlot_TA* __ProductLoader_TA__AddMissingSlots_A53718304B2B9F9524DC1487C1784829(class UProductAsset_TA* Asset);
	class UProductSlot_TA* __ProductLoader_TA__AddMissingSlots_542B5B3A4C3B4269D908FCB264F5E92B(class UProduct_TA* P);
	void CancelLoad();
	void OnAllAssetsLoaded();
	void NotifyWhenAllAssetsLoaded(struct FScriptDelegate Callback);
	void AddMissingSlots();
	void AddEngineAudio(class UProductAsset_Body_TA* Body);
	void AddForcedProducts(class UProductAsset_Body_TA* Body);
	void RemoveIncompatibleProducts(class UProductAsset_Body_TA* Body);
	void HandleAssetLoaded(struct FAssetLoadResult Result);
	void HandleBodyLoaded(struct FAssetLoadResult Result);
	class UProductAsset_TA* AllAssets(class UClass* AssetClass, class UProductAsset_TA*& Asset);
	class UProductAsset_TA* GetAsset(class UClass* AssetClass);
	class UProductAsset_TA* GetAssetByID(int ProductID);
	class UProductAsset_TA* GetAssetBySlot(class UProductSlot_TA* Slot);
	void LoadClientLoadout(struct FClientLoadoutData& NewLoadout);
	void LoadLoadout(struct FLoadoutData& NewLoadout);
	bool ShouldLoadProduct(class UProduct_TA* Product);
	void LoadRemainingProducts();
	void LoadProducts(TArray<int> ProductIDs);
	void EventAllAssetsLoaded(class UProductLoader_TA* Loader);
	void EventAssetLoaded(class UProductLoader_TA* Loader, class UProductAsset_TA* Asset);
};

// Class TAGame.ProductOverride_TA
// 0x0000 (0x0060 - 0x0060)
class UProductOverride_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductOverride_TA");
		}

		return uClassPointer;
	};

	void ApplyToObject(class UObject* Target);
	void ApplyOverrides(TArray<class UProductOverride_TA*> Overrides, class UObject* Target);
};

// Class TAGame.ProductOverride_MaterialParameter_TA
// 0x0050 (0x0060 - 0x00B0)
class UProductOverride_MaterialParameter_TA : public UProductOverride_TA
{
public:
	class UMaterialInstanceConstant*                   CopyFromMIC;                                      		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       MaterialName;                                     		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FFontParameterValue>                 FontParameterValues;                              		// 0x0070 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FScalarParameterValue>               ScalarParameterValues;                            		// 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FTextureParameterValue>              TextureParameterValues;                           		// 0x0090 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FVectorParameterValue>               VectorParameterValues;                            		// 0x00A0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductOverride_MaterialParameter_TA");
		}

		return uClassPointer;
	};

	void __ProductOverride_MaterialParameter_TA__ApplyToObject_9ADA4F3A43DAEF9A233E62AB648D4568(struct FAnimatedMaterialMesh X);
	void ApplyOverrideToMesh(class UMeshComponent* MeshComp);
	void ApplyToObject(class UObject* Target);
};

// Class TAGame.ProductPaint_TA
// 0x00D1 (0x0060 - 0x0131)
class UProductPaint_TA : public UObject
{
public:
	struct FString                                     Label;                                            		// 0x0060 (0x0010) [0x0000000000428003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_EditConst | CPF_NeedCtorLink)
	struct FLinearColor                                Colors[0xC] ;                                     		// 0x0070 (0x00C0) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      FinishType;                                       		// 0x0130 (0x0001) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductPaint_TA");
		}

		return uClassPointer;
	};

	int GetID();
};

// Class TAGame.ProductSlot_TA
// 0x0078 (0x0060 - 0x00D8)
class UProductSlot_TA : public UObject
{
public:
	struct FString                                     Label;                                            		// 0x0060 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     PluralLabel;                                      		// 0x0070 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Description;                                      		// 0x0080 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     OnlineLabel;                                      		// 0x0090 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	int                                                SlotIndex;                                        		// 0x00A0 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	class UProduct_TA*                                 DefaultProduct_New;                               		// 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UProductTemplate_TA*                         ProductTemplate;                                  		// 0x00B0 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)
	class UProductAsset_TA*                            ProductAssetTemplate;                             		// 0x00B8 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)
	class UTexture*                                    Icon;                                             		// 0x00C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UTexture*                                    IconLarge;                                        		// 0x00C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	unsigned long                                      bReplicated : 1;                                  		// 0x00D0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	unsigned long                                      bAlwaysCooked : 1;                                		// 0x00D0 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	unsigned long                                      bDedicatedServerRelevant : 1;                     		// 0x00D0 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	unsigned long                                      bAlwaysLoaded : 1;                                		// 0x00D0 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	unsigned long                                      bDefaultProductAlwaysLoaded : 1;                  		// 0x00D0 (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	unsigned long                                      bAllowLicensedEquip : 1;                          		// 0x00D0 (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	float                                              DropWeight;                                       		// 0x00D4 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductSlot_TA");
		}

		return uClassPointer;
	};

	int GetDefaultProductID();
};

// Class TAGame.ProductSpecialEdition_TA
// 0x0010 (0x0060 - 0x0070)
class UProductSpecialEdition_TA : public UObject
{
public:
	struct FString                                     Label;                                            		// 0x0060 (0x0010) [0x0000000000428003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_EditConst | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductSpecialEdition_TA");
		}

		return uClassPointer;
	};

	int GetID();
};

// Class TAGame.ProductTemplate_TA
// 0x00D4 (0x0060 - 0x0134)
class UProductTemplate_TA : public UObject
{
public:
	class UProductSlot_TA*                             Slot;                                             		// 0x0060 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	unsigned char                                      UnlockMethod;                                     		// 0x0068 (0x0001) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	unsigned char                                      Quality;                                          		// 0x0069 (0x0001) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class UProductAsset_Pack_TA*                       Folder;                                           		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UDLCPack_TA*                                 DLC;                                              		// 0x0078 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UClass*                                      StatClass;                                        		// 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UProduct_TA*                                 RequiredProduct;                                  		// 0x0088 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<unsigned char>                              ProductIP;                                        		// 0x0090 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long long                                 ProductIPId;                                      		// 0x00A0 (0x0008) [0x0000000000000000]               
	unsigned long long                                 AllowedIPId;                                      		// 0x00A8 (0x0008) [0x0000000000000000]               
	unsigned long                                      bWhitelistAll : 1;                                		// 0x00B0 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bLocalized : 1;                                   		// 0x00B0 (0x0004) [0x0000000000020001] [0x00000002] (CPF_Edit | CPF_EditConst)
	unsigned long                                      bAutoGenerateDLCPack : 1;                         		// 0x00B0 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	unsigned long                                      bLicensed : 1;                                    		// 0x00B0 (0x0004) [0x0000000000000000] [0x00000008] 
	TArray<unsigned char>                              IPWhitelist;                                      		// 0x00B8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<unsigned char>                              IPBlacklist;                                      		// 0x00C8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FProductReplacement2                        PlatformReplacement;                              		// 0x00D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned char>                              PlatformExclusive;                                		// 0x00F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned char>                              TradeRestrictions;                                		// 0x0100 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	TArray<class UProductAttribute_TA*>                Attributes;                                       		// 0x0110 (0x0010) [0x0000000004400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInline)
	TArray<class UProductAttribute_TA*>                ChinaAttributes;                                  		// 0x0120 (0x0010) [0x0000000004420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink | CPF_EditInline)
	int                                                SortPriority;                                     		// 0x0130 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductTemplate_TA");
		}

		return uClassPointer;
	};

	void RecalcIPId();
	class UProductAttribute_TA* GetAttribute(class UClass* AttributeClass);
};

// Class TAGame.Product_TA
// 0x0064 (0x0134 - 0x0198)
class UProduct_TA : public UProductTemplate_TA
{
public:
	struct FName                                       AssetPackageName;                                 		// 0x0138 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FString                                     AssetPath;                                        		// 0x0140 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	unsigned long                                      bReplaced : 1;                                    		// 0x0150 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	unsigned long                                      bPack : 1;                                        		// 0x0150 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	struct FString                                     Label;                                            		// 0x0158 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     AsciiLabel;                                       		// 0x0168 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     LongLabel;                                        		// 0x0178 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     ShortAsciiLabel;                                  		// 0x0188 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Product_TA");
		}

		return uClassPointer;
	};

	bool CanBeArchived();
	bool IsPaintable();
	struct FString GetDisplayLabelSlot();
	unsigned char GetQuality();
	bool IsContainerKey();
	bool IsCurrency();
	bool IsBlueprint();
	bool IsContainerUnlocked();
	bool CanEquip();
	bool IsContainer();
	bool IsSchematic();
	bool IsPlatformExclusive();
	bool IsLicensed();
	bool IsExactlyDecryptor();
	bool IsExactlyKey();
	TArray<class UProductAttribute_TA*> GetAttributes();
	TArray<unsigned char> GetPlatforms();
	void LoadAssetAsync(struct FScriptDelegate Callback);
	class UProductAsset_TA* LoadAsset();
	struct FString GetShortSortLabel();
	struct FString GetSortLabel();
	struct FString GetThumbnailAssetPath();
	struct FString GetThumbnailPackageNameForLoad();
	struct FName GetThumbnailPackageName();
	struct FName GetThumbnailAssetName();
	struct FString GetTrademarkLabel();
	struct FProductHashID GetHashID();
	int GetID();
	struct FProductHashID GetPackHashID();
};

// Class TAGame.ProductThumbnail_TA
// 0x0020 (0x0060 - 0x0080)
class UProductThumbnail_TA : public UObject
{
public:
	class UTexture*                                    Texture;                                          		// 0x0060 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UTextureRenderTarget2D*                      RenderTarget;                                     		// 0x0068 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                RenderCount;                                      		// 0x0070 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FDouble                                     LastRenderTime;                                   		// 0x0078 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductThumbnail_TA");
		}

		return uClassPointer;
	};

	void ResetRenderCount();
};

// Class TAGame.ProductThumbnailAsset_TA
// 0x0018 (0x0060 - 0x0078)
class UProductThumbnailAsset_TA : public UObject
{
public:
	class UTexture2D*                                  Thumbnail;                                        		// 0x0060 (0x0008) [0x0000000000200001] (CPF_Edit)    
	class UTexture2D*                                  ColorMaskBackground;                              		// 0x0068 (0x0008) [0x0000000000200000]               
	class UTexture2D*                                  ThumbnailColorMask;                               		// 0x0070 (0x0008) [0x0000000000200000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductThumbnailAsset_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductThumbnailAsset_Blueprint_TA
// 0x0008 (0x0078 - 0x0080)
class UProductThumbnailAsset_Blueprint_TA : public UProductThumbnailAsset_TA
{
public:
	class UTexture2D*                                  RevealedThumbnail;                                		// 0x0078 (0x0008) [0x0000000000200003] (CPF_Edit | CPF_Const)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductThumbnailAsset_Blueprint_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductThumbnailQueue_TA
// 0x004C (0x0060 - 0x00AC)
class UProductThumbnailQueue_TA : public UObject
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x0060 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	TArray<int>                                        ThumbnailSizes;                                   		// 0x0068 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	float                                              RenderDelay;                                      		// 0x0078 (0x0004) [0x0000000000004001] (CPF_Edit | CPF_Config)
	int                                                RenderCountMax;                                   		// 0x007C (0x0004) [0x0000000000004001] (CPF_Edit | CPF_Config)
	unsigned long                                      bDebug : 1;                                       		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bCreatedThumbnailScene : 1;                       		// 0x0080 (0x0004) [0x0000000000002002] [0x00000002] (CPF_Const | CPF_Transient)
	TArray<struct FRenderThumbnailScene>               SceneQue;                                         		// 0x0088 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FRenderThumbnailRequest>             Requests;                                         		// 0x0098 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int                                                ThumbnailsCreatedSinceLastPurge;                  		// 0x00A8 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductThumbnailQueue_TA");
		}

		return uClassPointer;
	};

	void CancelRenderThumbnail(class UProductAsset_TA* Asset, class UOnlineProduct_TA* OnlineProduct, unsigned char Size);
	void CancelRenderThumbnails(class UObject* Listener);
	void RenderThumbnail(class UProductAsset_TA* Asset, class UOnlineProduct_TA* OnlineProduct, unsigned char Size, struct FScriptDelegate OnRendered);
	class UProductThumbnailQueue_TA* GetInstance();
};

// Class TAGame.ProductUtil_TA
// 0x0000 (0x0060 - 0x0060)
class UProductUtil_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductUtil_TA");
		}

		return uClassPointer;
	};

	TArray<class UOnlineProduct_TA*> FilterOutOnlineProductsWithQuality(TArray<class UOnlineProduct_TA*>& OnlineProducts, TArray<unsigned char>& ProductQualities);
	TArray<class UOnlineProduct_TA*> GetOnlineProductsWithAttribute(class UClass* AttributeClass, TArray<class UOnlineProduct_TA*>& OnlineProducts);
	TArray<class UOnlineProduct_TA*> GetBlueprintsWithSeriesIDs(TArray<class UOnlineProduct_TA*>& OnlineProducts, TArray<int>& SeriesIDs);
	TArray<class UOnlineProduct_TA*> GetOnlineProductsWithSeriesIDs(TArray<class UOnlineProduct_TA*>& OnlineProducts, TArray<int>& SeriesIDs);
	class UOnlineProduct_TA* FindOnlineProductWithNoAttributesFromID(int ProductID, TArray<class UOnlineProduct_TA*>& OnlineProducts, TArray<class UClass*>& AllowedAttributes);
	TArray<class UOnlineProduct_TA*> DiffOnlineProducts(TArray<class UOnlineProduct_TA*>& OnlineProducts, TArray<class UOnlineProduct_TA*>& OnlineProductsToRemove);
	bool HasDuplicateOnlineProductsWithNoAttributes(int ProductID, TArray<class UOnlineProduct_TA*>& OnlineProducts, TArray<class UClass*>& AllowedAttributes);
	int GetAssetSourcePID(int ProductID);
	bool AreDuplicateProducts(class UProduct_TA* ProductA, class UProduct_TA* ProductB);
	void RemoveProduct(int ProductID, TArray<class UOnlineProduct_TA*>& OnlineProducts, int& OutNumRemovedProducts);
	TArray<int> GetAllProductIDs(TArray<class UOnlineProduct_TA*>& OnlineProducts, TArray<int>& OfflineProducts);
	TArray<class UOnlineProduct_TA*> GetOnlineProductsForSlot(class UProductSlot_TA* Slot, TArray<class UOnlineProduct_TA*>& OnlineProducts);
	bool HasOnlineProductsForSlot(class UProductSlot_TA* Slot, TArray<class UOnlineProduct_TA*>& OnlineProducts);
	void MapInstanceIDs(TArray<class UOnlineProduct_TA*>& OnlineProducts, TArray<unsigned long long>& OutInstanceIds);
	TArray<unsigned long long> RemovingMissingInstanceIDs(TArray<class UOnlineProduct_TA*>& OnlineProducts, TArray<unsigned long long>& InstanceIDs);
	class UOnlineProduct_TA* CreateOnlineProduct(struct FOnlineProductData& ProductData);
	void ProcessOnlineData(TArray<struct FOnlineProductData>& InProductData, TArray<class UOnlineProduct_TA*>& OutProducts);
	class UOnlineProduct_TA* GetFirstOnlineProduct(int ProductID, TArray<class UOnlineProduct_TA*>& OnlineProducts);
	int GetProductIDFromOnlineID(unsigned long long InstanceID, TArray<class UOnlineProduct_TA*>& OnlineProducts);
	class UOnlineProduct_TA* GetOnlineProductByID(unsigned long long InstanceID, TArray<class UOnlineProduct_TA*>& OnlineProducts);
	TArray<class UOnlineProduct_TA*> GetNewProducts(TArray<unsigned long long>& OldProductsIds, TArray<class UOnlineProduct_TA*>& NewProducts);
	bool IsOnlineID(unsigned long long ProductID);
};

// Class TAGame.PSC_Constrained_TA
// 0x0008 (0x03E0 - 0x03E8)
class UPSC_Constrained_TA : public UParticleSystemComponent
{
public:
	float                                              WorldZ;                                           		// 0x03E0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bAttachedRotation : 1;                            		// 0x03E4 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PSC_Constrained_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.Pylon_Soccar_TA
// 0x0058 (0x04A4 - 0x04FC)
class APylon_Soccar_TA : public APylon
{
public:
	struct FRotator                                    FieldOrientation;                                 		// 0x04A8 (0x000C) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	struct FVector                                     FieldSize;                                        		// 0x04B4 (0x000C) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	struct FVector                                     FieldExtent;                                      		// 0x04C0 (0x000C) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	struct FVector                                     FieldCenter;                                      		// 0x04CC (0x000C) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	TArray<class UGoal_TA*>                            Goals;                                            		// 0x04D8 (0x0010) [0x00000000044A0009] (CPF_Edit | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	TArray<class APlayerStart*>                        SpawnPoints;                                      		// 0x04E8 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	float                                              GroundZ;                                          		// 0x04F8 (0x0004) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Pylon_Soccar_TA");
		}

		return uClassPointer;
	};

	struct FVector ClampPointToField(struct FVector V);
	struct FVector ClampToField(struct FVector V);
};

// Class TAGame.QuickChatTracker_TA
// 0x0053 (0x009D - 0x00F0)
class UQuickChatTracker_TA : public UActorComponent
{
public:
	struct FMap_Mirror                                 GroupMessages;                                    		// 0x00A0 (0x0050) [0x0000000000001000] (CPF_Native)  
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.QuickChatTracker_TA");
		}

		return uClassPointer;
	};

	void HandleChatMessage(class APlayerController_TA* PC, struct FString Message, unsigned long bPreset);
	void eventConstruct();
	TArray<struct FQuickChatGroup> GetQuickChatGroups();
	void IncrementQuickChat(struct FString Key, int IncrementAmount);
};

// Class TAGame.Ball_Breakout_TA
// 0x00D8 (0x0A28 - 0x0B00)
class ABall_Breakout_TA : public ABall_TA
{
public:
	TArray<struct FBreakoutDamage>                     DamageAtTime;                                     		// 0x0A28 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<int>                                        DamageForceLevels;                                		// 0x0A38 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long                                      bClearTeamOnDamage : 1;                           		// 0x0A48 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bCanDamageOwnTeam : 1;                            		// 0x0A48 (0x0004) [0x0000000000000000] [0x00000002] 
	float                                              MinDamageVelocity;                                		// 0x0A4C (0x0004) [0x0000000000000000]               
	float                                              MinDamageTime;                                    		// 0x0A50 (0x0004) [0x0000000000000000]               
	int                                                MinImpactSpeedForCharge;                          		// 0x0A54 (0x0004) [0x0000000000000000]               
	float                                              DoubleTapTime;                                    		// 0x0A58 (0x0004) [0x0000000000000000]               
	float                                              ForceAccumDecayPerSecond;                         		// 0x0A5C (0x0004) [0x0000000000000000]               
	float                                              ForceAccumMax;                                    		// 0x0A60 (0x0004) [0x0000000000000000]               
	float                                              ForceAccumRecent;                                 		// 0x0A64 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      LastTeamTouch;                                    		// 0x0A68 (0x0001) [0x0000000000000020] (CPF_Net)     
	class ACar_TA*                                     LastCarTouch;                                     		// 0x0A70 (0x0008) [0x0000000000000000]               
	int                                                LastDamage;                                       		// 0x0A78 (0x0004) [0x0000000000000000]               
	float                                              LastDamageTime;                                   		// 0x0A7C (0x0004) [0x0000000000000000]               
	int                                                DamageIndex;                                      		// 0x0A80 (0x0004) [0x0000000000000020] (CPF_Net)     
	float                                              AbsorbedForce;                                    		// 0x0A84 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FAppliedBreakoutDamage                      AppliedDamage;                                    		// 0x0A88 (0x0018) [0x0000000000000020] (CPF_Net)     
	struct FScriptDelegate                             __EventDamageIndexChanged__Delegate;              		// 0x0AA0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventLastTeamTouchChanged__Delegate;            		// 0x0AB8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventHitNoDamage__Delegate;                     		// 0x0AD0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventAppliedDamage__Delegate;                   		// 0x0AE8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Ball_Breakout_TA");
		}

		return uClassPointer;
	};

	float GetDamagePercent();
	bool WillDamage();
	int GetDamageIndexForForce(float Force);
	int GetDamageIndexForTime(float Time);
	void eventTick(float DeltaTime);
	void SetLastTeamTouch(unsigned char InLastTeamTouch);
	void ForceDamageIndex(int InIndex);
	void SetDamageIndex(int InIndex);
	void OnRigidBodyCollision(struct FAccumulatedRigidBodyCollision Collision);
	void OnCarTouch(class ACar_TA* HitCar, unsigned char HitType);
	void eventPostBeginPlay();
	void eventReplicatedEvent(struct FName VarName);
	void EventAppliedDamage(class ABall_Breakout_TA* Ball, struct FAppliedBreakoutDamage Damage);
	void EventHitNoDamage(class ABall_Breakout_TA* Ball);
	void EventLastTeamTouchChanged(class ABall_Breakout_TA* Ball, unsigned char InLastTeamTouch);
	void EventDamageIndexChanged(class ABall_Breakout_TA* Ball, int InDamageIndex);
};

// Class TAGame.Ball_God_TA
// 0x0088 (0x0A28 - 0x0AB0)
class ABall_God_TA : public ABall_TA
{
public:
	float                                              WallBounceSpeed;                                  		// 0x0A28 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              WallBounceBlend;                                  		// 0x0A2C (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              WallBounceBackDistance;                           		// 0x0A30 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              TargetBlendScaleXY;                               		// 0x0A34 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              TargetBlendScaleZ;                                		// 0x0A38 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              TargetSpeed;                                      		// 0x0A3C (0x0004) [0x0000000000000020] (CPF_Net)     
	float                                              TargetSpeedIncrement;                             		// 0x0A40 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              TargetSpeedBlend;                                 		// 0x0A44 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              MaxVelocityPitch;                                 		// 0x0A48 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              LastSpeedIncrementTime;                           		// 0x0A4C (0x0004) [0x0000000000000000]               
	float                                              TargetSpeedIncrementTime;                         		// 0x0A50 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              MinGlowBrightness;                                		// 0x0A54 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              MaxGlowBrightness;                                		// 0x0A58 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              PulseSpeedScale;                                  		// 0x0A5C (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              PulseBrightnessScale;                             		// 0x0A60 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              PulseMinBrightness;                               		// 0x0A64 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              PulseLifetime;                                    		// 0x0A68 (0x0004) [0x0000000000000002] (CPF_Const)   
	struct FLinearColor                                GlowDefaultColor;                                 		// 0x0A6C (0x0010) [0x0000000000000002] (CPF_Const)   
	struct FLinearColor                                MaxSpeedColor;                                    		// 0x0A7C (0x0010) [0x0000000000000002] (CPF_Const)   
	struct FName                                       AudioCurveName;                                   		// 0x0A8C (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       AudioIntensityName;                               		// 0x0A94 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UFXActorEvent_X*                             FXEvent_TeamChanged;                              		// 0x0AA0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UFXActorEvent_X*                             FXEvent_IntensityChanged;                         		// 0x0AA8 (0x0008) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Ball_God_TA");
		}

		return uClassPointer;
	};

	void __Ball_God_TA__Construct_909839574D0C007D50038E9AB7249520(class AGameEvent_Team_TA* _);
	void __Ball_God_TA__Construct_8F78C7C04155A3669E9E0E97A423830D(class ABall_TA* Ball);
	struct FVector GetDirectionToTarget();
	struct FVector GetAimLocation();
	struct FLinearColor GetMaxSpeedColor();
	float eventGetTrailIntensity();
	class UGoal_TA* eventGetGoalTarget();
	int eventGetTargetTeamIndex();
	struct FLinearColor eventGetActiveTeamColor();
	bool AtMaxSpeed();
	float GetGlowBrightness();
	float GetTargetSpeedAlpha();
	void UpdatePulse();
	void OnTargetSpeedChanged();
	void TryIncrementTargetSpeed();
	void UpdateColor();
	void OnHitTeamNumChanged();
	void SetCarHitTeamNum(unsigned char TeamNum);
	void OnHitWorld(struct FVector HitLoc, struct FVector HitNormal, class UPhysicalMaterial* PhysMat);
	void eventPostBeginPlay();
	void eventConstruct();
	void eventReplicatedEvent(struct FName VarName);
};

// Class TAGame.Ball_Haunted_TA
// 0x0108 (0x0A28 - 0x0B30)
class ABall_Haunted_TA : public ABall_TA
{
public:
	struct FVector2D                                   SeekPositionRangeLength;                          		// 0x0A28 (0x0008) [0x0000000000000000]               
	struct FVector2D                                   SeekPositionRangeWidth;                           		// 0x0A30 (0x0008) [0x0000000000000000]               
	struct FVector2D                                   SeekPositionRangeHeight;                          		// 0x0A38 (0x0008) [0x0000000000000000]               
	struct FVector2D                                   NextSeekTimeRange;                                		// 0x0A40 (0x0008) [0x0000000000000000]               
	float                                              TrappedHoverHeight;                               		// 0x0A48 (0x0004) [0x0000000000000000]               
	float                                              HorizontalSpeed;                                  		// 0x0A4C (0x0004) [0x0000000000000000]               
	float                                              VerticalSpeed;                                    		// 0x0A50 (0x0004) [0x0000000000000000]               
	float                                              ArrivalDistance;                                  		// 0x0A54 (0x0004) [0x0000000000000000]               
	float                                              TrappedHorizontalSpeed;                           		// 0x0A58 (0x0004) [0x0000000000000000]               
	float                                              TrappedVerticalSpeed;                             		// 0x0A5C (0x0004) [0x0000000000000000]               
	float                                              TrappedCaptureTime;                               		// 0x0A60 (0x0004) [0x0000000000000000]               
	float                                              HitPhysicsDuration;                               		// 0x0A64 (0x0004) [0x0000000000000000]               
	unsigned char                                      ReplicatedBeamBrokenValue;                        		// 0x0A68 (0x0001) [0x0000000000000020] (CPF_Net)     
	unsigned char                                      LastTeamTouch;                                    		// 0x0A69 (0x0001) [0x0000000000000020] (CPF_Net)     
	unsigned char                                      DeactivatedGoalIndex;                             		// 0x0A6A (0x0001) [0x0000000000000020] (CPF_Net)     
	unsigned char                                      TotalActiveBeams;                                 		// 0x0A6B (0x0001) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FVector                                     SeekTarget;                                       		// 0x0A6C (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              NextNeutralTime;                                  		// 0x0A78 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bHitPhysicsActive : 1;                            		// 0x0A7C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bIsBallBeamed : 1;                                		// 0x0A7C (0x0004) [0x0000000000002020] [0x00000002] (CPF_Net | CPF_Transient)
	unsigned long                                      bIsTrapped : 1;                                   		// 0x0A7C (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	float                                              CurrentCaptureTime;                               		// 0x0A80 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CaptureTimePercentage;                            		// 0x0A84 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CaptureTimeAtExit;                                		// 0x0A88 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGoal_TA*                                    ActiveGoal;                                       		// 0x0A90 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	int                                                NumActiveBeamsByTeam[0x2] ;                       		// 0x0A98 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventLastTeamTouchChanged__Delegate;            		// 0x0AA0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventIsTrapped__Delegate;                       		// 0x0AB8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventBeamIsBroken__Delegate;                    		// 0x0AD0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __ReplicatedBeamBrokenValue__ChangeNotify;        		// 0x0AE8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __LastTeamTouch__ChangeNotify;                    		// 0x0B00 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __DeactivatedGoalIndex__ChangeNotify;             		// 0x0B18 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Ball_Haunted_TA");
		}

		return uClassPointer;
	};

	void __Ball_Haunted_TA__PostBeginPlay_08617E3F44317E3C6D0F67B92A43A4AA();
	void __Ball_Haunted_TA__PostBeginPlay_40FDF13B4E1434AD6DA38880B4F9ED1C();
	void __Ball_Haunted_TA__SetGameEvent_293E5BE3451600A5BBBFA290C2ABD80F(class AGameEvent_Soccar_TA* SG);
	void __DeactivatedGoalIndex__ChangeNotifyFunc();
	void __LastTeamTouch__ChangeNotifyFunc();
	void __ReplicatedBeamBrokenValue__ChangeNotifyFunc();
	struct FVector GetBallDestination();
	float GetVerticalVelocity(struct FVector Destination);
	struct FVector GetDesiredVelocity();
	void AddHauntedForces();
	void TickAuthoritative();
	void eventTick(float DeltaTime);
	void eventOnGoalExit();
	void eventOnHitGoal(class UGoal_TA* Goal, struct FVector HitLoc);
	void ScoreTrapGoal();
	void SetLastTeamTouch(unsigned char InLastTeamTouch);
	void SetBallIsTrapped(unsigned long bValue, class UGoal_TA* Goal);
	void OnHitWorld(struct FVector HitLoc, struct FVector HitNormal, class UPhysicalMaterial* PhysMat);
	void SetBallHitData(class ACar_TA* HitCar, struct FVector HitLocation, struct FVector HitNormal, unsigned char HitType);
	void TryBreakBeam(class ACar_TA* HitCar);
	void OnCarTouch(class ACar_TA* HitCar, unsigned char HitType);
	void ActivateHitPhysics();
	void SetBallPhased(unsigned long bValue, int TeamIndex);
	void SetBallTarget();
	void SetGameEvent(class AGameEvent_Soccar_TA* SoccarGame);
	void eventPostBeginPlay();
	void EventBeamIsBroken(class ABall_Haunted_TA* Ball);
	void EventIsTrapped(class ABall_Haunted_TA* Ball, unsigned long bInIsTrapped, class UGoal_TA* Goal);
	void EventLastTeamTouchChanged(class ABall_Haunted_TA* Ball, unsigned char InLastTeamTouch);
};

// Class TAGame.Ball_Trajectory_TA
// 0x0090 (0x0A28 - 0x0AB8)
class ABall_Trajectory_TA : public ABall_TA
{
public:
	TArray<struct FVector>                             AccurateTrajectoryPoints;                         		// 0x0A28 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FVector>                             AllPoints;                                        		// 0x0A38 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              LastCalculateTime;                                		// 0x0A48 (0x0004) [0x0000000000000000]               
	float                                              FixedDeltaTime;                                   		// 0x0A4C (0x0004) [0x0000000000000000]               
	float                                              TotalPathDistance;                                		// 0x0A50 (0x0004) [0x0000000000000000]               
	int                                                FrameCount;                                       		// 0x0A54 (0x0004) [0x0000000000000000]               
	int                                                TotalStepCount;                                   		// 0x0A58 (0x0004) [0x0000000000000000]               
	int                                                TotalFrameCount;                                  		// 0x0A5C (0x0004) [0x0000000000000000]               
	int                                                CurrentStepCount;                                 		// 0x0A60 (0x0004) [0x0000000000000000]               
	int                                                StepToPutAPointAt;                                		// 0x0A64 (0x0004) [0x0000000000000000]               
	struct FVector                                     LastLocation;                                     		// 0x0A68 (0x000C) [0x0000000000000000]               
	struct FVector                                     LastVelocity;                                     		// 0x0A74 (0x000C) [0x0000000000000000]               
	struct FVector                                     LastAngularVelocity;                              		// 0x0A80 (0x000C) [0x0000000000000000]               
	struct FRotator                                    LastRotation;                                     		// 0x0A8C (0x000C) [0x0000000000000000]               
	struct FTrajectorySetup                            TrajectorySettings;                               		// 0x0A98 (0x0014) [0x0000000000000000]               
	class UBallTrajectoryComponent_TA*                 TrajectoryComponentToUpdate;                      		// 0x0AB0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Ball_Trajectory_TA");
		}

		return uClassPointer;
	};

	bool CalculateTrajectory(struct FTrajectorySetup Settings, float TrajectoryScale, class UBallTrajectoryComponent_TA* InTrajectoryComponent, struct FVector StartLocation, struct FRotator StartRotation, struct FVector LaunchVelocity, struct FVector InAngularVelocity, unsigned long bForceUpdate);
	bool CanEverShowTrajectory();
	void eventPostBeginPlay();
};

// Class TAGame.Vehicle_TA
// 0x00F8 (0x07A0 - 0x0898)
class AVehicle_TA : public ARBActor_TA
{
public:
	class UCarMeshComponent_TA*                        CarMesh;                                          		// 0x07A0 (0x0008) [0x000000000408000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UVehicleSim_TA*                              VehicleSim;                                       		// 0x07A8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FStickyForceData                            StickyForce;                                      		// 0x07B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FAutoFlipData                               AutoFlip;                                         		// 0x07B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bDriving : 1;                                     		// 0x07C0 (0x0004) [0x0000000000002020] [0x00000001] (CPF_Net | CPF_Transient)
	unsigned long                                      bReplicatedHandbrake : 1;                         		// 0x07C0 (0x0004) [0x0000000000002022] [0x00000002] (CPF_Const | CPF_Net | CPF_Transient)
	unsigned long                                      bJumped : 1;                                      		// 0x07C0 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	unsigned long                                      bDoubleJumped : 1;                                		// 0x07C0 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	unsigned long                                      bOnGround : 1;                                    		// 0x07C0 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	unsigned long                                      bSuperSonic : 1;                                  		// 0x07C0 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	unsigned long                                      bPodiumMode : 1;                                  		// 0x07C0 (0x0004) [0x0000000000002020] [0x00000040] (CPF_Net | CPF_Transient)
	struct FVehicleInputs                              Input;                                            		// 0x07C4 (0x0020) [0x0000000000002002] (CPF_Const | CPF_Transient)
	unsigned char                                      ReplicatedThrottle;                               		// 0x07E4 (0x0001) [0x0000000000002022] (CPF_Const | CPF_Net | CPF_Transient)
	unsigned char                                      ReplicatedSteer;                                  		// 0x07E5 (0x0001) [0x0000000000002022] (CPF_Const | CPF_Net | CPF_Transient)
	class AAIController_TA*                            AIController;                                     		// 0x07E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APlayerController_TA*                        PlayerController;                                 		// 0x07F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APRI_TA*                                     PRI;                                              		// 0x07F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                VehicleUpdateTag;                                 		// 0x0800 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	struct FCarInteractionData                         CarInteraction;                                   		// 0x0808 (0x0010) [0x0000000000000000]               
	struct FVector                                     LocalCollisionOffset;                             		// 0x0818 (0x000C) [0x0000000000002002] (CPF_Const | CPF_Transient)
	struct FVector                                     LocalCollisionExtent;                             		// 0x0824 (0x000C) [0x0000000000002002] (CPF_Const | CPF_Transient)
	int                                                LastBallTouchFrame;                               		// 0x0830 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                LastBallImpactFrame;                              		// 0x0834 (0x0004) [0x0000000000002000] (CPF_Transient)
	class ACarComponent_Boost_TA*                      BoostComponent;                                   		// 0x0838 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACarComponent_Dodge_TA*                      DodgeComponent;                                   		// 0x0840 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACarComponent_AirControl_TA*                 AirControlComponent;                              		// 0x0848 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACarComponent_Jump_TA*                       JumpComponent;                                    		// 0x0850 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACarComponent_DoubleJump_TA*                 DoubleJumpComponent;                              		// 0x0858 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPitchTekDrawingComponent_TA*                PitchTekComponent;                                		// 0x0860 (0x0008) [0x000000000408000A] (CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class ULocalPlayerAudioParamsComponent_TA*         LocalPlayerAudioParamsComponent;                  		// 0x0868 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	float                                              TimeBelowSupersonicSpeed;                         		// 0x0870 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UNetworkConfig_TA*                           NetworkConfig;                                    		// 0x0878 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventPRIChanged__Delegate;                      		// 0x0880 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Vehicle_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void DrawCollisionBox(struct FVector ActorLocation, struct FRotator ActorRotation, struct FColor BoxColor, unsigned long bPersistent);
	void DumpVehicleSetup();
	void ForceNetPacketIfNearBall();
	void eventVehicleSettingsUpdated();
	void eventOnSuperSonicChanged();
	void eventOnGroundChanged();
	bool IsHitLocationWithinForwardAngle(float YawAngleDegrees, float PitchAngleDegrees, struct FTimeOfImpactData& Impact);
	bool IsCarHitAngleWithinForwardAngleCurve(class AVehicle_TA* OtherCar, struct FTimeOfImpactData& Impact, struct FInterpCurveFloat& YawAngleDegreesCurve, struct FInterpCurveFloat& PitchAngleDegreesCurve);
	bool IsCarHitAngleWithinForwardAngle(class AVehicle_TA* OtherCar, float YawAngleDegrees, float PitchAngleDegrees, struct FTimeOfImpactData& Impact);
	bool IsCarWithinForwardEllipticalCone(class AVehicle_TA* OtherCar, float YawAngleDegrees, float PitchAngleDegrees, struct FTimeOfImpactData& Impact);
	float GetForwardSpeed();
	float GetTimeOffGround();
	float GetTimeOnGround();
	struct FVector GetGroundNormal();
	bool IsOnWall();
	bool IsOnGround();
	int GetNumWheelWorldContacts();
	int GetNumWheelContacts();
	void ZeroMovementVariables();
	void eventSetVehicleInput(struct FVehicleInputs NewInput);
	void EnablePodiumMode();
	void SetDriving(unsigned long bDrive);
	void InitAudioParams();
	void OnPRIChanged();
	void OnControllerChanged();
	void UnPossessed();
	void PossessedBy(class AController* C);
	void eventReplicatedEvent(struct FName VarName);
	void EventPRIChanged(class AVehicle_TA* Vehicle);
};

// Class TAGame.RBHistory_TA
// 0x0030 (0x0070 - 0x00A0)
class URBHistory_TA : public UComponent
{
public:
	TArray<int>                                        FrameSnapshots;                                   		// 0x0070 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	TArray<unsigned long>                              ServerSnapshots;                                  		// 0x0080 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FRBPhysicsSnapshot>                  RBPhysicsSnapshots;                               		// 0x0090 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RBHistory_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RBVehicleHistory_TA
// 0x0048 (0x00A0 - 0x00E8)
class URBVehicleHistory_TA : public URBHistory_TA
{
public:
	float                                              InputFadeTime;                                    		// 0x00A0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FRBVehicleSnapshot>                  RBVehicleSnapshots;                               		// 0x00A8 (0x0010) [0x0000000000482002] (CPF_Const | CPF_Transient | CPF_Component | CPF_NeedCtorLink)
	TArray<struct FCarComponentHistory>                ComponentHistories;                               		// 0x00B8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	struct FVehicleInputs                              BackupVehicleInputs;                              		// 0x00C8 (0x0020) [0x0000000000002002] (CPF_Const | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RBVehicleHistory_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RBVehiclePart_TA
// 0x0018 (0x0268 - 0x0280)
class ARBVehiclePart_TA : public AActor
{
public:
	int                                                MaxVehicleParts;                                  		// 0x0268 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkParamGroup*                               Ak;                                               		// 0x0270 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UImpactEffectsComponent_TA*                  ImpactEffectsComponent;                           		// 0x0278 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RBVehiclePart_TA");
		}

		return uClassPointer;
	};

	void SetCollisionComponent(class UPrimitiveComponent* PrimComp);
	void CopyPrimitive(class UPrimitiveComponent* From, class UPrimitiveComponent* To);
	class UVehiclePartSkeletalMeshComponent_TA* CopySkeletalMesh(class USkeletalMeshComponent* InComponent, class UPhysicsAsset* CollisionAsset);
	class UVehiclePartStaticMeshComponent_TA* CopyStaticMesh(class UStaticMeshComponent* InComponent, class URB_BodySetup* BodySetup);
	void RemoveOldVehiclePart();
	void InitFX();
	void PostBeginPlay();
};

// Class TAGame.Replay_TA
// 0x0250 (0x0060 - 0x02B0)
class UReplay_TA : public UObject
{
public:
	struct FString                                     ReplayName;                                       		// 0x0060 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                EngineVersion;                                    		// 0x0070 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	int                                                LicenseeVersion;                                  		// 0x0074 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	int                                                NetVersion;                                       		// 0x0078 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	int                                                ReplayVersion;                                    		// 0x007C (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                ReplayLastSaveVersion;                            		// 0x0080 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                GameVersion;                                      		// 0x0084 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                BuildID;                                          		// 0x0088 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                Changelist;                                       		// 0x008C (0x0004) [0x0000000000000002] (CPF_Const)   
	struct FString                                     BuildVersion;                                     		// 0x0090 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	int                                                ReserveMegabytes;                                 		// 0x00A0 (0x0004) [0x0000000000004000] (CPF_Config)  
	float                                              RecordFPS;                                        		// 0x00A4 (0x0004) [0x0000000040004002] (CPF_Const | CPF_Config | CPF_EditInlineNotify)
	float                                              KeyframeDelay;                                    		// 0x00A8 (0x0004) [0x0000000000004002] (CPF_Const | CPF_Config)
	int                                                MaxChannels;                                      		// 0x00AC (0x0004) [0x0000000000004002] (CPF_Const | CPF_Config)
	int                                                MaxReplaySizeMB;                                  		// 0x00B0 (0x0004) [0x0000000000004002] (CPF_Const | CPF_Config)
	TArray<class UClass*>                              PlaybackClasses;                                  		// 0x00B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UClass*>                              IgnoreClasses;                                    		// 0x00C8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     FilePath;                                         		// 0x00D8 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Id;                                               		// 0x00E8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FName                                       MapName;                                          		// 0x00F8 (0x0008) [0x0000000040000002] (CPF_Const | CPF_EditInlineNotify)
	struct FString                                     Date;                                             		// 0x0100 (0x0010) [0x0000000040400002] (CPF_Const | CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                NumFrames;                                        		// 0x0110 (0x0004) [0x0000000040000002] (CPF_Const | CPF_EditInlineNotify)
	struct FName                                       MatchType;                                        		// 0x0114 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     PlayerName;                                       		// 0x0120 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long                                      bFileCorrupted : 1;                               		// 0x0130 (0x0004) [0x0000000040000002] [0x00000001] (CPF_Const | CPF_EditInlineNotify)
	unsigned long                                      bForceKeyframe : 1;                               		// 0x0130 (0x0004) [0x0000000000002002] [0x00000002] (CPF_Const | CPF_Transient)
	unsigned long                                      bLoadedNetPackages : 1;                           		// 0x0130 (0x0004) [0x0000000000002002] [0x00000004] (CPF_Const | CPF_Transient)
	unsigned long                                      bDebug : 1;                                       		// 0x0130 (0x0004) [0x0000000000002001] [0x00000008] (CPF_Edit | CPF_Transient)
	TArray<unsigned char>                              Data;                                             		// 0x0138 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FReplayKeyframe>                     KeyFrames;                                        		// 0x0148 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	unsigned char                                      ReplayState;                                      		// 0x0158 (0x0001) [0x0000000000002002] (CPF_Const | CPF_Transient)
	int                                                CurrentFrame;                                     		// 0x015C (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	int                                                NextKeyframe;                                     		// 0x0160 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	float                                              CurrentTime;                                      		// 0x0164 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	TArray<struct FReplayActorChannel>                 Channels;                                         		// 0x0168 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	struct FMap_Mirror                                 ChannelsMap;                                      		// 0x0178 (0x0050) [0x0000000000003002] (CPF_Const | CPF_Native | CPF_Transient)
	class UPackageMap*                                 PackageMap;                                       		// 0x01C8 (0x0008) [0x0000000000002002] (CPF_Const | CPF_Transient)
	TArray<struct FName>                               Levels;                                           		// 0x01D0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	TArray<int>                                        FreeChannels;                                     		// 0x01E0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              AccumulatedDeltaTime;                             		// 0x01F0 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	float                                              TimeToSkipTo;                                     		// 0x01F4 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	int                                                FrameToSkipTo;                                    		// 0x01F8 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	int                                                PlayersOnlyTicks;                                 		// 0x01FC (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	struct FPointer                                    WriterAr;                                         		// 0x0200 (0x0008) [0x0000000000003002] (CPF_Const | CPF_Native | CPF_Transient)
	struct FPointer                                    ReaderAr;                                         		// 0x0208 (0x0008) [0x0000000000003002] (CPF_Const | CPF_Native | CPF_Transient)
	TArray<struct FReplayLogItem>                      Logs;                                             		// 0x0210 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FTimelineKeyframe>                   TimelineKeyframes;                                		// 0x0220 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UCameraTrack_TA*                             CameraTrack;                                      		// 0x0230 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventPlaybackStopped__Delegate;                 		// 0x0238 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSpawned__Delegate;                         		// 0x0250 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPreTimeSkip__Delegate;                     		// 0x0268 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPostTimeSkip__Delegate;                    		// 0x0280 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPlayedFrame__Delegate;                     		// 0x0298 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Replay_TA");
		}

		return uClassPointer;
	};

	float GetPlaybackTime();
	bool IsFromBeforeGameVersion(unsigned char BeforeGameVersion);
	bool IsFromBeforeReplayVersion(unsigned char BeforeReplayVersion);
	struct FName GetMapToLoad();
	void SetReplayName(struct FString NewName);
	void RemoveTimelineKeyframe(int KeyframeIndex);
	void AddTimelineKeyframe(struct FName Type, int frame);
	void ReplayLog(class UObject* Context, struct FString Text);
	void eventTrimData(int FirstKeyframe, int FirstFrame);
	class UReplay_TA* CreateCopy(float StartTime);
	void ImportReplay(struct FString Path);
	void ExportReplay(struct FString Path);
	void SerializeReplay(TArray<unsigned char>& OutBytes);
	void SkipToFrame(int frame, unsigned long bFlush);
	void SkipToTime(float Time, unsigned long bFlush);
	class AActor* GetPlaybackActor(struct FName RecordedActorName);
	float GetReplayTimeSeconds();
	void StopPlayback();
	void StartPlaybackAtFrame(int StartFrame);
	void StartPlaybackAtTimeSeconds(float StartTime);
	void StopRecord();
	void StartRecord();
	void Tick(float DeltaTime);
	void AllReplayActors(class UClass* BaseClass, class AActor*& Actor);
	void eventPreExport();
	void EventPlayedFrame(class UReplay_TA* Replay);
	void EventPostTimeSkip(class UReplay_TA* Replay);
	void EventPreTimeSkip(class UReplay_TA* Replay);
	void EventSpawned(class UReplay_TA* Replay, class AActor* A);
	void EventPlaybackStopped(class UReplay_TA* Replay);
};

// Class TAGame.ReplayComponent_TA
// 0x0007 (0x009D - 0x00A4)
class UReplayComponent_TA : public UActorComponent
{
public:
	unsigned long                                      bRecording : 1;                                   		// 0x00A0 (0x0004) [0x0000000000002002] [0x00000001] (CPF_Const | CPF_Transient)
	unsigned long                                      bPlaying : 1;                                     		// 0x00A0 (0x0004) [0x0000000000002002] [0x00000002] (CPF_Const | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ReplayComponent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ReplayManager_TA
// 0x00D8 (0x0060 - 0x0138)
class UReplayManager_TA : public UObject
{
public:
	struct FString                                     ReplaysPath;                                      		// 0x0060 (0x0010) [0x0000000000404003] (CPF_Edit | CPF_Const | CPF_Config | CPF_NeedCtorLink)
	TArray<struct FPointer>                            ExportTasks;                                      		// 0x0070 (0x0010) [0x0000000000003000] (CPF_Native | CPF_Transient)
	TArray<struct FPointer>                            ClassTasks;                                       		// 0x0080 (0x0010) [0x0000000000003000] (CPF_Native | CPF_Transient)
	TArray<struct FPointer>                            ImportTasks;                                      		// 0x0090 (0x0010) [0x0000000000003000] (CPF_Native | CPF_Transient)
	struct FPointer                                    HeadersCountTask;                                 		// 0x00A0 (0x0008) [0x0000000000003000] (CPF_Native | CPF_Transient)
	TArray<struct FPointer>                            HeaderLoadTasks;                                  		// 0x00A8 (0x0010) [0x0000000000003000] (CPF_Native | CPF_Transient)
	TArray<struct FReplayExportCallbackData>           ExportCallbacks;                                  		// 0x00B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FReplayImportCallbackData>           ImportCallbacks;                                  		// 0x00C8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPreLoadReplay__Delegate;                   		// 0x00D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventExportFinished__Delegate;                  		// 0x00F0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventImportFinished__Delegate;                  		// 0x0108 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventHeadersLoaded__Delegate;                   		// 0x0120 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ReplayManager_TA");
		}

		return uClassPointer;
	};

	void PlayReplay(class UReplay_TA* Replay, struct FString Map, struct FString URL);
	void PlayReplayFile(struct FString FilePath, struct FString Map, struct FString URL);
	void PlayReplayID(struct FString ReplayID, struct FString Map, struct FString URL);
	void eventSetTick(unsigned long bTick);
	void Tick(float DeltaTime);
	void DeleteReplayFile(struct FString ReplayID);
	void ExportReplayBytes(struct FString ReplayID, struct FScriptDelegate Callback, TArray<unsigned char>& Bytes);
	void ExportReplay(class UReplay_TA* Replay, struct FScriptDelegate Callback);
	void ImportReplayFile(struct FString FilePath, struct FScriptDelegate Callback, unsigned long bSyncronous);
	void LoadHeaderFile(struct FString FilePath, struct FScriptDelegate Callback);
	void LoadHeaders(struct FScriptDelegate Callback);
	struct FString GetReplayFolder();
	void Init();
	class UReplayManager_TA* GetInstance();
	bool IsExporting();
	void EventHeadersLoaded(class UReplayManager_TA* Manager, TArray<struct FReplayHeaderLoadResult> Headers, class UError* Error);
	void EventImportFinished(class UReplayManager_TA* Manager, class UReplay_TA* Replay, class UError* Error);
	void EventExportFinished(class UReplayManager_TA* Manager, struct FString Id, class UError* Error);
	void EventPreLoadReplay(class UReplayManager_TA* Manager, class UReplay_TA* Replay);
};

// Class TAGame.RLBot_SessionRecorder_TA
// 0x0030 (0x0268 - 0x0298)
class ARLBot_SessionRecorder_TA : public AActor
{
public:
	int                                                MaxRecordSizeMB;                                  		// 0x0268 (0x0004) [0x0000000000004001] (CPF_Edit | CPF_Config)
	TArray<unsigned char>                              Data;                                             		// 0x0270 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FPointer                                    Archive;                                          		// 0x0280 (0x0008) [0x0000000000001000] (CPF_Native)  
	TArray<struct FPlayerActorIDPair>                  PlayerActorIDMap;                                 		// 0x0288 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RLBot_SessionRecorder_TA");
		}

		return uClassPointer;
	};

	void eventDestroyed();
	void StopRecording();
	void StartRecording();
};

// Class TAGame.RLBot_Util_TA
// 0x0028 (0x0060 - 0x0088)
class URLBot_Util_TA : public UObject
{
public:
	struct FString                                     ControllerURL;                                    		// 0x0060 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	struct FString                                     OutputFilePath;                                   		// 0x0070 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	float                                              PacketSendRate;                                   		// 0x0080 (0x0004) [0x0000000000004000] (CPF_Config)  
	unsigned long                                      bRecordInput : 1;                                 		// 0x0084 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RLBot_Util_TA");
		}

		return uClassPointer;
	};

	void __RLBot_Util_TA__Init_685F401D4DABF55BEC9888B6E66D1131(struct FString _);
	class APlayerReplicationInfo* eventGetSpectatorViewTarget();
	struct FPlayerStats eventGetPlayerStats(class APlayerReplicationInfo* PlayerReplicationInfo);
	void eventSetPaused(unsigned long bPaused);
	void eventEndMatch(class AGameEvent_TA* GameEvent);
	void HandleReplayFrame(class UReplay_TA* Replay);
	void eventReplayFinished();
	void ExportReplay(struct FString Path);
	void HandleStatEvent(class APRI_TA* Receiver, class APRI_TA* Victim, class UStatEvent_TA* StatEvent);
	void HandleHitBall(class ACar_TA* Car, class ABall_TA* Ball, struct FVector HitLocation, struct FVector HitNormal);
	class AAIController_TA* eventSpawnCustomBot(class AGameEvent_TA* G, struct FString BotName, unsigned char Team, struct FBotLoadout Loadout);
	class AAIController_TA* eventSpawnClassicBot(class AGameEvent_TA* G, struct FString BotName, unsigned char Team, float Skill, struct FBotLoadout Loadout);
	class AAIController_TA* SpawnBot(class AGameEvent_TA* G, struct FString BotName, unsigned char TeamNum, class UProductAsset_Bot_TA* Asset, struct FBotLoadout Loadout);
	class UProductAsset_Bot_TA* GetBotAsset(struct FString BotName);
	int eventGetTeamScore(class AGameEvent_TA* G, int Team);
	int eventGetDisplaySeconds(class AGameEvent_TA* G);
	bool eventGetOvertime(class AGameEvent_TA* G);
	bool eventGetBallHasBeenHit(class AGameEvent_TA* G);
	void PreLoadMap();
	void PostLoadMap();
	void eventStopMatch();
	void eventStartMatch();
	void eventInit();
	class URLBot_Util_TA* GetInstance();
};

// Class TAGame.SampleHistory_TA
// 0x0070 (0x0070 - 0x00E0)
class USampleHistory_TA : public UComponent
{
public:
	class USampleRecordSettings_TA*                    RecordSettings;                                   		// 0x0070 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FString                                     Title;                                            		// 0x0078 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FGraphSummaryMethod>                 Summaries;                                        		// 0x0088 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              YMin;                                             		// 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              YMax;                                             		// 0x009C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              GoodValue;                                        		// 0x00A0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BadValue;                                         		// 0x00A4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BaseValue;                                        		// 0x00A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FSample>                             Samples;                                          		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                SampleIndex;                                      		// 0x00C0 (0x0004) [0x0000000000000000]               
	float                                              AccumTime;                                        		// 0x00C4 (0x0004) [0x0000000000000000]               
	struct FSample                                     PendingSample;                                    		// 0x00C8 (0x0008) [0x0000000000000000]               
	unsigned long                                      bHasPendingSample : 1;                            		// 0x00D0 (0x0004) [0x0000000000000000] [0x00000001] 
	class UStatGraphDrawer_TA*                         Drawer;                                           		// 0x00D8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SampleHistory_TA");
		}

		return uClassPointer;
	};

	void Tick(float DeltaTime);
	void AddSample(float NewValue);
	float GetSummaryValue(unsigned char Type, float MaxSampleAge, unsigned long bAbsoluteValue);
	class USampleHistory_TA* SetBaseValue(float InBaseValue);
	class USampleHistory_TA* SetGoodBadValues(float InGoodValue, float InBadValue);
	class USampleHistory_TA* SetGraphMaxMin(float MaxValue, float MinValue);
	class USampleHistory_TA* AddSummary(unsigned char Type, float MaxSampleAge, unsigned long bAbsValue);
	class USampleHistory_TA* SetTitle(struct FString InTitle);
};

// Class TAGame.SampleRecordSettings_TA
// 0x0008 (0x0070 - 0x0078)
class USampleRecordSettings_TA : public UComponent
{
public:
	float                                              MaxSampleAge;                                     		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RecordRate;                                       		// 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SampleRecordSettings_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SaveGameManager_TA
// 0x00A0 (0x0060 - 0x0100)
class USaveGameManager_TA : public UObject
{
public:
	class USaveObjectManager_TA*                       SaveObjectManager;                                		// 0x0060 (0x0008) [0x0000000000000000]               
	struct FString                                     SaveDataID;                                       		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class ULocalPlayer_TA*                             Player;                                           		// 0x0078 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USaveData_TA*                                SaveData;                                         		// 0x0080 (0x0008) [0x0000000004400008] (CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UObjectProvider*                             SaveObjectProvider;                               		// 0x0088 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	float                                              MinTimeBetweenSaves;                              		// 0x0090 (0x0004) [0x0000000000004000] (CPF_Config)  
	float                                              LastSaveTime;                                     		// 0x0094 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UError*                                      DataLoadError;                                    		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UError*                                      DataSaveError;                                    		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bDataLoaded : 1;                                  		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bUserIgnoredLoadFailure : 1;                      		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bEnableSaving : 1;                                		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	unsigned long                                      bDisableSaveOSS : 1;                              		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	unsigned long                                      bDirty : 1;                                       		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	struct FString                                     SaveFolderPath;                                   		// 0x00B0 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	struct FString                                     EpicSaveFolderPath;                               		// 0x00C0 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventDataLoaded__Delegate;                      		// 0x00D0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventDataSaved__Delegate;                       		// 0x00E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SaveGameManager_TA");
		}

		return uClassPointer;
	};

	bool DeleteMount();
	void HandleNoSpaceSystemDialogComplete(unsigned long bContinueWithouSaving);
	void Save_Internal();
	void Save_Timer();
	void HandleDataSaved(struct FSaveObjectResult Result);
	void ForceSave();
	void Save();
	bool CanSave();
	void UserIgnoredLoadFailure(unsigned long bValue);
	void HandleProceedWithDefaultSaveData();
	void DisableSaving();
	void EnableSaving();
	void HandleDataLoaded(struct FLoadObjectResult Result);
	void OnLocalSaveDataDisabled();
	void Load();
	void NotifyWhenLoaded(struct FScriptDelegate Callback);
	void HandlePlayerLoginStatusChange(class UOnlinePlayer_X* OnlinePlayer);
	void SetSaveDataID(struct FString InSaveDataID);
	void Init(class ULocalPlayer_TA* InPlayer);
	void eventConstruct();
	struct FString GetSaveFileName(struct FString SaveFolder);
	struct FString GetSaveFolder();
	struct FString GetSaveEnvFolder();
	void EventDataSaved(class USaveGameManager_TA* Manager, class USaveData_TA* MySaveData, class UError* Error);
	void EventDataLoaded(class USaveGameManager_TA* Manager, class USaveData_TA* MySaveData, class UError* Error);
};

// Class TAGame.SaveObjectManager_TA
// 0x00D8 (0x0060 - 0x0138)
class USaveObjectManager_TA : public UObject
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x0060 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	TArray<struct FPointer>                            ImportTasks;                                      		// 0x0068 (0x0010) [0x0000000000103000] (CPF_Native | CPF_Transient)
	TArray<struct FScriptDelegate>                     ImportCallbacks;                                  		// 0x0078 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FPointer>                            ExportTasks;                                      		// 0x0088 (0x0010) [0x0000000000103000] (CPF_Native | CPF_Transient)
	TArray<struct FPointer>                            ListFilesTasks;                                   		// 0x0098 (0x0010) [0x0000000000103000] (CPF_Native | CPF_Transient)
	TArray<struct FPointer>                            DeleteTasks;                                      		// 0x00A8 (0x0010) [0x0000000000103000] (CPF_Native | CPF_Transient)
	TArray<struct FScriptDelegate>                     ListFilesCallbacks;                               		// 0x00B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                KeepNewestSaveFileCount;                          		// 0x00C8 (0x0004) [0x0000000000000000]               
	class UObject*                                     SaveData;                                         		// 0x00D0 (0x0008) [0x0000000000000000]               
	struct FString                                     SavePath;                                         		// 0x00D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                ControllerId;                                     		// 0x00E8 (0x0004) [0x0000000000000000]               
	unsigned long                                      bSaving : 1;                                      		// 0x00EC (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bPlayerSaveData : 1;                              		// 0x00EC (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	struct FScriptDelegate                             __EventDataLoaded__Delegate;                      		// 0x00F0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventDataSaved__Delegate;                       		// 0x0108 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnFilesListed__Delegate;                        		// 0x0120 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SaveObjectManager_TA");
		}

		return uClassPointer;
	};

	void CancelGetHeaders(struct FScriptDelegate Callback);
	void GetHeaders(int InControllerID, struct FString InPath, struct FString InPattern, struct FScriptDelegate Callback);
	void SetNewFileSaveCount(int Count);
	void eventHandleSaveResult(unsigned char Result);
	class UError* GetSaveError(unsigned char Result);
	class UError* GetLoadError(unsigned char InResult);
	void LoadAsync(int ControllerIndex, class UObject* RootObj, struct FString PathName, unsigned long bExactFileMatch, struct FScriptDelegate Callback);
	struct FLoadObjectResult Load(int InControllerID, class UObject* RootObj, struct FString PathName, unsigned long bExactFileMatch);
	void SaveAsync(int InControllerID, class UObject* RootObj, struct FString PathName, unsigned long bExactFileMatch);
	struct FSaveObjectResult Save(int InControllerID, class UObject* RootObj, struct FString PathName, unsigned long bExactFileMatch);
	void DecrementSaveManagerCounter();
	void IncrementSaveManagerCounter();
	int GetSaveDataSpace(int ControllerIndex);
	struct FString GetPlatformSavePath(struct FString DefaultPath, struct FUniqueNetId PlayerID);
	bool DeleteMount(int ControllerIndex, struct FString PathName);
	void DeleteFilesW(int ControllerIndex, struct FString PathName, int KeepNewestFileCount);
	bool IsReadingSaveData();
	void LoadGameDataAsync(int ControllerIndex, class UObject* RootObj, struct FString PathName, unsigned long bExactFileMatch, struct FScriptDelegate Callback);
	unsigned char LoadGameData(int ControllerIndex, class UObject* RootObj, struct FString PathName, unsigned long bExactFileMatch);
	bool IsDoneSaving();
	bool IsSaving();
	unsigned char UpdateSaveResult(int ControllerIndex);
	unsigned char SaveGameDataAsync(int ControllerIndex, class UObject* RootObj, struct FString PathName, unsigned long bExactFileMatch);
	unsigned char SaveGameData(int ControllerIndex, class UObject* RootObj, struct FString PathName, unsigned long bExactFileMatch);
	void OnFilesListed(TArray<struct FString> Files, unsigned char Result);
	void EventDataSaved(struct FSaveObjectResult Result);
	void EventDataLoaded(struct FLoadObjectResult Result);
};

// Class TAGame.SaveObjectSerializer_TA
// 0x0005 (0x0060 - 0x0065)
class USaveObjectSerializer_TA : public USerializer_X
{
public:
	int                                                Version;                                          		// 0x0060 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      Result;                                           		// 0x0064 (0x0001) [0x0000000000002002] (CPF_Const | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SaveObjectSerializer_TA");
		}

		return uClassPointer;
	};

	class USaveObjectSerializer_TA* SetVersion(int InVersion);
	void DeserializeObject(class UObject* Target, TArray<unsigned char>& InData);
	void SerializeObject(class UObject* Target, TArray<unsigned char>& OutData);
	class USaveObjectSerializer_TA* CreateNew(int InVersion);
};

// Class TAGame.SeqAct_AnalyzeMusicFromCsv_TA
// 0x0024 (0x0160 - 0x0184)
class USeqAct_AnalyzeMusicFromCsv_TA : public USequenceAction
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x0160 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FString                                     CsvFileName;                                      		// 0x0168 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	float                                              StartOverrideTime;                                		// 0x0178 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              OverrideTime;                                     		// 0x017C (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bTickable : 1;                                    		// 0x0180 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_AnalyzeMusicFromCsv_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqAct_CarMatinee_TA
// 0x0028 (0x0288 - 0x02B0)
class USeqAct_CarMatinee_TA : public USeqAct_Interp
{
public:
	struct FString                                     CinematicCarArchPath;                             		// 0x0288 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	unsigned long                                      bHideAfterPause : 1;                              		// 0x0298 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bHideAfterCompleted : 1;                          		// 0x0298 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	TArray<class UClass*>                              ClassesToNotShow;                                 		// 0x02A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_CarMatinee_TA");
		}

		return uClassPointer;
	};

	class AActor* eventCreateCars(class ASkeletalMeshActorMAT_Products_TA* SkelMeshActor);
	void UpdateLinkedVariablesToNewCar(class AActor* Car, class ASkeletalMeshActorMAT_Products_TA* SkelMeshActor);
	void UpdateAttachmentsToNewCar(class AActor* Car, class ASkeletalMeshActorMAT_Products_TA* SkelMeshActor);
};

// Class TAGame.SeqAct_DumpMovie_TA
// 0x0000 (0x0160 - 0x0160)
class USeqAct_DumpMovie_TA : public USequenceAction
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_DumpMovie_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqAct_SetLoadout_TA
// 0x00A0 (0x0160 - 0x0200)
class USeqAct_SetLoadout_TA : public USequenceAction
{
public:
	TArray<class UProductAsset_TA*>                    Products;                                         		// 0x0160 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FProductWithSettings>                ProductsWithPaint;                                		// 0x0170 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UProductAsset_PaintFinish_TA*                TeamFinish;                                       		// 0x0180 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UProductAsset_PaintFinish_TA*                AccentFinish;                                     		// 0x0188 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bUseInGameColors : 1;                             		// 0x0190 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bOverwriteCurrent : 1;                            		// 0x0190 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bUseDefaultLoadout : 1;                           		// 0x0190 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	unsigned long                                      bApplyToAllCars : 1;                              		// 0x0190 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	struct FLinearColor                                TeamColor;                                        		// 0x0194 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                AccentColor;                                      		// 0x01A4 (0x0010) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      ForcedTeamOverride;                               		// 0x01B4 (0x0001) [0x0000000000000001] (CPF_Edit)    
	class UProductPaint_TA*                            BodyPaint;                                        		// 0x01B8 (0x0008) [0x0000000000000000]               
	class UProductPaint_TA*                            SkinPaint;                                        		// 0x01C0 (0x0008) [0x0000000000000000]               
	class UProductPaint_TA*                            WheelPaint;                                       		// 0x01C8 (0x0008) [0x0000000000000000]               
	class UProductPaint_TA*                            BoostPaint;                                       		// 0x01D0 (0x0008) [0x0000000000000000]               
	class UProductPaint_TA*                            SSTrailPaint;                                     		// 0x01D8 (0x0008) [0x0000000000000000]               
	class UProductPaint_TA*                            AntennaPaint;                                     		// 0x01E0 (0x0008) [0x0000000000000000]               
	class UProductPaint_TA*                            HatPaint;                                         		// 0x01E8 (0x0008) [0x0000000000000000]               
	class UProductPaint_TA*                            GoalExplosionPaint;                               		// 0x01F0 (0x0008) [0x0000000000000000]               
	class ACar_TA*                                     ParentCar;                                        		// 0x01F8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetLoadout_TA");
		}

		return uClassPointer;
	};

	int eventGetObjClassVersion();
	void eventApplyLoadoutToSkeletalMesh(class ASkeletalMeshActorMAT_Products_TA* Target);
	void HandleOverrideLoadout(class ACar_TA* Car);
	class UProductAsset_TA* GetProductAsset(class UClass* ClassToFind, class UObject* PackageToCompare);
	void ApplyChangesToProductAsset(class UCarMeshComponent_TA* CarMesh, class UProductPaint_TA* PaintToApply, class UObject* ObjectToChange, class UClass* ProductAssetClass, class UAssetAttribute_TeamEdition_TA* TeamEdition, int TeamID, class UObject* PackageToCompare);
	void CheckAndApplyChangesToComponent(class UObject* ObjectToCheck, class UObject* ObjectToCompare, class UProductPaint_TA* Paint, class UAssetAttribute_TeamEdition_TA* TeamEdition, int TeamID);
	void ApplyChangesToAttachment(struct FProductAttachment CurrentAttachment, class UProductPaint_TA* Paint, class UAssetAttribute_TeamEdition_TA* TeamEdition, int TeamID);
	void ApplyNewChangesToProductAssets(class UProductLoader_TA* ProductLoader);
	int GetTeamIndex(class ACar_TA* Car);
	void HandleFirstLoadout(class ACar_TA* Car);
	struct FClientLoadoutData GetLoadout(class ACar_TA* Car, class UProductAsset_Skin_TA*& OutSkinAsset);
	void CopyPropertiesFromCar(class ACar_TA* Car);
	void eventActivated();
};

// Class TAGame.SeqAct_SetReplayFX_TA
// 0x002C (0x0160 - 0x018C)
class USeqAct_SetReplayFX_TA : public USequenceAction
{
public:
	float                                              FocusDistance;                                    		// 0x0160 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                FocusBlur;                                        		// 0x0164 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FocusStrength;                                    		// 0x0168 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bUseGreenScreen : 1;                              		// 0x016C (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bUseVignetteOverlay : 1;                          		// 0x016C (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	struct FLinearColor                                GreenScreenColor;                                 		// 0x0170 (0x0010) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      ImageFilterIndex;                                 		// 0x0180 (0x0001) [0x0000000000000001] (CPF_Edit)    
	float                                              ImageFilterIntensity;                             		// 0x0184 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Vignette;                                         		// 0x0188 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetReplayFX_TA");
		}

		return uClassPointer;
	};

	void SetSystemSettings();
	void InitValuesFromSystemSettings();
	void eventActivated();
	void eventCopySettingsFromPostProcessManager();
};

// Class TAGame.SeqAct_SetTimeDilation_TA
// 0x0040 (0x0160 - 0x01A0)
class USeqAct_SetTimeDilation_TA : public USequenceAction
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x0160 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	unsigned long                                      bUseCurve : 1;                                    		// 0x0168 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bActivated : 1;                                   		// 0x0168 (0x0004) [0x0000000000000000] [0x00000002] 
	float                                              CurrentTime;                                      		// 0x016C (0x0004) [0x0000000000000000]               
	float                                              EndTime;                                          		// 0x0170 (0x0004) [0x0000000000000000]               
	float                                              SlomoValue;                                       		// 0x0174 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FRawDistributionFloat                       SlomoCurve;                                       		// 0x0178 (0x0028) [0x0000000000480001] (CPF_Edit | CPF_Component | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetTimeDilation_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqAct_SpawnFXActor_TA
// 0x0060 (0x0160 - 0x01C0)
class USeqAct_SpawnFXActor_TA : public USequenceAction
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x0160 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class AFXActor_X*                                  FXActor;                                          		// 0x0168 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      Transform;                                        		// 0x0170 (0x0008) [0x0000000000000000]               
	struct FVector                                     Location;                                         		// 0x0178 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    Rotation;                                         		// 0x0184 (0x000C) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      ActorToSpawnOn;                                   		// 0x0190 (0x0008) [0x0000000000000000]               
	class AFXActor_X*                                  SpawnedFXActor;                                   		// 0x0198 (0x0008) [0x0000000000000000]               
	class UProductPaint_TA*                            Paint;                                            		// 0x01A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       PaintParameterNames;                              		// 0x01A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bTickable : 1;                                    		// 0x01B0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class UMaterialInstanceConstant*                   BallLocMic;                                       		// 0x01B8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SpawnFXActor_TA");
		}

		return uClassPointer;
	};

	void SpawnFXActor(struct FVector LocationToSpawnOn, struct FRotator RotationToSpawnWith);
	void eventActivated();
};

// Class TAGame.SeqEvent_ReplayTime_TA
// 0x0008 (0x017C - 0x0184)
class USeqEvent_ReplayTime_TA : public USequenceEvent
{
public:
	float                                              TimeSeconds;                                      		// 0x0180 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_ReplayTime_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqEvent_UIStateChange_TA
// 0x0005 (0x017C - 0x0181)
class USeqEvent_UIStateChange_TA : public USequenceEvent
{
public:
	unsigned char                                      UIState;                                          		// 0x0180 (0x0001) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_UIStateChange_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SimpleSpringComponent_TA
// 0x0078 (0x0070 - 0x00E8)
class USimpleSpringComponent_TA : public UComponent
{
public:
	struct FSimpleSpringSettings                       Spring;                                           		// 0x0070 (0x0050) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bEnabled : 1;                                     		// 0x00C0 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bInitialized : 1;                                 		// 0x00C0 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	struct FVector                                     Displacement;                                     		// 0x00C4 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     MassLocation;                                     		// 0x00D0 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     MassVelocity;                                     		// 0x00DC (0x000C) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SimpleSpringComponent_TA");
		}

		return uClassPointer;
	};

	void eventDrawDebug(struct FRotator BaseRotation);
	struct FVector GetNormalizedDisplacement();
	void AddForce(struct FVector Force);
	void UpdateSpring(float DeltaTime, struct FVector& BaseLocation, struct FRotator& BaseRotation);
	void UpdatePrimitive(float DeltaTime, class UPrimitiveComponent* BaseComponent);
};

// Class TAGame.AntennaComponent_TA
// 0x0078 (0x00E8 - 0x0160)
class UAntennaComponent_TA : public USimpleSpringComponent_TA
{
public:
	struct FName                                       TopperSocket;                                     		// 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class USkeletalMesh*                               AntennaMesh;                                      		// 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              AntennaSegmentExtension;                          		// 0x00F8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UMaterialInterface*                          AntennaMaterial;                                  		// 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAnimTree*                                   AnimTreeTemplate;                                 		// 0x0108 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FName>                               BendyBoneControllers;                             		// 0x0110 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              BendScale;                                        		// 0x0120 (0x0004) [0x0000000000000000]               
	float                                              PitchScale;                                       		// 0x0124 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RollScale;                                        		// 0x0128 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PitchZScale;                                      		// 0x012C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RollZScale;                                       		// 0x0130 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UMaterialInstanceConstant*                   TopperMaterial;                                   		// 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              LastTopperWindSpeedParamValue;                    		// 0x0140 (0x0004) [0x0000000000002000] (CPF_Transient)
	class USkeletalMeshComponent_TA*                   AntennaSK;                                        		// 0x0148 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	TArray<class USkelControlSingleBone*>              BendyControls;                                    		// 0x0150 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AntennaComponent_TA");
		}

		return uClassPointer;
	};

	void UpdateSpring(float DeltaTime, struct FVector& BaseLocation, struct FRotator& BaseRotation);
	void UpdatePrimitive(float DeltaTime, class UPrimitiveComponent* BaseComponent);
	void SetTopperMaterial(class UMaterialInstanceConstant* InTopperMaterial);
	void InitAntenna(class USkeletalMeshComponent_TA* AttachToMesh);
};

// Class TAGame.SkelControlRotationSpring_TA
// 0x005C (0x0130 - 0x018C)
class USkelControlRotationSpring_TA : public USkelControlSingleBone
{
public:
	struct FRotator                                    RotationMin;                                      		// 0x0130 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    RotationMax;                                      		// 0x013C (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     SpringToPitch;                                    		// 0x0148 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     SpringToYaw;                                      		// 0x0154 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     SpringToRoll;                                     		// 0x0160 (0x000C) [0x0000000000000001] (CPF_Edit)    
	class USimpleSpringComponent_TA*                   SpringComponent;                                  		// 0x0170 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FVector                                     TestSpringForce;                                  		// 0x0178 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              TestSpringDelay;                                  		// 0x0184 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              LastTestSpringTime;                               		// 0x0188 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SkelControlRotationSpring_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SkelControlSingleBoneCopy_TA
// 0x0078 (0x0130 - 0x01A8)
class USkelControlSingleBoneCopy_TA : public USkelControlSingleBone
{
public:
	struct FName                                       ControlToCopyName;                                		// 0x0130 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FAxisConversion                             TranslationX;                                     		// 0x0138 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FAxisConversion                             TranslationY;                                     		// 0x0144 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FAxisConversion                             TranslationZ;                                     		// 0x0150 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FAxisConversion                             RotationPitch;                                    		// 0x015C (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FAxisConversion                             RotationYaw;                                      		// 0x0168 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FAxisConversion                             RotationRoll;                                     		// 0x0174 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     TranslationScale;                                 		// 0x0180 (0x000C) [0x0000000000000000]               
	struct FVector                                     RotationScale;                                    		// 0x018C (0x000C) [0x0000000000000000]               
	unsigned long                                      bConvertedScales : 1;                             		// 0x0198 (0x0004) [0x0000000000000000] [0x00000001] 
	class USkelControlSingleBone*                      ControlToCopy;                                    		// 0x01A0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SkelControlSingleBoneCopy_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SkelControlSingleBoneParameterized_TA
// 0x00F0 (0x0130 - 0x0220)
class USkelControlSingleBoneParameterized_TA : public USkelControlSingleBone
{
public:
	struct FRawDistributionFloat                       Pitch;                                            		// 0x0130 (0x0028) [0x0000000000480001] (CPF_Edit | CPF_Component | CPF_NeedCtorLink)
	struct FRawDistributionFloat                       Yaw;                                              		// 0x0158 (0x0028) [0x0000000000480001] (CPF_Edit | CPF_Component | CPF_NeedCtorLink)
	struct FRawDistributionFloat                       Roll;                                             		// 0x0180 (0x0028) [0x0000000000480001] (CPF_Edit | CPF_Component | CPF_NeedCtorLink)
	struct FRawDistributionFloat                       PitchSpeed;                                       		// 0x01A8 (0x0028) [0x0000000000480001] (CPF_Edit | CPF_Component | CPF_NeedCtorLink)
	struct FRawDistributionFloat                       YawSpeed;                                         		// 0x01D0 (0x0028) [0x0000000000480001] (CPF_Edit | CPF_Component | CPF_NeedCtorLink)
	struct FRawDistributionFloat                       RollSpeed;                                        		// 0x01F8 (0x0028) [0x0000000000480001] (CPF_Edit | CPF_Component | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SkelControlSingleBoneParameterized_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SkelControlTether_TA
// 0x0010 (0x0100 - 0x0110)
class USkelControlTether_TA : public USkelControlBase
{
public:
	struct FName                                       AnchorBoneName;                                   		// 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              DistanceMin;                                      		// 0x0108 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DistanceMax;                                      		// 0x010C (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SkelControlTether_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SkeletalMeshActor_NoSlomo_TA
// 0x0004 (0x02CC - 0x02D0)
class ASkeletalMeshActor_NoSlomo_TA : public ASkeletalMeshActor
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SkeletalMeshActor_NoSlomo_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SkeletalMeshActorMAT_Products_TA
// 0x00F0 (0x02E0 - 0x03D0)
class ASkeletalMeshActorMAT_Products_TA : public ASkeletalMeshActorMAT
{
public:
	class UProductAsset_Body_TA*                       BodyAsset;                                        		// 0x02E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UProductAsset_Skin_TA*                       SkinAsset;                                        		// 0x02E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UProductAsset_PaintFinish_TA*                TeamFinishAsset;                                  		// 0x02F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UProductAsset_PaintFinish_TA*                CustomFinishAsset;                                		// 0x02F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UProductAsset_Wheel_TA*                      WheelAsset;                                       		// 0x0300 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UProductAsset_Boost_TA*                      BoostAsset;                                       		// 0x0308 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UProductAsset_Attachment_TA*                 AntennaAsset;                                     		// 0x0310 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UProductAsset_Attachment_TA*                 HatAsset;                                         		// 0x0318 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bInitBoostFX : 1;                                 		// 0x0320 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bUseInGameColors : 1;                             		// 0x0320 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	struct FLinearColor                                TeamColor;                                        		// 0x0324 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                CustomColor;                                      		// 0x0334 (0x0010) [0x0000000000000001] (CPF_Edit)    
	float                                              FakeBoostVelocity;                                		// 0x0344 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DeactivateBoostVelocity;                          		// 0x0348 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UCarPreviewMeshComponent_TA*                 CarMeshComp;                                      		// 0x0350 (0x0008) [0x0000000024080008] (CPF_ExportObject | CPF_Component | CPF_EditInline | CPF_Deprecated)
	class USkeletalMeshComponent*                      FLWheelSKComponent;                               		// 0x0358 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class USkeletalMeshComponent*                      FRWheelSKComponent;                               		// 0x0360 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class USkeletalMeshComponent*                      BLWheelSKComponent;                               		// 0x0368 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class USkeletalMeshComponent*                      BRWheelSKComponent;                               		// 0x0370 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UStaticMeshComponent*                        FLWheelSMComponent;                               		// 0x0378 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UStaticMeshComponent*                        FRWheelSMComponent;                               		// 0x0380 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UStaticMeshComponent*                        BLWheelSMComponent;                               		// 0x0388 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UStaticMeshComponent*                        BRWheelSMComponent;                               		// 0x0390 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	TArray<class UMeshComponent*>                      WheelMeshComponents;                              		// 0x0398 (0x0010) [0x0000000004482008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	class UCarPreviewMeshComponent_TA*                 PreviewMesh;                                      		// 0x03A8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	TArray<struct FBothWheelAssets>                    AdditionalWheels;                                 		// 0x03B0 (0x0010) [0x0000000000480000] (CPF_Component | CPF_NeedCtorLink)
	class UNameplateComponent_TA*                      NameplateComponent;                               		// 0x03C0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UProductLoader_TA*                           ProductLoader;                                    		// 0x03C8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SkeletalMeshActorMAT_Products_TA");
		}

		return uClassPointer;
	};

	void AddProduct(class UProductAsset_TA* InProduct, struct FClientLoadoutData& OutLoadout);
	struct FClientLoadoutData GetClientLoadoutData();
	void HandleAllProductsLoaded(class UProductLoader_TA* InProductLoader);
	void UpdateWithLoadout(struct FLoadoutData Loadout);
	void CreateAttachments();
	void UpdateBoost();
	void eventCreateBoostActor();
	void UpdateAllComponents();
	void eventTick(float DeltaTime);
	void SetDefaultAssets();
	void eventPostBeginPlay();
	void ConditionalCreateMeshes();
};

// Class TAGame.SkeletalMeshComponent_NoSlomo_TA
// 0x0000 (0x07B0 - 0x07B0)
class USkeletalMeshComponent_NoSlomo_TA : public USkeletalMeshComponent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SkeletalMeshComponent_NoSlomo_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SkeletalMeshComponent_TA
// 0x0008 (0x07B0 - 0x07B8)
class USkeletalMeshComponent_TA : public USkeletalMeshComponent
{
public:
	float                                              FOVOverride;                                      		// 0x07B0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	unsigned long                                      bIgnoreScriptAttach : 1;                          		// 0x07B4 (0x0004) [0x0000000000002002] [0x00000001] (CPF_Const | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SkeletalMeshComponent_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	class UParticleSystemComponent* CreateAttachmentPSC(class UParticleSystem* PS, class UObject* OuterOverride);
	class USkeletalMeshComponent_TA* CreateAttachmentSK(class USkeletalMesh* Mesh, class UMaterialInterface* MaterialOverride, class UObject* OuterOverride);
	class UStaticMeshComponent_TA* CreateAttachmentSMC(class UStaticMesh* Mesh, class UMaterialInterface* MaterialOverride, unsigned long bCreateNewMIC, class UObject* OuterOverride);
	void ModifyAttachmentPrimitive(class UPrimitiveComponent* PrimComp);
	void eventTick(float DeltaTime);
	void eventOnDetached();
	void eventOnAttached();
};

// Class TAGame.CarMeshComponentBase_TA
// 0x0110 (0x07B8 - 0x08C8)
class UCarMeshComponentBase_TA : public USkeletalMeshComponent_TA
{
public:
	class UProductAsset_Body_TA*                       BodyAsset;                                        		// 0x07B8 (0x0008) [0x0000000000000000]               
	class UProductAsset_Skin_TA*                       SkinAsset;                                        		// 0x07C0 (0x0008) [0x0000000000000000]               
	class UProductAsset_Wheel_TA*                      WheelAsset;                                       		// 0x07C8 (0x0008) [0x0000000000000000]               
	struct FLinearColor                                TeamColorOverride;                                		// 0x07D0 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FLinearColor                                CustomColorOverride;                              		// 0x07E0 (0x0010) [0x0000000000002000] (CPF_Transient)
	int                                                Team;                                             		// 0x07F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                TeamColorID;                                      		// 0x07F4 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                CustomColorID;                                    		// 0x07F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UProductAsset_Logo_TA*                       Logo;                                             		// 0x0800 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bSwapLogoColors : 1;                              		// 0x0808 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bBoosting : 1;                                    		// 0x0808 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bLocalPlayer : 1;                                 		// 0x0808 (0x0004) [0x0000000000000000] [0x00000004] 
	class UProductAsset_PaintFinish_TA*                TeamFinish;                                       		// 0x0810 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProductAsset_PaintFinish_TA*                CustomFinish;                                     		// 0x0818 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FClubColorSet                               ClubColors;                                       		// 0x0820 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class UAntennaComponent_TA*>                Antennas;                                         		// 0x0828 (0x0010) [0x0000000004482008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	TArray<class UMeshComponent*>                      WheelMeshes;                                      		// 0x0838 (0x0010) [0x0000000004482008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	class AFXActor_X*                                  BodyFX;                                           		// 0x0848 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class AFXActor_X*>                          FXActors;                                         		// 0x0850 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UAttachmentBehavior_TA*>              Behaviors;                                        		// 0x0860 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class AFXActor_X*                                  BodyFXActor;                                      		// 0x0870 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FClientLoadoutOnlineData                    ProductAttributes;                                		// 0x0878 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FName>                               ProductAttachmentSockets;                         		// 0x0888 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	int                                                QueuedTeamFinishID;                               		// 0x0898 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                QueuedCustomFinishID;                             		// 0x089C (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<struct FInheritedObjects>                   ObjectsWithInheritedSettings;                     		// 0x08A0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPaintSettingsUpdated__Delegate;            		// 0x08B0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarMeshComponentBase_TA");
		}

		return uClassPointer;
	};

	void __CarMeshComponentBase_TA__InitBodyVisuals_A28B3FBF46368461DF51CD974875940B(struct FProductAttachment A);
	void __CarMeshComponentBase_TA__CreateWheelMeshes_EF8C217D4727673FC202E5A6935D1D03(class UMeshComponent* W);
	void __CarMeshComponentBase_TA__ApplyPaintSettings_81194BF74D57E1BADBA98C9D886897D4(class UMeshComponent* W);
	void eventApplyColorsToCar(struct FLinearColor TeamColor, struct FLinearColor CustomColor);
	void ApplyPaintSettingsToObject(class UProductPaint_TA* ProductPaint, class UProductAttribute_PaintSettings_TA* PaintSettings, class UObject* ObjectToPaint, class UProductAsset_TA* Asset);
	void eventApplyPaintToObject(class UProductPaint_TA* ProductPaint, class UProductAttribute_PaintSettings_TA* PaintSettings, class UObject* ObjectToPaint, class UProductAsset_TA* Product);
	void SetWheelMesh(class UMeshComponent* MeshComp, class UProductAsset_Wheel_TA* Asset, unsigned char WheelPos, struct FName BoneName, struct FVehicleAxleSettings& Axle);
	struct FVector CalculatePresetSuspensionOffset();
	class AFXActor_X* AttachFXActor(class AFXActor_X* FXActorTemplate);
	class UAttachmentBehavior_TA* AddBehavior(class UProductAsset_TA* Asset, class UActorComponent* Component, class UAttachmentBehavior_TA* BehaviorArchetype);
	void AddBehaviors(class UProductAsset_TA* Asset, class UActorComponent* Component, TArray<class UAttachmentBehavior_TA*>& BehaviorArchetypes);
	void AddCarInheritedObject(class UProductAsset_TA* Asset, class UObject* ObjectToAdd, class UProductAttribute_InheritCarSetting_TA* InheritSettings);
	void UpdateInheritedObjects();
	void AttachOrnament(class UProductAsset_TA* Asset, struct FProductAttachment& AttachStruct);
	bool CanPaintAntennaMesh(class UProductAsset_TA* Asset, class UAntennaComponent_TA* Antenna, unsigned char Socket);
	void SetMaterialColorParams(class UMaterialInstanceConstant* MatInst, struct FLinearColor PaintColor, struct FName ColorParam, struct FName FullColorParam);
	bool CanCorrectColor(unsigned long bTeamColor);
	void SetMaterialColors(class UMaterialInstanceConstant* MatInst);
	struct FLinearColor GetCorrectedPaintColor(struct FLinearColor InColor);
	void SetMeshMaterialColors(class UMeshComponent* Mesh);
	void CreateWheelMICs();
	void SetPaintFinishParametersToAccent(class UMaterialInstanceConstant* MatInst, unsigned long bIsPaintFinishDisable, class UProductAsset_PaintFinish_TA* PaintFinishToApply, struct FParameterInformation OptionalPaintFinishToApply, struct FString Prefix);
	void SetPaintFinishParameters(class UMeshComponent* Mesh);
	void ApplyPaintSettings();
	void OnPaintChanged();
	void ResetMaterials(class UMeshComponent* Mesh);
	void InitMaterials();
	bool FilterTeamAttributes(class UProductAttribute_TA* Attribute);
	void RemoveProductAttributeFromProduct(class UClass* AttributeClassToRemove, int ProductSlot);
	void ApplyAttributes(class UProductAsset_TA* Asset, class UObject* Target, TArray<class UClass*>& AttributesToIgnore);
	TArray<class UProductAttribute_TA*> GetAttributes(class UProduct_TA* Product);
	void SetIsLocalPlayer(unsigned long bIsLocal);
	struct FLinearColor GetCustomColor();
	struct FLinearColor GetTeamColor();
	void SetLogo(class UProductAsset_Logo_TA* InLogo, unsigned long bSwapColors);
	void SetCustomFinish(class UProductAsset_PaintFinish_TA* Finish);
	void HandleCustomFinishLoaded(struct FAssetLoadResult Result);
	void SetCustomFinishID(int ProductID);
	void SetCustomColorOverride(struct FLinearColor NewColor);
	void SetCustomColorID(int ColorID);
	void SetTeamFinish(class UProductAsset_PaintFinish_TA* Finish);
	void HandleTeamFinishLoaded(struct FAssetLoadResult Result);
	void SetTeamFinishID(int ProductID);
	void SetClubColors(struct FClubColorSet Colors);
	void SetTeamColorOverride(struct FLinearColor NewColor);
	void SetTeamColorID(int InTeam, int InColorID);
	void ClearColorOverrides();
	void SetTeamPaint(struct FLoadoutTeamPaint Paint);
	class UPrimitiveComponent* eventCreateWheelAttachment(class UProductAsset_Wheel_TA* Asset, class UMeshComponent* WheelMesh, struct FWheelAttachment InAttachment);
	void CreateWheelMesh(class UProductAsset_Wheel_TA* Asset, unsigned char WheelPos, struct FVehicleAxleSettings Axle, struct FName BoneName);
	void CreateWheelMeshes();
	class UProductAsset_Wheel_TA* GetAxleWheelAsset(class UAssetAttribute_ForceWheelAxle_TA* ForceWheelAxle, class UProductAsset_Wheel_TA* InWheelAsset, unsigned char Axle);
	void SetMaterialParameters(int ElementIdx, struct FMaterialParams& Params);
	void eventOnDetached();
	void InitBodyVisuals();
	class UPhysicsAsset* GetPhysicsAsset();
	void InitBodyAsset();
	void AddVisualAsset(class UProductAsset_TA* Asset);
	void SetBodyAsset(class UProductAsset_Body_TA* Body);
	void eventInitAssets();
	void EventPaintSettingsUpdated(class UCarMeshComponentBase_TA* CarMeshComponent);
};

// Class TAGame.CarMeshComponent_TA
// 0x0080 (0x08C8 - 0x0948)
class UCarMeshComponent_TA : public UCarMeshComponentBase_TA
{
public:
	float                                              BoostBlendInTime;                                 		// 0x08C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BoostBlendOutTime;                                		// 0x08CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BoostDriveFlapScale;                              		// 0x08D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              WheelSuspensionBlendRate;                         		// 0x08D4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              WheelSteerBlendRate;                              		// 0x08D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FWheelSkelControlSet>                WheelControls;                                    		// 0x08E0 (0x0010) [0x0000000000482000] (CPF_Transient | CPF_Component | CPF_NeedCtorLink)
	float                                              BoostFlyHeight;                                   		// 0x08F0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<class USkelControlBase*>                    BoostFlyControls;                                 		// 0x08F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class USimpleSpringComponent_TA*                   ChassisSpringComponent;                           		// 0x0908 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class USkelControlSingleBone*                      ChassisSpringControl;                             		// 0x0910 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class USkelControlBase*>                    BoostControls;                                    		// 0x0918 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long                                      bInAir : 1;                                       		// 0x0928 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bBoostFlying : 1;                                 		// 0x0928 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bPreviewSupersonic : 1;                           		// 0x0928 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	unsigned long                                      bWantsBoostCameraAdjustment : 1;                  		// 0x0928 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	float                                              Throttle;                                         		// 0x092C (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventAttached__Delegate;                        		// 0x0930 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarMeshComponent_TA");
		}

		return uClassPointer;
	};

	bool WantsTrailCameraAdjustment();
	bool WantsBoostCameraAdjustment();
	void UpdateWheelPreviewRotation(float DeltaTime, float PreviewFrontWheelSpinSpeed, float PreviewBackWheelSpinSpeed);
	void SetBodyFXActor(class AFXActor_X* InBodyFX);
	void ApplyPaintSettings();
	void InitBodyVisuals();
	void InitAttachments(class UProductLoader_TA* InLoadout);
	void SetLoadout(class UProductLoader_TA* InLoadout);
	void SetProductAttributes(struct FClientLoadoutOnlineData& OnlineLoadout);
	void InitWheelControl(int Idx, struct FString Prefix);
	void InitWheelControls();
	void InitBoostControls();
	void ClearAttachments();
	void NotifyWhenAttached(struct FScriptDelegate Callback);
	void eventOnDetached();
	void eventOnAttached();
	void EventAttached(class UCarMeshComponent_TA* Mesh);
};

// Class TAGame.CarPreviewMeshComponent_TA
// 0x0020 (0x08C8 - 0x08E8)
class UCarPreviewMeshComponent_TA : public UCarMeshComponentBase_TA
{
public:
	class UProductAsset_Boost_TA*                      BoostAsset;                                       		// 0x08C8 (0x0008) [0x0000000000000000]               
	class AFXActor_Boost_TA*                           BoostFX;                                          		// 0x08D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProductAsset_Attachment_TA*                 AntennaAsset;                                     		// 0x08D8 (0x0008) [0x0000000000000000]               
	class UProductAsset_Attachment_TA*                 HatAsset;                                         		// 0x08E0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarPreviewMeshComponent_TA");
		}

		return uClassPointer;
	};

	void CreateWheelMeshes();
	void eventInitAttachments();
	void InitFXStatesForActor(class AFXActor_X* FXActor);
	void InitFXStates();
	void InitBoostFX();
	void InitBodyFX();
	void InitFXVisuals();
};

// Class TAGame.SkyLightVolumeComponent_TA
// 0x0060 (0x01D0 - 0x0230)
class USkyLightVolumeComponent_TA : public USkyLightComponent
{
public:
	float                                              BlendDistance;                                    		// 0x01D0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class ASkyLight*                                   LightToOverride;                                  		// 0x01D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBrushComponent*                             BrushComponent;                                   		// 0x01E0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	unsigned char                                      UnknownData00[0x8];                               		// 0x01E8 (0x0008) MISSED OFFSET
	struct FMatrix                                     CachedParentToWorld;                              		// 0x01F0 (0x0040) [0x0000000000002002] (CPF_Const | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SkyLightVolumeComponent_TA");
		}

		return uClassPointer;
	};

	void SetLowerLightProperties(float NewBrightness, struct FColor NewLightColor);
};

// Class TAGame.SpecialEditionDatabase_TA
// 0x0064 (0x0060 - 0x00C4)
class USpecialEditionDatabase_TA : public UObject
{
public:
	TArray<class UProductSpecialEdition_TA*>           SpecialEditions;                                  		// 0x0060 (0x0010) [0x0000000000420003] (CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink)
	struct FMap_Mirror                                 EditionNameToEditionID;                           		// 0x0070 (0x0050) [0x0000000000001002] (CPF_Const | CPF_Native)
	unsigned long                                      bClickToRebuild : 1;                              		// 0x00C0 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialEditionDatabase_TA");
		}

		return uClassPointer;
	};

	class UProductSpecialEdition_TA* GetSpecialEditionByName(struct FName EditionName);
	class UProductSpecialEdition_TA* GetSpecialEdition(int Id);
	struct FName GetSpecialEditionName(int EditionID);
	int GetSpecialEditionId(struct FName EditionName);
};

// Class TAGame.StatEvent_TA
// 0x0060 (0x0060 - 0x00C0)
class UStatEvent_TA : public UObject
{
public:
	int                                                Points;                                           		// 0x0060 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CooldownSeconds;                                  		// 0x0064 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	unsigned long                                      bAddToScore : 1;                                  		// 0x0068 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	unsigned long                                      bIsLeaderboardStat : 1;                           		// 0x0068 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	unsigned long                                      bNotifyTicker : 1;                                		// 0x0068 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	unsigned long                                      bShowOnHUD : 1;                                   		// 0x0068 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	unsigned long                                      bPrimaryStat : 1;                                 		// 0x0068 (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	unsigned long                                      bSkipReplication : 1;                             		// 0x0068 (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	unsigned long                                      bCanMute : 1;                                     		// 0x0068 (0x0004) [0x0000000000000003] [0x00000040] (CPF_Edit | CPF_Const)
	unsigned long                                      bCountMultiplied : 1;                             		// 0x0068 (0x0004) [0x0000000000000003] [0x00000080] (CPF_Edit | CPF_Const)
	class UStatGroup_TA*                               Group;                                            		// 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UTexture*                                    Texture;                                          		// 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       UISound;                                          		// 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UClass*                                      DisplayProductStatClass;                          		// 0x0088 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FString                                     Label;                                            		// 0x0090 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     PluralLabel;                                      		// 0x00A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Description;                                      		// 0x00B0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatEvent_TA");
		}

		return uClassPointer;
	};

	float GetNextCooldownTime();
	int GetPoints(class AGameEvent_TA* GameEvent, int Count);
	struct FName GetGroupName();
};

// Class TAGame.StatFactoryBase_TA
// 0x0010 (0x0268 - 0x0278)
class AStatFactoryBase_TA : public AActor
{
public:
	TArray<class UStatEvent_TA*>                       AllStatEvents;                                    		// 0x0268 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatFactoryBase_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.StatGraph_TA
// 0x0020 (0x0070 - 0x0090)
class UStatGraph_TA : public UComponent
{
public:
	class USampleRecordSettings_TA*                    RecordSettings;                                   		// 0x0070 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FDouble                                     LastTickTime;                                     		// 0x0078 (0x0008) [0x0000000000000002] (CPF_Const)   
	TArray<class USampleHistory_TA*>                   SampleHistories;                                  		// 0x0080 (0x0010) [0x0000000004480008] (CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatGraph_TA");
		}

		return uClassPointer;
	};

	void StopDrawing();
	class USampleHistory_TA* CreateSampleHistory(struct FString Title);
	class USampleHistory_TA* AddSampleHistory(class USampleHistory_TA* History);
	void eventConstruct();
};

// Class TAGame.InputBufferGraph_TA
// 0x0028 (0x0090 - 0x00B8)
class UInputBufferGraph_TA : public UStatGraph_TA
{
public:
	class USampleHistory_TA*                           Buffer;                                           		// 0x0090 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class USampleHistory_TA*                           BufferTarget;                                     		// 0x0098 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class USampleHistory_TA*                           OverUnderFrames;                                  		// 0x00A0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class USampleHistory_TA*                           PhysicsRate;                                      		// 0x00A8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	float                                              MaxPhysicsRate;                                   		// 0x00B0 (0x0004) [0x0000000000000000]               
	float                                              MinPhysicsRate;                                   		// 0x00B4 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.InputBufferGraph_TA");
		}

		return uClassPointer;
	};

	void AddSample(struct FInputBufferStats& Stats);
	class USampleHistory_TA* CreateBufferHistory(struct FString Title);
	void eventConstruct();
};

// Class TAGame.NetStatGraph_TA
// 0x0044 (0x0090 - 0x00D4)
class UNetStatGraph_TA : public UStatGraph_TA
{
public:
	class USampleHistory_TA*                           PacketsOut;                                       		// 0x0090 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class USampleHistory_TA*                           PacketsIn;                                        		// 0x0098 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class USampleHistory_TA*                           LostPacketsOut;                                   		// 0x00A0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class USampleHistory_TA*                           LostPacketsIn;                                    		// 0x00A8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class USampleHistory_TA*                           BytesOut;                                         		// 0x00B0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class USampleHistory_TA*                           BytesIn;                                          		// 0x00B8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class USampleHistory_TA*                           Latency;                                          		// 0x00C0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	float                                              ExpectedOutPacketRate;                            		// 0x00C8 (0x0004) [0x0000000000000000]               
	float                                              ExpectedInPacketRate;                             		// 0x00CC (0x0004) [0x0000000000000000]               
	float                                              MaxBytesRate;                                     		// 0x00D0 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NetStatGraph_TA");
		}

		return uClassPointer;
	};

	void eventUpdateGraphRanges();
	class USampleHistory_TA* CreateBytesSummary(struct FString Title);
	class USampleHistory_TA* CreateLossSummary(struct FString Title);
	class USampleHistory_TA* CreatePktSummary(struct FString Title);
	void eventConstruct();
};

// Class TAGame.PerfStatGraph_TA
// 0x0040 (0x0090 - 0x00D0)
class UPerfStatGraph_TA : public UStatGraph_TA
{
public:
	class USampleHistory_TA*                           FPS;                                              		// 0x0090 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class USampleHistory_TA*                           FrameTime;                                        		// 0x0098 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class USampleHistory_TA*                           GameThreadTime;                                   		// 0x00A0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class USampleHistory_TA*                           RenderThreadTime;                                 		// 0x00A8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class USampleHistory_TA*                           GPUFrameTime;                                     		// 0x00B0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	TArray<class USampleHistory_TA*>                   FrameTimeHistories;                               		// 0x00B8 (0x0010) [0x0000000004480008] (CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	float                                              MaxFPS;                                           		// 0x00C8 (0x0004) [0x0000000000000000]               
	float                                              TargetFPS;                                        		// 0x00CC (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PerfStatGraph_TA");
		}

		return uClassPointer;
	};

	void eventUpdateGraphRanges();
	class USampleHistory_TA* CreateFrameTimeHistory(struct FString Title);
	class USampleHistory_TA* CreateFpsHistory(struct FString Title);
	void eventConstruct();
};

// Class TAGame.StatGraphDrawer_TA
// 0x0084 (0x0060 - 0x00E4)
class UStatGraphDrawer_TA : public UObject
{
public:
	class USampleHistory_TA*                           History;                                          		// 0x0060 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	float                                              MaxSampleAge;                                     		// 0x0068 (0x0004) [0x0000000000000000]               
	float                                              Scale;                                            		// 0x006C (0x0004) [0x0000000000000000]               
	float                                              PixelsPerSample;                                  		// 0x0070 (0x0004) [0x0000000000000000]               
	float                                              ValueStartX;                                      		// 0x0074 (0x0004) [0x0000000000000000]               
	float                                              MaxCharHeight;                                    		// 0x0078 (0x0004) [0x0000000000000000]               
	float                                              SpaceWidth;                                       		// 0x007C (0x0004) [0x0000000000000000]               
	float                                              LabelMaxWidth;                                    		// 0x0080 (0x0004) [0x0000000000000000]               
	float                                              ValueMaxWidth;                                    		// 0x0084 (0x0004) [0x0000000000000000]               
	float                                              GridCellWidth;                                    		// 0x0088 (0x0004) [0x0000000000000000]               
	float                                              GridCellHeight;                                   		// 0x008C (0x0004) [0x0000000000000000]               
	float                                              GraphWidth;                                       		// 0x0090 (0x0004) [0x0000000000000000]               
	float                                              GraphHeight;                                      		// 0x0094 (0x0004) [0x0000000000000000]               
	float                                              GraphStartX;                                      		// 0x0098 (0x0004) [0x0000000000000000]               
	float                                              GraphEndX;                                        		// 0x009C (0x0004) [0x0000000000000000]               
	float                                              X;                                                		// 0x00A0 (0x0004) [0x0000000000000000]               
	float                                              Y;                                                		// 0x00A4 (0x0004) [0x0000000000000000]               
	class UCanvas*                                     Canvas;                                           		// 0x00A8 (0x0008) [0x0000000000000000]               
	TArray<struct FSummaryLabel>                       SummaryLabels;                                    		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FGraphLine>                          GridLines;                                        		// 0x00C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FGraphLine>                          SampleLines;                                      		// 0x00D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                SampleLineIndex;                                  		// 0x00E0 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatGraphDrawer_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.StatGraphSystem_TA
// 0x0044 (0x0070 - 0x00B4)
class UStatGraphSystem_TA : public UComponent
{
public:
	float                                              GraphSampleTime;                                  		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      GraphLevel;                                       		// 0x0074 (0x0001) [0x0000000000000000]               
	class UPerfStatGraph_TA*                           PerfStatGraph;                                    		// 0x0078 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UNetStatGraph_TA*                            NetStatGraph;                                     		// 0x0080 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UInputBufferGraph_TA*                        InputBufferGraph;                                 		// 0x0088 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	TArray<class UStatGraph_TA*>                       StatGraphs;                                       		// 0x0090 (0x0010) [0x0000000004480008] (CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	TArray<class UStatGraph_TA*>                       VisibleStatGraphs;                                		// 0x00A0 (0x0010) [0x0000000004480008] (CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	int                                                PreallocGraphLines;                               		// 0x00B0 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatGraphSystem_TA");
		}

		return uClassPointer;
	};

	void __StatGraphSystem_TA__SetGraphLevel_899BE8CB4A0F5BBF8F2E6EB5BC2BF06E(class UStatGraph_TA* G);
	void PacketReceived(float Latency);
	void Graphtime(float Seconds);
	void StatGraphNext();
	float GetGraphSampleTime(unsigned char Level);
	TArray<class UStatGraph_TA*> GetDisplayGraphs(unsigned char Level);
	void SetGraphLevel(unsigned char Level);
	void eventConstruct();
};

// Class TAGame.StatGroup_TA
// 0x0000 (0x0060 - 0x0060)
class UStatGroup_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatGroup_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.StaticMeshComponent_TA
// 0x0004 (0x0308 - 0x030C)
class UStaticMeshComponent_TA : public UStaticMeshComponent
{
public:
	unsigned long                                      bIgnoreScriptAttach : 1;                          		// 0x0308 (0x0004) [0x0000000000002002] [0x00000001] (CPF_Const | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StaticMeshComponent_TA");
		}

		return uClassPointer;
	};

	void SetBoundsScale(float Value);
	void eventOnDetached();
	void eventOnAttached();
};

// Class TAGame.BallIndicator_TA
// 0x0024 (0x030C - 0x0330)
class UBallIndicator_TA : public UStaticMeshComponent_TA
{
public:
	float                                              MinTranslationX;                                  		// 0x0310 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxTranslationX;                                  		// 0x0314 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinDistance;                                      		// 0x0318 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxDistance;                                      		// 0x031C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ZTranslationOffset;                               		// 0x0320 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      Ball;                                             		// 0x0328 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BallIndicator_TA");
		}

		return uClassPointer;
	};

	void HandleBallRemoved(class UBallCamTarget_TA* BallObject);
	void HandleBallAdded(class UBallCamTarget_TA* BallObject);
	void eventOnDetached();
	void eventOnAttached();
};

// Class TAGame.NameplateMeshComponent_TA
// 0x0038 (0x030C - 0x0344)
class UNameplateMeshComponent_TA : public UStaticMeshComponent_TA
{
public:
	struct FInterpCurveFloat                           DistanceScaleCurve;                               		// 0x0310 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           FOVScaleCurve;                                    		// 0x0328 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              PlayerOptionsScale;                               		// 0x0340 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NameplateMeshComponent_TA");
		}

		return uClassPointer;
	};

	void TickNameplate();
	void SetPlayerIndex(int Index);
	void SetRenderTexture(class UTextureRenderTarget2D* InTex);
	void HandleNameplateScaleModifierUpdated(class UGameViewportClient_TA* ViewportClient);
	void eventOnDetached();
	void eventOnAttached();
};

// Class TAGame.Team_TA
// 0x01C8 (0x0290 - 0x0458)
class ATeam_TA : public ATeamInfo
{
public:
	class UCarColorSet_TA*                             CarColorSet;                                      		// 0x0290 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UCarColorSet_TA*                             CarColorSet_v1;                                   		// 0x0298 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UCarColorSet_TA*                             CarColorSet_v2;                                   		// 0x02A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                FontColor;                                        		// 0x02A8 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                ColorBlindFontColor;                              		// 0x02B8 (0x0010) [0x0000000000000001] (CPF_Edit)    
	class UCrossplayConfig_X*                          Crossplay;                                        		// 0x02C8 (0x0008) [0x0000000000000000]               
	struct FColor                                      TeamControllerColor;                              		// 0x02D0 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FColor                                      TeamScoreStrobeColor;                             		// 0x02D4 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UTeamColorScriptedTexture_TA*                TeamScriptedTexture;                              		// 0x02D8 (0x0008) [0x0000000000000000]               
	TArray<struct FLinearColor>                        DefaultColorList;                                 		// 0x02E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FLinearColor>                        ColorBlindColorList;                              		// 0x02F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FLinearColor>                        CurrentColorList;                                 		// 0x0300 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class AGameEvent_Team_TA*                          GameEvent;                                        		// 0x0310 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	TArray<class APRI_TA*>                             Members;                                          		// 0x0318 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     CustomTeamName;                                   		// 0x0328 (0x0010) [0x0000000000402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	class UTeamNameComponent_TA*                       TeamNameComponent;                                		// 0x0338 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	unsigned long long                                 ClubID;                                           		// 0x0340 (0x0008) [0x0000000000000020] (CPF_Net)     
	class UProductAsset_Logo_TA*                       Logo;                                             		// 0x0348 (0x0008) [0x0000000000000000]               
	struct FReplicatedLogoData                         LogoData;                                         		// 0x0350 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FClubColorSet                               ClubColors;                                       		// 0x0358 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class AVoteActor_TA*                               ForfeitVoteArchetype;                             		// 0x0360 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AVoteActor_TA*                               ForfeitVote;                                      		// 0x0368 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AVoteActor_TA*                               PartyUpVote;                                      		// 0x0370 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bForfeit : 1;                                     		// 0x0378 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	TArray<struct FTemporarySpawnSpot>                 TemporarySpawnSpots;                              		// 0x0380 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                Difficulty;                                       		// 0x0390 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FScriptDelegate                             __EventMemberAdded__Delegate;                     		// 0x0398 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventMemberRemoved__Delegate;                   		// 0x03B0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventColorsChanged__Delegate;                   		// 0x03C8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventScoreUpdated__Delegate;                    		// 0x03E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventLogoChanged__Delegate;                     		// 0x03F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventForfeit__Delegate;                         		// 0x0410 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __ClubColors__ChangeNotify;                       		// 0x0428 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __Difficulty__ChangeNotify;                       		// 0x0440 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Team_TA");
		}

		return uClassPointer;
	};

	void __Team_TA__PostBeginPlay_AF01D28443169E4BA25DD2AD7E7B97B2(class UObject* _);
	bool __Team_TA__UpdateCustomColors_92AC7F6848058F162BF6518C9EDE08AC(class ATeam_TA* Team);
	struct FUniqueNetId __Team_TA__GetPartyFollowerIds_76429DAE48314A64C2D2E9AA01B3FC4D(class APRI_TA* Follower);
	bool __Team_TA__GetHumanPlayers_B69AFDB4409F0B82A324D29DD687BCD5(class APRI_TA* PRI);
	bool __Team_TA__GetHumanPrimaryPlayers_9B5C943A472C6DAD77901AA4DC10DE52(class APRI_TA* PRI);
	bool __Team_TA__GetHumanPartyLeaders_FFAE18DD40EAC4607BE02291F36F45D5(class APRI_TA* PRI);
	bool __Team_TA__GetNumOfMembersThatCanStartForfeit_E6435ED2468173C81CC8C984A0E70016(class APRI_TA* P);
	void __Team_TA__OnPlayerMarkedAsIdleBanned_2B164D9A4FA18DFD8F3085B73E00ED60(class APRI_TA* M);
	void __Team_TA__EnableAllMembersStartVoteToForfeit_5C3171F64F03B366E289418404924CCC(class APRI_TA* Member);
	void __Difficulty__ChangeNotifyFunc();
	void __ClubColors__ChangeNotifyFunc();
	void UpdateGameShaderParamColors(int TeamIdx, TArray<struct FLinearColor> NewColors);
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void OnClubColorsChanged();
	void SetClubColors(struct FClubColorSet Colors);
	void Forfeit();
	void HandleForfeitVoteDestroyed(class AVoteActor_TA* VoteActor);
	void EnableAllMembersStartVoteToForfeit();
	void OnPlayerMarkedAsIdleBanned(class APRI_TA* IdlePlayer);
	void EnableAllMembersStartVoteToForfeitIfNecessary();
	void HandleForfeitVoteFinished(class AVoteActor_TA* VoteActor);
	int GetNumOfMembersThatCanStartForfeit();
	void VoteToForfeit(class APRI_TA* PRI);
	void GetColors(struct FLinearColor& OutFontColor, TArray<struct FLinearColor>& OutColors);
	void NotifyKismetTeamColorChanged();
	void UpdateColors();
	void SetLogo(int LogoID, unsigned long bSwapColors);
	struct FString GetTeamName();
	void SetClubID(unsigned long long InClubID);
	void SetCustomTeamName(struct FString NewName);
	void SetDefaultColors();
	void SetColorList(TArray<struct FLinearColor> ColorList, unsigned long bAllowMaxBrightness);
	bool IsSingleParty();
	TArray<class APRI_TA*> GetHumanPartyLeaders();
	TArray<class APRI_TA*> GetHumanPrimaryPlayers();
	TArray<class APRI_TA*> GetHumanPlayers();
	TArray<struct FUniqueNetId> GetPartyFollowerIds(class APRI_TA* PRI);
	class APRI_TA* GetTeamMemberNamed(struct FString PlayerName);
	int GetNumBots();
	int GetNumHumans();
	void OnScoreUpdated();
	void ResetScore();
	void RemovePoints(int Points);
	void SetScore(int Points);
	void ScorePoint(int AdditionalScore);
	void eventDestroyed();
	void MuteOtherTeam(class ATeam_TA* OtherTeam, unsigned long bMute);
	void MutePlayer(class AController* Other);
	bool GetPlayerReplacementSpot(struct FVector& OutLoc, struct FRotator& OutRot, struct FVector& OutVel);
	void ClearTemporarySpawnSpots();
	void ExpireTemporarySpawnSpots();
	void AddTemporarySpawnSpot(class AActor* AtActor);
	void RemoveFromTeam(class AController* Other);
	bool AddToTeam(class AController* Other);
	void OnGameEventSet();
	void SetGameEvent(class AGameEvent_Team_TA* InGameEvent);
	void UpdateCustomColors();
	void InitCustomColorUpdates();
	void HandleGameDataSelected(int PlaylistId, int MutatorIndex);
	void HandleGRISpawned(class AGRI_X* GRI);
	void eventPostBeginPlay();
	void eventConstruct();
	void eventReplicatedEvent(struct FName VarName);
	void EventForfeit(class ATeam_TA* Team);
	void EventLogoChanged(class ATeam_TA* Team);
	void EventScoreUpdated(class ATeam_TA* Team);
	void EventColorsChanged(class ATeam_TA* Team);
	void EventMemberRemoved(class ATeam_TA* Team, class APRI_TA* Member);
	void EventMemberAdded(class ATeam_TA* Team, class APRI_TA* Member);
};

// Class TAGame.TeamColorScriptedTexture_TA
// 0x0014 (0x01B0 - 0x01C4)
class UTeamColorScriptedTexture_TA : public UScriptedTexture
{
public:
	TArray<struct FLinearColor>                        PixelColorList;                                   		// 0x01B0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long                                      bMaxBrightness : 1;                               		// 0x01C0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TeamColorScriptedTexture_TA");
		}

		return uClassPointer;
	};

	void RenderColorArray(TArray<struct FLinearColor> ColorArray);
	void OnRender(class UCanvas* Canvas);
	struct FLinearColor GetFullBrightColor(struct FLinearColor C, float ValueScale);
	void SetColorsArray(TArray<struct FLinearColor> ColorList, unsigned long bAllowMaxBrightness);
};

// Class TAGame.ThrottleShakeComponent_TA
// 0x000C (0x01B8 - 0x01C4)
class UThrottleShakeComponent_TA : public UShakeComponent_X
{
public:
	float                                              ThrottleRiseSpeed;                                		// 0x01B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ThrottleFallSpeed;                                		// 0x01BC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Throttle;                                         		// 0x01C0 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ThrottleShakeComponent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ThumbnailRenderer_TA
// 0x01D8 (0x0060 - 0x0238)
class UThumbnailRenderer_TA : public UObject
{
public:
	struct FRotator                                    CameraRotation;                                   		// 0x0060 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     CameraTranslation;                                		// 0x006C (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              CameraFOV;                                        		// 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bAutoZoomCamera : 1;                              		// 0x007C (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bDisableLightEnvironment : 1;                     		// 0x007C (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      CompressionNone : 1;                              		// 0x007C (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	unsigned long                                      bSkipBackground : 1;                              		// 0x007C (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	unsigned long                                      bSkipScene : 1;                                   		// 0x007C (0x0004) [0x0000000000000001] [0x00000010] (CPF_Edit)
	struct FRotator                                    ProductRotation;                                  		// 0x0080 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     ProductTranslation;                               		// 0x008C (0x000C) [0x0000000000000001] (CPF_Edit)    
	class UPrefab*                                     ScenePrefab;                                      		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPostProcessChain*                           ScenePostProcessChain;                            		// 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FPostProcessSettings                        ScenePostProcessSettings;                         		// 0x00A8 (0x0168) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FLinearColor                                BackgroundColor;                                  		// 0x0210 (0x0010) [0x0000000000004001] (CPF_Edit | CPF_Config)
	int                                                RenderWidth;                                      		// 0x0220 (0x0004) [0x0000000000004001] (CPF_Edit | CPF_Config)
	int                                                RenderHeight;                                     		// 0x0224 (0x0004) [0x0000000000004001] (CPF_Edit | CPF_Config)
	int                                                TextureWidth;                                     		// 0x0228 (0x0004) [0x0000000000004001] (CPF_Edit | CPF_Config)
	int                                                TextureHeight;                                    		// 0x022C (0x0004) [0x0000000000004001] (CPF_Edit | CPF_Config)
	unsigned char                                      MipGenSettings;                                   		// 0x0230 (0x0001) [0x0000000000000001] (CPF_Edit)    
	int                                                LODBias;                                          		// 0x0234 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ThumbnailRenderer_TA");
		}

		return uClassPointer;
	};

	class UTexture2D* RenderScene(class UThumbnailScene_TA* Scene, struct FString TextureName, class UPackage* InPackage);
	class UThumbnailScene_TA* BuildScene();
};

// Class TAGame.ThumbnailScene_TA
// 0x0044 (0x0060 - 0x00A4)
class UThumbnailScene_TA : public UObject
{
public:
	TArray<struct FThumbnailComponent>                 SceneComponents;                                  		// 0x0060 (0x0010) [0x0000000000480000] (CPF_Component | CPF_NeedCtorLink)
	struct FVector                                     ViewTranslation;                                  		// 0x0070 (0x000C) [0x0000000000000000]               
	struct FRotator                                    ViewRotation;                                     		// 0x007C (0x000C) [0x0000000000000000]               
	unsigned long                                      bForceAllUsedMipsResident : 1;                    		// 0x0088 (0x0004) [0x0000000000000000] [0x00000001] 
	class UTexture2D*                                  Background;                                       		// 0x0090 (0x0008) [0x0000000000000000]               
	struct FPointer                                    RenderScene;                                      		// 0x0098 (0x0008) [0x0000000000003002] (CPF_Const | CPF_Native | CPF_Transient)
	float                                              CameraFOV;                                        		// 0x00A0 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ThumbnailScene_TA");
		}

		return uClassPointer;
	};

	void HideAllMeshes();
	class UActorComponent* GetSceneComponent(class UClass* ComponentClass, struct FName Tag);
};

// Class TAGame.TickNotifyDelegate_TA
// 0x0020 (0x0060 - 0x0080)
class UTickNotifyDelegate_TA : public UObject
{
public:
	struct FPointer                                    VfTable_IITickNotify_TA;                          		// 0x0060 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FScriptDelegate                             __EventPrePhysicsStep__Delegate;                  		// 0x0068 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TickNotifyDelegate_TA");
		}

		return uClassPointer;
	};

	void Stop();
	void Start();
	class UTickNotifyDelegate_TA* OnPrePhysicsStep(struct FScriptDelegate Callback);
	class UTickNotifyDelegate_TA* Create();
	void EventPrePhysicsStep(float DeltaTime);
};

// Class TAGame.VanityQuery_TA
// 0x0058 (0x0070 - 0x00C8)
class UVanityQuery_TA : public UComponent
{
public:
	int                                                MaxNumberQueriesAllowed;                          		// 0x0070 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<struct FVanityQuerySet>                     ActiveQueries;                                    		// 0x0078 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FVanityQueryRequest>                 QueuedRequests;                                   		// 0x0088 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __VanitiesUpdated__Delegate;                      		// 0x0098 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __CompleteRequest__Delegate;                      		// 0x00B0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.VanityQuery_TA");
		}

		return uClassPointer;
	};

	void CompleteRequests(TArray<struct FUniqueNetId> PlayerIDs, unsigned char InType, struct FScriptDelegate ProcessQuery, unsigned long bUsedCachedResult);
	bool GetQueryInfo(struct FUniqueNetId PlayerID, unsigned char InType, class UGFxShell_X*& OutShell, struct FScriptDelegate& OutCallback);
	void FindNewRequests(struct FVanityQueryRequest& InRequest, struct FVanityQuerySet& QuerySet);
	int GetNumActiveQueries();
	void GetNextAvailableIDs(TArray<struct FVanityQuerySet>& QuerySets);
	bool CanStartNewQuery();
	void StartQuery(class UGFxShell_X* Shell, TArray<struct FUniqueNetId> PlayerIDs, unsigned char InType, struct FScriptDelegate Callback, unsigned long bForcedUpdate);
	bool HaveRequestsQueued();
	int FindQueryIndex(struct FUniqueNetId InPlayerId, unsigned char InVanityType);
	void CompleteRequest(TArray<struct FUniqueNetId> PlayerIDs, class UGFxShell_X* Shell, struct FScriptDelegate Callback);
	void VanitiesUpdated(TArray<struct FUniqueNetId> PlayerIDs);
};

// Class TAGame.VanitySet_TA
// 0x0018 (0x0060 - 0x0078)
class UVanitySet_TA : public UObject
{
public:
	class UPlayerAvatar_TA*                            Avatar;                                           		// 0x0060 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UPlayerBanner_TA*                            Banner;                                           		// 0x0068 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UPlayerAvatarBorder_TA*                      Border;                                           		// 0x0070 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.VanitySet_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.VanitySetManager_TA
// 0x0078 (0x0060 - 0x00D8)
class UVanitySetManager_TA : public UObject
{
public:
	class UOnlineGame_X*                               OnlineGame;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
	struct FMap_Mirror                                 VanityMap;                                        		// 0x0068 (0x0050) [0x0000000000001000] (CPF_Native)  
	class UVanityQuery_TA*                             VanityQuery;                                      		// 0x00B8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FScriptDelegate                             __VanitiesUpdated__Delegate;                      		// 0x00C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.VanitySetManager_TA");
		}

		return uClassPointer;
	};

	bool __VanitySetManager_TA__ReadVanity_Internal_F48E7AE342B0BB8437E590B5AFEFB8E0(struct FUniqueNetId P);
	bool __VanitySetManager_TA__HandlePsyNetReadBanner_958BF68445AA307A3E0D5C83D891A822(int Type);
	bool __VanitySetManager_TA__HandlePsyNetReadBorder_43411A3846E39CEC668342BED2E37E4D(int Type);
	void SetBorder(class UPlayerAvatarBorder_TA* InBorder);
	void HandleLoadedAvatarBorderAsset(class UPlayerVanity_TA* PlayerVanity);
	void HandlePsyNetReadBorder(class URPC_PsyNetGetVanities_TA* RPC);
	void RequestsBorders(TArray<struct FUniqueNetId> PlayerIDs, unsigned long bForcedUpdate, class URPC_PsyNetGetVanities_TA*& RPC);
	void ProcessBorders(TArray<struct FUniqueNetId> PlayerIDs, class UGFxShell_X* Shell, struct FScriptDelegate Callback);
	void ReadBorders(class UGFxShell_X* Shell, TArray<struct FUniqueNetId> PlayerIDs, struct FScriptDelegate Callback, unsigned long bForceUpdate);
	class UPlayerAvatarBorder_TA* GetAvatarBorder(struct FUniqueNetId PlayerID);
	void SetBanner(class UPlayerBanner_TA* InBanner);
	void HandleLoadedBannerAsset(class UPlayerVanity_TA* PlayerVanity);
	void HandlePsyNetReadBanner(class URPC_PsyNetGetVanities_TA* RPC);
	void RequestBanners(TArray<struct FUniqueNetId> PlayerIDs, unsigned long bForcedUpdate, class URPC_PsyNetGetVanities_TA*& RPC);
	void ProcessBanners(TArray<struct FUniqueNetId> PlayerIDs, class UGFxShell_X* Shell, struct FScriptDelegate Callback);
	void ReadBanners(class UGFxShell_X* Shell, TArray<struct FUniqueNetId> PlayerIDs, struct FScriptDelegate Callback, unsigned long bForcedUpdate);
	class UPlayerBanner_TA* GetBanner(struct FUniqueNetId PlayerID);
	void SetAvatar(class UPlayerAvatar_TA* InAvatar);
	void HandleLoadedAvatarAsset(class UPlayerVanity_TA* PlayerVanity);
	void HandleSubSystemReadAvatar(struct FUniqueNetId PlayerID, class UTexture* Avatar, struct FString OnlinePlayerName);
	void RequestAvatars(TArray<struct FUniqueNetId> PlayerIDs, unsigned long bForcedUpdate, class URPC_PsyNetGetVanities_TA*& RPC);
	void ProcessAvatars(TArray<struct FUniqueNetId> PlayerIDs, class UGFxShell_X* Shell, struct FScriptDelegate Callback);
	void ReadAvatars(class UGFxShell_X* Shell, TArray<struct FUniqueNetId> PlayerIDs, struct FScriptDelegate Callback, unsigned long bForceUpdate);
	class UPlayerAvatar_TA* GetAvatar(struct FUniqueNetId PlayerID);
	void HandlePsyNetLoggedIn();
	void ReadVanity_Internal(class UGFxShell_X* Shell, TArray<struct FUniqueNetId> PlayerIDs, unsigned char InType, struct FScriptDelegate Callback, unsigned long bForcedUpdate);
	void TryProcessVanity(unsigned char InType, TArray<struct FUniqueNetId>& PlayerIDs);
	void UpdateQueries(float DeltaTime);
	class UVanitySet_TA* GetOrCreateVanity(struct FUniqueNetId PlayerID);
	void AddToMap(struct FUniqueNetId PlayerID, class UVanitySet_TA* Vanity);
	class UVanitySet_TA* GetVanitySet(struct FUniqueNetId PlayerID);
	void VanitiesUpdated(TArray<struct FUniqueNetId> PlayerIDs);
};

// Class TAGame.VehiclePartStaticMeshComponent_TA
// 0x0008 (0x0308 - 0x0310)
class UVehiclePartStaticMeshComponent_TA : public UStaticMeshComponent
{
public:
	class URB_BodySetup*                               BodySetupOverride;                                		// 0x0308 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.VehiclePartStaticMeshComponent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.VehiclePickup_TA
// 0x0088 (0x0268 - 0x02F0)
class AVehiclePickup_TA : public AActor
{
public:
	float                                              RespawnDelay;                                     		// 0x0268 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_X*                                  FXActorArchetype;                                 		// 0x0270 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_X*                                  FXActor;                                          		// 0x0278 (0x0008) [0x0000000000220001] (CPF_Edit | CPF_EditConst)
	class UFXActorEvent_X*                             PickedUpEvent;                                    		// 0x0280 (0x0008) [0x0000000000000000]               
	class UFXActorEvent_X*                             LocalPickedUpEvent;                               		// 0x0288 (0x0008) [0x0000000000000000]               
	class UCylinderComponent*                          CylinderComponent;                                		// 0x0290 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FPickupData                                 ReplicatedPickupData;                             		// 0x0298 (0x0010) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FPickupData2                                NewReplicatedPickupData;                          		// 0x02A8 (0x0010) [0x0000000000002020] (CPF_Net | CPF_Transient)
	unsigned long                                      bNetRelevant : 1;                                 		// 0x02B8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bNoPickup : 1;                                    		// 0x02B8 (0x0004) [0x0000000000002020] [0x00000002] (CPF_Net | CPF_Transient)
	struct FScriptDelegate                             __EventSpawned__Delegate;                         		// 0x02C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPickedUp__Delegate;                        		// 0x02D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.VehiclePickup_TA");
		}

		return uClassPointer;
	};

	void PlayPickedUpFX();
	bool IsTouchingAVehicle();
	void UpdateTickDisabled();
	bool IsPickedUp();
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void SetNetRelevant(unsigned long bRelevant);
	void Respawn();
	void UpdatePickupState();
	void SetPickedUpDeprecated(unsigned long bNewPickedUp, class ACar_TA* InInstigator);
	void Pickup(class ACar_TA* Car);
	bool CanPickup(class ACar_TA* Car);
	void OnTouch(class ACar_TA* Car);
	void eventTouch(class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal);
	void OnPickUp();
	void OnSpawn();
	void SetNoPickup();
	void SetupReplicateNoPickup();
	void InitFX();
	void eventPostBeginPlay();
	void eventPreBeginPlay();
	void eventReplicatedEvent(struct FName VarName);
	void EventPickedUp(class AVehiclePickup_TA* Pickup);
	void EventSpawned(class AVehiclePickup_TA* Pickup);
};

// Class TAGame.VehicleSim_TA
// 0x00C7 (0x009D - 0x0164)
class UVehicleSim_TA : public UActorComponent
{
public:
	TArray<class UWheel_TA*>                           Wheels;                                           		// 0x00A0 (0x0010) [0x000000000448000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	struct FInterpCurveFloat                           SteerAngleCurve;                                  		// 0x00B0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              DriveTorque;                                      		// 0x00C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           DriveTorqueCurve;                                 		// 0x00D0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              BrakeTorque;                                      		// 0x00E8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           HandbrakeSteerAngleCurve;                         		// 0x00F0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInputRate                                  HandbrakeRate;                                    		// 0x0108 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              StopThreshold;                                    		// 0x0110 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              IdleBrakeFactor;                                  		// 0x0114 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OppositeBrakeFactor;                              		// 0x0118 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bUseAckermannSteering : 1;                        		// 0x011C (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bWasAttached : 1;                                 		// 0x011C (0x0004) [0x0000000000002002] [0x00000002] (CPF_Const | CPF_Transient)
	float                                              OutputThrottle;                                   		// 0x0120 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              OutputSteer;                                      		// 0x0124 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              OutputBrake;                                      		// 0x0128 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              OutputHandbrake;                                  		// 0x012C (0x0004) [0x0000000000002000] (CPF_Transient)
	class AVehicle_TA*                                 Vehicle;                                          		// 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACar_TA*                                     Car;                                              		// 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FPointer                                    BulletVehicle;                                    		// 0x0140 (0x0008) [0x0000000000003002] (CPF_Const | CPF_Native | CPF_Transient)
	float                                              SteeringSensitivity;                              		// 0x0148 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<float>                                      TireFrictionScales;                               		// 0x0150 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	float                                              TireFrictionScale;                                		// 0x0160 (0x0004) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.VehicleSim_TA");
		}

		return uClassPointer;
	};

	void RemoveTireFrictionScale(float InScale);
	void AddTireFrictionScale(float InScale);
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	struct FTurningCircle GetMaxTurningCircle(float SteerAmt, float AtSpeed, struct FVector AtLocation, struct FRotator AtRotation);
	struct FTurningCircle GetMaxTurningCircleAt(float SteerAmt, float AtSpeed, struct FVector AtLocation, struct FRotator AtRotation);
	void eventOnDetached();
	void SetupWheelPreset(class UWheel_TA* Wheel, struct FVehicleAxleData PresetAxle, struct FVehicleWheelSettings WheelSettings);
	void SetupPresetAxle(class UWheel_TA* LeftWheel, class UWheel_TA* RightWheel, struct FVehicleAxleSettings VisualAxle, struct FVehicleAxleData PresetAxle);
	void SetupWheelBone(class UWheel_TA* Wheel, struct FVehicleAxleSettings Axle, struct FVehicleWheelSettings WheelSettings);
	void SetupBoneAxle(class UWheel_TA* LeftWheel, class UWheel_TA* RightWheel, struct FVehicleAxleSettings Axle);
	void eventOnAttached();
};

// Class TAGame.VoteActor_TA
// 0x0118 (0x0268 - 0x0380)
class AVoteActor_TA : public AActor
{
public:
	unsigned char                                      Subject;                                          		// 0x0268 (0x0001) [0x0000000000000001] (CPF_Edit)    
	int                                                TimeRemaining;                                    		// 0x026C (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bUnanimousVote : 1;                               		// 0x0270 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bAllowSplitscreenVoters : 1;                      		// 0x0270 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bFilterIdleBannedPlayers : 1;                     		// 0x0270 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	unsigned long                                      bFinished : 1;                                    		// 0x0270 (0x0004) [0x0000000000002020] [0x00000008] (CPF_Net | CPF_Transient)
	TArray<struct FVoter>                              Voters;                                           		// 0x0278 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FVoter                                      ReplicatedVoters[0x8] ;                           		// 0x0288 (0x0080) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FScriptDelegate                             __EventStarted__Delegate;                         		// 0x0308 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventVotersChanged__Delegate;                   		// 0x0320 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTimeRemainingChanged__Delegate;            		// 0x0338 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventFinished__Delegate;                        		// 0x0350 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventDestroyed__Delegate;                       		// 0x0368 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.VoteActor_TA");
		}

		return uClassPointer;
	};

	void __VoteActor_TA__OnVotersChanged_E29A0B2643742D01EA6ADD8FD0766A87(struct FVoter V);
	void __VoteActor_TA__OnVotersChanged_B315D6134E31399299270CA3BDFB79AD(struct FVoter V);
	bool __VoteActor_TA__RequiredVotes_5E924FF34962F50C6C1AF5B061C36985(struct FVoter V);
	bool __VoteActor_TA__RequiredVotes_4CAD8EA54546F18F567C6D9B5F5E3756(struct FVoter V);
	void __VoteActor_TA__BeginState_DEBE0FB14E384A23505DC9B7B62B7BD5(struct FVoter V);
	void eventDestroyed();
	void DestroySelf();
	bool Failed();
	bool Passed();
	int RequiredVotes();
	int GetVotes(unsigned char VoteStatus, unsigned long bExcludeIdleBannedPlayers);
	void FinishVote();
	void CheckFinished();
	void SetVoteStatus(class APRI_TA* PRI, unsigned char Status);
	void OnVotersChanged();
	void OnIdlePlayer(class APRI_TA* PRI);
	void RemoveVoter(class APRI_TA* PRI);
	void AddVoter(class APRI_TA* PRI);
	void UpdateTimeRemaining();
	void AddTeam(class ATeam_TA* Team);
	void AddGameEvent(class AGameEvent_TA* GameEvent);
	void eventReplicatedEvent(struct FName VarName);
	void eventPostBeginPlay();
	void EventDestroyed(class AVoteActor_TA* VoteActor);
	void EventFinished(class AVoteActor_TA* VoteActor);
	void EventTimeRemainingChanged(class AVoteActor_TA* VoteActor);
	void EventVotersChanged(class AVoteActor_TA* VoteActor);
	void EventStarted(class AVoteActor_TA* VoteActor);
};

// Class TAGame.WebBrowser_TA
// 0x0050 (0x0060 - 0x00B0)
class UWebBrowser_TA : public UObject
{
public:
	unsigned long                                      bBrowserLoading : 1;                              		// 0x0060 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FScriptDelegate                             __EventWebBrowserOpened__Delegate;                		// 0x0068 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventWebBrowserClosed__Delegate;                		// 0x0080 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventWebBrowserLoaded__Delegate;                		// 0x0098 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.WebBrowser_TA");
		}

		return uClassPointer;
	};

	void PageLoaded(struct FString PageTitle, struct FString URL, unsigned long long LoadTimeInSeconds);
	void Close();
	void OpenURL(struct FString URL, int BrowserWidth, int BrowserHeight);
	void EventWebBrowserLoaded(struct FString PageTitle, struct FString URL, unsigned long long LoadTimeInSeconds);
	void EventWebBrowserClosed();
	void EventWebBrowserOpened(struct FString URL);
};

// Class TAGame.Wheel_TA
// 0x0170 (0x0070 - 0x01E0)
class UWheel_TA : public UComponent
{
public:
	float                                              SteerFactor;                                      		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              WheelRadius;                                      		// 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SuspensionStiffness;                              		// 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SuspensionDampingCompression;                     		// 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SuspensionDampingRelaxation;                      		// 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SuspensionTravel;                                 		// 0x0084 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SuspensionMaxRaise;                               		// 0x0088 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ContactForceDistance;                             		// 0x008C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PushForceConstant;                                		// 0x0090 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SpinSpeedDecayRate;                               		// 0x0094 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           LatFrictionCurve;                                 		// 0x0098 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           LongFrictionCurve;                                		// 0x00B0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           HandbrakeLatFrictionCurve;                        		// 0x00C8 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           HandbrakeLongFrictionCurve;                       		// 0x00E0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           WallFrictionCurve;                                		// 0x00F8 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FName                                       BoneName;                                         		// 0x0110 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       PhysicsBoneName;                                  		// 0x0118 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     BoneOffset;                                       		// 0x0120 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     PresetRestPosition;                               		// 0x012C (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     LocalSuspensionRayStart;                          		// 0x0138 (0x000C) [0x0000000000002002] (CPF_Const | CPF_Transient)
	struct FVector                                     LocalRestPosition;                                		// 0x0144 (0x000C) [0x0000000000002002] (CPF_Const | CPF_Transient)
	class UVehicleSim_TA*                              VehicleSim;                                       		// 0x0150 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	int                                                WheelIndex;                                       		// 0x0158 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	struct FWheelContactData                           Contact;                                          		// 0x0160 (0x0050) [0x0000000000082002] (CPF_Const | CPF_Transient | CPF_Component)
	unsigned long                                      bDrawDebug : 1;                                   		// 0x01B0 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bHadContact : 1;                                  		// 0x01B0 (0x0004) [0x0000000000002002] [0x00000002] (CPF_Const | CPF_Transient)
	float                                              FrictionCurveInput;                               		// 0x01B4 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	float                                              AerialThrottleToVelocityFactor;                   		// 0x01B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AerialAccelerationFactor;                         		// 0x01BC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SpinSpeed;                                        		// 0x01C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventContactChanged__Delegate;                  		// 0x01C8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Wheel_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	struct FVector GetRefWheelLocation();
	float GetSuspensionDistance();
	float GetSteer();
	struct FVector GetLinearVelocity();
	void EventContactChanged(class UWheel_TA* Wheel);
};

// Class TAGame.WheelAssetGenerator_TA
// 0x0010 (0x0070 - 0x0080)
class UWheelAssetGenerator_TA : public UComponent
{
public:
	TArray<class UWheelAssetSettings_TA*>              Wheels;                                           		// 0x0070 (0x0010) [0x00000000044A0009] (CPF_Edit | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.WheelAssetGenerator_TA");
		}

		return uClassPointer;
	};

	void Generate();
	void Copy(class UWheelAssetGenerator_TA* Other);
};

// Class TAGame.WheelAssetGenerator_1Wheel_TA
// 0x0010 (0x0080 - 0x0090)
class UWheelAssetGenerator_1Wheel_TA : public UWheelAssetGenerator_TA
{
public:
	unsigned char                                      MirrorMode;                                       		// 0x0080 (0x0001) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      ParticleMirrorMode;                               		// 0x0081 (0x0001) [0x0000000000000001] (CPF_Edit)    
	class UWheelAssetSettings_TA*                      FrontRight;                                       		// 0x0088 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.WheelAssetGenerator_1Wheel_TA");
		}

		return uClassPointer;
	};

	void Generate();
	void Copy(class UWheelAssetGenerator_TA* Other);
};

// Class TAGame.WheelAssetGenerator_4Wheels_TA
// 0x0020 (0x0080 - 0x00A0)
class UWheelAssetGenerator_4Wheels_TA : public UWheelAssetGenerator_TA
{
public:
	class UWheelAssetSettings_TA*                      FrontLeft;                                        		// 0x0080 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UWheelAssetSettings_TA*                      FrontRight;                                       		// 0x0088 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UWheelAssetSettings_TA*                      BackLeft;                                         		// 0x0090 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UWheelAssetSettings_TA*                      BackRight;                                        		// 0x0098 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.WheelAssetGenerator_4Wheels_TA");
		}

		return uClassPointer;
	};

	void Generate();
	void Copy(class UWheelAssetGenerator_TA* Other);
};

// Class TAGame.WheelAssetGenerator_FrontWheels_TA
// 0x0010 (0x0080 - 0x0090)
class UWheelAssetGenerator_FrontWheels_TA : public UWheelAssetGenerator_TA
{
public:
	class UWheelAssetSettings_TA*                      FrontRight;                                       		// 0x0080 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UWheelAssetSettings_TA*                      FrontLeft;                                        		// 0x0088 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.WheelAssetGenerator_FrontWheels_TA");
		}

		return uClassPointer;
	};

	void Generate();
	void Copy(class UWheelAssetGenerator_TA* Other);
};

// Class TAGame.WheelAssetGenerator_RightWheels_TA
// 0x0018 (0x0080 - 0x0098)
class UWheelAssetGenerator_RightWheels_TA : public UWheelAssetGenerator_TA
{
public:
	unsigned char                                      MirrorMode;                                       		// 0x0080 (0x0001) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      ParticleMirrorMode;                               		// 0x0081 (0x0001) [0x0000000000000001] (CPF_Edit)    
	class UWheelAssetSettings_TA*                      FrontRight;                                       		// 0x0088 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UWheelAssetSettings_TA*                      BackRight;                                        		// 0x0090 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.WheelAssetGenerator_RightWheels_TA");
		}

		return uClassPointer;
	};

	void Generate();
	void Copy(class UWheelAssetGenerator_TA* Other);
};

// Class TAGame.WheelAssetSettings_TA
// 0x0050 (0x0070 - 0x00C0)
class UWheelAssetSettings_TA : public UComponent
{
public:
	class UStaticMesh*                                 StaticMesh;                                       		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class USkeletalMesh*                               SkeletalMesh;                                     		// 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAnimTree*                                   AnimTree;                                         		// 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<class UAttachmentBehavior_TA*>              Behaviors;                                        		// 0x0088 (0x0010) [0x0000000004400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInline)
	TArray<struct FWheelAttachment>                    Attachments;                                      		// 0x0098 (0x0010) [0x0000000000480001] (CPF_Edit | CPF_Component | CPF_NeedCtorLink)
	struct FVector                                     Scale3D;                                          		// 0x00A8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    Rotation;                                         		// 0x00B4 (0x000C) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.WheelAssetSettings_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.WheelSkelMeshMAT_TA
// 0x0000 (0x07B0 - 0x07B0)
class UWheelSkelMeshMAT_TA : public USkeletalMeshComponent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.WheelSkelMeshMAT_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.WheelSpeedComponent_TA
// 0x002C (0x00A4 - 0x00D0)
class UWheelSpeedComponent_TA : public UActorComponent_X
{
public:
	class AVehicle_TA*                                 Car;                                              		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              WheelForwardSpeedInterpRate;                      		// 0x00B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              WheelSideSpeedInterpRate;                         		// 0x00B4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxWheelSpeed;                                    		// 0x00B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AvgWheelForwardSpeed;                             		// 0x00BC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              AvgWheelSideSpeed;                                		// 0x00C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              AvgWheelSpinSpeed;                                		// 0x00C4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              OldWheelRotation;                                 		// 0x00C8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              WheelTurnSpeed;                                   		// 0x00CC (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.WheelSpeedComponent_TA");
		}

		return uClassPointer;
	};

	void eventDetached();
	void eventAttached();
};

// Class TAGame.WheelStaticMeshMAT_TA
// 0x0000 (0x0308 - 0x0308)
class UWheelStaticMeshMAT_TA : public UStaticMeshComponent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.WheelStaticMeshMAT_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.BuildInfo_TA
// 0x0038 (0x0060 - 0x0098)
class UBuildInfo_TA : public UObject
{
public:
	struct FString                                     VersionString;                                    		// 0x0060 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	int                                                Changelist;                                       		// 0x0070 (0x0004) [0x0000000000000002] (CPF_Const)   
	struct FString                                     Branch;                                           		// 0x0078 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FString                                     Label;                                            		// 0x0088 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BuildInfo_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RLBot_PreTickActor
// 0x0000 (0x0268 - 0x0268)
class ARLBot_PreTickActor : public AActor
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RLBot_PreTickActor");
		}

		return uClassPointer;
	};

};

// Class TAGame.RLBot_PostTickActor
// 0x0000 (0x0268 - 0x0268)
class ARLBot_PostTickActor : public AActor
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RLBot_PostTickActor");
		}

		return uClassPointer;
	};

};

// Class TAGame.DeprecatedProperty
// 0x0000 (0x0070 - 0x0070)
class UDeprecatedProperty : public UField
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DeprecatedProperty");
		}

		return uClassPointer;
	};

};

// Class TAGame.SkippableProperty
// 0x0018 (0x0070 - 0x0088)
class USkippableProperty : public UDeprecatedProperty
{
public:
	unsigned char                                      UnknownData00[0x18];                              		// 0x0070 (0x0018) MISSED OFFSET
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SkippableProperty");
		}

		return uClassPointer;
	};

};

// Class TAGame.ReplayPackageMap_TA
// 0x01A0 (0x0118 - 0x02B8)
class UReplayPackageMap_TA : public UPackageMapLevel
{
public:
	unsigned char                                      UnknownData00[0x8];                               		// 0x0118 (0x0008) MISSED OFFSET
	class UReplay_TA*                                  Replay;                                           		// 0x0120 (0x0008) [0x0000000000000000]               
	unsigned char                                      UnknownData01[0x20];                              		// 0x0128 (0x0020) MISSED OFFSET
	TArray<class UObject*>                             ObjectTable;                                      		// 0x0148 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned char                                      UnknownData02[0x160];                             		// 0x0158 (0x0160) MISSED OFFSET
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ReplayPackageMap_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PRI_TA
// 0x06F8 (0x0458 - 0x0B50)
class APRI_TA : public APRI_X
{
public:
	int                                                MatchScore;                                       		// 0x0458 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int                                                MatchGoals;                                       		// 0x045C (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int                                                MatchOwnGoals;                                    		// 0x0460 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                MatchAssists;                                     		// 0x0464 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int                                                MatchSaves;                                       		// 0x0468 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int                                                MatchShots;                                       		// 0x046C (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int                                                MatchDemolishes;                                  		// 0x0470 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                MatchBonusXP;                                     		// 0x0474 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                MatchBreakoutDamage;                              		// 0x0478 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	unsigned long                                      bMatchMVP : 1;                                    		// 0x047C (0x0004) [0x0000000000002020] [0x00000001] (CPF_Net | CPF_Transient)
	unsigned long                                      bMatchAdmin : 1;                                  		// 0x047C (0x0004) [0x0000000000002020] [0x00000002] (CPF_Net | CPF_Transient)
	unsigned long                                      bLoadoutSet : 1;                                  		// 0x047C (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	unsigned long                                      bOnlineLoadoutSet : 1;                            		// 0x047C (0x0004) [0x0000000000002020] [0x00000008] (CPF_Net | CPF_Transient)
	unsigned long                                      bLoadoutsSet : 1;                                 		// 0x047C (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	unsigned long                                      bOnlineLoadoutsSet : 1;                           		// 0x047C (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	unsigned long                                      bServerSetTeamLoadoutLocked : 1;                  		// 0x047C (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	unsigned long                                      bTeamPaintSet : 1;                                		// 0x047C (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	unsigned long                                      bReady : 1;                                       		// 0x047C (0x0004) [0x0000000000002020] [0x00000100] (CPF_Net | CPF_Transient)
	unsigned long                                      bIsDistracted : 1;                                		// 0x047C (0x0004) [0x0000000000002020] [0x00000200] (CPF_Net | CPF_Transient)
	unsigned long                                      bUsingSecondaryCamera : 1;                        		// 0x047C (0x0004) [0x0000000000002000] [0x00000400] (CPF_Transient)
	unsigned long                                      bUsingBehindView : 1;                             		// 0x047C (0x0004) [0x0000000000002000] [0x00000800] (CPF_Transient)
	unsigned long                                      bUsingFreecam : 1;                                		// 0x047C (0x0004) [0x0000000000002000] [0x00001000] (CPF_Transient)
	unsigned long                                      bIsInSplitScreen : 1;                             		// 0x047C (0x0004) [0x0000000000000020] [0x00002000] (CPF_Net)
	unsigned long                                      bStartVoteToForfeitDisabled : 1;                  		// 0x047C (0x0004) [0x0000000000002020] [0x00004000] (CPF_Net | CPF_Transient)
	unsigned long                                      bUsingItems : 1;                                  		// 0x047C (0x0004) [0x0000000000002020] [0x00008000] (CPF_Net | CPF_Transient)
	unsigned long                                      PlayerHistoryValid : 1;                           		// 0x047C (0x0004) [0x0000000000000020] [0x00010000] (CPF_Net)
	unsigned long                                      bIdleBanned : 1;                                  		// 0x047C (0x0004) [0x0000000000002020] [0x00020000] (CPF_Net | CPF_Transient)
	class AGameEvent_TA*                               GameEvent;                                        		// 0x0480 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AGameEvent_TA*                               ReplicatedGameEvent;                              		// 0x0488 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class ACar_TA*                                     Car;                                              		// 0x0490 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FLoadoutData                                FullLoadouts[0x2] ;                               		// 0x0498 (0x0080) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FLoadoutAttributesArray                     FullLoadoutAttributes[0x2] ;                      		// 0x0518 (0x0020) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FClientLoadoutOnlineData                    FullOnlineLoadout[0x2] ;                          		// 0x0538 (0x0020) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FClientLoadoutData                          ClientLoadout;                                    		// 0x0558 (0x0010) [0x0000000000402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	struct FClientLoadoutOnlineData                    ClientLoadoutOnline;                              		// 0x0568 (0x0010) [0x0000000000402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	struct FClientLoadoutDatas                         ClientLoadouts;                                   		// 0x0578 (0x0020) [0x0000000000402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	struct FClientLoadoutOnlineDatas                   ClientLoadoutsOnline;                             		// 0x0598 (0x0028) [0x0000000000402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FOnlineProductStat>                  OnlineProductStats;                               		// 0x05C0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FLoadoutTeamPaint                           TeamPaint;                                        		// 0x05D0 (0x0010) [0x0000000000002000] (CPF_Transient)
	TArray<struct FTAPlayerStat>                       MatchStats;                                       		// 0x05E0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                WaitingStartTime;                                 		// 0x05F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalGameTimePlayed;                              		// 0x05F4 (0x0004) [0x0000000000002000] (CPF_Transient)
	class ACameraSettingsActor_TA*                     PersistentCamera;                                 		// 0x05F8 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class ACameraSettingsActor_TA*                     Camera;                                           		// 0x0600 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FProfileCameraSettings                      CameraSettings;                                   		// 0x0608 (0x001C) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      CameraPitch;                                      		// 0x0624 (0x0001) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      CameraYaw;                                        		// 0x0625 (0x0001) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      PawnType;                                         		// 0x0626 (0x0001) [0x0000000000000020] (CPF_Net)     
	unsigned char                                      PlayerHistoryKey[0x40] ;                          		// 0x0627 (0x0040) [0x0000000000000020] (CPF_Net)     
	unsigned char                                      ReplicatedWorstNetQualityBeyondLatency;           		// 0x0667 (0x0001) [0x0000000000000020] (CPF_Net)     
	unsigned char                                      QuitSeverity;                                     		// 0x0668 (0x0001) [0x0000000000002020] (CPF_Net | CPF_Transient)
	TArray<class UProductStat_TA*>                     ProductStats;                                     		// 0x0670 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FProductStat>                        PendingProductStatValues;                         		// 0x0680 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FUniqueNetId                                PartyLeader;                                      		// 0x0690 (0x0048) [0x0000000000400020] (CPF_Net | CPF_NeedCtorLink)
	struct FName                                       Title;                                            		// 0x06D8 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FSkillTierData                              SkillTier;                                        		// 0x06E0 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              DodgeInputThreshold;                              		// 0x06E8 (0x0004) [0x0000000000000000]               
	float                                              SteeringSensitivity;                              		// 0x06EC (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              AirControlSensitivity;                            		// 0x06F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<struct FStatCooldown>                       StatCooldowns;                                    		// 0x06F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                BoostPickups;                                     		// 0x0708 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                BallTouches;                                      		// 0x070C (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                CarTouches;                                       		// 0x0710 (0x0004) [0x0000000000002000] (CPF_Transient)
	class APlayerReplicatedEventInfo_TA*               PREI;                                             		// 0x0718 (0x0008) [0x0000000000000020] (CPF_Net)     
	class APRI_TA*                                     ReplacingBotPRI;                                  		// 0x0720 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FMemberTitleStat                            PrimaryTitle;                                     		// 0x0728 (0x0020) [0x0000000000000020] (CPF_Net)     
	struct FMemberTitleStat                            SecondaryTitle;                                   		// 0x0748 (0x0020) [0x0000000000000020] (CPF_Net)     
	class UProductAsset_GoalExplosion_TA*              PlayerGoalExplosion;                              		// 0x0768 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPlayerBanner_TA*                            PlayerBanner;                                     		// 0x0770 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UPlayerAvatar_TA*                            PlayerAvatar;                                     		// 0x0778 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UPlayerAvatarBorder_TA*                      PlayerBorder;                                     		// 0x0780 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UProductAsset_MusicStingers_TA*              PlayerMusicStinger;                               		// 0x0788 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       BotProductName;                                   		// 0x0790 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int                                                BotAvatarProductID;                               		// 0x0798 (0x0004) [0x0000000000000020] (CPF_Net)     
	int                                                BotBannerProductID;                               		// 0x079C (0x0004) [0x0000000000000020] (CPF_Net)     
	unsigned long long                                 ClubID;                                           		// 0x07A0 (0x0008) [0x0000000000000020] (CPF_Net)     
	struct FString                                     PublicIP;                                         		// 0x07A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                SpectatorShortcut;                                		// 0x07B8 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UCarDistanceTracker_TA*                      CarDistanceTracker;                               		// 0x07C0 (0x0008) [0x0000000000000000]               
	class AStayAsPartyVoter_TA*                        StayAsPartyVoter;                                 		// 0x07C8 (0x0008) [0x0000000000000020] (CPF_Net)     
	class AStayAsPartyVoteYes_TA*                      StayAsPartyVoteYes;                               		// 0x07D0 (0x0008) [0x0000000000000020] (CPF_Net)     
	class APickupTimer_TA*                             PickupTimer;                                      		// 0x07D8 (0x0008) [0x0000000000000020] (CPF_Net)     
	int                                                TimeTillItem;                                     		// 0x07E0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                MaxTimeTillItem;                                  		// 0x07E4 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UProductsConfig_TA*                          ProductsConfig;                                   		// 0x07E8 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventGameEventChanged__Delegate;                		// 0x07F0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventStatEvent__Delegate;                       		// 0x0808 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventRequestedLoadout__Delegate;                		// 0x0820 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSelectedLoadout__Delegate;                 		// 0x0838 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventVanityChanged__Delegate;                   		// 0x0850 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventStatTickerMessage__Delegate;               		// 0x0868 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventInvalidPsyonixID__Delegate;                		// 0x0880 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventReadyChanged__Delegate;                    		// 0x0898 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventCarPreUpdate__Delegate;                    		// 0x08B0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventCarSet__Delegate;                          		// 0x08C8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSplitScreenStatusChanged__Delegate;        		// 0x08E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventDistracted__Delegate;                      		// 0x08F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPersistentCameraSet__Delegate;             		// 0x0910 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventCameraChanged__Delegate;                   		// 0x0928 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPartyLeaderChanged__Delegate;              		// 0x0940 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventScorePoint__Delegate;                      		// 0x0958 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventWonMVP__Delegate;                          		// 0x0970 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventStatTitlesSet__Delegate;                   		// 0x0988 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPawnTypeChanged__Delegate;                 		// 0x09A0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventCommittedStats__Delegate;                  		// 0x09B8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventStartVoteToForfeitDisabledChanged__Delegate;		// 0x09D0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTitleChanged__Delegate;                    		// 0x09E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSkillTierChanged__Delegate;                		// 0x0A00 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventServerChangeTeamFailed__Delegate;          		// 0x0A18 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventScoredGoal__Delegate;                      		// 0x0A30 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventReplacingBotChanged__Delegate;             		// 0x0A48 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventMatchAdmin__Delegate;                      		// 0x0A60 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventServerUnlockedAchievement__Delegate;       		// 0x0A78 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventServerAchievementProgression__Delegate;    		// 0x0A90 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSpectatorShortcutChanged__Delegate;        		// 0x0AA8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventOwnerChanged__Delegate;                    		// 0x0AC0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventQuitSeverityChanged__Delegate;             		// 0x0AD8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventIdleBannedChanged__Delegate;               		// 0x0AF0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __ReplicatedWorstNetQualityBeyondLatency__ChangeNotify;		// 0x0B08 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __PREI__ChangeNotify;                             		// 0x0B20 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __ClubID__ChangeNotify;                           		// 0x0B38 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PRI_TA");
		}

		return uClassPointer;
	};

	void __PRI_TA__PostBeginPlay_290813B04D12EF6B305569992FE0FE97(class UOnlineClubCache_X* C, class UClubDetails_X* D);
	bool __PRI_TA__RemoveIrrelevantAttributes_F8A5204C4B0BE7DAADC9BA82CDF67A3E(class UProductAttribute_TA* A);
	bool __PRI_TA__InitClientLoadoutOnlineData_49C77F1D4EAEF9751C8DDEB3DF4F4D3E(class UProductAttribute_TA* A);
	bool __PRI_TA__InitFromAttributes_CAD83D214330D17D33C38384214285C4(class UProductAttribute_TA* A);
	void __PRI_TA__UpdatePlayerBanner_206788DD44BE574A8AFD639FEFBF1DF9(class UPlayerVanity_TA* PlayerVanity);
	void __PRI_TA__UpdatePlayerBanner_7F7B804649F22207800CEB845FD078FA(class UPlayerVanity_TA* PlayerVanity);
	void __PRI_TA__UpdatePlayerAvatar_24BFC0AB4BE923E92973F8B2E4566E32(class UPlayerVanity_TA* PlayerVanity);
	void __PRI_TA__UpdatePlayerAvatarBorder_A441F0B746A4BF250CA451ADA72D7D53(class UPlayerVanity_TA* PlayerVanity);
	void __ClubID__ChangeNotifyFunc();
	void __PREI__ChangeNotifyFunc();
	void __ReplicatedWorstNetQualityBeyondLatency__ChangeNotifyFunc();
	void eventDestroyed();
	void ClientStayAsPartyLeader(struct FMergePartyReplicatedData EventData);
	void ServerInviteeConfirmedMerge();
	void ClientStayAsPartyFollower(struct FUniqueNetId NewLeader);
	void SetIdleBanned(unsigned long bInIdleBanned);
	void OnQuitSeverityChanged();
	void SetQuitSeverity(unsigned char SeverityType);
	void OnSpectatorShortcutChanged();
	void SetSpectatorShortcut(int InShortcut);
	void ServerSetPublicIP(struct FString IP);
	void OnClubsUpdated();
	void OnUniqueIdChanged();
	void HandleSubSystemReadAvatar(struct FUniqueNetId InPlayerId, class UTexture* InAvatar, struct FString InOnlinePlayerName);
	void UpdatePlayerAvatarBorder();
	void UpdatePlayerAvatar();
	void UpdatePlayerBanner();
	struct FString GetBotName();
	void SetBotProductName(struct FName InBotProductName);
	void ClientAchievementProgression(int AchievementId, unsigned char AchievementType, float Progress, float MaxProgress);
	void ClientUnlockAchievement(int AchievementId, unsigned char AchievementType);
	void ServerSetPlayerActivatedFX(class AFXActor_X* FX);
	void UpdateCarLocalPlayer();
	void OnReplacingBotPRIChanged();
	void OnTeamChanged();
	void ClearBotReplacement();
	void SetBotReplacement(class AAIController_TA* C);
	void ReportCheater(struct FString Reason);
	bool ValidateLoadoutTeamPaints();
	bool ValidateLoadoutSlots();
	void ValidateLoadoutDLC();
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	struct FString GetDebugName();
	void OnStartVoteToForfeitDisabledChanged();
	void SetStartVoteToForfeitDisabled(unsigned long bDisabled);
	void ServerVoteToForfeit();
	class UOnlineGame_Base_X* GetOnlineGameBase();
	class UOnlineGame_X* GetOnlineGame();
	void SetUserCarPreferences(float NewDodgeThreshold, float NewSteeringSensitivity, float NewAirControlSensitivity);
	void ServerSetUserCarPreferences(float NewDodgeThreshold, float NewSteeringSensitivity, float NewAirControlSensitivity);
	int ValidateUserInt(struct FString Reason, int NewValue, int Min, int Max);
	float ValidateUserFloat(struct FString Reason, float NewValue, float Min, float Max);
	void OnPawnTypeChanged();
	void SetWaitingPlayer(unsigned long B);
	void SetPawnType(unsigned char NewPawnType);
	bool IsPlayer();
	bool IsEditor();
	bool IsSpectator();
	void ServerSpectate();
	void ClientChangeTeamFailed(int TeamNum);
	void ServerChangeTeam(int TeamNum);
	void ServerSetVoteStatus(class AVoteActor_TA* VoteActor, unsigned char NewVote);
	void SetPodiumTitle(int Index, struct FMemberTitleStat InTitle);
	void ReplicatePodiumTitles();
	void ClearPodiumTitle();
	void OnMatchAdmin();
	void OnMVPChange();
	void NotifyWonMVP();
	bool IsInvalidName();
	bool IsInGameState(struct FName StateName);
	bool IsInWarmUpMode();
	void SetReady(unsigned long bNewReady);
	void ServerMatchAdminSetPaused(unsigned long bPause);
	void ServerMatchAdminSetScoreAndTime(int NewScoreTeam0, int NewScoreTeam1, int SecondsRemaining, unsigned long bOverTime, unsigned long bRestartRound);
	void SetMatchAdmin(unsigned long bIsMatchAdmin);
	void ServerReadyUp();
	bool ShouldBroadCastWelcomeMessage(unsigned long bExiting);
	void ClientUpdateOnlineProductStats(struct FClientOnlineProductStat ClientStat);
	void UpdateOnlineProductStats();
	void ClientGiveOnlineCurrencyDrop(struct FCurrency Drop);
	void ClientGiveRewardDrop(struct FOnlineXPReward Drop);
	void ClientGiveOnlineReward(struct FOnlineProductData Product);
	void HandleOnlineCurrencyDrops(TArray<struct FCurrency>& CurrencyDrops);
	void HandleRewardDrops(TArray<struct FOnlineXPReward>& RewardDrops);
	void HandleOnlineProductDrops(TArray<struct FOnlineProductData>& ProductDrops);
	void SetWaitingStartTime();
	void ClientNotifyStatTickerMessage(class APRI_TA* Receiver, class APRI_TA* Victim, class UStatEvent_TA* StatEvent);
	void HandleNetStatsPolled(class UClientConnectionTracker_TA* InTracker, struct FClientConnectionStats InStats);
	void OnRep_RepStatTitles();
	void ClientScoredGoal(struct FVector BallHitLocation);
	void OnScoredGoal(struct FVector BallHitLocation);
	void OnRep_SteeringSensitivity();
	void OnRep_ClientScorePoint();
	void ResetScore();
	void RemovePoints(int Points);
	void ScorePoint(int AdditionalScore);
	void SetStatCount(class UStatEvent_TA* StatEvent, int ForceCount);
	void IncrementStat(class UStatEvent_TA* StatEvent, int Count);
	void ClientNotifyGainedStat(class UStatEvent_TA* StatEvent, int Count);
	void OnGainedStat(class UStatEvent_TA* StatEvent, int Count);
	void GiveScore(class UStatEvent_TA* StatEvent, int Count);
	bool TryAwardTimeRestrictedStat(class UStatEvent_TA* Stat);
	void ResetAllStatCooldowns();
	int GetMatchStatCount(struct FName StatName);
	void CommitMatchStats(class UProfile_TA* Profile);
	void CommitProductStats(class UProfile_TA* Profile);
	int GetMatchXP();
	void CommitStats();
	void InitMusicStingers(class UProductLoader_TA* Loadout);
	void InitGoalExplosion(class UProductLoader_TA* Loadout);
	void InitProductStats(class UProductLoader_TA* Loadout);
	void HandleLoadoutLoaded(class UProductLoader_TA* Loadout);
	void UpdateFromLoadout();
	void UpdateUserCarPreferences(class ACarComponent_AirControl_TA* AirControlComponent);
	void HandleAirControl(class ACarComponent_AirControl_TA* AirControlComp);
	void SetCar(class ACar_TA* NewCar);
	bool IsClientPlayerPRI();
	bool IsLocalPlayerPRI();
	void Unregister();
	void AddLocalPlayerToGameEvent();
	void SetReplayGameEvent(class AGameEvent_TA* InGameEvent);
	void SetGameEvent(class AGameEvent_TA* InGameEvent);
	void ValidateReplicatedLoadout(int TeamIndex);
	void OnLoadoutsSetInternal();
	bool AreLoadoutsSet();
	void OnLoadoutsOnlineSet();
	void OnLoadoutsSet();
	void Deprecated_OnLoadoutSetInternal();
	bool Deprecated_IsLoadoutSet();
	void Deprecated_OnLoadoutOnlineSet();
	void Deprecated_OnLoadoutSet();
	void SetTestLoadout(struct FLoadoutData NewLoadout);
	TArray<struct FOnlineProductData> GetMatchCompleteLoadout();
	void InitCertifiedProductStat(unsigned long long InstanceID, int ProductID, class UProductAttribute_Certified_TA* Certified);
	void RemoveCertifiedProductStat(unsigned long long InstanceID);
	void InitFromAttributes(struct FLoadoutData& Loadout, struct FLoadoutAttributesArray& LoadoutAttributes);
	void InitClientLoadoutOnlineData(struct FLoadoutAttributesArray& LoadoutAttributes, struct FClientLoadoutOnlineData& OutClientData);
	bool ValidateTitleIDAttribute(class UProductAttribute_TitleID_TA* Current, class UProductAttribute_TitleID_TA* Actual);
	bool ValidatePaintedAttribute(class UProductAttribute_Painted_TA* Current, class UProductAttribute_Painted_TA* Actual);
	bool ValidateCertifiedAttribute(struct FOnlineProductStat ProductStat, class UProductAttribute_Certified_TA* Actual);
	bool ValidateOnlineProductWithLoadoutProduct(class UOnlineProduct_TA* LoadoutOnlineProduct, int LoadoutProductID);
	bool ValidateOnlineLoadout(struct FLoadoutData& OutLoadout, struct FLoadoutAttributesArray& OutAttributes, struct FClientLoadoutOnlineData& OutOnlineLoadout, TArray<class UOnlineProduct_TA*>& OnlineProducts);
	void HandleOnlineLoadoutReceived(class URPC_ProductsLoadoutGet_TA* RPC);
	void RemoveIrrelevantAttributes(struct FLoadoutData& Loadout, struct FLoadoutAttributesArray& OutLoadoutAttributes);
	void InitLoadoutAttributesForTeam(class APRI_X* PRI);
	void ValidateLoadout();
	void SetLoadoutSlotToDefaultID(int TeamIndex, class UProductSlot_TA*& Slot);
	void SetLoadouts(struct FLoadoutData& Loadouts, struct FLoadoutAttributesArray& LoadoutAttributes);
	void ServerSetTeamLoadout(unsigned char TeamIndex, struct FServerSetLoadoutTeam Params);
	bool ShouldValidateOnlineProducts();
	void OnSplitScreenStatusChanged();
	void HandleLocalPlayerLeave(class ULocalPlayer* OldPlayer);
	void HandleLocalPlayerJoin(class ULocalPlayer* NewPlayer);
	void ServerSplitScreenStatusChanged(unsigned long bInSplitScreen);
	void UpdateSplitScreenStatus();
	void OnPartyLeaderChanged();
	void ServerSetPartyLeader(struct FUniqueNetId InPartyLeader);
	void SetPartyLeader(struct FUniqueNetId InPartyLeader);
	void HandlePartyChanged(class UOnlineGameParty_X* Party);
	void UpdatePartyStatus();
	void OnSkillTierChanged();
	void ReplicateSkillTier(int NewTier);
	void OnTitleChanged();
	void SetTitle(struct FName NewTitle);
	void HandlePlayerTitle(class UOnlineGamePlayerTitles_TA* TitlesObj, struct FUniqueNetId InPlayerId);
	void SyncPlayerTitle();
	void UpdateTitleFromLoadout();
	void UpdateTitle();
	void HandleCameraChanged(class ACameraSettingsActor_TA* Actor);
	void SetCamera(class ACameraSettingsActor_TA* Actor);
	void eventOnOwnerChanged();
	void GetNewFriendKey();
	void SetPlayerHistoryKey(TArray<unsigned char> HistoryKeyArray);
	void ServerSetDistracted(unsigned long Value);
	void ServerSetPlayerHistoryKey(unsigned char HistoryKeyArray);
	void eventOnNewPlayerHistoryKey();
	void AddPlayerHistoryKey(class UOnlineRecentPlayersList* PlayersList);
	struct FString GetSanitizedPlayerName();
	void HandlePlayerNameChanged(class APRI_X* InPRI);
	void OnRep_UniqueId();
	void ClientInitialize(class AController* C);
	void OnBotBannerProductIDChanged();
	void OnBotAvatarProductIDChanged();
	void eventPostBeginPlay();
	void eventReplicatedEvent(struct FName VarName);
	void EventIdleBannedChanged(class APRI_TA* PRI);
	void EventQuitSeverityChanged(class APRI_TA* PRI);
	void EventOwnerChanged(class APRI_TA* PRI);
	void EventSpectatorShortcutChanged(class APRI_TA* PRI);
	void EventServerAchievementProgression(class APRI_TA* PRI, int AchievementId, unsigned char AchievementType, float Progress, float MaxProgress);
	void EventServerUnlockedAchievement(class APRI_TA* PRI, int AchievementId, unsigned char AchievementType);
	void EventMatchAdmin(class APRI_TA* PRI);
	void EventReplacingBotChanged(class APRI_TA* PRI);
	void EventScoredGoal(class APRI_TA* PRI, struct FVector BallHitLocation);
	void EventServerChangeTeamFailed(int TeamIndex);
	void EventSkillTierChanged(class APRI_TA* PRI);
	void EventTitleChanged(class APRI_TA* PRI);
	void EventStartVoteToForfeitDisabledChanged(class APRI_TA* PRI);
	void EventCommittedStats(class APRI_TA* PRI);
	void EventPawnTypeChanged(class APRI_TA* PRI);
	void EventStatTitlesSet(class APRI_TA* PRI);
	void EventWonMVP(class APRI_TA* PRI);
	void EventScorePoint(class APRI_TA* PRI, int Points);
	void EventPartyLeaderChanged(class APRI_TA* PRI);
	void EventCameraChanged(class APRI_TA* PRI);
	void EventPersistentCameraSet(class APRI_TA* PRI);
	void EventDistracted(class APRI_TA* PRI);
	void EventSplitScreenStatusChanged(class APRI_TA* PRI);
	void EventCarSet(class APRI_TA* PRI);
	void EventCarPreUpdate(class APRI_TA* PRI);
	void EventReadyChanged(class APRI_TA* PRI);
	void EventInvalidPsyonixID();
	void EventStatTickerMessage(class APRI_TA* Receiver, class APRI_TA* Victim, class UStatEvent_TA* StatEvent);
	void EventVanityChanged(unsigned char InVanityType);
	void EventSelectedLoadout(class APRI_TA* PRI);
	void EventRequestedLoadout(struct FLoadoutData& OutLoadout, struct FLoadoutAttributesArray& OutAttributes);
	void EventStatEvent(class APRI_TA* PRI, class UStatEvent_TA* StatEvent, int Count);
	void EventGameEventChanged(class APRI_TA* PRI);
};

// Class TAGame.ProductAsset_Logo_TA
// 0x0038 (0x00F8 - 0x0130)
class UProductAsset_Logo_TA : public UProductAsset_TA
{
public:
	class UTexture*                                    Texture;                                          		// 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                TeamColor;                                        		// 0x0100 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                CustomColor;                                      		// 0x0110 (0x0010) [0x0000000000000001] (CPF_Edit)    
	TArray<class UProduct_TA*>                         Bots2;                                            		// 0x0120 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_Logo_TA");
		}

		return uClassPointer;
	};

	struct FLinearColor GetFontColor(unsigned long bSwapColors);
	TArray<struct FLinearColor> GetStadiumColors(unsigned long bSwapColors);
	struct FString GetTeamName();
};

// Class TAGame.ProductAttribute_InheritCarSetting_TA
// 0x0010 (0x0080 - 0x0090)
class UProductAttribute_InheritCarSetting_TA : public UProductAttribute_TA
{
public:
	TArray<struct FInheritedParameter>                 Parameters;                                       		// 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_InheritCarSetting_TA");
		}

		return uClassPointer;
	};

	void ApplySettings(struct FName DestinationParamName, struct FName ParentParamName, class UMeshComponent* Parent, class UISetParameter* Child);
	void Inherit(class UMeshComponent* Parent, class UObject* ChildObject);
};

// Class TAGame.Car_TA
// 0x0288 (0x0898 - 0x0B20)
class ACar_TA : public AVehicle_TA
{
public:
	TArray<class ACarComponent_TA*>                    DefaultCarComponents;                             		// 0x0898 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UEngineAudioComponent_TA*                    EngineAudio;                                      		// 0x08A8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UEngineAudioREVComponent_TA*                 EngineAudioRev;                                   		// 0x08B0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UThrottleShakeComponent_TA*                  ThrottleShake;                                    		// 0x08B8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class ACarComponent_FlipCar_TA*                    FlipComponent;                                    		// 0x08C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      DemolishTarget;                                   		// 0x08C8 (0x0001) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      DemolishSpeed;                                    		// 0x08C9 (0x0001) [0x0000000000002000] (CPF_Transient)
	class UProductLoader_TA*                           Loadout;                                          		// 0x08D0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	unsigned long                                      bLoadoutSet : 1;                                  		// 0x08D8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bDemolishOnOpposingGround : 1;                    		// 0x08D8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bWasOnOpposingGround : 1;                         		// 0x08D8 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	unsigned long                                      bDemolishOnGoalZone : 1;                          		// 0x08D8 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	unsigned long                                      bWasInGoalZone : 1;                               		// 0x08D8 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	unsigned long                                      bOverrideHandbrakeOn : 1;                         		// 0x08D8 (0x0004) [0x0000000000002020] [0x00000020] (CPF_Net | CPF_Transient)
	unsigned long                                      bTeamBumpsUseCarForceMultiplier : 1;              		// 0x08D8 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bOverrideBoostOn : 1;                             		// 0x08D8 (0x0004) [0x0000000000002020] [0x00000080] (CPF_Net | CPF_Transient)
	unsigned long                                      bUseDefaultLoadout : 1;                           		// 0x08D8 (0x0004) [0x0000000000004000] [0x00000100] (CPF_Config)
	class AFXActor_X*                                  ExitFXArchetype;                                  		// 0x08E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class ADemolishExplosion_TA*                       DemolishExplosionArchetype;                       		// 0x08E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class ADemolishExplosion_TA*                       DemolishExplosion;                                		// 0x08F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UBallIndicator_TA*                           BallIndicatorArchetype;                           		// 0x08F8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UBallIndicator_TA*                           BallIndicator;                                    		// 0x0900 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	float                                              MaxTimeForDodge;                                  		// 0x0908 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              LastWheelsHitBallTime;                            		// 0x090C (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FLoadoutTeamPaint                           TeamPaint;                                        		// 0x0910 (0x0010) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FClubColorSet                               ClubColors;                                       		// 0x0920 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              ReplicatedCarScale;                               		// 0x0928 (0x0004) [0x0000000000000020] (CPF_Net)     
	struct FDemolishData                               ReplicatedDemolish;                               		// 0x0930 (0x0028) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FDemolishData2                              ReplicatedDemolish_CustomFX;                      		// 0x0958 (0x0030) [0x0000000000002000] (CPF_Transient)
	struct FDemolishDataGoalExplosion                  ReplicatedDemolishGoalExplosion;                  		// 0x0988 (0x0030) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class AFXActor_X*                                  BodyFXActor;                                      		// 0x09B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APRI_TA*                                     AttackerPRI;                                      		// 0x09C0 (0x0008) [0x0000000000000000]               
	struct FVector                                     MouseAccel;                                       		// 0x09C8 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     MouseAirAccel;                                    		// 0x09D4 (0x000C) [0x0000000000002000] (CPF_Transient)
	class ASpecialPickup_TA*                           AttachedPickup;                                   		// 0x09E0 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class ARumblePickups_TA*                           RumblePickups;                                    		// 0x09E8 (0x0008) [0x0000000000000020] (CPF_Net)     
	struct FVector                                     ReplayFocusOffset;                                		// 0x09F0 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              AddedBallForceMultiplier;                         		// 0x09FC (0x0004) [0x0000000000000021] (CPF_Edit | CPF_Net)
	float                                              AddedCarForceMultiplier;                          		// 0x0A00 (0x0004) [0x0000000000000021] (CPF_Edit | CPF_Net)
	class UCarTrajectoryComponent_TA*                  CarTrajectoryComponent;                           		// 0x0A08 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class AGameEvent_TA*                               GameEvent;                                        		// 0x0A10 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UNameplateComponentCar_TA*                   NameplateComponentCar;                            		// 0x0A18 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UExplosionHitHandler_TA*                     ExplosionHitHandler;                              		// 0x0A20 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	float                                              ReplicatedCarMaxLinearSpeedScale;                 		// 0x0A28 (0x0004) [0x0000000000000020] (CPF_Net)     
	struct FScriptDelegate                             __EventVehicleSetup__Delegate;                    		// 0x0A30 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventBumpedCar__Delegate;                       		// 0x0A48 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventDemolished__Delegate;                      		// 0x0A60 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTeamSet__Delegate;                         		// 0x0A78 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTeamPaintChanged__Delegate;                		// 0x0A90 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventHitBall__Delegate;                         		// 0x0AA8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventLanded__Delegate;                          		// 0x0AC0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSuperSonicChanged__Delegate;               		// 0x0AD8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventHitWorld__Delegate;                        		// 0x0AF0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __RumblePickups__ChangeNotify;                    		// 0x0B08 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Car_TA");
		}

		return uClassPointer;
	};

	void __Car_TA__HandleAssetLoaded_ACD4D97A4F339D0A519FA0B66BA9F981(class UObject* Mutator);
	void __RumblePickups__ChangeNotifyFunc();
	void SetCarMaxLinearSpeedScale(float InMaxLinearSpeedScale);
	bool IsAffectedByExplosionHitHandler();
	void SetExplosionHitHandler(class UExplosionHitHandler_TA* Handler);
	void SetAttachedPickupForLegacyReplay(class ASpecialPickup_TA* NewPickup);
	float GetMaxDriveBackwardsSpeed();
	float GetMaxDriveForwardSpeed();
	struct FVector GetReplayFocusLocation();
	void EnablePodiumMode();
	void ServerEquipProduct(struct FName ProductName);
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void CopyPushFactorCurve();
	void ClearAttackerPRI();
	void SetAttackerPRI(class APRI_TA* Attacker);
	void UpdateBallIndicator();
	struct FString GetReplicatedLoadoutString();
	void eventOnSuperSonicChanged();
	void eventOnGroundChanged();
	void FellOutOfWorld();
	class UNetConnection* GetNetConnection();
	class APlayerController* GetTopPlayerController();
	void DemolishDestroyTimer();
	void ClearFX();
	void FinishDemo(struct FDemolishData Data, class AFXActor_X* ExplosionFxArchetype);
	void QueueDemolish(struct FDemolishData Data, class APRI_TA* GoalExplosionOwner);
	void QueueDemolish_Deprecated(struct FDemolishData Data, class AFXActor_X* CustomDemoFX);
	void OnDemolishedGoalExplosion(struct FDemolishDataGoalExplosion Data);
	void OnDemolished_CustomFX(struct FDemolishData2 Data);
	void Demolish(class ARBActor_TA* Demolisher);
	void GoalExplosionDemolish(class APRI_TA* ScoringPlayer);
	void SetSoundMode(struct FName NewModeValue, struct FName NewModeGroup);
	bool Teleport(struct FVector SpawnLocation, struct FRotator SpawnRotation, unsigned long bStopVelocity, unsigned long bUpdateRotation, float ExtraForce);
	void OnTeleport(class USeqAct_Teleport* Action);
	void OnJumpReleased();
	void OnJumpPressed();
	void eventSetVehicleInput(struct FVehicleInputs NewInput);
	bool CanDemolish(class ACar_TA* HitCar);
	bool ShouldDemolish(class ACar_TA* HitCar, struct FVector HitLocation, struct FVector HitNormal, unsigned char& Result);
	void InitTimeOfImpactFromOldRBState(class ACar_TA* HitCar, struct FVector HitLocation, struct FVector HitNormal, struct FTimeOfImpactData& Impact);
	void AddBumpImpulse(struct FVector BumpImpulse, class ACar_TA* BumpingCar);
	void BumpCar(float Speed, class ACar_TA* OtherCar, struct FVector HitLocation, struct FVector HitNormal);
	unsigned char ApplyCarImpactForces(class ACar_TA* OtherCar, struct FVector HitLocation, struct FVector HitNormal);
	bool IsValidImpactNormalHit(float DotProductTolerance, struct FTimeOfImpactData& Impact);
	struct FVector GetBumpImpulse(float Speed, class ACar_TA* OtherCar, struct FVector HitLocation, struct FVector HitNormal);
	bool IsBumperHit(class ACar_TA* OtherCar, struct FVector HitLocation, struct FVector HitNormal);
	void ApplyBallImpactForces(class ABall_TA* Ball, struct FVector HitLocation);
	bool IsDodging();
	void OnHitBall(class ABall_TA* Ball, struct FVector HitLocation, struct FVector HitNormal);
	void ApplyHitWallAdjustmentForces(struct FAccumulatedRigidBodyCollision Collision, struct FVector HitLocation, struct FVector HitNormal);
	void eventOnRigidBodyCollision(struct FAccumulatedRigidBodyCollision Collision);
	bool AnyWheelTouchingGround();
	class ACarComponent_TA* GiveCarComponent(class ACarComponent_TA* ComponentArchetype, class APRI_TA* Activator);
	void AddDefaultCarComponents();
	void NotifyWhenVehicleSetup(struct FScriptDelegate Callback);
	void HandleVisualAssetLoaded(class UProductAsset_TA* Asset);
	void DetachPrimitiveComponent(class UPrimitiveComponent* Component);
	void HandleWheelBallHit(class UWheel_TA* Wheel);
	void HandleAssetLoaded(class UProductLoader_TA* Loader, class UProductAsset_TA* Asset);
	void RespawnInPlace();
	void SetCarScale(float NewScale);
	void OnClubColorsChanged();
	void HandleTeamChanged(class APRI_X* MyPRI);
	bool UpdateTeamLoadout();
	void InitTeamPaint();
	int GetLoadoutTeamIndex();
	int GetPreviewTeamIndex();
	bool HasTeam();
	void HandleLoadoutSelected(class APRI_TA* MyPRI);
	void SetLoadout(struct FClientLoadoutData& Data);
	void HandleGameStateChanged(class AGameEvent_TA* InGameEvent);
	void HandleGameEventChanged(class APRI_TA* MyPRI);
	void OnPRIChanged();
	void OnControllerChanged();
	void eventDestroyed();
	void CreateRumblePickups();
	void eventPostBeginPlay();
	void eventReplicatedEvent(struct FName VarName);
	void EventHitWorld(class ACar_TA* Car, class AActor* HitActor, struct FVector HitNormal);
	void EventSuperSonicChanged(class ACar_TA* Car);
	void EventLanded(class ACar_TA* Car);
	void EventHitBall(class ACar_TA* Car, class ABall_TA* Ball, struct FVector HitLocation, struct FVector HitNormal);
	void EventTeamPaintChanged(class ACar_TA* Car);
	void EventTeamSet(class ACar_TA* Car);
	void EventDemolished(class ACar_TA* Victim, struct FDemolishData Data);
	void EventBumpedCar(class ACar_TA* Car, class ACar_TA* HitCar, struct FVector HitLocation);
	void EventVehicleSetup(class ACar_TA* Car);
};

// Class TAGame.AchievementManager_TA
// 0x0464 (0x008C - 0x04F0)
class UAchievementManager_TA : public UTickableStateObject_X
{
public:
	class APlayerControllerBase_TA*                    PC;                                               		// 0x0090 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<int>                                        UnlockedAchievements;                             		// 0x0098 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FName>                               DLC1Cars;                                         		// 0x00A8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<struct FName>                               DLC2Cars;                                         		// 0x00B8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<struct FName>                               ClassicCars;                                      		// 0x00C8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<struct FName>                               RequiredDontLookBackProducts;                     		// 0x00D8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<struct FName>                               RequiredAnInchAnd62MilesProducts;                 		// 0x00E8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<struct FName>                               SARPBCArenas;                                     		// 0x00F8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<struct FName>                               RequiredLevelsToPlay;                             		// 0x0108 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	class UMapSet_TA*                                  RequiredRocketLabsArenas;                         		// 0x0118 (0x0008) [0x0000000000000002] (CPF_Const)   
	TArray<struct FName>                               RocketLabsArenaNames;                             		// 0x0120 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UMapData_TA*>                         BraveTheElementsBaseLevels;                       		// 0x0130 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<struct FName>                               RequiredRumbleActivation;                         		// 0x0140 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	float                                              MaxBoostTime;                                     		// 0x0150 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              MaxTimeOnWall;                                    		// 0x0154 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              MaxDriveDistanceKM;                               		// 0x0158 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              MaxHandbrakeRadius;                               		// 0x015C (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              MinHandbrakeDotAngleForComplete;                  		// 0x0160 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                DunksScored;                                      		// 0x0164 (0x0004) [0x0000000000000000]               
	int                                                RocketBoostFills;                                 		// 0x0168 (0x0004) [0x0000000000000000]               
	int                                                TotalDLC0BoostTime;                               		// 0x016C (0x0004) [0x0000000000000000]               
	int                                                GoalsScoredInCurrentGame;                         		// 0x0170 (0x0004) [0x0000000000000000]               
	int                                                SavesInCurrentGame;                               		// 0x0174 (0x0004) [0x0000000000000000]               
	int                                                AssistsInCurrentGame;                             		// 0x0178 (0x0004) [0x0000000000000000]               
	int                                                DLC2PsychoMasterExplodeCount;                     		// 0x017C (0x0004) [0x0000000000000000]               
	int                                                TotalBreakoutGoals;                               		// 0x0180 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                MaxRocketBoostFills;                              		// 0x0184 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                TotalBreakoutPlatformsToDamage;                   		// 0x0188 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                TotalDLC0WheelDriveDistanceKM;                    		// 0x018C (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                Winner_GameEventsWon;                             		// 0x0190 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                SuperVictorious_GameEventsWon;                    		// 0x0194 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                PitchVeteran_GameEventsPlayed;                    		// 0x0198 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                PickMeUp_RandomItemDrops;                         		// 0x019C (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                DropsInTheBucket_RandomItemDrops;                 		// 0x01A0 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                RidersBlock_GoalSaves;                            		// 0x01A4 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                Savage_Goals;                                     		// 0x01A8 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                Spectacular_Goals;                                		// 0x01AC (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                Ruthless_Goals;                                   		// 0x01B0 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                RocketGenocider_Goals;                            		// 0x01B4 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                MadScientist_Maps;                                		// 0x01B8 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                ComingOnStrong_GoalsOrAssists;                    		// 0x01BC (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                PeoplePerson_CompletedMatches;                    		// 0x01C0 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                MetaAchievementPointMax;                          		// 0x01C4 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                BattleCarCollector_CarsCollected;                 		// 0x01C8 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                Traveler_Maps;                                    		// 0x01CC (0x0004) [0x0000000000000002] (CPF_Const)   
	unsigned long                                      bBoostWasFull : 1;                                		// 0x01D0 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bPlayerInited : 1;                                		// 0x01D0 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bHandbrakePressed : 1;                            		// 0x01D0 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bCheckMinuteToWinIt : 1;                          		// 0x01D0 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bDidInitialCheckForMinuteToWinIt : 1;             		// 0x01D0 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bCheckBuzzerBeater : 1;                           		// 0x01D0 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bDidInitialCheckForBuzzerBeater : 1;              		// 0x01D0 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bQualifiesForDLC1Throwback : 1;                   		// 0x01D0 (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bSSFuryCarInLoadout : 1;                          		// 0x01D0 (0x0004) [0x0000000000000000] [0x00000100] 
	struct FVector                                     HandbrakeStartDir;                                		// 0x01D4 (0x000C) [0x0000000000000000]               
	struct FVector                                     HandbrakeStartLocation;                           		// 0x01E0 (0x000C) [0x0000000000000000]               
	struct FString                                     WastelandMapName;                                 		// 0x01F0 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FString                                     AquaticMapName;                                   		// 0x0200 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FString                                     UtopiaMapName;                                    		// 0x0210 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FString                                     ArcMapName;                                       		// 0x0220 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FString                                     TrainStationMapName;                              		// 0x0230 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<struct FName>                               ProductNames_Body_MuscleCar;                      		// 0x0240 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<struct FName>                               ProductNames_Body_SSFury;                         		// 0x0250 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FName                                       ProductName_Body_GearsCar;                        		// 0x0260 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       ProductName_Body_Import;                          		// 0x0268 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       ProductName_Body_Interceptor;                     		// 0x0270 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       ProductName_Body_Warthog;                         		// 0x0278 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       ProductName_Body_WastelandTruck;                  		// 0x0280 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       ProductName_Boost_Bubble;                         		// 0x0288 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       ProductName_Boost_MusicalNotes;                   		// 0x0290 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       ProductName_Hat_Halo;                             		// 0x0298 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       ProductName_Body_Octane;                          		// 0x02A0 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       ProductName_Body_Backfire;                        		// 0x02A8 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       ProductName_Body_Force;                           		// 0x02B0 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       ProductName_Body_Vanquish;                        		// 0x02B8 (0x0008) [0x0000000000000002] (CPF_Const)   
	TArray<struct FName>                               ProductNames_Body_Savage;                         		// 0x02C0 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<struct FName>                               ProductNames_Body_Spectacular;                    		// 0x02D0 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<struct FName>                               ProductNames_Body_Ruthless;                       		// 0x02E0 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FName                                       ProductName_Boost_Standard;                       		// 0x02F0 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       ProductName_Boost_Ion;                            		// 0x02F8 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       ProductName_Boost_Flamethrower;                   		// 0x0300 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       ProductName_Boost_Thermal;                        		// 0x0308 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       StatName_BoostTimeMinutes;                        		// 0x0310 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       StatName_Certifiable;                             		// 0x0318 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       StatName_DistanceDrivenKm;                        		// 0x0320 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       StatName_ItemCollected;                           		// 0x0328 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       StatName_LeftWingRightWing;                       		// 0x0330 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       StatName_MadScientist;                            		// 0x0338 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       StatName_MatchComplete;                           		// 0x0340 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       StatName_WallTimeMinutes;                         		// 0x0348 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       StatName_RocketGenocider;                         		// 0x0350 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       StatName_BraveTheElements;                        		// 0x0358 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       StatName_FullCourse;                              		// 0x0360 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       StatName_BuckminsterX10;                          		// 0x0368 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       StatName_ComingOnStrong;                          		// 0x0370 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       StatName_PeoplePerson;                            		// 0x0378 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       HockeyEventType;                                  		// 0x0380 (0x0008) [0x0000000000000002] (CPF_Const)   
	class USaveData_TA*                                BaseSaveData;                                     		// 0x0388 (0x0008) [0x0000000000000000]               
	class UAchievementSave_TA*                         SaveData;                                         		// 0x0390 (0x0008) [0x0000000000000000]               
	class APRI_TA*                                     LastPRI;                                          		// 0x0398 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AGameInfo_Replay_TA*                         LastGame;                                         		// 0x03A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AGameEvent_TA*                               LastGameEvent;                                    		// 0x03A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACar_TA*                                     LastCar;                                          		// 0x03B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FGuid                                       PendingTradeGuid;                                 		// 0x03B8 (0x0010) [0x0000000000002000] (CPF_Transient)
	class UProfileLoadoutSave_TA*                      LoadoutSave;                                      		// 0x03C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventNewMVPScore__Delegate;                     		// 0x03D0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventGoalAmountScored__Delegate;                		// 0x03E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventDrivenDistance__Delegate;                  		// 0x0400 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventShotAmountBlocked__Delegate;               		// 0x0418 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventGameEventAmountWon__Delegate;              		// 0x0430 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventChampionshipAmountChanged__Delegate;       		// 0x0448 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventRandomItemAmountDropped__Delegate;         		// 0x0460 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventRegularSeasonAmountChanged__Delegate;      		// 0x0478 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventAchievementUnlocked__Delegate;             		// 0x0490 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventStatIncremented__Delegate;                 		// 0x04A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventReceiveServerProgress__Delegate;           		// 0x04C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSaveDataSet__Delegate;                     		// 0x04D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AchievementManager_TA");
		}

		return uClassPointer;
	};

	void __AchievementManager_TA__OnInit_9F72C85F4A343DEE96B73098B52A3D7D(class UShopsManager_TA* InShopManager);
	void __AchievementManager_TA__OnInit_30A654AC46B20F3C60162FB5F20FBABF(class USaveData_TA* _);
	void __AchievementManager_TA__HandleShopPurchase_30F235214D47C0BF987C85941A6C8E66(struct FOnlineProductData P);
	bool __AchievementManager_TA__HandleShopPurchase_5B7042584CE542EF6D15BBBE01DBCBB8(struct FOnlineProductData P);
	void __AchievementManager_TA__ReconcileCollectionProgress_D2D21DA449BEF6C93C7A02A4EC968F55(class UOnlineProduct_TA* P);
	bool __AchievementManager_TA__ReconcileCollectionProgress_97BF32A54BC47F2B6EA50A937704ADB2(class UOnlineProduct_TA* P);
	void __AchievementManager_TA__HandleProfileSet_C9B33A0543CD08544DF67D927B62B890(class UProfileLoadoutSave_TA* Save);
	bool __AchievementManager_TA__CheckAllCarSlotsCustomized_584D51F042CFF5DE1244728F64D2BED0(class UProductSlot_TA* Slot);
	bool __AchievementManager_TA__GetEquippedOnlineProducts_E71E1AEE4259EAAF0261C99F9292E82D(class UOnlineProduct_TA* P);
	void GetAchievementProgress(int AchievementId, unsigned char AchievementType, float& Out_Progress, float& Out_MaxProgress);
	void GetClampedAchievementProgress(int AchievementId, unsigned char AchievementType, float& Out_Progress, float& Out_MaxProgress);
	void CheckBestOfTheBunch();
	void CheckSquadGoals(class AGameEvent_Soccar_TA* GameEvent);
	void CheckPeoplePerson(class AGameEvent_Soccar_TA* GameEvent);
	void CheckNewChallenger(class AGameEvent_Soccar_TA* GameEvent);
	void CheckTogetherIsBetter(class AGameEvent_Soccar_TA* GameEvent);
	void CheckJoinTheClub(unsigned long long ClubID);
	void HandleClubChanged(class UOnlineClubManager_X* Manager, unsigned long long ClubID);
	void HandleSkillTierChanged(class APRI_TA* PRI);
	void HandleTradeInComplete(class UGFxData_ProductTradeIn_TA* GFxData, TArray<class UOnlineProduct_TA*> Given, TArray<class UOnlineProduct_TA*> Received);
	void HandleTradeComplete(class UOnlineGameParty_TA* P, class URPC_ProductsTradePlayerStatus_TA* RPC);
	void HandleTradeStart(class UOnlineGameParty_TA* P, struct FGuid TradeId, TArray<unsigned long long> Give, TArray<unsigned long long> Receive);
	bool IsInCrossPlatformParty();
	bool IsPlayingWithClubmates(class APRI_TA* PRI, class AGameEvent_Soccar_TA* GameEvent);
	bool IsTournamentMatch();
	bool IsOnlineMatch();
	void CheckUnlockGoodTimes();
	class UMapData_TA* GetMapData();
	unsigned char GetWeatherVariant();
	bool IsTurbulentWeather();
	bool HasItemQualityEquipped(unsigned char Quality);
	TArray<class UOnlineProduct_TA*> GetEquippedOnlineProducts();
	void CheckUnlockStormTrooper();
	void Save();
	bool AddToIntList(int Number, TArray<int>& Out_IntList);
	bool AddToNameList(struct FName NewName, TArray<struct FName>& Out_NameList);
	bool AddToStringList(struct FString NewName, TArray<struct FString>& Out_StringList);
	void ResetTemporaryVaribles();
	bool PlayerIsOnATeam();
	bool NotifyKeyInput(int ControllerId, struct FName Key, unsigned char EventType, float AmountDepressed, unsigned long bGamepad);
	bool UpdateGoalsScoredAgainstBots(class AGameEvent_TA* GameEvent, int MaxGoals, TArray<struct FName> RequiredProducts, float BotSkillLevel, int& Out_UpdatedGoals);
	void HandleScoredGoal(class APRI_TA* PRI, struct FVector BallHitLocation);
	void HandlePlayerDemolished(class ACar_TA* Victim, struct FDemolishData Data);
	void SetHandbrakeStartData();
	bool OtherTeamIsAllBots(class AGameEvent_TA* GameEvent);
	bool ProductIsInAnyOpponentLoadout(class AGameEvent_TA* GameEvent, struct FName ProductName);
	bool IsPlayingSnowDay(class AGameEvent_Soccar_TA* SoccarEvent);
	bool QualifiesForDLC1Throwback();
	bool ClassicCarIsInLoadout();
	bool OrginalBattleCarIsInLoadout();
	bool DLC1CarIsInLoadout();
	void OnBreakoutPlatformDamaged(int Count);
	void HandleUsedAllMapVotes(class UMapPrefsSave_TA* MapPrefsSave);
	void UpdateBraveTheElementsLevelsPlayed();
	void CheckUnlockedBraveTheElements();
	void CheckUnlockedDamageControl(class AGameEvent_Soccar_TA* GameEvent);
	void CheckDLC0PowerSlide();
	bool Handbrake180Completed();
	int GetTotalProductStats(TArray<struct FName>& ProductNames);
	void CheckDLC0WheelDriveDistance();
	void CheckDLC0BoostTime();
	void HandleStatsCommited(class APRI_TA* PRI);
	bool PaintFinishIsInLoadout(struct FName ProductName);
	bool AtleastOneProductInLoadout(TArray<struct FName> ProductNames);
	bool ProductIsInLoadout(struct FName ProductName);
	bool IsWearingDecal();
	bool IsWearingHat();
	bool PlayingMapOrVariant(struct FName MapName);
	bool PlayingMap(struct FString MapName);
	void CheckAllCarSlotsCustomized(int ProductID);
	void HandleReplayStarted(class AGameInfo_Replay_TA* Game);
	void OnProductEquipped(int ProductID);
	void HandleOnlineProductEquipped(unsigned long long InstanceID);
	void HandleProductEquipped(int ProductID);
	void ListenForRegisteredVoter();
	void HandleProfileSet(class ULocalPlayer_TA* LocalPlayer);
	bool AllSeasonGamesPlayedWithDLC0Cars(class AGameEvent_Season_TA* GameEvent);
	void HandleWonChampionship(class AGameEvent_Season_TA* GameEvent);
	void UpdateDriveTime();
	void CheckBoosting(float DeltaTime);
	void CheckWallDriveTime(float DeltaTime);
	void eventTick(float DeltaTime);
	void HandleBoostAmountChanged(class ACarComponent_Boost_TA* Boost);
	void CheckTrainingModesPlayed();
	void CheckGameProgress();
	void UpdateTrainingModesPlayed(class AGameEvent_TA* GameEvent);
	bool PlayedAllLevels(TArray<struct FName>& RequiredLevels);
	void UpdateLevelsPlayed();
	void IncrementComingOnStrong();
	void HandleStatEvent(class APRI_TA* PRI, class UStatEvent_TA* StatEvent, int Count);
	void CheckTrifecta();
	void CheckUnlockedCars();
	void HandleCertifiedStatRankedUp(class UProductAttribute_Certified_TA* CertifiedAttribute);
	void HandleNewOnlineProduct(class USaveData_TA* Data, class UOnlineProduct_TA* OnlineProduct);
	void CheckCollectedProducts();
	void BroadcastRandomItemsDropped();
	void IncrementCollectedProducts(int Count);
	void ReconcileCollectionProgress();
	void HandleShopPurchase(TArray<struct FOnlineProductData> PurchasedProducts, TArray<struct FCurrency> PurchasedCurrencies);
	bool IsPlayingWithAFriend(class APRI_TA* PlayerPRI);
	bool PlayedAnyCar(TArray<struct FName> CarsToCheck);
	bool PlayedCar(struct FName CarToCheck);
	bool PlayedAllCars(TArray<struct FName> CarsToCheck);
	void UpdateCarsPlayed();
	void CheckPlayedWithFriends(class AGameEvent_Soccar_TA* GameEvent);
	void HandleMatchEnded(class AGameEvent_Soccar_TA* GameEvent);
	void CheckBotTeamsPlayed(class AGameEvent_Soccar_TA* GameEvent);
	void UpdateBotTeamsPlayed(class AGameEvent_Soccar_TA* GameEvent);
	void NotifyGameEventWon();
	void HandleMatchWinnerSet(class AGameEvent_Soccar_TA* GameEvent);
	void HandlePlayerCarSet(class APRI_TA* PRI);
	void HandleNewPlayerAdded(class AGameEvent_TA* GameEvent, class APRI_TA* PRI);
	void HandleOvertimeUpdated(class AGameEvent_Soccar_TA* GameEvent);
	bool GameEventHasPlayers(class AGameEvent_TA* GameEvent);
	bool IsTiedOrTrailingOtherTeam(class AGameEvent_Soccar_TA* GameEvent);
	void HandleGameTimeUpdated(class AGameEvent_Soccar_TA* GameEvent);
	void HandleCarAddComponent(class UObject* O);
	void SetupDriftKingForUnlock();
	void InitCar();
	void HandlePickupActivated(class ACar_TA* InCar, class ASpecialPickup_TA* ActivatedPickup);
	void CheckAllRumbleActivations(class ASpecialPickup_TA* ActivatedPickup);
	struct FName GetRumbleItemName(class ASpecialPickup_TA* Pickup);
	void HandleCarSet(class APRI_TA* InPRI);
	void HandleTeamChanged(class APRI_X* InPRI);
	void HandleGameEventChanged(class APRI_TA* PRI);
	void UpdatePRI(class APRI_TA* PRI);
	void HandleReceivedPRI(class APlayerController_X* InPC);
	void OnInit();
	void SetAchievementSave(class UAchievementSave_TA* Save);
	void SetBaseSaveData(class USaveData_TA* MySaveData);
	void HandleBaseSaveDataLoaded(class USaveGameManager_TA* Manager, class USaveData_TA* MySaveData, class UError* Error);
	void HandlePCDestroyed(class APlayerController_X* InPC);
	void HandlePlayerReceived(class APlayerControllerBase_TA* InPC);
	void Init(class APlayerControllerBase_TA* InPC);
	void SyncPS4Achievements(TArray<unsigned long> SyncedAchievements);
	void CheckPS4AchievementsSynced();
	struct FUniqueNetId GetUniqueNetId();
	void SyncSteamAchievements(int TitleId);
	void OnFirstExecution();
	void FlushOnlineStats();
	void IncrementStat(int AchievementId, unsigned char AchievementType, int Progress);
	bool AchievementTypeExistsOnPlatform(unsigned char AchievementType);
	int GetAchievementTypeMax(unsigned char AchievementType);
	int GetAchievementIconID(int InAchievementID, unsigned char AchievementType);
	void GetAchievementIDAndType(int GlobalAchievementID, int& Out_AchievementID, unsigned char& Out_AchievementType);
	int GetGlobalAchievementID(int InAchievementID, unsigned char AchievementType);
	bool IsUnlocked(int AchievementId, unsigned char AchievementType, unsigned long bIgnoreAuthority);
	void SetAchievementUnlocked(int AchievementId, unsigned long bUnlocked);
	void UnlockAchievement(int AchievementId, unsigned char AchievementType, unsigned long bIgnoreAuthority);
	void OnProgressionChanged(int AchievementId, unsigned char AchievementType);
	void HandleServerAchievementProgression(class APRI_TA* PRI, int AchievementId, unsigned char AchievementType, float Progress, float MaxProgress);
	void HandleServerUnlockedAchievement(class APRI_TA* PRI, int AchievementId, unsigned char AchievementType);
	void eventConstruct();
	void EventSaveDataSet(class UAchievementManager_TA* Manager);
	void EventReceiveServerProgress(class UAchievementManager_TA* Manager, int AchievementId, unsigned char AchievementType, float Progress, float MaxProgress);
	void EventStatIncremented(class UAchievementManager_TA* Manager, int AchievementId, unsigned char AchievementType);
	void EventAchievementUnlocked(class UAchievementManager_TA* Manager, int AchievementId, unsigned char AchievementType);
	void EventRegularSeasonAmountChanged(class UAchievementManager_TA* Manager, int Amount);
	void EventRandomItemAmountDropped(class UAchievementManager_TA* Manager, int Amount);
	void EventChampionshipAmountChanged(class UAchievementManager_TA* Manager, int Wins);
	void EventGameEventAmountWon(class UAchievementManager_TA* Manager, int GamesWon);
	void EventShotAmountBlocked(class UAchievementManager_TA* Manager, int bLocked);
	void EventDrivenDistance(class UAchievementManager_TA* Manager, float Distance);
	void EventGoalAmountScored(class UAchievementManager_TA* Manager, int Score);
	void EventNewMVPScore(class UAchievementManager_TA* Manager, int Score);
};

// Class TAGame.GameInfoBase_TA
// 0x0010 (0x04C8 - 0x04D8)
class AGameInfoBase_TA : public AGameInfo_X
{
public:
	TArray<class UGFxSoundPack_X*>                     SoundPacks;                                       		// 0x04C8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfoBase_TA");
		}

		return uClassPointer;
	};

	class UClass* eventSetGameType(struct FString MapName, struct FString Options, struct FString Portal);
};

// Class TAGame.GameInfo_Replay_TA
// 0x0068 (0x04D8 - 0x0540)
class AGameInfo_Replay_TA : public AGameInfoBase_TA
{
public:
	class UReplay_TA*                                  Replay;                                           		// 0x04D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     ReplayPath;                                       		// 0x04E0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class AGameEvent_TA*                               GameEvent;                                        		// 0x04F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              PrevTime;                                         		// 0x04F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ReplayStartTime;                                  		// 0x04FC (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FString                                     ReplayKismetLevelName;                            		// 0x0500 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventReplayStarted__Delegate;                   		// 0x0510 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventGameEventSet__Delegate;                    		// 0x0528 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_Replay_TA");
		}

		return uClassPointer;
	};

	void HandleReplayTimeSkip(class UReplay_TA* InReplay);
	void TriggerTimeEvents();
	void OnLoadReplayCancel(class UGFxModal_X* Modal);
	void OnLoadReplayRetry(class UGFxModal_X* Modal);
	void HandleReplayImportError(class UReplay_TA* InReplay, class UError* Error);
	void eventTick(float DeltaTime);
	void HandleReplayActorSpawned(class UReplay_TA* InReplay, class AActor* A);
	class ANavigationPoint* FindPlayerStart(class AController* Player, unsigned char InTeam, struct FString IncomingName);
	void HandleReplayImported(class UReplayManager_TA* Manager, class UReplay_TA* InReplay, class UError* Error);
	void ImportReplay();
	void eventDestroyed();
	void eventInitGame(struct FString Options, struct FString& ErrorMessage);
	void EventGameEventSet(class AGameInfo_Replay_TA* Game);
	void EventReplayStarted(class AGameInfo_Replay_TA* Game);
};

// Class TAGame.SaveObject_TA
// 0x0068 (0x0060 - 0x00C8)
class USaveObject_TA : public UObject
{
public:
	int                                                Version;                                          		// 0x0060 (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             __EventDirtied__Delegate;                         		// 0x0068 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventLoaded__Delegate;                          		// 0x0080 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventUnloaded__Delegate;                        		// 0x0098 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             EventPropertyChange;                              		// 0x00B0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SaveObject_TA");
		}

		return uClassPointer;
	};

	void EventPropertyChangeFunc();
	void GetVersionDelegates(TArray<struct FScriptDelegate>& VersionDelegates);
	void UpdateVersion();
	class USaveObject_TA* Reconcile(class USaveObject_TA* Remote);
	bool ShouldForceSave();
	void SetDirtyDelayed();
	void SetDirty();
	void OnUnload();
	void Unload();
	void OnLoad();
	void Load();
	void OnCreate();
	class USaveObject_TA* Create();
	void EventUnloaded(class USaveObject_TA* SaveObject);
	void EventLoaded(class USaveObject_TA* SaveObject);
	void EventDirtied(class USaveObject_TA* SaveObject);
};

// Class TAGame.AchievementSave_TA
// 0x017C (0x00C8 - 0x0244)
class UAchievementSave_TA : public USaveObject_TA
{
public:
	TArray<struct FString>                             BotTeamsPlayed;                                   		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FString>                             TrainingModesPlayed;                              		// 0x00D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FName>                               LevelsPlayed;                                     		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FName>                               LabsMapsPlayed;                                   		// 0x00F8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FName>                               CarsPlayed;                                       		// 0x0108 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FName>                               RumbleItemsActivated;                             		// 0x0118 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FName>                               BraveTheElementsLevelsPlayed;                     		// 0x0128 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              TotalBoostTime;                                   		// 0x0138 (0x0004) [0x0000000000000000]               
	float                                              TotalTimeOnWall;                                  		// 0x013C (0x0004) [0x0000000000000000]               
	float                                              TotalDriveDistanceKM;                             		// 0x0140 (0x0004) [0x0000000000000000]               
	int                                                GoalShotsAny;                                     		// 0x0144 (0x0004) [0x0000000000000000]               
	int                                                GoalShots;                                        		// 0x0148 (0x0004) [0x0000000000000000]               
	int                                                GoalSaves;                                        		// 0x014C (0x0004) [0x0000000000000000]               
	int                                                SavageGoals;                                      		// 0x0150 (0x0004) [0x0000000000000000]               
	int                                                GameEventsWon;                                    		// 0x0154 (0x0004) [0x0000000000000000]               
	int                                                GamesWonInARow;                                   		// 0x0158 (0x0004) [0x0000000000000000]               
	int                                                GameEventsPlayed;                                 		// 0x015C (0x0004) [0x0000000000000000]               
	int                                                SpectacularGoals;                                 		// 0x0160 (0x0004) [0x0000000000000000]               
	int                                                TotalScoredGoals;                                 		// 0x0164 (0x0004) [0x0000000000000000]               
	int                                                TotalShotsBlocked;                                		// 0x0168 (0x0004) [0x0000000000000000]               
	int                                                RandomItemsDropped;                               		// 0x016C (0x0004) [0x0000000000000000]               
	int                                                HighestMVPScore;                                  		// 0x0170 (0x0004) [0x0000000000000000]               
	int                                                ChampionshipsWon;                                 		// 0x0174 (0x0004) [0x0000000000000000]               
	int                                                RegularSeasonsCompleted;                          		// 0x0178 (0x0004) [0x0000000000000000]               
	int                                                HighestRecordedCertifiedRank;                     		// 0x017C (0x0004) [0x0000000000000000]               
	int                                                BreakoutGoals;                                    		// 0x0180 (0x0004) [0x0000000000000000]               
	int                                                BreakoutPlatformsDamaged;                         		// 0x0184 (0x0004) [0x0000000000000000]               
	unsigned long                                      bResetWinningIsWinningSeasonList : 1;             		// 0x0188 (0x0004) [0x0000000000000000] [0x00000001] 
	TArray<struct FName>                               CustomizedSlotNames;                              		// 0x0190 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<float>                                      CheckDistancesDrivenKM;                           		// 0x01A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        CheckScoredGoals;                                 		// 0x01B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        CheckShotsBlocked;                                		// 0x01C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        CheckGameEventsWon;                               		// 0x01D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        CheckRandomItemsDropped;                          		// 0x01E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        LeftWingRightWingTeamsPlayed;                     		// 0x01F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long>                              WinningIsWinningPlayedWithDLC0Cars;               		// 0x0200 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        CarsCollected;                                    		// 0x0210 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                ExhibitionMatchesPlayed;                          		// 0x0220 (0x0004) [0x0000000000000000]               
	int                                                RankedMatchesPlayed;                              		// 0x0224 (0x0004) [0x0000000000000000]               
	int                                                UnrankedMatchesPlayed;                            		// 0x0228 (0x0004) [0x0000000000000000]               
	int                                                PrivateMatchesPlayed;                             		// 0x022C (0x0004) [0x0000000000000000]               
	int                                                ReplayEditorOpened;                               		// 0x0230 (0x0004) [0x0000000000000000]               
	int                                                CreditsViewed;                                    		// 0x0234 (0x0004) [0x0000000000000000]               
	int                                                GoalsOrAssists;                                   		// 0x0238 (0x0004) [0x0000000000000000]               
	int                                                CompletedMatchesWithClubmates;                    		// 0x023C (0x0004) [0x0000000000000000]               
	int                                                NewOfflineProductsUnlocked;                       		// 0x0240 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AchievementSave_TA");
		}

		return uClassPointer;
	};

	void __AchievementSave_TA__GetVersionDelegates_A919C7274A085485B2138FABBBEBB727(class UObject* SaveObj);
	int __AchievementSave_TA__GetVersionDelegates_C4A0DFED426F50029A332FA0CCD81955(class UOnlineProduct_TA* BP);
	bool __AchievementSave_TA__GetVersionDelegates_FFE754BD4A70EF9354DD2C9108EA4777(class UOnlineProduct_TA* Op);
	void OnCreate();
	void GetVersionDelegates(TArray<struct FScriptDelegate>& VersionDelegates);
	class USaveObject_TA* Reconcile(class USaveObject_TA* OtherSaveObject);
};

// Class TAGame.AchievementUnlockedEvent_TA
// 0x0008 (0x0060 - 0x0068)
class UAchievementUnlockedEvent_TA : public UObject
{
public:
	unsigned char                                      Type;                                             		// 0x0060 (0x0001) [0x0000000000000000]               
	int                                                LocalId;                                          		// 0x0064 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AchievementUnlockedEvent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GameEvent_Soccar_TA
// 0x04F0 (0x0768 - 0x0C58)
class AGameEvent_Soccar_TA : public AGameEvent_Team_TA
{
public:
	class ACar_TA*                                     TestCarArchetype;                                 		// 0x0768 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class ABall_TA*                                    BallArchetype;                                    		// 0x0770 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AGoalIndicator_TA*                           GoalIndicatorArchetype;                           		// 0x0778 (0x0008) [0x0000000000000000]               
	class AActor*                                      BallSpawnPoint;                                   		// 0x0780 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AStatFactory_TA*                             StatFactoryArchetype;                             		// 0x0788 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       InitialEventState;                                		// 0x0790 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                SeriesLength;                                     		// 0x0798 (0x0004) [0x0000000000000021] (CPF_Edit | CPF_Net)
	int                                                GameTime;                                         		// 0x079C (0x0004) [0x0000000000000021] (CPF_Edit | CPF_Net)
	int                                                WarmupTime;                                       		// 0x07A0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                MaxScore;                                         		// 0x07A4 (0x0004) [0x0000000000000021] (CPF_Edit | CPF_Net)
	int                                                AutoBalanceDifference;                            		// 0x07A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UOvertimeComponent_TA*                       OvertimeComponent;                                		// 0x07B0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FInterpCurveFloat                           ScoreSlomoCurve;                                  		// 0x07B8 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              ScoreSlomoTime;                                   		// 0x07D0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              GameTimeRemaining;                                		// 0x07D4 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                SecondsRemaining;                                 		// 0x07D8 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int                                                WaitTimeRemaining;                                		// 0x07DC (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              TotalGameTimePlayed;                              		// 0x07E0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              OvertimeTimePlayed;                               		// 0x07E4 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UMessage_TA*                                 GoalScoredMessage;                                		// 0x07E8 (0x0008) [0x0000000000000000]               
	class UMessage_TA*                                 OvertimeMessage;                                  		// 0x07F0 (0x0008) [0x0000000000000000]               
	class UMessage_TA*                                 TwoMinRemainingMessage;                           		// 0x07F8 (0x0008) [0x0000000000000000]               
	class UMessage_TA*                                 OneMinRemainingMessage;                           		// 0x0800 (0x0008) [0x0000000000000000]               
	class UMessage_TA*                                 ThirtySecondsRemainingMessage;                    		// 0x0808 (0x0008) [0x0000000000000000]               
	class UMessage_TA*                                 StopMessage;                                      		// 0x0810 (0x0008) [0x0000000000000000]               
	class UMessage_TA*                                 GamePausedMessage;                                		// 0x0818 (0x0008) [0x0000000000000000]               
	class UMessage_TA*                                 GameUnPausedMessage;                              		// 0x0820 (0x0008) [0x0000000000000000]               
	class UMessage_TA*                                 OutOfBoundsMessage;                               		// 0x0828 (0x0008) [0x0000000000000000]               
	unsigned long                                      bRoundActive : 1;                                 		// 0x0830 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bPlayReplays : 1;                                 		// 0x0830 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bBallHasBeenHit : 1;                              		// 0x0830 (0x0004) [0x0000000000002020] [0x00000004] (CPF_Net | CPF_Transient)
	unsigned long                                      bOverTime : 1;                                    		// 0x0830 (0x0004) [0x0000000000002020] [0x00000008] (CPF_Net | CPF_Transient)
	unsigned long                                      bUnlimitedTime : 1;                               		// 0x0830 (0x0004) [0x0000000000000020] [0x00000010] (CPF_Net)
	unsigned long                                      bNoContest : 1;                                   		// 0x0830 (0x0004) [0x0000000000002020] [0x00000020] (CPF_Net | CPF_Transient)
	unsigned long                                      bDisableGoalDelay : 1;                            		// 0x0830 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	unsigned long                                      bShowNoScorerGoalMessage : 1;                     		// 0x0830 (0x0004) [0x0000000000000002] [0x00000080] (CPF_Const)
	unsigned long                                      bMatchEnded : 1;                                  		// 0x0830 (0x0004) [0x0000000000002020] [0x00000100] (CPF_Net | CPF_Transient)
	unsigned long                                      bShowIntroScene : 1;                              		// 0x0830 (0x0004) [0x0000000000000020] [0x00000200] (CPF_Net)
	unsigned long                                      bClubMatch : 1;                                   		// 0x0830 (0x0004) [0x0000000000000020] [0x00000400] (CPF_Net)
	unsigned long                                      bCanDropOnlineRewards : 1;                        		// 0x0830 (0x0004) [0x0000000000000020] [0x00000800] (CPF_Net)
	int                                                NextSpawnIndex;                                   		// 0x0834 (0x0004) [0x0000000000002000] (CPF_Transient)
	class AReplayDirector_TA*                          ReplayDirectorArchetype;                          		// 0x0838 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AReplayDirector_TA*                          ReplayDirector;                                   		// 0x0840 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	TArray<class ABall_TA*>                            GameBalls;                                        		// 0x0848 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                TotalGameBalls;                                   		// 0x0858 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PostGoalTime;                                     		// 0x085C (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AStatFactory_TA*                             StatFactory;                                      		// 0x0860 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class UGoal_TA*>                            Goals;                                            		// 0x0868 (0x0010) [0x0000000004482008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	int                                                SecondsRemainingCountdown;                        		// 0x0878 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UMessage_TA*                                 SecondsRemainingMessage;                          		// 0x0880 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     FieldCenter;                                      		// 0x0888 (0x000C) [0x0000000000002000] (CPF_Transient)
	class ATeam_TA*                                    GameWinner;                                       		// 0x0898 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class ATeam_TA*                                    MatchWinner;                                      		// 0x08A0 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	unsigned char                                      TieBreakDecision;                                 		// 0x08A8 (0x0001) [0x0000000000002020] (CPF_Net | CPF_Transient)
	unsigned char                                      ReplicatedScoredOnTeam;                           		// 0x08A9 (0x0001) [0x0000000000002020] (CPF_Net | CPF_Transient)
	unsigned char                                      ReplicatedServerPerformanceState;                 		// 0x08AA (0x0001) [0x0000000000000020] (CPF_Net)     
	class APRI_TA*                                     MVP;                                              		// 0x08B0 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class APRI_TA*                                     FastestGoalPlayer;                                		// 0x08B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APRI_TA*                                     SlowestGoalPlayer;                                		// 0x08C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APRI_TA*                                     FurthestGoalPlayer;                               		// 0x08C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              FastestGoalSpeed;                                 		// 0x08D0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              SlowestGoalSpeed;                                 		// 0x08D4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              FurthestGoal;                                     		// 0x08D8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class APRI_TA*                                     ScoringPlayer;                                    		// 0x08E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                RoundNum;                                         		// 0x08E8 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              AssistMaxTime;                                    		// 0x08EC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BallHasBeenHitStartDelay;                         		// 0x08F0 (0x0004) [0x0000000000000000]               
	float                                              BallRespawnTime;                                  		// 0x08F4 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGameEvent_Soccar_SubRules_TA*               DefaultSubRules;                                  		// 0x08F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UGameEvent_Soccar_SubRules_TA*               SubRulesArchetype;                                		// 0x0900 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UGameEvent_Soccar_SubRules_TA*               SubRules;                                         		// 0x0908 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USpawnPointCluster_TA*                       SpawnPointsPodium;                                		// 0x0910 (0x0008) [0x0000000000000000]               
	float                                              PodiumDelay;                                      		// 0x0918 (0x0004) [0x0000000000000000]               
	float                                              PodiumTime;                                       		// 0x091C (0x0004) [0x0000000000000000]               
	TArray<class USpawnPointCluster_TA*>               SpawnPointLobbyTeams;                             		// 0x0920 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UStatCategory_TA*>                    StatCategories;                                   		// 0x0930 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class ABall_Trajectory_TA*                         BallTrajectory;                                   		// 0x0940 (0x0008) [0x0000000000000000]               
	class ABall_Trajectory_TA*                         BallTrajectoryArchetype;                          		// 0x0948 (0x0008) [0x0000000000000000]               
	class UCountdownObject_TA*                         UnpauseCountdown;                                 		// 0x0950 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APlayerController_TA*                        Pauser;                                           		// 0x0958 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<struct FOnlinePlayerMatchData>              PlayerMatchData;                                  		// 0x0960 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UEndRoundComponent_TA*                       EndRoundComponentArchetype;                       		// 0x0970 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UEndRoundComponent_TA*                       EndRoundComponent;                                		// 0x0978 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UMatchBroadcastComponent_TA*                 MatchBroadcast;                                   		// 0x0980 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UStatEvent_TA*                               ReplicatedStatEvent;                              		// 0x0988 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	TArray<class UStatEvent_TA*>                       ImportantStatEvents;                              		// 0x0990 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UGameObserver_TA*                            GameObserver;                                     		// 0x09A0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UFpsBucketRecorder_TA*                       ActiveFpsRecorder;                                		// 0x09A8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UFpsBucketRecorder_TA*                       InactiveFpsRecorder;                              		// 0x09B0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UServerPerformanceTracker_TA*                ServerPerformanceTracker;                         		// 0x09B8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UMatchSeries_TA*                             MatchSeries;                                      		// 0x09C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UCrowdSoundManager_TA*                       CrowdSound;                                       		// 0x09C8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UBotDetection_TA*                            BotDetection;                                     		// 0x09D0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	float                                              LobbyTagOffsetZ;                                  		// 0x09D8 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              BallSpacing;                                      		// 0x09DC (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              PreMatchPlayersReadyStartDelay;                   		// 0x09E0 (0x0004) [0x0000000000000002] (CPF_Const)   
	struct FScriptDelegate                             __EventActiveRoundChanged__Delegate;              		// 0x09E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventStartNewRound__Delegate;                   		// 0x0A00 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventBallAdded__Delegate;                       		// 0x0A18 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventBallRemoved__Delegate;                     		// 0x0A30 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventFirstBallHit__Delegate;                    		// 0x0A48 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventGoalScored__Delegate;                      		// 0x0A60 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventGameTimeUpdated__Delegate;                 		// 0x0A78 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventOvertimeUpdated__Delegate;                 		// 0x0A90 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventGameEnded__Delegate;                       		// 0x0AA8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventMatchEnded__Delegate;                      		// 0x0AC0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventEndGameCountDown__Delegate;                		// 0x0AD8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventReplayDirectorSet__Delegate;               		// 0x0AF0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventGameWinnerSet__Delegate;                   		// 0x0B08 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventMatchWinnerSet__Delegate;                  		// 0x0B20 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPlayerScored__Delegate;                    		// 0x0B38 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventReplicatedGoalScored__Delegate;            		// 0x0B50 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventStatFactoryInitialized__Delegate;          		// 0x0B68 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventReplicatedStatEvent__Delegate;             		// 0x0B80 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventMaxScoreChanged__Delegate;                 		// 0x0B98 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventReplayFinished__Delegate;                  		// 0x0BB0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __WaitTimeRemaining__ChangeNotify;                		// 0x0BC8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bShowIntroScene__ChangeNotify;                  		// 0x0BE0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bClubMatch__ChangeNotify;                       		// 0x0BF8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bCanDropOnlineRewards__ChangeNotify;            		// 0x0C10 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __TieBreakDecision__ChangeNotify;                 		// 0x0C28 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __ReplicatedServerPerformanceState__ChangeNotify; 		// 0x0C40 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Soccar_TA");
		}

		return uClassPointer;
	};

	void CheckStart();
	int GetPlayerCarCount();
	void ReplicateSkillTiers();
	bool StartIntroScene();
	void StopIntroScene();
	void DisableGameBall(class ABall_TA* Ball, unsigned long bDisable);
	void DisableGameBalls(unsigned long bDisable);
	void StartMatch();
	bool CanSpawnBots();
	void HandlePlayerReadyUp(class APRI_TA* PRI);
	void EnableFreestyle(class APRI_TA* PRI);
	void StartRound();
	void EndRound();
	void SetBallEventListeners(class ABall_TA* Ball, unsigned long bListen);
	bool CanAwardPoints();
	void HandleCarTouch(class ABall_TA* Ball, class ACar_TA* HitCar, unsigned char HitType);
	void SetBallHasBeenHit();
	int DetermineScoreTouchIndex(class ABall_TA* Ball, class UGoal_TA* Goal);
	int DetermineAssistTouchIndex(class ABall_TA* Ball, int ScoreIdx);
	void UpdateTotalGameTimePlayed(float DeltaTime);
	void UpdateGameTime(float DeltaTime);
	void WaitForEndRound();
	bool CanUpdateGameTime();
	void AddControllerToRespawnList(class AController* InController);
	void StartReplay();
	void HandleReplayFinished(class AReplayDirector_TA* InReplay);
	void GotoPodiumSpotlight();
	int MemberTitleSort(struct FMemberTitleStat A, struct FMemberTitleStat B);
	void UpdateSpotlight();
	void SpawnPodiumCars();
	bool CanEnableCarPodiumMovement();
	void FinishEvent();
	bool __GameEvent_Soccar_TA__InitClubMatch_05948F3F455212976E21F19FE41BF741(struct FReservationData P);
	bool __GameEvent_Soccar_TA__InitClubMatch_29AE5F7B43E4D1D7B2AD8EA4DDE6EE87(struct FReservationData P);
	struct FFPSBucketMetrics __GameEvent_Soccar_TA__ReportFps_8CAFC4264C4F43D4C747488C42EA14F4(struct FFpsBucketData Bucket);
	bool __GameEvent_Soccar_TA__UpdateTeamScores_C077F65C4E81AF1E7CA876824EAC641D(class ATeam_TA* T);
	void __GameEvent_Soccar_TA__SubmitMatchComplete_C0BB9F9F44F50AAB7B827EACD030A5CE(class APRI_TA* PRI);
	void __GameEvent_Soccar_TA__CheckStart_352EF2AF4419C21EDC5409884A03C5DC(class ATeam_TA* T);
	bool __GameEvent_Soccar_TA__CanUpdateGameTime_1B6A550348141E706DFA328996D75043(class ATeam_TA* Team);
	bool __GameEvent_Soccar_TA__CanSpawnBots_60020E0A4CA243F5D3A0198C94DA246C(class ATeam_TA* Team);
	void __GameEvent_Soccar_TA__EndState_39E839ED4C2E5A21ED5BE9AA45729387(class ATeam_TA* T);
	int __GameEvent_Soccar_TA__GetIsSeriesComplete_9D086F874DFCDE14FD300B80FA61C137(class ATeam_Soccar_TA* T);
	void __ReplicatedServerPerformanceState__ChangeNotifyFunc();
	void __TieBreakDecision__ChangeNotifyFunc();
	void __bCanDropOnlineRewards__ChangeNotifyFunc();
	void __bClubMatch__ChangeNotifyFunc();
	void __bShowIntroScene__ChangeNotifyFunc();
	void __WaitTimeRemaining__ChangeNotifyFunc();
	void OnMaxScoreChanged();
	class UGoal_TA* GetGoalByTeamIndex(int TeamIndex);
	bool GetIsSeriesComplete();
	void CheckJoinInProgress(class APRI_TA* PRI);
	bool AllowDynamicCrowd();
	void HandleTrajectoryEnabledChanged(class ABall_TA* InBall);
	void DestroyBallTrajectory();
	void AddBallTrajectory(class ABall_TA* InBall);
	struct FString GetInGamePresence(struct FString PlaylistName, struct FString MapName, unsigned long bLocalize);
	void GetPresenceStatus(unsigned long bLocalize, struct FString& Out_PresenceString, struct FString& Out_GameDataString);
	bool ShowScorerGoalMessage();
	bool CanUseBallCam();
	bool RestartPlayer(class AController* NewPlayer);
	bool DisableStatXP();
	void SetDisableGoalDelay(unsigned long bInDisableGoalDelay, float InBallRespawnTime);
	void ForceMatchStart();
	void RemoveLocalPlayer(class APlayerController_TA* Player);
	void AddLocalPlayer(class APlayerController_TA* Player);
	void DestroyGoalIndicators(class APlayerController_TA* Player);
	class AGoalIndicator_TA* SpawnGoalIndicator(class APlayerController_TA* Player, class UGoal_TA* Goal, class AActor* OrientationActor);
	void CreateGoalIndicators(class APlayerController_TA* Player);
	void HandleMatchCompleteDataReceived(class URPC_MatchComplete_TA* RPC);
	void BeginHighlightsReplay();
	void OnPlayerOutOfBounds(class APlayerController_TA* PC);
	int GetGoalScorePoints(class ABall_TA* Ball, class APRI_TA* ScorerPRI, class UGoal_TA* Goal);
	bool ShowSeasonIntroScene();
	bool ShouldCountUp();
	bool ShouldAllowVoteToForfeit();
	bool ShouldHaveLeaveMatchPenalty();
	void RemovePlayer(class AController* Player);
	void HandleUnpauseTimer(class UCountdownObject_TA* CountdownObject, int CountValue);
	void SetPaused(class APlayerController_TA* InPauser, unsigned long bInPaused);
	bool ShouldCountdownResumeFromPause();
	void SetScoreAndTime(class APlayerController_TA* PC, int NewScoreTeam0, int NewScoreTeam1, int InGameTimeRemaining, unsigned long bInOvertime, unsigned long bRestartRound);
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void SaveLocalPlayerStats();
	bool ShouldPlayReplay();
	bool ShouldRecordReplay();
	void OnBallHasBeenHit();
	class ABall_TA* SpawnBall(struct FVector SpawnLoc, unsigned long bWake, unsigned long bSpawnCannon, struct FString BallArch);
	struct FName GetScoreStatus(unsigned char TeamNum);
	int GetTotalScore();
	struct FName GetDesiredSoundState();
	void HandleCarSet(class APRI_TA* InPRI);
	void RemovePRI(class APRI_TA* PRI);
	void AddPRI(class APRI_TA* PRI);
	void AddPlayerToTeam(class ATeam_TA* NewTeam, class AController* NewPlayer);
	class ATeam_TA* PickTeamForSeries(class AController* C);
	class ATeam_TA* PickTeam(class AController* C);
	bool ShouldAutoSelectTeam(class AController* C);
	void OnMatchWinnerSet();
	void OnGameWinnerSet();
	class APRI_TA* GetMVP(class ATeam_TA* WinningTeam);
	int MVPSort(class APRI_TA* A, class APRI_TA* B);
	void HandleHitGoal(class ABall_TA* Ball, class UGoal_TA* Goal);
	void ClearReplicatedScoredOnTeam();
	void TriggerScoreChangedEvent();
	void HandleScoreUpdated(class ATeam_TA* Team);
	void OnAllTeamsCreated();
	void TriggerGoalScoreEvent(int TeamScoredOn, class ACar_TA* Scorer);
	void SetTotalGameBalls(int TotalBalls);
	void RecordRecentPlayers();
	void UpdateStats();
	void AddStatData(struct FName StatId, struct FUniqueNetId PlayerID, int Value, TArray<struct FUploadStatDataSet>& DataSet);
	void NotifyKismetOfCurrentTime();
	bool EnoughTimePassedToForfeit();
	bool ShowSecondsRemainingCountdown();
	void OnGameTimeUpdated();
	void OnOvertimeUpdated();
	void ForceOvertime();
	void StartOvertime();
	bool OnMyHalf(struct FVector TestLocation, unsigned char TeamNum);
	class ATeam_TA* GetWinningTeam();
	void SetMatchWinner(class ATeam_TA* Team, unsigned char InTieBreakDecision);
	void OnBallSpawned(class ABall_TA* NewBall);
	void ResetBalls();
	bool GetBallSpawnOrientation(struct FVector& out_Location, struct FRotator& out_Rotation);
	float CalcuateBallRadius();
	void FreezePawns();
	void DestroyBalls();
	void RemoveGameBall(class ABall_TA* Ball);
	void AddGameBall(class ABall_TA* Ball);
	void StartNewRound();
	void CheckForAutoBalance();
	bool HasWinner();
	void CheckForForfeit(class AController* RemovedPlayer, class ATeam_TA* Team);
	void SubmitMatch();
	void CommitPlayerMatchData(class APRI_TA* PRI, unsigned long bCompletedMatch);
	void SubmitMatchComplete();
	void OnMatchEnded();
	void NotifyOnGameEnded(struct FScriptDelegate Callback);
	bool ShouldDoPodiumSpotlight();
	struct FName GetEndMatchState();
	void EndGame();
	void UpdateTeamScores();
	void StartNewGame();
	void ResetToDefaultTime();
	void ResetGame();
	bool GetSpawnOrientation(class AController* ForPlayer, struct FVector& out_Location, struct FRotator& out_Rotation);
	void ClearReplicatedStatEvent();
	void HandleGaveStat(class AStatFactory_TA* Factory, class APRI_TA* ToPRI, class UStatEvent_TA* StatEvent, class ABall_TA* Ball, int BallHitIndex, class APRI_TA* Victim);
	void ReportFps(class UFpsBucketRecorder_TA* Recorder, unsigned long bIsActiveFpsReport);
	void eventDestroyed();
	void InitBotDetection();
	void InitCrowdManager();
	void InitField();
	void InitGameObserver();
	void OnInit();
	void InitMutators();
	void OnClubMatch();
	void InitClubMatch();
	bool CanInitClubMatch();
	void SetSeriesScore();
	void AssignCustomTeamSettings();
	void InitGame(struct FString Options);
	void eventPostBeginPlay();
	void eventReplicatedEvent(struct FName VarName);
	void EventReplayFinished(class AGameEvent_Soccar_TA* GameEvent);
	void EventMaxScoreChanged(class AGameEvent_Soccar_TA* GameEvent);
	void EventReplicatedStatEvent(class AGameEvent_Soccar_TA* GameEvent, class UStatEvent_TA* StatEvent);
	void EventStatFactoryInitialized(class AGameEvent_Soccar_TA* GameEvent);
	void EventReplicatedGoalScored(class AGameEvent_Soccar_TA* GameEvent, unsigned char ScoredOnTeam);
	void EventPlayerScored(class AGameEvent_Soccar_TA* GameEvent, class APRI_TA* Scorer);
	void EventMatchWinnerSet(class AGameEvent_Soccar_TA* GameEvent);
	void EventGameWinnerSet(class AGameEvent_Soccar_TA* GameEvent);
	void EventReplayDirectorSet(class AGameEvent_Soccar_TA* GameEvent);
	void EventEndGameCountDown(class AGameEvent_Soccar_TA* GameEvent, int TimeRemaining);
	void EventMatchEnded(class AGameEvent_Soccar_TA* GameEvent);
	void EventGameEnded(class AGameEvent_Soccar_TA* GameEvent);
	void EventOvertimeUpdated(class AGameEvent_Soccar_TA* GameEvent);
	void EventGameTimeUpdated(class AGameEvent_Soccar_TA* GameEvent);
	void EventGoalScored(class AGameEvent_Soccar_TA* GameEvent, class ABall_TA* Ball, class UGoal_TA* Goal, int ScoreIndex, int AssistIdx);
	void EventFirstBallHit(class AGameEvent_Soccar_TA* GameEvent);
	void EventBallRemoved(class AGameEvent_Soccar_TA* GameEvent, class ABall_TA* Ball);
	void EventBallAdded(class AGameEvent_Soccar_TA* GameEvent, class ABall_TA* Ball);
	void EventStartNewRound(class AGameEvent_Soccar_TA* GameEvent);
	void EventActiveRoundChanged(class AGameEvent_Soccar_TA* GameEvent);
};

// Class TAGame.GameEvent_Season_TA
// 0x0098 (0x0C58 - 0x0CF0)
class AGameEvent_Season_TA : public AGameEvent_Soccar_TA
{
public:
	int                                                PreMatchTime;                                     		// 0x0C58 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class USeason_TA*                                  Season;                                           		// 0x0C60 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FSeasonMatch                                Match;                                            		// 0x0C68 (0x001C) [0x0000000000002000] (CPF_Transient)
	class UProfile_TA*                                 Profile;                                          		// 0x0C88 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ATeam_TA*                                    HumanTeam;                                        		// 0x0C90 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ATeam_TA*                                    BotTeam;                                          		// 0x0C98 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                HumanMatchTeam;                                   		// 0x0CA0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                BotMatchTeam;                                     		// 0x0CA4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              SeasonIntroTime;                                  		// 0x0CA8 (0x0004) [0x0000000000000000]               
	unsigned long                                      bIsChampionShipGame : 1;                          		// 0x0CAC (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bIsFirstGameOfSeason : 1;                         		// 0x0CAC (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bLastGameOfRegularSeason : 1;                     		// 0x0CAC (0x0004) [0x0000000000000000] [0x00000004] 
	class USimilarSeasonLogos_TA*                      SimilarLogoGroups;                                		// 0x0CB0 (0x0008) [0x0000000000000000]               
	struct FString                                     TeamOverrides[0x2] ;                              		// 0x0CB8 (0x0020) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventWonChampionShip__Delegate;                 		// 0x0CD8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Season_TA");
		}

		return uClassPointer;
	};

	void BeginHighlightsReplay();
	void OnMatchWinnerSet();
	bool GiveExtraXP();
	bool AllowSplitScreenPlayer();
	void CheckTeamOverride(int TeamIdx, struct FSeasonTeam& TeamData);
	bool IsLastRegularGameOfSeason();
	bool IsFirstGameOfSeason();
	bool IsChampionshipGame();
	void StartGame();
	void SaveSeasonStats();
	bool ShouldSwapBotColors(class UProductAsset_Logo_TA* PlayerLogo, class UProductAsset_Logo_TA* BotLogo);
	class UProductAsset_Bot_TA* ChooseBotAsset(class AAIController_TA* Bot);
	void InitSeasonTeams();
	void OnAllTeamsCreated();
	void AssignCustomTeamSettings();
	class ATeam_TA* PickTeam(class AController* C);
	void ToggleDropTimers(unsigned long bEnableTimers);
	void PreloadBots();
	void OnInit();
	void InitGame(struct FString Options);
	void UpdateStats();
	void EventWonChampionShip(class AGameEvent_Season_TA* GameEvent);
};

// Class TAGame.GameInfo_TA
// 0x0068 (0x04D8 - 0x0540)
class AGameInfo_TA : public AGameInfoBase_TA
{
public:
	unsigned long                                      bShutdownQueued : 1;                              		// 0x04D8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bShuttingDown : 1;                                		// 0x04D8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	class AGameEvent_TA*                               CurrentGame;                                      		// 0x04E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FServerConnectionInfo                       ReplacementServerInfo;                            		// 0x04E8 (0x0040) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventGameInitialized__Delegate;                 		// 0x0528 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_TA");
		}

		return uClassPointer;
	};

	void RemoveBot(int Index);
	void SpawnDummyBot(struct FName BodyName);
	void PlayerResetTraining();
	void StartGameEvent(struct FGameEventData GameData);
	bool AllowPausing(class APlayerController* PC);
	class UGameMode_TA* GetGameMode();
	bool AtCapacity(unsigned long bSpectator);
	void HandleTimeDilationChanged(class AWorldInfo* WI);
	void RestartLevel();
	void NotifyClientsServerShutdown();
	void StartShutdown();
	void QueueShutdown(struct FString Reason);
	void ShutdownGame();
	struct FVector GetGoodSpawnPointNear(class AActor* A, struct FVector PossibleLoc);
	void RestartPlayer(class AController* NewPlayer);
	void GenericPlayerInitialization(class AController* C);
	void eventAddDefaultInventory(class APawn* P);
	void ChangeName(class AController* Other, struct FString S, unsigned long bNameChange);
	struct FString GetFakePlayerName(class AController* Other);
	void Logout(class AController* Exiting);
	class APlayerController* eventLogin(struct FString Portal, struct FString Options, struct FUniqueNetId UniqueId, struct FString& ErrorMessage);
	void eventPreLogin(struct FString Options, struct FString Address, struct FUniqueNetId UniqueId, unsigned long bSupportsAuth, struct FString& ErrorMessage);
	void eventInitGame(struct FString Options, struct FString& ErrorMessage);
	class UIOnlineGameHost_X* GetOnlineGameHost();
	void EventGameInitialized(class AGameInfo_TA* Game);
};

// Class TAGame.GameInfo_Soccar_TA
// 0x0010 (0x0540 - 0x0550)
class AGameInfo_Soccar_TA : public AGameInfo_TA
{
public:
	TArray<struct FGameEventData>                      GameEventArchetypes;                              		// 0x0540 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_Soccar_TA");
		}

		return uClassPointer;
	};

	bool HasMoreThanOneRemotePlayer();
	void ForceInactive();
	void KickAllPlayers(struct FString Reason);
	void RestartLevel();
	void RestartPlayer(class AController* aPlayer);
	bool PlayerCanRestart(class APlayerController* aPlayer);
	void HandleNewDedicatedServerForPlayers(class UConnectionInfoMessage_X* Message);
	void QueueShutdown(struct FString Reason);
	void RestartGameEvent();
	bool IsGameEventType(struct FString LaunchOption, class UObject* Archetype);
	void HandleMainEventDestroyed(class AGameEvent_TA* GameEvent);
	void OnCreateCurrentGame();
	void InitGameEvent(class AGameEvent_TA* GameEventArchetype, unsigned long bAddAllPlayers);
	void StartGameEvent(struct FGameEventData GameData);
	void StartGameEventFromLaunchOption(struct FString LaunchOption);
	void StartDefaultGameEvent();
	void eventPostLogin(class APlayerController* NewPlayer);
	class APlayerController* eventLogin(struct FString Portal, struct FString Options, struct FUniqueNetId UniqueId, struct FString& ErrorMessage);
	void eventPreLogin(struct FString Options, struct FString Address, struct FUniqueNetId UniqueId, unsigned long bSupportsAuth, struct FString& ErrorMessage);
	void eventPostBeginPlay();
};

// Class TAGame.GameInfo_Basketball_TA
// 0x0000 (0x0550 - 0x0550)
class AGameInfo_Basketball_TA : public AGameInfo_Soccar_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_Basketball_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeasonSave_TA
// 0x0010 (0x00C8 - 0x00D8)
class USeasonSave_TA : public USaveObject_TA
{
public:
	TArray<class USeason_TA*>                          Seasons;                                          		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeasonSave_TA");
		}

		return uClassPointer;
	};

	void __SeasonSave_TA__GetVersionDelegates_7DCF8A364B05BEE60038098C7A116452(class UObject* SaveObj);
	void __SeasonSave_TA__Reconcile_2793346049CFD19580E818AEA79C11B6(class USeason_TA* Season);
	class USaveObject_TA* Reconcile(class USaveObject_TA* Remote);
	void OnLoad();
	void GetVersionDelegates(TArray<struct FScriptDelegate>& VersionDelegates);
	class USeason_TA* GetLatestSeason();
};

// Class TAGame.Season_TA
// 0x0078 (0x0060 - 0x00D8)
class USeason_TA : public UObject
{
public:
	int                                                NumTeams;                                         		// 0x0060 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TeamSize;                                         		// 0x0064 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Difficulty;                                       		// 0x0068 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                NumRegularWeeks;                                  		// 0x006C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                NumPlayoffsWeeks;                                 		// 0x0070 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                NumPlayoffsTeams;                                 		// 0x0074 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FSeasonTeam>                         Teams;                                            		// 0x0078 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FSeasonPlayer>                       Players;                                          		// 0x0088 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FSeasonPlayerStat>                   PlayerStats;                                      		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                Year;                                             		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                CurrentWeek;                                      		// 0x00AC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FSeasonMatch>                        Matches;                                          		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventWeekSimulated__Delegate;                   		// 0x00C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Season_TA");
		}

		return uClassPointer;
	};

	void PrintRankings(TArray<struct FSeasonTeamRank>& Rankings);
	void SetDifficulty(int NewDifficulty);
	void SetBots(struct FString BotID0, struct FString BotName0, struct FString BotID1, struct FString BotName1, struct FString BotID2, struct FString BotName2);
	void BuildPlayoffsMatches();
	void SelectPlayoffsTeams();
	void SimulateWeek(unsigned long bForceHumansToWin);
	void SaveMatch(struct FSeasonMatch Match);
	bool GetMatch(int Team, int Week, unsigned long bReturnByes, struct FSeasonMatch& Match, int& MatchIdx);
	int SortTeamRank(struct FSeasonTeamRank A, struct FSeasonTeamRank B);
	void GetTeamRankings(int Week, TArray<struct FSeasonTeamRank>& Rankings);
	int GetWins(int Team, int Week);
	int GetTotalSeasonWeeks();
	bool IsFinished(int Week);
	int GetLastWeek();
	bool IsChampionship(int Week);
	bool IsPlayoffs(int Week);
	bool IsPostSeason(int Week);
	bool IsLastRegularSeason(int Week);
	bool IsRegularSeason(int Week);
	bool IsFirstGameOfSeason(int Week);
	void BuildBotTeams();
	void BuildMatches();
	void EventWeekSimulated(class USeason_TA* InSeason);
};

// Class TAGame.GameInfo_Breakout_TA
// 0x0000 (0x0550 - 0x0550)
class AGameInfo_Breakout_TA : public AGameInfo_Soccar_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_Breakout_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GameEvent_Tutorial_TA
// 0x0240 (0x0C58 - 0x0E98)
class AGameEvent_Tutorial_TA : public AGameEvent_Soccar_TA
{
public:
	struct FVector                                     TotalFieldExtent;                                 		// 0x0C58 (0x000C) [0x0000000000000002] (CPF_Const)   
	int                                                TeamNum;                                          		// 0x0C64 (0x0004) [0x0000000000000000]               
	int                                                BallGoalNum;                                      		// 0x0C68 (0x0004) [0x0000000000000000]               
	unsigned long                                      bOnlyScoreInBallGoalNum : 1;                      		// 0x0C6C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bRedoRound : 1;                                   		// 0x0C6C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bAllowSuperBoost : 1;                             		// 0x0C6C (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bDisplayedRedoPenaltyMessage : 1;                 		// 0x0C6C (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bShowBoostMeter : 1;                              		// 0x0C6C (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned char                                      Difficulty;                                       		// 0x0C70 (0x0001) [0x0000000000000000]               
	unsigned char                                      DebugRotationType;                                		// 0x0C71 (0x0001) [0x0000000000000000]               
	struct FDifficultyInfo                             DifficultyList[0x3] ;                             		// 0x0C78 (0x0078) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<int>                                        WaveIndexesLeft;                                  		// 0x0CF0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              GoalDepth;                                        		// 0x0D00 (0x0004) [0x0000000000000000]               
	int                                                GameEventRounds;                                  		// 0x0D04 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              EventStartTime;                                   		// 0x0D08 (0x0004) [0x0000000000000000]               
	struct FVector                                     BallInitialVelocity;                              		// 0x0D0C (0x000C) [0x0000000000000000]               
	int                                                SpawnIndexTypeOverride;                           		// 0x0D18 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class ACannon_TA*                                  Cannon;                                           		// 0x0D20 (0x0008) [0x0000000000000000]               
	int                                                WaveIndex;                                        		// 0x0D28 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                WaveSpawnCount;                                   		// 0x0D2C (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                RandomSpawnIndex;                                 		// 0x0D30 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UTutorial_TA*                                Tutorial;                                         		// 0x0D38 (0x0008) [0x0000000000000000]               
	struct FString                                     StartMessageArchetype;                            		// 0x0D40 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FVector                                     BallSpawnLocation;                                		// 0x0D50 (0x000C) [0x0000000000000000]               
	TArray<struct FCarSpawnData>                       CarSpawns;                                        		// 0x0D60 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                PointsScoredThisRound;                            		// 0x0D70 (0x0004) [0x0000000000000000]               
	int                                                BallSpawnCount;                                   		// 0x0D74 (0x0004) [0x0000000000000000]               
	float                                              BallBounceScale;                                  		// 0x0D78 (0x0004) [0x0000000000000000]               
	class ACannon_TA*                                  CannonArchetype;                                  		// 0x0D80 (0x0008) [0x0000000000000000]               
	class ADynamicSpawnPoint_TA*                       DynamicSpawnPoint;                                		// 0x0D88 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                CurrentDebugStepX;                                		// 0x0D90 (0x0004) [0x0000000000000000]               
	int                                                CurrentDebugStepY;                                		// 0x0D94 (0x0004) [0x0000000000000000]               
	int                                                CurrentDebugStepZ;                                		// 0x0D98 (0x0004) [0x0000000000000000]               
	int                                                RedoCount;                                        		// 0x0D9C (0x0004) [0x0000000000000000]               
	int                                                RedoTotal;                                        		// 0x0DA0 (0x0004) [0x0000000000000000]               
	class UGFxModal_X*                                 ResetModal;                                       		// 0x0DA8 (0x0008) [0x0000000000000000]               
	struct FFieldSpawnInfo                             BallSpawnInfo;                                    		// 0x0DB0 (0x003C) [0x0000000000000000]               
	struct FScriptDelegate                             __EventRoundFinished__Delegate;                   		// 0x0DF0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventVehicleSetup__Delegate;                    		// 0x0E08 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventScoreUpdated__Delegate;                    		// 0x0E20 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventDifficultyUpdated__Delegate;               		// 0x0E38 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventShowBoostMeterChanged__Delegate;           		// 0x0E50 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventUseActionsChanged__Delegate;               		// 0x0E68 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTutorialTipChanged__Delegate;              		// 0x0E80 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Tutorial_TA");
		}

		return uClassPointer;
	};

	void InitIntro();
	void OnLoadingMovieClosed();
	void StartTimers();
	void UpdateMVP();
	bool AllowDynamicCrowd();
	void SetTutorialTip(struct FString NewTip);
	void SetShowBoostMeter(unsigned long bShow);
	struct FName GetDesiredSoundState();
	struct FVector GetDebugSpawnLocation(struct FFieldSpawnInfo SpawnInfo);
	float GetStepLoc(int Steps, float TotalDist, unsigned long bIncrement, int& Out_CurrentStep);
	struct FVector GetDebugLocationInExtent(struct FVector Extent);
	void InitDebugSetup(class ACar_TA* Car);
	void SkipTutorial();
	void UpdateBotCount();
	void InitMutators();
	bool IsPrimaryPlayer(class ACar_TA* Car);
	bool IsPerfectRound();
	bool CanAwardPoints();
	void OnResetRoundCancel(class UGFxModal_X* Modal);
	void OnResetRoundConfirm(class UGFxModal_X* Modal);
	void ShowResetRoundMessage();
	void Destroyed();
	bool EndTutorial();
	bool StartTutorial(class APlayerController_TA* PC, struct FString TutorialName, class USequenceAction* KNode, unsigned long bSkipFadeIn);
	void CommitRedoRound();
	void RedoRound();
	bool CanRedoRound();
	void StartNewRound();
	void HandleTutorialComplete(class UTutorial_TA* InTutorial);
	void SaveLocalPlayerStats();
	class ATeam_TA* GetWinningTeam();
	void CleanupRoundActors();
	struct FVector DetermineBallInitialVelocity(struct FVector BallSpawnLoc, class ACar_TA* Car, struct FFieldSpawnInfo SpawnInfo);
	bool CanQueSaveReplay();
	void ResetBalls();
	struct FName GetScoreStatus(unsigned char InTeamNum);
	int GetScore();
	void StartRound();
	int GetGameEventRounds();
	int GetTotalRounds();
	void ResetRoundTime();
	void OnPlayerRestarted(class ACar_TA* PlayerCar);
	void ResetOrientation(class AController* Controller, struct FVector Loc, struct FRotator Rot);
	struct FVector GetBallInitialVelocity(struct FVector BallSpawnLoc, class ACar_TA* Car, struct FFieldSpawnInfo SpawnInfo);
	unsigned char GetTrainingType();
	struct FString GetDifficulty();
	struct FString GetTrainingName();
	void EndGame();
	class ATeam_TA* PickTeam(class AController* C);
	struct FVector GetRandomLocationInExtent(struct FVector Extent);
	bool Chance(int Chances);
	int GetOppositeTeamNum();
	struct FVector GetDirectionToGoal(int GoalNum);
	bool IsGameEventComplete();
	struct FVector ClampPointToExtent(struct FVector ExtentCenter, struct FVector Point, struct FVector Extent);
	struct FFieldSpawnInfo GetRandomBallSpawnInfo();
	struct FFieldSpawnInfo GetRandomPlayerSpawnInfo();
	struct FVector PredictInitialVelocity(struct FVector StartLoc, struct FVector EndLoc, float Z);
	class ABall_TA* GetGameBall();
	class ACar_TA* GetGamePawn();
	void ResetGameEvent();
	void CheckForReset();
	float GetGoalViewWidth(class UGoal_TA* Goal, struct FVector ViewerLoc);
	bool IsBallMovingTowardsGoal(class UGoal_TA* Goal, class ABall_TA* Ball, float MinVelocityForDestroy, float InGoalDepth);
	void SetGoalDepth();
	int GetShuffledSpawnIndex();
	struct FCarSpawnData GetCarSpawnData(class AController* Controller);
	void AddToCarSpawnData(class AController* Controller, struct FVector SpawnLocation, struct FRotator SpawnRotation);
	bool GetSpawnOrientation(class AController* ForPlayer, struct FVector& out_Location, struct FRotator& out_Rotation);
	struct FRotator GetCarSpawnRotation(struct FFieldSpawnInfo SpawnInfo, struct FVector CarSpawnLocation);
	struct FVector GetCarSpawnLocation(struct FFieldSpawnInfo SpawnInfo);
	void DestroyCannon();
	void SetCannonOrientation(struct FVector NewLocation, struct FRotator NewRotation);
	class ABall_TA* SpawnBall(struct FVector SpawnLoc, unsigned long bWake, unsigned long bSpawnCannon, struct FString BallArch);
	void InitBallEffects();
	void InitBallVelocity();
	struct FVector GetRandomGoalAimLocation(int InTeamNum, struct FVector BallLoc);
	struct FVector GetGoalExtent(class UGoal_TA* Goal);
	void SetBallVelocity(struct FVector InitialVelocity, class ABall_TA* Ball);
	struct FVector GetSpawnLocation(struct FFieldSpawnInfo SpawnInfo);
	struct FVector GetMaxFieldExtent(struct FFieldSpawnInfo SpawnInfo);
	void InitGameSetup(class ACar_TA* Car);
	bool ShouldAllowSuperBoost();
	void OnVehicleSetup(class ACar_TA* Car);
	void HandleVehicleSetup(class ACar_TA* Car);
	void InitCrowdManager();
	void HandleScoreUpdated(class ATeam_TA* Team);
	void SetDifficulty(int InDifficulty);
	void UpdateStats();
	void AddLocalPlayer(class APlayerController_TA* Player);
	void HandlePlayerResetTraining(class AGameEvent_TA* GameEvent);
	void OnInit();
	void EventTutorialTipChanged(class AGameEvent_Tutorial_TA* GameEvent, struct FString NewTip);
	void EventUseActionsChanged(class AGameEvent_Tutorial_TA* GameEvent);
	void EventShowBoostMeterChanged(class AGameEvent_Tutorial_TA* GameEvent);
	void EventDifficultyUpdated(class AGameEvent_Tutorial_TA* GameEvent);
	void EventScoreUpdated(class AGameEvent_Tutorial_TA* GameEvent);
	void EventVehicleSetup(class AGameEvent_Tutorial_TA* GameEvent, class ACar_TA* Car);
	void EventRoundFinished(class AGameEvent_Tutorial_TA* GameEvent);
};

// Class TAGame.GameEvent_Training_TA
// 0x0018 (0x0E98 - 0x0EB0)
class AGameEvent_Training_TA : public AGameEvent_Tutorial_TA
{
public:
	struct FScriptDelegate                             __EventTrainingCompleted__Delegate;               		// 0x0E98 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Training_TA");
		}

		return uClassPointer;
	};

	bool IsPerfectRound();
	void BeginHighlightsReplay();
	void EventTrainingCompleted(class AGameEvent_Training_TA* Training);
};

// Class TAGame.SaveData_TA
// 0x02A8 (0x0060 - 0x0308)
class USaveData_TA : public UObject
{
public:
	class USaveGameManager_TA*                         SaveManager;                                      		// 0x0060 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bFromPreviousSave : 1;                            		// 0x0068 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bShowLightShafts : 1;                             		// 0x0068 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bTranslucentArenaShaders : 1;                     		// 0x0068 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bVsync : 1;                                       		// 0x0068 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bShowWeatherFX : 1;                               		// 0x0068 (0x0004) [0x0000000000000002] [0x00000010] (CPF_Const)
	unsigned long                                      bColorBlind : 1;                                  		// 0x0068 (0x0004) [0x0000000000000002] [0x00000020] (CPF_Const)
	unsigned long                                      bEnableOnlineData : 1;                            		// 0x0068 (0x0004) [0x0000000000006000] [0x00000040] (CPF_Transient | CPF_Config)
	unsigned long                                      bUnloaded : 1;                                    		// 0x0068 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	float                                              MasterVolume;                                     		// 0x006C (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              SoundVolume;                                      		// 0x0070 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              MusicVolume;                                      		// 0x0074 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              AmbientVolume;                                    		// 0x0078 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              VoiceVolume;                                      		// 0x007C (0x0004) [0x0000000000000002] (CPF_Const)   
	unsigned char                                      OutputType;                                       		// 0x0080 (0x0001) [0x0000000000000002] (CPF_Const)   
	unsigned char                                      ControllerSoundMode;                              		// 0x0081 (0x0001) [0x0000000000000002] (CPF_Const)   
	unsigned char                                      VoiceFilter;                                      		// 0x0082 (0x0001) [0x0000000000000002] (CPF_Const)   
	unsigned char                                      ChatFilter;                                       		// 0x0083 (0x0001) [0x0000000000000002] (CPF_Const)   
	float                                              ControllerVolume;                                 		// 0x0084 (0x0004) [0x0000000000000002] (CPF_Const)   
	TArray<int>                                        UnlockedProducts;                                 		// 0x0088 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<int>                                        MatchCompleteCarBodies;                           		// 0x0098 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<unsigned long long>                         NewProductIDs;                                    		// 0x00A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long long>                         UnseenContainerProducts;                          		// 0x00B8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	unsigned long long                                 LastUnlockDisplayId;                              		// 0x00C8 (0x0008) [0x0000000000000002] (CPF_Const)   
	TArray<int>                                        NewProducts;                                      		// 0x00D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long long>                         NewOnlineProducts;                                		// 0x00E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FUISavedKeyValue>                    UISavedValues;                                    		// 0x00F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FPlaylistSkillData>                  SkillData;                                        		// 0x0100 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FString                                     Resolution;                                       		// 0x0110 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	int                                                WindowMode;                                       		// 0x0120 (0x0004) [0x0000000000000002] (CPF_Const)   
	TArray<struct FOptionsValue>                       VideoOptions;                                     		// 0x0128 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	int                                                MaxFPS;                                           		// 0x0138 (0x0004) [0x0000000000000000]               
	float                                              SafeZoneRatio;                                    		// 0x013C (0x0004) [0x0000000000000000]               
	float                                              UIScale;                                          		// 0x0140 (0x0004) [0x0000000000000002] (CPF_Const)   
	class UMusicPlayerSave_TA*                         MusicPlayerSave;                                  		// 0x0148 (0x0008) [0x0000000000000000]               
	class UAchievementSave_TA*                         AchievementData;                                  		// 0x0150 (0x0008) [0x0000000000000000]               
	class UBlogTileCache_TA*                           BlogTileCache;                                    		// 0x0158 (0x0008) [0x0000000000000000]               
	struct FName                                       SelectedFreeplayMap;                              		// 0x0160 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FString                                     RankedReconnectBeacon;                            		// 0x0168 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	unsigned long long                                 RankedReconnectEpochTime;                         		// 0x0178 (0x0008) [0x0000000000000002] (CPF_Const)   
	TArray<class UOnlineProduct_TA*>                   OnlineProducts;                                   		// 0x0180 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UOnlineProductStoreSet_TA*                   OnlineProductSet;                                 		// 0x0190 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UProductTransactions_TA*                     ProductTransactions;                              		// 0x0198 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	TArray<class UProfile_TA*>                         Profiles;                                         		// 0x01A0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<float>                                      XPGainPercentage;                                 		// 0x01B0 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	int                                                CurrentLevel;                                     		// 0x01C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                SchematicResources;                               		// 0x01C4 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                SaveDataVersion;                                  		// 0x01C8 (0x0004) [0x0000000000000000]               
	class UObjectProvider*                             SaveObjectProvider;                               		// 0x01D0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	TArray<class USaveObject_TA*>                      SaveObjects;                                      		// 0x01D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                SaveTick;                                         		// 0x01E8 (0x0004) [0x0000000000000000]               
	class UAsyncTask*                                  SyncOnlineStorageTask;                            		// 0x01F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineStorageSyncManager_TA*                StorageSyncManager;                               		// 0x01F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UEOSOnlineStorageUploader_TA*                EOSStorageUploader;                               		// 0x0200 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineProductExpirationHelper_TA*           ExpirationHelper;                                 		// 0x0208 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UCachedUnlockedProducts_TA*                  CachedUnlockedProducts;                           		// 0x0210 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineDLCProductCache_TA*                   OnlineDLCProductCache;                            		// 0x0218 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class UOnlineProduct_TA*>                   NewProductNotificationQueue;                      		// 0x0220 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventOnlineXPInitialized__Delegate;             		// 0x0230 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventNewOnlineProduct__Delegate;                		// 0x0248 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventRemovedOnlineProduct__Delegate;            		// 0x0260 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventOnlineProductsSynced__Delegate;            		// 0x0278 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventOnlineSavedDataSynced__Delegate;           		// 0x0290 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSchematicResourcesChanged__Delegate;       		// 0x02A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventRedeemedOnlineProducts__Delegate;          		// 0x02C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventReceivedUnseenContainerProduct__Delegate;  		// 0x02D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnlineProducts__ChangeNotify;                   		// 0x02F0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SaveData_TA");
		}

		return uClassPointer;
	};

	void __SaveData_TA__HandleDataLoaded_D5AC98AB46F8E4B2F154F997F67E6F2A(class UClass* T);
	void __SaveData_TA__HandleDataLoaded_F06C00DD4974FBF654A392B8BF7A3E7F(class UOnlineProduct_TA* Op);
	void __SaveData_TA__HandleProfileSet_11ED974F459852E53FEE54B607BA1020(class USaveObject_TA* S);
	void __SaveData_TA__ValidateLoadouts_0FB00991433C391517ACB28D3E5B1860(class UProfile_TA* P);
	bool __SaveData_TA__GetNewProducts_44EBBB504702D3781F8A169FD37F01BA(class UProduct_TA* P);
	bool __SaveData_TA__GiveXPDrops_22C761D34C3777131B21BBBE812BB676(struct FOnlineXPReward Drop);
	bool __SaveData_TA__GetOnlineProductQuantity_35021CE64CD3ED22FA0D46A4B9E343DC(struct FProfileProduct PP);
	bool __SaveData_TA__GetOnlineProductQuantity_E20E3A2A45A3711321FF06A0C0889E86(struct FProfileProduct P);
	int __SaveData_TA__GetUniqueSeriesIDs_32B2A9C946C70546E1ACB7BD04D7BD6F(class UOnlineProduct_TA* P);
	class USaveObject_TA* __SaveData_TA__InstantiateSaveObjects_9709D2A5427D8D3A4C4CD8B3E5C96DBF(class UClass* T);
	bool __SaveData_TA__InstantiateSaveObjects_25C6B0614F1941AA13FC9F8BFC9F575C(class UClass* T);
	bool __SaveData_TA__GetEquippedOnlineProducts_1EB6924F45AD1BA022E6E3B5C54BE646(unsigned long long Id);
	void __OnlineProducts__ChangeNotifyFunc();
	TArray<unsigned long long> GetEquippedInstanceIDs();
	TArray<class UOnlineProduct_TA*> GetEquippedOnlineProducts();
	void FilterEquippedOnlineProducts(TArray<class UOnlineProduct_TA*>& OutOnlineProducts);
	class UOnlinePlayer_TA* GetOnlinePlayer();
	void HandleGameplaySettingsSync(class UGameplaySettingsSave_TA* GameplaySave);
	void UpdateVideoSettings(class UVideoSettingsSave_TA* Settings);
	void HandleVideoSettingsSync(class UVideoSettingsSave_TA* VideoSave);
	void UpdateSaveObjectReference(class USaveObject_TA* NewObject);
	TArray<class UClass*> InstantiateSaveObjects();
	void SortByTradeHold(unsigned long bIsAscending, TArray<class UOnlineProduct_TA*>& OutItemList);
	TArray<int> GetUniqueSeriesIDs();
	class UOnlineProduct_TA* FindOnlineProductWithNoAttributesFromID(int InProductID, TArray<class UClass*>& AllowedAttributes);
	class UOnlineProduct_TA* FindFirstOnlineProduct(int InProductID);
	TArray<class UOnlineProduct_TA*> GetUniqueOnlineProducts();
	TArray<class UOnlineProduct_TA*> GetAllOnlineProducts();
	int GetOnlineProductQuantity(class UOnlineProduct_TA* Product, unsigned long bIgnoreEquipped);
	TArray<struct FOnlineProductData> InstanceReplicatedOnlineProductData(TArray<unsigned long long>& InstanceIDs);
	bool OwnsProductID(int InProductID);
	TArray<class UOnlineProduct_TA*> GetOnlineProducts(int InProductID);
	void RemoveNewProducts(unsigned long long InstanceID);
	void TickNewProductNotificationQueue(float _);
	int NewProductsCompare(class UOnlineProduct_TA* L, class UOnlineProduct_TA* R);
	void HandleOnlineProductsReceived(class URPC_ProductsPlayerGet_TA* RPC);
	void FetchOnlineProducts();
	void ClearOfflineProducts();
	void ClearOnlineProducts();
	void SetSchematicResouces(int Total);
	void HandleSchematicResourcesReceived(class URPC_SchematicResourcesGet_TA* RPC);
	void SyncSchematicResources();
	void SyncOnlineProducts();
	void GiveXPDrops(TArray<struct FOnlineXPReward>& XPDrops);
	void GiveAchievementDrop(struct FOnlineReward AchievementReward);
	void GiveChallengeDrop(struct FOnlineReward ChallengeReward);
	void GiveRewardDrop(struct FOnlineXPReward Drop);
	void HandleRewardDropNotification(class UPsyNetService_RewardDropReceived_TA* Service);
	void HandleOnlineXPInitialized(class URPC_XPRequest_TA* RPC);
	bool CanUseOnlineData(struct FUniqueNetId PlayerID);
	void MarkReplayEditorOpened();
	void MarkCreditsViewed();
	float GetUnlockProgress();
	float GetGameModeUnlockProgress();
	float GetItemUnlockProgress();
	void UpdateGameProgress();
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void ValidateLastUnlockDisplayId();
	bool IsProductMoreNew(class UOnlineProduct_TA* InProduct, unsigned long long InstanceID, unsigned long long AddedTimestamp);
	void SetOnlineDropDisplayed(unsigned long long ItemID, unsigned long long AddedTime);
	void SetItemDropDisplayed(unsigned long long ItemID, unsigned long long ItemAddedTime);
	bool OnNewOnlineProductNoNotify(class UOnlineProduct_TA* OnlineProduct);
	void OnNewOnlineProduct(class UOnlineProduct_TA* OnlineProduct);
	class UOnlineProduct_TA* RemoveOnlineProductIdNoNotify(unsigned long long InstanceID);
	void RemoveOnlineProductId(unsigned long long InstanceID);
	bool GiveOnlineProductHelper(class UOnlineProduct_TA* OnlineProduct);
	void GiveOnlineProduct(class UOnlineProduct_TA* OnlineProduct);
	void GiveOnlineProductNoNotify(class UOnlineProduct_TA* OnlineProduct);
	class UOnlineProduct_TA* GiveUnseenContainerProductData(struct FOnlineProductData NewProductData);
	class UOnlineProduct_TA* GiveOnlineProductDataNoNotify(struct FOnlineProductData NewProductData);
	class UOnlineProduct_TA* GiveOnlineProductData(struct FOnlineProductData NewProductData);
	TArray<class UOnlineProduct_TA*> GiveOnlineProductDatas(TArray<struct FOnlineProductData> NewProductDatas);
	TArray<class UProduct_TA*> GetNewProducts();
	class UProduct_TA* GetProductFromOnlineID(unsigned long long OnlineProductId);
	int GetProductIDFromOnlineID(unsigned long long OnlineID);
	TArray<class UOnlineProduct_TA*> GetOnlineProductsForSlot(class UProductSlot_TA* Slot);
	bool HasAnyOnlineProductsForSlot(class UProductSlot_TA* Slot);
	bool HasAnyOnlineProductOfID(int ProductID);
	class UOnlineProduct_TA* GetFirstOnlineProduct(int ProductID);
	class UOnlineProduct_TA* GetOnlineProduct(unsigned long long OnlineID);
	struct FProductHashID GetNewestProductId();
	bool IsProductOwned(struct FProductHashID HashID);
	bool IsInstanceOwned(unsigned long long InstanceID);
	void ValidateLoadoutsWithProduct(unsigned long long OnlineID);
	void ValidateLoadouts();
	void ValidateProfiles();
	void RemoveAllProfiles();
	struct FString GetProfileName(int LocalId);
	class UProfile_TA* GetProfileForByLocalID(int LocalId);
	class UProfile_TA* GetProfileForPlayer(struct FUniqueNetId PlayerID);
	void CacheLocalProducts();
	void HandleOnlineGameInitialized();
	void SetUncappedFramerate(unsigned long Value);
	void SetUseLensFlares(unsigned long Value);
	void SetUseVsync(unsigned long Value);
	void SetUseTranslucentArenaShaders(unsigned long Value);
	void HandleProfileSet(class ULocalPlayer_TA* Player);
	void UploadSaveData();
	void Save();
	void HandleMapChange(struct FString MapName);
	void SetOnlineDirty(class USaveObject_TA* SaveObject);
	void SetLocalDirty(class USaveObject_TA* SaveObject);
	void HandleSaveObjectDirty(class USaveObject_TA* SaveObject);
	void OnUnLoadSaveObject(class USaveObject_TA* SaveObject);
	void OnLoadSaveObject(class USaveObject_TA* SaveObject);
	void Unload();
	void HandleContentConfigApplied(class UContentConfig_TA* ContentConfig);
	void FixupLocalProducts();
	void HandleDataLoaded(class USaveGameManager_TA* Manager, class UError* Error);
	void eventConstruct();
	void EventReceivedUnseenContainerProduct(class USaveData_TA* Data, class UOnlineProduct_TA* ContainerProduct);
	void EventRedeemedOnlineProducts(class USaveData_TA* Data, TArray<class UOnlineProduct_TA*>& RedeemedOnlineProducts);
	void EventSchematicResourcesChanged(class USaveData_TA* Data);
	void EventOnlineSavedDataSynced(class USaveData_TA* Data);
	void EventOnlineProductsSynced(class USaveData_TA* Data);
	void EventRemovedOnlineProduct(class USaveData_TA* Data, class UOnlineProduct_TA* RemovedProduct);
	void EventNewOnlineProduct(class USaveData_TA* Data, class UOnlineProduct_TA* OnlineProduct);
	void EventOnlineXPInitialized(class USaveData_TA* Data);
};

// Class TAGame.ProfileLoadoutSave_TA
// 0x00C0 (0x00C8 - 0x0188)
class UProfileLoadoutSave_TA : public USaveObject_TA
{
public:
	TArray<class ULoadoutSet_TA*>                      LoadoutSets;                                      		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class ULoadoutSet_TA*                              EquippedLoadoutSet;                               		// 0x00D8 (0x0008) [0x0000000000000000]               
	struct FName                                       PlayerTitle;                                      		// 0x00E0 (0x0008) [0x0000000000000000]               
	int                                                PreviewTeamIndex;                                 		// 0x00E8 (0x0004) [0x0000000000000000]               
	unsigned long long                                 MusicStingerInstanceID;                           		// 0x00F0 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventEquippedLoadoutChanged__Delegate;          		// 0x00F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventProductEquipped__Delegate;                 		// 0x0110 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventOnlineProductEquipped__Delegate;           		// 0x0128 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPreviewTeamChanged__Delegate;              		// 0x0140 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __PlayerTitle__ChangeNotify;                      		// 0x0158 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __MusicStingerInstanceID__ChangeNotify;           		// 0x0170 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProfileLoadoutSave_TA");
		}

		return uClassPointer;
	};

	void __MusicStingerInstanceID__ChangeNotifyFunc();
	void __PlayerTitle__ChangeNotifyFunc();
	TArray<unsigned long long> GetAllLoadoutOnlineProducts();
	TArray<int> GetAllLoadoutProducts();
	void HandleOnlineProductEquipped(class ULoadoutSet_TA* LoadoutSet, unsigned long long InstanceID);
	void HandleProductEquipped(class ULoadoutSet_TA* LoadoutSet, int ProductID);
	void OnEquippedLoadOutChanged();
	void HandleEquippedLoadoutChanged(class ULoadoutSet_TA* InLoadoutSet, class ULoadout_TA* InLoadout);
	void HandleLoadoutChanged(class ULoadoutSet_TA* LoadoutSet, class ULoadout_TA* Loadout);
	void SetPreviewTeam(int TeamIndex);
	void RenamePreset(int Index, struct FString NewName);
	void EquipLoadoutSet(class ULoadoutSet_TA* InLoadoutSet);
	struct FString GetNextPresetName(TArray<class ULoadoutSet_TA*>& InLoadoutSets);
	void DeletePreset(int Index);
	void CreatePreset(class UProfile_TA* Profile);
	void SetLoadoutSets(TArray<class ULoadoutSet_TA*>& InLoadoutSets);
	TArray<class ULoadoutSet_TA*> GetLoadoutSets();
	class ULoadoutSet_TA* GetLoadoutSet(int SetIndex);
	class ULoadout_TA* GetLoadout(int TeamIndex, int SetIndex);
	void OnLoad();
	void OnCreate();
	void EventPreviewTeamChanged(class UProfileLoadoutSave_TA* InLoadoutSave);
	void EventOnlineProductEquipped(unsigned long long InstanceID);
	void EventProductEquipped(int ProductID);
	void EventEquippedLoadoutChanged(class ULoadout_TA* InLoadout);
};

// Class TAGame.LoadoutSet_TA
// 0x0068 (0x0060 - 0x00C8)
class ULoadoutSet_TA : public UObject
{
public:
	struct FString                                     LoadoutSetName;                                   		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class ULoadout_TA*                                 Loadouts[0x2] ;                                   		// 0x0070 (0x0010) [0x0000000000000000]               
	struct FScriptDelegate                             __EventChanged__Delegate;                         		// 0x0080 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventProductEquipped__Delegate;                 		// 0x0098 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventOnlineProductEquipped__Delegate;           		// 0x00B0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.LoadoutSet_TA");
		}

		return uClassPointer;
	};

	void __LoadoutSet_TA__AddListeners_09C574C047AD6280062A95AE6562F384(unsigned long long InstanceID);
	void __LoadoutSet_TA__AddListeners_7AE3B962442CEDCE672ADEA5EB5B4806(int ProductID);
	void __LoadoutSet_TA__AddListeners_7BB0D1C14B311053EB0E7FADC65551ED(class ULoadout_TA* Loadout);
	void EnsureConsistentBodies();
	void Validate();
	bool HasOnlineProduct(unsigned long long InstanceID);
	class UProductAsset_Body_TA* LoadBodyAsset();
	int GetBodyProductID();
	bool HasProducts();
	bool HasProduct(int ProductID);
	void AddListeners();
	void CopyFromLoadoutSet(class ULoadoutSet_TA* LoadoutSetToCopy);
	void InitLoadouts(class UProfile_TA* InProfile);
	class ULoadoutSet_TA* CreateEmptyLoadoutSet(class UObject* InOuter, struct FString InName);
	class ULoadoutSet_TA* CreateLoadoutSet(class UProfile_TA* InProfile, struct FString InName);
	void EventOnlineProductEquipped(class ULoadoutSet_TA* LoadoutSet, unsigned long long InstanceID);
	void EventProductEquipped(class ULoadoutSet_TA* LoadoutSet, int ProductID);
	void EventChanged(class ULoadoutSet_TA* LoadoutSet, class ULoadout_TA* Loadout);
};

// Class TAGame.Loadout_TA
// 0x00C8 (0x0060 - 0x0128)
class ULoadout_TA : public UObject
{
public:
	TArray<int>                                        Products;                                         		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long long>                         OnlineProducts;                                   		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FLoadoutTeamPaint                           TeamPaint;                                        		// 0x0080 (0x0010) [0x0000000000000000]               
	struct FLoadoutTeamPaint                           TeamPaints[0x2] ;                                 		// 0x0090 (0x0020) [0x0000000000000002] (CPF_Const)   
	struct FName                                       PlayerTitle;                                      		// 0x00B0 (0x0008) [0x0000000000000000]               
	int                                                GaragePreviewTeam;                                		// 0x00B8 (0x0004) [0x0000000000000000]               
	class UProfile_TA*                                 Profile;                                          		// 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventChanged__Delegate;                         		// 0x00C8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPreviewTeamChanged__Delegate;              		// 0x00E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventProductEquipped__Delegate;                 		// 0x00F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventOnlineProductEquipped__Delegate;           		// 0x0110 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Loadout_TA");
		}

		return uClassPointer;
	};

	bool __Loadout_TA__ApplyCompatibleAttributeProducts_E6EF2746480BC40396201D8CE4D12D53(class UProduct_TA* B);
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	class UProductAsset_Body_TA* LoadBodyAsset();
	int GetBodyProductID();
	bool IsProductEquipped(class UProductSlot_TA* Slot, int ProductID);
	void SetGaragePreviewTeam(int PreviewTeam);
	void SetData(struct FLoadoutData& Data);
	struct FLoadoutData GetData();
	void ApplyCompatibleAttributeProducts(int ProductID, struct FLoadoutData& Data);
	void ApplyRequiredProducts(int ProductID, struct FLoadoutData& Data);
	void ValidateForcedProducts(int TeamIndex, struct FLoadoutData& Data);
	bool IsCustomFinishDisabled(class UProductAsset_Body_TA* BodyAsset, class UProductAsset_Skin_TA* SkinAsset);
	bool IsTeamFinishDisabled(class UProductAsset_Body_TA* BodyAsset, class UProductAsset_Skin_TA* SkinAsset);
	void ValidateProductID(class UProfile_TA* ForProfile, struct FString SlotName, int& ProductID);
	void StaticValidate(class UProfile_TA* ForProfile, struct FLoadoutTeamPaint& Paint, TArray<int>& OutProducts, TArray<unsigned long long>& OutOnlineProducts);
	void Validate();
	struct FLoadoutData EquipProduct(unsigned long long OnlineID, class ULoadout_TA* ForLoadout, int SlotIndex);
	void InitProfile(class UProfile_TA* InProfile);
	void Init(class UProfile_TA* InProfile, int TeamIndex);
	void EventOnlineProductEquipped(unsigned long long InstanceID);
	void EventProductEquipped(int ProductID);
	void EventPreviewTeamChanged(class ULoadout_TA* Loadout);
	void EventChanged(class ULoadout_TA* Loadout);
};

// Class TAGame.ProfileStatsSave_TA
// 0x0038 (0x00C8 - 0x0100)
class UProfileStatsSave_TA : public USaveObject_TA
{
public:
	TArray<struct FStatValue>                          StatValues;                                       		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FProductStat>                        ProductStats;                                     		// 0x00D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventStatValuesChanged__Delegate;               		// 0x00E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProfileStatsSave_TA");
		}

		return uClassPointer;
	};

	void OnStatValuesChanged();
	void AddProductStatValue(int ProductID, int delta);
	int GetProductStatValue(int ProductID);
	int GetStatValue(unsigned char StatType, struct FName Id);
	void IncrementStatValue(unsigned char StatType, struct FName Id, int Amount);
	void SetStatValue(unsigned char StatType, struct FName Id, int Value);
	void EventStatValuesChanged(class UProfileStatsSave_TA* StatsSave);
};

// Class TAGame.PlayerInput_TA
// 0x0050 (0x0478 - 0x04C8)
class UPlayerInput_TA : public UPlayerInput_X
{
public:
	float                                              GamepadLookScale;                                 		// 0x0478 (0x0004) [0x0000000000004000] (CPF_Config)  
	float                                              aTargetSelect;                                    		// 0x047C (0x0004) [0x0000000000000004] (CPF_Input)   
	float                                              TargetSelectDeadZone;                             		// 0x0480 (0x0004) [0x0000000000000000]               
	unsigned long                                      bTargetSelected : 1;                              		// 0x0484 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bIsUsingMouseSteer : 1;                           		// 0x0484 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bIsUsingMouseThrottle : 1;                        		// 0x0484 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	unsigned long                                      bIsUsingPositiveMouseAirYaw : 1;                  		// 0x0484 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	unsigned long                                      bIsUsingNegativeMouseAirYaw : 1;                  		// 0x0484 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	unsigned long                                      bIsUsingPositiveMouseAirPitch : 1;                		// 0x0484 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	unsigned long                                      bIsUsingNegativeMouseAirPitch : 1;                		// 0x0484 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	unsigned long                                      bIsUsingPositiveMouseAirRoll : 1;                 		// 0x0484 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	unsigned long                                      bIsUsingNegativeMouseAirRoll : 1;                 		// 0x0484 (0x0004) [0x0000000000002000] [0x00000100] (CPF_Transient)
	unsigned long                                      bAllowMouseSwivel : 1;                            		// 0x0484 (0x0004) [0x0000000000004002] [0x00000200] (CPF_Const | CPF_Config)
	float                                              aPositiveYaw;                                     		// 0x0488 (0x0004) [0x0000000000002004] (CPF_Input | CPF_Transient)
	float                                              aNegativeYaw;                                     		// 0x048C (0x0004) [0x0000000000002004] (CPF_Input | CPF_Transient)
	float                                              aPositivePitch;                                   		// 0x0490 (0x0004) [0x0000000000002004] (CPF_Input | CPF_Transient)
	float                                              aNegativePitch;                                   		// 0x0494 (0x0004) [0x0000000000002004] (CPF_Input | CPF_Transient)
	float                                              aPositiveRoll;                                    		// 0x0498 (0x0004) [0x0000000000002004] (CPF_Input | CPF_Transient)
	float                                              aNegativeRoll;                                    		// 0x049C (0x0004) [0x0000000000002004] (CPF_Input | CPF_Transient)
	float                                              aLookRoll;                                        		// 0x04A0 (0x0004) [0x0000000000002004] (CPF_Input | CPF_Transient)
	unsigned char                                      bRoll;                                            		// 0x04A4 (0x0001) [0x0000000000002004] (CPF_Input | CPF_Transient)
	unsigned char                                      bPitch;                                           		// 0x04A5 (0x0001) [0x0000000000002004] (CPF_Input | CPF_Transient)
	float                                              aLookDown;                                        		// 0x04A8 (0x0004) [0x0000000000000004] (CPF_Input)   
	float                                              aTurnRight;                                       		// 0x04AC (0x0004) [0x0000000000000004] (CPF_Input)   
	float                                              aTurnLeft;                                        		// 0x04B0 (0x0004) [0x0000000000000004] (CPF_Input)   
	float                                              aMouseForward;                                    		// 0x04B4 (0x0004) [0x0000000000000004] (CPF_Input)   
	float                                              aMouseStrafe;                                     		// 0x04B8 (0x0004) [0x0000000000000004] (CPF_Input)   
	float                                              aDodgeForward;                                    		// 0x04BC (0x0004) [0x0000000000000004] (CPF_Input)   
	class UProfile_TA*                                 Profile;                                          		// 0x04C0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerInput_TA");
		}

		return uClassPointer;
	};

	void __PlayerInput_TA__Construct_367593B24A7B4B7D35284698F43666CC(class UPlayerInput_X* _);
	void __PlayerInput_TA__Construct_D537355041D0727CAF098493E540F13A(class UPlayerInput_X* _);
	bool ShowVoiceChat();
	TArray<struct FBindingAction> GetDefaultActions();
	void UpdateTargetSelect(class APlayerController_TA* PC);
	struct FName GetKeyForAction(struct FName Action, unsigned long bGamepad);
	struct FString GetUIKeyForAction(struct FName Action, unsigned long bGamepad);
	bool IsUsingMouseInput(struct FName Action, struct FName Key);
	void RemoveBindingsFromArray(struct FName Category, TArray<struct FPlayerBinding>& OutBindings);
	void RemoveBindings(struct FName Category);
	bool IsKeyPressed(struct FName Key);
	void eventPlayerInput(float DeltaTime);
	void BuildBindings(TArray<struct FPlayerBinding>& PC, TArray<struct FPlayerBinding>& Gamepad);
	void UpdateControlPreset();
	void HandleProfileControlsSave(class UProfileControlsSave_TA* ControlsSave);
	void OnActiveBindingsChanged();
	void HandleSetBindingsToUserBindings(class UPlayerInput_X* PlayerInput);
	void HandleGameplaySettingsLoaded(class UGameplaySettingsSave_TA* GameplaySettingsSave);
	void HandleProfileGamepadSave(class UProfileGamepadSave_TA* GamepadSave);
	void HandleProfilePCSave(class UProfilePCSave_TA* ProfilePCSave);
	void InitFromProfile(class UProfile_TA* InProfile);
	void ShutdownInputSystem();
	void eventConstruct();
};

// Class TAGame.ShopsManager_TA
// 0x00A8 (0x0060 - 0x0108)
class UShopsManager_TA : public UObject
{
public:
	class UShopsService_TA*                            ServiceArchetype;                                 		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UShopsService_TA*                            Service;                                          		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                ActiveShopID;                                     		// 0x0070 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventShopItemTextureLoaded__Delegate;           		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnGetAllShopsResult__Delegate;                  		// 0x0090 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnGetCatalogueResult__Delegate;                 		// 0x00A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnGetCrateShopResult__Delegate;                 		// 0x00C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnPurchaseResultSuccess__Delegate;              		// 0x00D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnFailed__Delegate;                             		// 0x00F0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ShopsManager_TA");
		}

		return uClassPointer;
	};

	class ULocalPlayer_X* GetPlayer();
	void HandlePurchaseSuccess(TArray<struct FOnlineProductData> PurchasedProducts, TArray<struct FCurrency> PurchasedCurrencies);
	class UAsyncTask* Purchase(int CostID, int ShopID, int DiscountID, int Count, struct FScriptDelegate SuccessCallback, struct FScriptDelegate FailedCallback);
	class UAsyncTask* GetCrateShop(int CrateID, struct FScriptDelegate Callback, struct FScriptDelegate FailedCallback);
	class UAsyncTask* GetShopCatalogue(int ShopID, struct FScriptDelegate Callback, struct FScriptDelegate FailedCallback);
	class UAsyncTask* GetAllShops(struct FScriptDelegate Callback, struct FScriptDelegate FailedCallback);
	void InitServiceProvider();
	void Init();
	void OnFailed(class UError* Error);
	void OnPurchaseResultSuccess(TArray<struct FOnlineProductData> PurchasedProducts, TArray<struct FCurrency> PurchasedCurrency);
	void OnGetCrateShopResult(TArray<struct FShopItem> Catalogue, int ShopID);
	void OnGetCatalogueResult(TArray<struct FShopItem> Catalogue);
	void OnGetAllShopsResult(TArray<struct FShopData> Data);
	void EventShopItemTextureLoaded(int ShopID, int ShopItemIndex, class UTexture* LoadedTexture);
};

// Class TAGame.__AchievementManager_TA__HandleTradeInComplete_CCED1E1643DB1A3B31BD4DAE574DC053
// 0x0001 (0x0060 - 0x0061)
class U__AchievementManager_TA__HandleTradeInComplete_CCED1E1643DB1A3B31BD4DAE574DC053 : public UObject
{
public:
	unsigned char                                      PrevQuality;                                      		// 0x0060 (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__AchievementManager_TA__HandleTradeInComplete_CCED1E1643DB1A3B31BD4DAE574DC053");
		}

		return uClassPointer;
	};

	bool __AchievementManager_TA__HandleTradeInComplete_CCED1E1643DB1A3B31BD4DAE574DC053(class UOnlineProduct_TA* P);
};

// Class TAGame.GFxData_ProductTradeIn_TA
// 0x0068 (0x0098 - 0x0100)
class UGFxData_ProductTradeIn_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FTradeIn>                            TradeIns;                                         		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UProductTransactions_TA*                     ProductTransactions;                              		// 0x00A8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UGFxModal_X*                                 ModalProcessing;                                  		// 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     InvalidProductString;                             		// 0x00B8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     NotEnoughProductsSelected;                        		// 0x00C8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	int                                                NumProductsRequiredForTradeIn;                    		// 0x00D8 (0x0004) [0x0000000000000002] (CPF_Const)   
	class UProductsConfig_TA*                          ProductsConfig;                                   		// 0x00E0 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventTradeInComplete__Delegate;                 		// 0x00E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductTradeIn_TA");
		}

		return uClassPointer;
	};

	bool __GFxData_ProductTradeIn_TA__HasBlueprintTradeIns_63D89C1C4A1758493516958DF44A8D35(class UOnlineProduct_TA* P);
	bool HasBlueprintTradeIns();
	class UProfile_TA* GetProfile();
	void OnTradeInFailed();
	void OnTradeInComplete();
	void HandleTradeInComplete(class URPC_ProductsTradeIn_TA* RPC);
	void PerformTradeIn();
	void ClearTradeIns();
	void CancelTradeIn();
	void UpdateTradeInQuantity(struct FProductHashID HashID, int DesiredQuantity);
	void SetTransactionQuantity(struct FProductHashID HashID, int Quantity);
	bool IsProcessingTrade();
	void HandleProductsConfigChanged();
	void HandleProfileSet(class ULocalPlayer_TA* InLocalPlayer);
	void eventOnRemoved();
	void eventOnShellSet();
	void EventTradeInComplete(class UGFxData_ProductTradeIn_TA* GFxData, TArray<class UOnlineProduct_TA*> Given, TArray<class UOnlineProduct_TA*> Received);
};

// Class TAGame.RPC_ProductsTradePlayerStatus_TA
// 0x0090 (0x00E8 - 0x0178)
class URPC_ProductsTradePlayerStatus_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FGuid                                       TradeId;                                          		// 0x0130 (0x0010) [0x0000000000000000]               
	unsigned long                                      bIsComplete : 1;                                  		// 0x0140 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	TArray<struct FOnlineProductData>                  ProductData;                                      		// 0x0148 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FCurrency>                           CurrencyData;                                     		// 0x0158 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FCurrency>                           WalletCurrencies;                                 		// 0x0168 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_ProductsTradePlayerStatus_TA");
		}

		return uClassPointer;
	};

	bool HasCompleted();
	class URPC_ProductsTradePlayerStatus_TA* SetTradeId(struct FGuid InTradeId);
	class URPC_ProductsTradePlayerStatus_TA* SetLocalPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.OnlineGameParty_TA
// 0x01D8 (0x0560 - 0x0738)
class UOnlineGameParty_TA : public UOnlineGameParty_X
{
public:
	TArray<struct FPartyMemberLoadout>                 PartyLoadouts;                                    		// 0x0560 (0x0010) [0x0000000000482000] (CPF_Transient | CPF_Component | CPF_NeedCtorLink)
	int                                                MaxPartyMessages;                                 		// 0x0570 (0x0004) [0x0000000000000000]               
	struct FString                                     PlayerJoinPartyString;                            		// 0x0578 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     PlayerLeavePartyString;                           		// 0x0588 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     LocalPlayerLeavePartyString;                      		// 0x0598 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     PlayerNewLeaderPartyString;                       		// 0x05A8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UProductAssetCache_TA*                       AssetCache;                                       		// 0x05B8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	TArray<unsigned long long>                         PendingLocalProductOffers;                        		// 0x05C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FProductHashID>                      PendingArchivedProductOffers;                     		// 0x05D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FProductHashID>                      PendingFavoritedProductOffers;                    		// 0x05E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long long>                         ProductsToVerify;                                 		// 0x05F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              VerifyProductsDelay;                              		// 0x0600 (0x0004) [0x0000000000004000] (CPF_Config)  
	TArray<unsigned long long>                         RemovedProductsDuringVerify;                      		// 0x0608 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long                                      bIsVerifyingProducts : 1;                         		// 0x0618 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FGuid                                       PendingTradeId;                                   		// 0x061C (0x0010) [0x0000000000000000]               
	struct FScriptDelegate                             __EventPartyMemberLoadoutChange__Delegate;        		// 0x0630 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPartyMemberProfileChanged__Delegate;       		// 0x0648 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPartyMemberLoadoutRemoved__Delegate;       		// 0x0660 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTradeProductUpdate__Delegate;              		// 0x0678 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTradeCurrencyUpdate__Delegate;             		// 0x0690 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTradeVerify__Delegate;                     		// 0x06A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTradeVerifyTimeOut__Delegate;              		// 0x06C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTradePlayerError__Delegate;                		// 0x06D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTradePlayerStart__Delegate;                		// 0x06F0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTradePlayerComplete__Delegate;             		// 0x0708 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPartyMemberLeftMatch__Delegate;            		// 0x0720 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineGameParty_TA");
		}

		return uClassPointer;
	};

	void __OnlineGameParty_TA__OnInit_291ABBCA46CF72E0C26766918910557D(struct FUniqueNetId _);
	void __OnlineGameParty_TA__OnInit_9202C8B94FB972C2413B9EB5D70AD827(class UOnlineMessageComponent_X* _, class UPartyMessage_Chat_TA* M);
	void __OnlineGameParty_TA__HandleProfileSet_64CF626846AAF4DAEC1811BC43E43F87(class APlayerControllerBase_TA* NewController);
	void __OnlineGameParty_TA__HandleProfileSet_6D8959174D0F476D7D463386DDF07A9C(class UAccountSettingsComponent_TA* Settings);
	void __OnlineGameParty_TA__HandleProfileSet_59263725404F6A67E6200C91FB311080(class UProfileLoadoutSave_TA* LoadoutSave);
	void __OnlineGameParty_TA__HandleVerifiedProduct_B9802A224390CB37F9932AA3B8A209BE(struct FOnlineProductData P);
	struct FCurrency __OnlineGameParty_TA__HandleTradePlayerComplete_21C4DE684249EA35D2EC61B38DC01A09(struct FCurrency C);
	class UError* GetKickedFromPartyError(unsigned char Reason);
	void CheckForJoiningPlayerKick(struct FUniqueNetId PlayerID);
	class UError* CheckForPlayerInviteError(struct FUniqueNetId PlayerID);
	class UError* GetJoinPartyError(struct FActiveLobbyInfo& LobbyInfo);
	void HandleCrossPlatformChatStateChanged();
	bool CanBroadcastMatchmakingMessages();
	bool AllowSplitScreenPlayer(int ControllerId, class UError*& OutError);
	bool CanPlayersCrossTextChat(int SenderIndex);
	int FindLocalPartyPlayer();
	void HandleChatMessage(struct FUniqueNetId PlayerID, struct FString Text);
	void SendPartyLobbyMessage(struct FString Message);
	void HandleTradeClose(class UOnlineGameParty_X* PartyObject, unsigned long bWasCanceled);
	void HandleTradePlayerComplete(class URPC_ProductsTradePlayerStatus_TA* RPC);
	void CheckTradeStatus();
	void HandleStartTradePlayerComplete(class URPC_ProductsTradePlayer_TA* RPC);
	void RestoreArchivedAndFavoritedPendingProductOffers();
	void StoreArchivedAndFavoritedPendingProductOffers();
	void SendTradeToBackEnd(TArray<unsigned long long>& LocalProductOffers, TArray<unsigned long long>& RemoteProductOffers, TArray<struct FCurrency>& LocalCurrencyOffers, TArray<struct FCurrency>& RemoteCurrencyOffers);
	void HandleVerifyTrade(class URPC_ProductsLoadoutGet_TA* RPC);
	void HandleVerifyTradeTimeOut();
	void SendVerifyTradeToBackEnd(TArray<unsigned long long> RemoteProductOffers);
	void SetNotReadyToLockTrade(int PartyMemberIndex);
	void HandleTradeCurrencyUpdate(class UOnlineMessageComponent_X* Component, class UObject* Message);
	bool IsProductValidAfterVerify(struct FOnlineProductData& OPD);
	void HandleVerifiedProduct(class URPC_ProductsLoadoutGet_TA* RPC);
	void VerifyAddedProducts();
	void HandleTradeProductUpdate(class UOnlineMessageComponent_X* Component, class UObject* Message);
	void SetPartyMessageHandlerTradeProductUpdate(unsigned long bAddHandler);
	void TradeCurrencyUpdate(struct FCurrency CurrencyData);
	void TradeProductUpdate(struct FOnlineProductData ProductData, unsigned long bAddProduct);
	bool IsProcessingTrade();
	bool CanAcceptTrade();
	void UpdateOnlineProducts(struct FPartyMemberLoadout& Loadout);
	void HandleCrossplayEnabledChanged(class UAccountSettingsComponent_TA* AccountSettings);
	void UpdateAssetCache();
	void HandleGameEventFinished(class AGameEvent_TA* GameEvent);
	bool ClearServersForPostGameRankedMatch();
	void HandlePlayerRemoved(class AGameEvent_TA* InGameEvent, class APRI_TA* InPRI);
	bool WantsToFollowTheLeaderOutOfGame();
	int BuildMatchmakingRestrictions();
	void HandlePrimaryPlayerSet(class APlayerController_Menu_TA* PC);
	void RequestRejoinPartyInfo();
	void BroadcastPlayerLoadout(struct FPartyMemberLoadout MemberLoadout);
	TArray<struct FOnlineProductData> GetProfileProducts(class UProfile_TA* Profile);
	struct FPartyMemberLoadout CreatePartyMemberLoadout(class UProfile_TA* Profile, class ULocalPlayer_TA* Player);
	void BroadcastLocalPlayerLoadoutsDelayed();
	void BroadcastLocalPlayerLoadouts();
	void BroadcastAllLocalPlayers();
	void HandlePlayerRejoined(class UOnlineMessageComponent_X* Component, class UObject* Message);
	void UpdatePartyMemberLoadout(int LoadoutIndex, TArray<struct FPartyMemberLoadout>& MemberLoadouts, TArray<struct FOnlineProductData>& NewProducts);
	void HandleProfileChangeMessage(class UOnlineMessageComponent_X* Component, class UObject* Message);
	bool IsPrimaryMemberForPlayer(struct FUniqueNetId PrimaryPlayerId, struct FUniqueNetId UserId);
	void HandleLoadoutMessage(class UOnlineMessageComponent_X* Component, class UObject* Message);
	void HandlePreviewTeamChange(class UProfileLoadoutSave_TA* LoadoutSave);
	void BroadcastPendingLocalPlayerLoadouts();
	void BroadcastPartyInfo();
	void HandleLoadoutChange(class ULoadout_TA* Loadout);
	void BroadcastProfileProductChanges();
	void HandleProfileChange(class ULocalPlayer_TA* Player);
	void RemovePartyMemberByLocalPlayer(class ULocalPlayer* Player);
	void OnPartyLeaderChanged();
	void OnNewLobby();
	void RemovePartyMemberByIDWithNotify(struct FUniqueNetId MemberId);
	void RemovePartyMemberByID(struct FUniqueNetId MemberId);
	bool LeaveParty(struct FString Reason);
	void HandleLocalPlayerLeave(class ULocalPlayer* Player);
	void OnEditExistingPartyMember(int MemberIdx);
	void OnAddNewPartyMember(int MemberIdx);
	void RefreshLoadouts(int MemberIdx);
	void RefreshLoadoutForPlayer(class ULocalPlayer_TA* LocalPlayer);
	void ClearPartyChat();
	void AddPartyServiceLobbyMessage(struct FString Message);
	void AddPlayerPartyServiceLobbyMessage(struct FPartyMember Member, struct FString Message);
	int LocalPlayerSort(struct FPartyMemberLoadout Left, struct FPartyMemberLoadout Right);
	void SetLoadout(class ULocalPlayer* Player, struct FPartyMemberLoadout& Loadout);
	void HandleProfileSet(class ULocalPlayer_TA* P);
	void OnInit();
	void EventPartyMemberLeftMatch(struct FUniqueNetId PartyMemberID);
	void EventTradePlayerComplete(class UOnlineGameParty_TA* PartyObject, class URPC_ProductsTradePlayerStatus_TA* RPC);
	void EventTradePlayerStart(class UOnlineGameParty_TA* P, struct FGuid TradeId, TArray<unsigned long long> Give, TArray<unsigned long long> Receive);
	void EventTradePlayerError(class UOnlineGameParty_TA* PartyObject, class UError* Error, struct FGuid& TradeId);
	void EventTradeVerifyTimeOut(class UOnlineGameParty_X* PartyObject);
	void EventTradeVerify(class UOnlineGameParty_X* PartyObject, TArray<class UOnlineProduct_TA*> ProductData);
	void EventTradeCurrencyUpdate(class UOnlineGameParty_TA* PartyObject, struct FCurrency CurrencyData);
	void EventTradeProductUpdate(class UOnlineGameParty_TA* PartyObject, struct FOnlineProductData ProductData, unsigned long bAddProduct);
	void EventPartyMemberLoadoutRemoved();
	void EventPartyMemberProfileChanged(struct FUniqueNetId PlayerID);
	void EventPartyMemberLoadoutChange(struct FUniqueNetId PlayerID);
};

// Class TAGame.__AchievementManager_TA__IsPlayingWithClubmates_DE9996614C29D8E39AADA1B3812E72B7
// 0x0008 (0x0060 - 0x0068)
class U__AchievementManager_TA__IsPlayingWithClubmates_DE9996614C29D8E39AADA1B3812E72B7 : public UObject
{
public:
	class APRI_TA*                                     PRI;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__AchievementManager_TA__IsPlayingWithClubmates_DE9996614C29D8E39AADA1B3812E72B7");
		}

		return uClassPointer;
	};

	bool __AchievementManager_TA__IsPlayingWithClubmates_DE9996614C29D8E39AADA1B3812E72B7(class APRI_TA* P);
};

// Class TAGame.MatchType_TA
// 0x003C (0x0060 - 0x009C)
class UMatchType_TA : public UObject
{
public:
	class AGameEvent_TA*                               GameEvent;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
	TArray<struct FComponentTemplate>                  Components;                                       		// 0x0068 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long                                      bPreAssignedTeams : 1;                            		// 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	int                                                ForfeitVoteWaitGameTime;                          		// 0x007C (0x0004) [0x0000000000000000]               
	int                                                WaitForPlayersTime;                               		// 0x0080 (0x0004) [0x0000000000000000]               
	float                                              WaitingForPlayersStartTime;                       		// 0x0084 (0x0004) [0x0000000000000000]               
	struct FName                                       MatchTypeName;                                    		// 0x0088 (0x0008) [0x0000000000000000]               
	float                                              LobbyTime;                                        		// 0x0090 (0x0004) [0x0000000000000000]               
	float                                              LobbyIntroTime;                                   		// 0x0094 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                LobbyEndCountdown;                                		// 0x0098 (0x0004) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchType_TA");
		}

		return uClassPointer;
	};

	class ATeam_TA* PickTeamFromReservations(class AController* C);
	void OnInitGameEvent();
	bool ShouldKickOnMigrate();
	bool ChooseTeam(int TeamIndex, class APlayerController_TA* Player);
	bool CanRestartPlayer(class AController* NewPlayer);
	bool ShouldAutoSelectTeam(class AController* NewPlayer);
	bool AutoSpectate(class AController* NewPlayer);
	bool ShouldShowWaitingForPlayersTime();
	bool ShouldSubmitMatchComplete();
	bool CanCheckForBannedPlayers();
	bool CanCheckForForfeitSeries();
	bool UseCustomMatchSettings();
	bool CanIncreaseMaxTeamSize();
	bool IsOnlineMultiplayer();
	bool ShouldSetGameOwner();
	bool CanCheckForForfeit();
	bool ShouldCancelMatch();
	bool ShouldStartMatch();
	bool AllowMatchAdmin();
	bool RecordPlayedMap();
	bool AllowSpectators();
	bool CanStayAsParty();
	bool CanRematchVote();
	bool CanUpdateStats();
	bool GiveExtraXP();
	struct FName GetMatchTypeName();
	void OnStartWaitingForPlayers();
	void OnPlayerAddedToTeam();
	bool CanSkipPreMatchLobby();
	bool ShowPreMatchLobby();
	class ATeam_TA* PickTeam(class AController* C);
	int GetMaxTeamSize();
	int GetWaitTimeRemaining();
	class UOnlineGameLanServer_X* GetOnlineGameLanServer();
	class UOnlineGameDedicatedServer_TA* GetOnlineGameDedicatedServer();
	class UOnlineGame_Base_X* GetOnlineGame();
	bool PlayerNeedsCar(class AController* Player);
	bool AllPlayersHaveACar();
	void InitCustomMatchSettings(struct FCustomMatchSettings Settings);
	void Init(class AGameEvent_TA* InGameEvent, struct FString Options);
};

// Class TAGame.MatchType_Public_TA
// 0x000C (0x009C - 0x00A8)
class UMatchType_Public_TA : public UMatchType_TA
{
public:
	class UOnlineGameReservations_X*                   Reservations;                                     		// 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchType_Public_TA");
		}

		return uClassPointer;
	};

	bool __MatchType_Public_TA__TeamsHaveEnoughHumans_A235061B4426518DEB3F99AE6C9955BB(class ATeam_TA* Team);
	bool CanRestartPlayer(class AController* NewPlayer);
	bool ShouldAutoSelectTeam(class AController* NewPlayer);
	bool CanCheckForBannedPlayers();
	bool ShouldSubmitMatchComplete();
	bool IsOnlineMultiplayer();
	bool CanUpdateStats();
	bool CanStayAsParty();
	bool CanRematchVote();
	bool CanSkipPreMatchLobby();
	class ATeam_TA* PickTeamFromReservations(class AController* C);
	bool IsWaitingForPlayersTimeExpired();
	bool CanCheckForForfeit();
	bool TeamsHaveEnoughHumans();
	bool ShouldCancelMatch();
	bool ShouldStartMatch();
	void OnStartWaitingForPlayers();
	bool GiveExtraXP();
};

// Class TAGame.MatchType_PublicRanked_TA
// 0x0000 (0x00A8 - 0x00A8)
class UMatchType_PublicRanked_TA : public UMatchType_Public_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchType_PublicRanked_TA");
		}

		return uClassPointer;
	};

	bool ShouldCancelMatch();
	bool ShouldStartMatch();
};

// Class TAGame.MatchType_Tournament_TA
// 0x0028 (0x00A8 - 0x00D0)
class UMatchType_Tournament_TA : public UMatchType_PublicRanked_TA
{
public:
	class UOnlineGameDedicatedServer_TA*               DedicatedServer;                                  		// 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UOnlineGameTourServer_TA*                    TourServer;                                       		// 0x00B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourServerConfig_TA*                        TournamentServerConfig;                           		// 0x00B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMatchSeries_TA*                             MatchSeries;                                      		// 0x00C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       PlaylistName;                                     		// 0x00C8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchType_Tournament_TA");
		}

		return uClassPointer;
	};

	bool __MatchType_Tournament_TA__CanSkipPreMatchLobby_5D288C3B4EBBAB5F6BB646B2BBC09D77(class ATeam_TA* T);
	bool CanCheckForBannedPlayers();
	bool UseCustomMatchSettings();
	bool ShouldSubmitMatchComplete();
	bool CanCancelMatch();
	bool CanRematchVote();
	bool ShouldKickOnMigrate();
	bool CanSkipPreMatchLobby();
	bool ShowPreMatchLobby();
	bool IsFirstGameInMatch();
	bool IsBotOnlyTeam(class ATeam_TA* Team);
	bool HasBotTeams();
	bool ShouldShowWaitingForPlayersTime();
	bool CanCheckForForfeitSeries();
	bool CanCheckForForfeit();
	bool ShouldCancelMatch();
	bool ShouldStartMatch();
	int GetMaxTeamSize();
	bool PlayerHasTeam(class AController* Player);
	bool PlayerNeedsCar(class AController* Player);
	bool AutoSpectate(class AController* NewPlayer);
	bool CanRestartPlayer(class AController* NewPlayer);
	class ATeam_TA* PickTeam(class AController* C);
	bool ShouldAutoSelectTeam(class AController* NewPlayer);
	void OnStartWaitingForPlayers();
	void OnInitGameEvent();
};

// Class TAGame.MatchType_AutoTournament_TA
// 0x0008 (0x00D0 - 0x00D8)
class UMatchType_AutoTournament_TA : public UMatchType_Tournament_TA
{
public:
	class UAutoTourConfig_TA*                          AutoTourConfig;                                   		// 0x00D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchType_AutoTournament_TA");
		}

		return uClassPointer;
	};

	bool ShouldSubmitMatchComplete();
	void ForcePartyUp(class AGameEvent_Soccar_TA* InGameEvent);
	void OnInitGameEvent();
	bool ShouldStartMatch();
};

// Class TAGame.__AchievementManager_TA__HasItemQualityEquipped_468FF288431C5D1C2DFC1A8434956F51
// 0x0001 (0x0060 - 0x0061)
class U__AchievementManager_TA__HasItemQualityEquipped_468FF288431C5D1C2DFC1A8434956F51 : public UObject
{
public:
	unsigned char                                      Quality;                                          		// 0x0060 (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__AchievementManager_TA__HasItemQualityEquipped_468FF288431C5D1C2DFC1A8434956F51");
		}

		return uClassPointer;
	};

	bool __AchievementManager_TA__HasItemQualityEquipped_468FF288431C5D1C2DFC1A8434956F51(class UOnlineProduct_TA* P);
};

// Class TAGame.MapPrefsSave_TA
// 0x0030 (0x00C8 - 0x00F8)
class UMapPrefsSave_TA : public USaveObject_TA
{
public:
	TArray<struct FPlaylistMapPrefs>                   MapPrefs;                                         		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FName                                       SelectedFreeplayMap;                              		// 0x00D8 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventUsedAllMapVotes__Delegate;                 		// 0x00E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MapPrefsSave_TA");
		}

		return uClassPointer;
	};

	void ClearRemovedMapPrefs(struct FName PlaylistId, TArray<class UMapData_TA*> PlaylistMaps);
	void RecordMapPrefsMetrics();
	void SetMapPrefs(struct FPlaylistMapPrefs Prefs, unsigned long bUsedAllVotes);
	struct FPlaylistMapPrefs GetMapPrefs(struct FName Playlist);
	void EventUsedAllMapVotes(class UMapPrefsSave_TA* MapPrefsSave);
};

// Class TAGame.GameEvent_Breakout_TA
// 0x0020 (0x0C58 - 0x0C78)
class AGameEvent_Breakout_TA : public AGameEvent_Soccar_TA
{
public:
	unsigned long                                      bOnlyResetScoredOnTeam : 1;                       		// 0x0C58 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bResetOvertime : 1;                               		// 0x0C58 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned char                                      LastScoredOnTeam;                                 		// 0x0C5C (0x0001) [0x0000000000000000]               
	struct FScriptDelegate                             __EventPlatformDamaged__Delegate;                 		// 0x0C60 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Breakout_TA");
		}

		return uClassPointer;
	};

	void SavePreReplayState();
	void RestorePreReplayState();
	void HandleDamageStateChanged(class ABreakOutActor_Platform_TA* Platform, struct FBreakoutDamageState InState);
	void HandlePlatformDamaged(class ABreakOutActor_Platform_TA* Platform, class APRI_TA* PRI, class ABall_TA* Ball);
	void HandleGoalScored(class AGameEvent_Soccar_TA* GameEvent, class ABall_TA* Ball, class UGoal_TA* Goal, int ScoreIndex, int AssistIndex);
	void ResetAllBreakoutMeshes();
	bool ShouldResetPlatform(class ABreakOutActor_Platform_TA* BOM);
	void eventPostBeginPlay();
	void EventPlatformDamaged(class ABreakOutActor_Platform_TA* Platform, class APRI_TA* PRI, class ABall_TA* Ball);
};

// Class TAGame.OnlinePlayer_TA
// 0x00F0 (0x0258 - 0x0348)
class UOnlinePlayer_TA : public UOnlinePlayer_X
{
public:
	class UAchievementManager_TA*                      AchievementManagerArchetype;                      		// 0x0258 (0x0008) [0x0000000000000000]               
	class UAchievementManager_TA*                      AchievementManager;                               		// 0x0260 (0x0008) [0x0000000000000000]               
	class UNotificationManager_TA*                     NotificationManager;                              		// 0x0268 (0x0008) [0x0000000000000000]               
	class UPlayerProgressionManager_TA*                PlayerProgressionManager;                         		// 0x0270 (0x0008) [0x0000000000000000]               
	class UPlayerProgressionManager_TA*                PlayerProgressionManagerArchetype;                		// 0x0278 (0x0008) [0x0000000000000000]               
	class UFirstTimeExperienceManager_TA*              FirstTimeManagerArchetype;                        		// 0x0280 (0x0008) [0x0000000000000000]               
	class UFirstTimeExperienceManager_TA*              FTEManager;                                       		// 0x0288 (0x0008) [0x0000000000000000]               
	class UStatusTriggerManager_TA*                    TriggerManager;                                   		// 0x0290 (0x0008) [0x0000000000000000]               
	class UEOSMetrics_X*                               EOSMetricHeartbeat;                               		// 0x0298 (0x0008) [0x0000000000000000]               
	class UCrumbTrails_TA*                             CrumbTrailArchetype;                              		// 0x02A0 (0x0008) [0x0000000000000000]               
	class UCrumbTrails_TA*                             CrumbsMgr;                                        		// 0x02A8 (0x0008) [0x0000000000000000]               
	class UChallengeManager_TA*                        ChallengeManager;                                 		// 0x02B0 (0x0008) [0x0000000000000000]               
	class UWallet_TA*                                  WalletArchetype;                                  		// 0x02B8 (0x0008) [0x0000000000000000]               
	class UWallet_TA*                                  WalletCNArchetype;                                		// 0x02C0 (0x0008) [0x0000000000000000]               
	class UWallet_TA*                                  Wallet;                                           		// 0x02C8 (0x0008) [0x0000000000000000]               
	class UShopsManager_TA*                            ShopsManagerArchetype;                            		// 0x02D0 (0x0008) [0x0000000000000000]               
	class UShopsManager_TA*                            ShopsManager;                                     		// 0x02D8 (0x0008) [0x0000000000000000]               
	class UChatHistory_TA*                             ChatHistory;                                      		// 0x02E0 (0x0008) [0x0000000000000000]               
	class UOnlinePlayerMTX_TA*                         MTX;                                              		// 0x02E8 (0x0008) [0x0000000000000000]               
	class UObjectProvider*                             RewardDrops;                                      		// 0x02F0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UAccountSettingsComponent_TA*                AccountSettings;                                  		// 0x02F8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FUniqueNetId                                StayAsPartyLeaderID;                              		// 0x0300 (0x0048) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlinePlayer_TA");
		}

		return uClassPointer;
	};

	void __OnlinePlayer_TA__InitPlayer_45A03266473477DA398BAD9415B23529(struct FString MapName);
	void __PsyNetPresence__ChangeNotifyFunc();
	bool IsTutorialActive();
	void GetPlayersLikesDislikes(class UGameSettingPlaylist_X* Playlist, TArray<struct FName>& PlayerLikes, TArray<struct FName>& PlayerDislikes);
	void HandleReceivedController(class UPlayer* PlayerRef);
	void InitPlayer();
	void eventConstruct();
};

// Class TAGame.FirstTimeExperienceManager_TA
// 0x00F0 (0x0060 - 0x0150)
class UFirstTimeExperienceManager_TA : public UObject
{
public:
	unsigned char                                      Versioning;                                       		// 0x0060 (0x0001) [0x0000000000000000]               
	TArray<struct FFTEGroup>                           FTEGroups;                                        		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FFTELevelData>                       FTELevelInfo;                                     		// 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UFirstTimeExperienceRedefinition_TA*         FTERedefine;                                      		// 0x0088 (0x0008) [0x0000000000000000]               
	struct FFTEGroup                                   CurrentActiveGroup;                               		// 0x0090 (0x0048) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                CurrentCheckpointIndex;                           		// 0x00D8 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FName                                       CurrentCheckpoint;                                		// 0x00DC (0x0008) [0x0000000000002000] (CPF_Transient)
	class UFirstTimeExperienceSave_TA*                 FTESave;                                          		// 0x00E8 (0x0008) [0x0000000000000000]               
	class UPlayerLegacyStatusSave_TA*                  LegacySave;                                       		// 0x00F0 (0x0008) [0x0000000000000000]               
	TArray<struct FFTEChallengeInfo>                   ChallengeCompleteInfo;                            		// 0x00F8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventFTEChanged__Delegate;                      		// 0x0108 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventFTECheckpointCompleted__Delegate;          		// 0x0120 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventFTEGroupCompleted__Delegate;               		// 0x0138 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FirstTimeExperienceManager_TA");
		}

		return uClassPointer;
	};

	bool __FirstTimeExperienceManager_TA__SetupTriggers_79D955E44CD9A8D50B7AD687D5714F8A(struct FFTEGroup H);
	bool __FirstTimeExperienceManager_TA__SetupTriggers_EEBC03F541A8CE220A9DF4A9333C8B60(struct FFTEGroup G);
	bool __FirstTimeExperienceManager_TA__VerifyVersioning_0F3A1CE54140049FCE4383915FAD7906(struct FCompletedFTEInfo F);
	bool __FirstTimeExperienceManager_TA__UpdateToCurrentVersion_7A367287433A807AE6B872AC4AE21D53(struct FCompletedFTEInfo P);
	void DebugPrintLevelInfo();
	void DebugPrint();
	void DebugPrintGroups();
	class UFirstTimeExperienceMetrics_TA* GetMetrics();
	void DebugCompleteActiveCheckpoint(unsigned long bIsTentativeCompletion);
	void DebugCompleteCheckpoint(struct FName GroupName, struct FName CheckpointName);
	void DebugSetCheckpoint(struct FName GroupName, struct FName CheckpointName);
	struct FFTELevelData GetFTELevelData(struct FString InLevelId);
	bool HasOtherFTEGroupBlockers(struct FName GroupName);
	bool IsActive();
	void ClearGroup();
	int GetGroupVersion(struct FName GroupName);
	void CompleteGroup(struct FName GroupName, int GroupVersion);
	void CompleteActiveGroup();
	void CompleteActiveCheckpoint(struct FName InCheckpoint);
	void CompleteCheckpoint(struct FName GroupName, struct FName CheckpointName, unsigned long bAutoCompleted);
	void HandlePsyNetLogin();
	void SendChallengeInfo(struct FName InGroupName, struct FName InCheckpointName);
	void TentativeCompleteActiveCheckpoint(struct FName InCheckpoint);
	void SetUserType(unsigned char UserType);
	bool IsGroupForUserType(int GroupIndex);
	bool GetValidatedGroup(struct FName GroupName, struct FFTEGroup& ValidGroup);
	bool TryStartGroup(struct FName GroupName, unsigned long bIgnoreCompletion);
	void InitFromSave();
	void UpdateToCurrentVersion();
	void CompleteEntireGroup(struct FFTEGroup Group);
	void VerifyVersioning();
	void SetupTrigger(struct FFTEGroup Group);
	void SetupTriggers();
	void HandleFTESaveAdded(class UFirstTimeExperienceSave_TA* InFTESave);
	void OnUserTypeChanged();
	void HandleLegacySaveAdded(class UPlayerLegacyStatusSave_TA* InLegacySave);
	void HandleRedifinitionChange();
	void Init(class ULocalPlayer_TA* LP);
	void EventFTEGroupCompleted(struct FName GroupName);
	void EventFTECheckpointCompleted(struct FName GroupName, struct FName CheckpointName, int GroupVersion, unsigned long bAutoComplete);
	void EventFTEChanged(class UFirstTimeExperienceManager_TA* FTEManager, unsigned long bIsActive, struct FName GroupName, struct FName CheckpointName);
};

// Class TAGame.CarDistanceTracker_TA
// 0x0018 (0x008C - 0x00A4)
class UCarDistanceTracker_TA : public UTickableStateObject_X
{
public:
	struct FVector                                     LastCarLocation;                                  		// 0x0090 (0x000C) [0x0000000000000000]               
	float                                              TotalDriveDistanceKM;                             		// 0x009C (0x0004) [0x0000000000000000]               
	float                                              CurrentDriveDistanceKM;                           		// 0x00A0 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarDistanceTracker_TA");
		}

		return uClassPointer;
	};

	float ConsumeCurrentDriveDistance();
	float ConvertUnrealToKM(float Distance);
	void eventTick(float DeltaTime);
	void HandlePawnTypeChanged(class APRI_TA* PRI);
	void eventConstruct();
};

// Class TAGame.RandomItemsDroppedEvent_TA
// 0x0000 (0x0060 - 0x0060)
class URandomItemsDroppedEvent_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RandomItemsDroppedEvent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.VersionHelper_TA
// 0x0030 (0x0060 - 0x0090)
class UVersionHelper_TA : public UObject
{
public:
	struct FScriptDelegate                             __VersionDelegate__Delegate;                      		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __VersionChangedDelegate__Delegate;               		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.VersionHelper_TA");
		}

		return uClassPointer;
	};

	void Update(class UObject* VersionObject, struct FScriptDelegate VersionChangedCallback, int VersionMax, TArray<struct FScriptDelegate>& VersionDelegates, int& Version);
	void VersionChangedDelegate();
	void VersionDelegate(class UObject* VersionObject);
};

// Class TAGame.ReconcileUtil_TA
// 0x0000 (0x0060 - 0x0060)
class UReconcileUtil_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ReconcileUtil_TA");
		}

		return uClassPointer;
	};

	void ReconcileUniqueArrayName(TArray<struct FName>& Destination, TArray<struct FName>& Source);
	void ReconcileUniqueArrayString(TArray<struct FString>& Destination, TArray<struct FString>& Source);
	void ReconcileQMax(unsigned long long& Left, unsigned long long& Right);
	void ReconcileMax(int& Left, int& Right);
	void ReconcileFMax(float& Left, float& Right);
};

// Class TAGame.ActivityFeedManager_TA
// 0x0000 (0x0060 - 0x0060)
class UActivityFeedManager_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ActivityFeedManager_TA");
		}

		return uClassPointer;
	};

	void __ActivityFeedManager_TA__Construct_ECF7A1534FF9F75131AE22823CF9DC43(class UAchievementManager_TA* AM);
	TArray<struct FString> GetFriendsPlayedAgainst(class APRI_TA* OwnerPRI, class AGameEvent_TA* GameEvent);
	void CheckFriendsPlayedAgainst(class APRI_TA* OwnerPRI, class AGameEvent_Soccar_TA* GameEvent);
	void HandleMatchWinnerSet(class AGameEvent_Soccar_TA* GameEvent);
	void HandleChampionshipAmountChanged(class UAchievementManager_TA* Manager, int Wins);
	void HandleRegularSeasonAmountChanged(class UAchievementManager_TA* Manager, int Amount);
	void HandleNewMVPScore(class UAchievementManager_TA* Manager, int Score);
	void HandleGameEventAmountWon(class UAchievementManager_TA* Manager, int GamesWon);
	void HandleShotAmountBlocked(class UAchievementManager_TA* Manager, int bLocked);
	void HandleGoalAmountScored(class UAchievementManager_TA* Manager, int Score);
	void HandleDistanceDriven(class UAchievementManager_TA* Manager, float Distance);
	void PostActivtyFeedSingleString(unsigned char ActivityFeedID, struct FString ReplaceString);
	void PostActivityFeedMessage(unsigned char ActivityFeedID, TArray<struct FString> StringReplaceList);
	void eventConstruct();
};

// Class TAGame.AdManager_TA
// 0x0050 (0x0060 - 0x00B0)
class UAdManager_TA : public UObject
{
public:
	unsigned long long                                 CacheDuration;                                    		// 0x0060 (0x0008) [0x0000000000000000]               
	TArray<struct FCachedAdImageData>                  CachedAdImages;                                   		// 0x0068 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FBillboardData>                      BillboardZoneMapping;                             		// 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FBillboardUpdateRequestData>         BillboardMeshUpdateRequests;                      		// 0x0088 (0x0010) [0x0000000000482000] (CPF_Transient | CPF_Component | CPF_NeedCtorLink)
	class UOnlineImageDownloaderWeb*                   ImageDownloader;                                  		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                CurrentAdIndex;                                   		// 0x00A0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class URPC_AdsGet_TA*                              CurrentRPC;                                       		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AdManager_TA");
		}

		return uClassPointer;
	};

	void AddBillboardMeshRequest(class UStaticMeshComponent* Mesh);
	void HandlePsyNetConnected();
	void BatchBillboardRequestsTimer();
	void RequestBillboardMeshUpdate(class UStaticMeshComponent* Mesh);
	void CompleteBillboardMeshRequests();
	class UTexture2DDynamic* GetCachedAdForZoneID(int ZoneID);
	void HandleOnlineImageDownloaded(class UTexture2DDynamic* Texture, class UError* Error);
	void GetNextImage();
	void HandleGetImageURLResponse(class URPC_AdsGet_TA* RPC);
	void ClearAllRequests(struct FString MapName);
	void ClearExpiredImages();
	void eventConstruct();
};

// Class TAGame.RPC_AdsGet_TA
// 0x0020 (0x00E8 - 0x0108)
class URPC_AdsGet_TA : public URPC_X
{
public:
	struct FString                                     Language;                                         		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FAdInfo>                             Ads;                                              		// 0x00F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_AdsGet_TA");
		}

		return uClassPointer;
	};

	class URPC_AdsGet_TA* SetLanguage(struct FString InLanguage);
};

// Class TAGame.RumblePickups_TA
// 0x00B0 (0x0268 - 0x0318)
class ARumblePickups_TA : public AActor
{
public:
	struct FPickupInfo_TA                              PickupInfo;                                       		// 0x0268 (0x0020) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class ASpecialPickup_TA*                           AttachedPickup;                                   		// 0x0288 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                ConcurrentItemCount;                              		// 0x0290 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int                                                SelectedIndex;                                    		// 0x0294 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                PreviewTimeSeconds;                               		// 0x0298 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FScriptDelegate                             __PickupInfo__ChangeNotify;                       		// 0x02A0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __AttachedPickup__ChangeNotify;                   		// 0x02B8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __ConcurrentItemCount__ChangeNotify;              		// 0x02D0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __SelectedIndex__ChangeNotify;                    		// 0x02E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __PreviewTimeSeconds__ChangeNotify;               		// 0x0300 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RumblePickups_TA");
		}

		return uClassPointer;
	};

	void __PreviewTimeSeconds__ChangeNotifyFunc();
	void __SelectedIndex__ChangeNotifyFunc();
	void __ConcurrentItemCount__ChangeNotifyFunc();
	void __AttachedPickup__ChangeNotifyFunc();
	void __PickupInfo__ChangeNotifyFunc();
	int GetNextPickupIndex();
	bool CanSelectPickupIndex(int Index);
	void NextPickup();
	void UpdateAttachedPickup();
	void SetPreviewingPickups(unsigned long bPreview);
	void SetAvailablePickup(class ASpecialPickup_TA* Pickup, int Index);
	void OnPickupUsed(class ACar_TA* Car, class ASpecialPickup_TA* UsedPickup);
	void SetConcurrentItemCount(int NewCount);
	bool CanUsePickup(class ASpecialPickup_TA* Pickup);
	void eventDestroyed();
	bool IsAnyPickupAvailable();
	void eventPostBeginPlay();
	class ARumblePickups_TA* CreateInstance(class AWorldInfo* InWorldInfo, class ACar_TA* OwnerCar);
};

// Class TAGame.AIProxy_TA
// 0x005C (0x0060 - 0x00BC)
class UAIProxy_TA : public UObject
{
public:
	class AActor*                                      Actor;                                            		// 0x0060 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     Location;                                         		// 0x0068 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     Velocity;                                         		// 0x0074 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    Rotation;                                         		// 0x0080 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     Forward;                                          		// 0x008C (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     Right;                                            		// 0x0098 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     Up;                                               		// 0x00A4 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              Speed;                                            		// 0x00B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              Speed2D;                                          		// 0x00B4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ForwardSpeed;                                     		// 0x00B8 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AIProxy_TA");
		}

		return uClassPointer;
	};

	void Update();
	void InitProxy(class AAIManager_TA* AIManager, class AActor* InActor);
};

// Class TAGame.AttachmentAnim_TA
// 0x0014 (0x0074 - 0x0088)
class UAttachmentAnim_TA : public UAttachmentBehavior_TA
{
public:
	class UAnimSet*                                    AnimSet;                                          		// 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       AnimName;                                         		// 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AttachmentAnim_TA");
		}

		return uClassPointer;
	};

	void OnInit();
};

// Class TAGame.BallCamTarget_TA
// 0x0020 (0x00A4 - 0x00C4)
class UBallCamTarget_TA : public UActorComponent_X
{
public:
	struct FVector                                     LocalTranslation;                                 		// 0x00A8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     WorldTranslation;                                 		// 0x00B4 (0x000C) [0x0000000000000001] (CPF_Edit)    
	int                                                Priority;                                         		// 0x00C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BallCamTarget_TA");
		}

		return uClassPointer;
	};

	void eventDetached();
	void eventAttached();
	struct FVector GetFocus();
};

// Class TAGame.ProductAttribute_MapProductAssetOverride_TA
// 0x0018 (0x0060 - 0x0078)
class UProductAttribute_MapProductAssetOverride_TA : public UProductAssetAttribute_TA
{
public:
	class UMapSet_TA*                                  MapsToUseDefaultProduct;                          		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<class UClass*>                              GameTypesToUseDefaultProduct;                     		// 0x0068 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_MapProductAssetOverride_TA");
		}

		return uClassPointer;
	};

	bool ShouldUseDefaultProductasset(class AWorldInfo* CurWorldInfo);
};

// Class TAGame.GoalExplosionOrientation_TA
// 0x0000 (0x0268 - 0x0268)
class AGoalExplosionOrientation_TA : public AActor
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GoalExplosionOrientation_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.Ball_Tutorial_TA
// 0x0000 (0x0A28 - 0x0A28)
class ABall_Tutorial_TA : public ABall_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Ball_Tutorial_TA");
		}

		return uClassPointer;
	};

	void eventPostBeginPlay();
};

// Class TAGame.SeqEvent_BallInRange_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_BallInRange_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_BallInRange_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTAction_BlockGoal
// 0x0004 (0x01C8 - 0x01CC)
class UBTAction_BlockGoal : public UBTAction_MoveTo
{
public:
	float                                              GoalRadius;                                       		// 0x01C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTAction_BlockGoal");
		}

		return uClassPointer;
	};

	unsigned char OnTargetExecute();
	void OnInit();
};

// Class TAGame.BTAction_DivertBall
// 0x0000 (0x01E8 - 0x01E8)
class UBTAction_DivertBall : public UBTAction_HitBall
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTAction_DivertBall");
		}

		return uClassPointer;
	};

	void OnInit();
};

// Class TAGame.BTAction_Jump
// 0x000C (0x0160 - 0x016C)
class UBTAction_Jump : public UBTAction_Target
{
public:
	float                                              MinJumpTime;                                      		// 0x0160 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TargetRadiusHeightScale;                          		// 0x0164 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              StateStartTime;                                   		// 0x0168 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTAction_Jump");
		}

		return uClassPointer;
	};

	float GetImpactTime();
	float GetStateTime();
	void GotoJumpState(struct FName StateName);
	unsigned char eventOnStart();
};

// Class TAGame.BTAction_DodgeHit
// 0x0024 (0x016C - 0x0190)
class UBTAction_DodgeHit : public UBTAction_Jump
{
public:
	float                                              FlipAmount;                                       		// 0x0170 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   AimTarget;                                        		// 0x0178 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     DodgeDirection;                                   		// 0x0180 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              DodgeTime;                                        		// 0x018C (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTAction_DodgeHit");
		}

		return uClassPointer;
	};

	struct FVector CalculateDodgeDirection();
	void SetInputs();
	struct FVector GetDodgeVelocity(struct FVector DodgeInput);
	unsigned char eventOnStart();
	float GetImpactTime();
};

// Class TAGame.BTAction_Face
// 0x001C (0x0160 - 0x017C)
class UBTAction_Face : public UBTAction_Target
{
public:
	float                                              ReachAngle;                                       		// 0x0160 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxSpeed;                                         		// 0x0164 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxTravel;                                        		// 0x0168 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bMovingForward : 1;                               		// 0x016C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	struct FVector                                     StartLocation;                                    		// 0x0170 (0x000C) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTAction_Face");
		}

		return uClassPointer;
	};

	unsigned char OnTargetExecute();
	void SetMovingForward(unsigned long bForward);
	unsigned char eventOnStart();
};

// Class TAGame.BTAction_PowerSlide
// 0x0018 (0x0160 - 0x0178)
class UBTAction_PowerSlide : public UBTAction_Target
{
public:
	unsigned long                                      bReverse : 1;                                     		// 0x0160 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	float                                              Delay;                                            		// 0x0164 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   TurnTarget;                                       		// 0x0168 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              Steer;                                            		// 0x0170 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                startYaw;                                         		// 0x0174 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTAction_PowerSlide");
		}

		return uClassPointer;
	};

	unsigned char OnTargetExecute();
	unsigned char eventOnStart();
};

// Class TAGame.BTAction_Test
// 0x0018 (0x01C8 - 0x01E0)
class UBTAction_Test : public UBTAction_MoveTo
{
public:
	struct FVector                                     TargetLocation;                                   		// 0x01C8 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     AimLocation;                                      		// 0x01D4 (0x000C) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTAction_Test");
		}

		return uClassPointer;
	};

	bool GetAimDir(struct FVector Destination, struct FVector& AimDir);
	unsigned char OnTargetExecute();
	unsigned char eventOnStart();
	struct FVector GetRandomFieldLocation();
};

// Class TAGame.BTAction_WallBounce
// 0x0004 (0x00BC - 0x00C0)
class UBTAction_WallBounce : public UBTAction
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTAction_WallBounce");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTC_AreaClear
// 0x0010 (0x01D0 - 0x01E0)
class UBTC_AreaClear : public UBTC_TargetBase
{
public:
	class UBTTarget*                                   Source;                                           		// 0x01D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              SourcePredictionTime;                             		// 0x01D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Radius;                                           		// 0x01DC (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_AreaClear");
		}

		return uClassPointer;
	};

	bool eventGetResult();
	void eventOnInit();
};

// Class TAGame.BTC_Between
// 0x0018 (0x00E8 - 0x0100)
class UBTC_Between : public UBTC_ProxyBase
{
public:
	class UBTTarget*                                   Start;                                            		// 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   End;                                              		// 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              AngleLessThan;                                    		// 0x00F8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AngleGreaterThan;                                 		// 0x00FC (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_Between");
		}

		return uClassPointer;
	};

	bool eventGetResult();
};

// Class TAGame.BTC_Boost
// 0x000C (0x00E8 - 0x00F4)
class UBTC_Boost : public UBTC_ProxyBase
{
public:
	float                                              BoostAmountLessThan;                              		// 0x00E8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BoostAmountGreaterThan;                           		// 0x00EC (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bFull : 1;                                        		// 0x00F0 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bNotFull : 1;                                     		// 0x00F0 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_Boost");
		}

		return uClassPointer;
	};

	bool eventGetResult();
};

// Class TAGame.BTC_BounceHeight
// 0x0008 (0x01D0 - 0x01D8)
class UBTC_BounceHeight : public UBTC_TargetBase
{
public:
	float                                              HeightLessThan;                                   		// 0x01D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              HeightGreaterThan;                                		// 0x01D4 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_BounceHeight");
		}

		return uClassPointer;
	};

	bool eventGetResult();
};

// Class TAGame.BTC_CanJumpTo
// 0x0000 (0x01D8 - 0x01D8)
class UBTC_CanJumpTo : public UBTC_BounceHeight
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_CanJumpTo");
		}

		return uClassPointer;
	};

	bool eventGetResult();
};

// Class TAGame.BTC_ClosestTime
// 0x0008 (0x0218 - 0x0220)
class UBTC_ClosestTime : public UBTC_Target
{
public:
	float                                              TimeGreaterThan;                                  		// 0x0218 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TimeLessThan;                                     		// 0x021C (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_ClosestTime");
		}

		return uClassPointer;
	};

	bool eventGetResult();
};

// Class TAGame.BTC_ClosestTo
// 0x000C (0x01D0 - 0x01DC)
class UBTC_ClosestTo : public UBTC_TargetBase
{
public:
	class UBTTarget*                                   Targets;                                          		// 0x01D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              ExtraDistance;                                    		// 0x01D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_ClosestTo");
		}

		return uClassPointer;
	};

	bool eventGetResult();
	void eventOnInit();
};

// Class TAGame.BTC_JumpHit
// 0x0004 (0x01D0 - 0x01D4)
class UBTC_JumpHit : public UBTC_TargetBase
{
public:
	float                                              MinImpactTime;                                    		// 0x01D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_JumpHit");
		}

		return uClassPointer;
	};

	bool eventGetResult();
	void PredictJump(float Time);
};

// Class TAGame.BTC_DodgeHit
// 0x000C (0x01D4 - 0x01E0)
class UBTC_DodgeHit : public UBTC_JumpHit
{
public:
	float                                              FlipAmount;                                       		// 0x01D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              JumpTime;                                         		// 0x01DC (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_DodgeHit");
		}

		return uClassPointer;
	};

	bool eventGetResult();
};

// Class TAGame.BTC_Facing
// 0x0000 (0x0218 - 0x0218)
class UBTC_Facing : public UBTC_Target
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_Facing");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTC_FieldDistance
// 0x0108 (0x01D0 - 0x02D8)
class UBTC_FieldDistance : public UBTC_TargetBase
{
public:
	class UBTTarget*                                   Goal;                                             		// 0x01D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   OtherGoal;                                        		// 0x01D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              ForwardGreaterThan;                               		// 0x01E0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ForwardLessThan;                                  		// 0x01E4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SideGreaterThan;                                  		// 0x01E8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SideLessThan;                                     		// 0x01EC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AbsSideGreaterThan;                               		// 0x01F0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AbsSideLessThan;                                  		// 0x01F4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bUseGoalOrientation : 1;                          		// 0x01F8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	struct FAIProxyData                                GoalData;                                         		// 0x0200 (0x0048) [0x0000000000002000] (CPF_Transient)
	struct FAIProxyData                                OtherGoalData;                                    		// 0x0248 (0x0048) [0x0000000000002000] (CPF_Transient)
	struct FAIProxyData                                MidFieldData;                                     		// 0x0290 (0x0048) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_FieldDistance");
		}

		return uClassPointer;
	};

	bool eventGetResult();
	struct FVector GetRelativeOffset(struct FVector InLocation);
	void eventOnInit();
};

// Class TAGame.BTC_GameState
// 0x000C (0x008C - 0x0098)
class UBTC_GameState : public UBTCondition
{
public:
	struct FName                                       StateName;                                        		// 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_GameState");
		}

		return uClassPointer;
	};

	bool eventGetResult();
	void HandleGameStateChanged(class AGameEvent_TA* GameEvent);
	void eventOnInit();
};

// Class TAGame.BTC_HitLanding
// 0x0000 (0x01D0 - 0x01D0)
class UBTC_HitLanding : public UBTC_TargetBase
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_HitLanding");
		}

		return uClassPointer;
	};

	bool eventGetResult();
	void OnInit();
};

// Class TAGame.BTC_Impact
// 0x0008 (0x0218 - 0x0220)
class UBTC_Impact : public UBTC_Target
{
public:
	float                                              TimeGreaterThan;                                  		// 0x0218 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TimeLessThan;                                     		// 0x021C (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_Impact");
		}

		return uClassPointer;
	};

	bool eventGetResult();
};

// Class TAGame.BTC_InCone
// 0x0018 (0x00E8 - 0x0100)
class UBTC_InCone : public UBTC_ProxyBase
{
public:
	class UBTTarget*                                   Source;                                           		// 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   Destination;                                      		// 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              AngleLessThan;                                    		// 0x00F8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AngleGreaterThan;                                 		// 0x00FC (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_InCone");
		}

		return uClassPointer;
	};

	bool eventGetResult();
};

// Class TAGame.BTC_Landing
// 0x0008 (0x0218 - 0x0220)
class UBTC_Landing : public UBTC_Target
{
public:
	float                                              LandTimeLessThan;                                 		// 0x0218 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              LandTimeGreaterThan;                              		// 0x021C (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_Landing");
		}

		return uClassPointer;
	};

	bool eventGetResult();
};

// Class TAGame.BTC_Lock
// 0x0010 (0x008C - 0x009C)
class UBTC_Lock : public UBTCondition
{
public:
	struct FName                                       LockName;                                         		// 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                NumLocks;                                         		// 0x0098 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_Lock");
		}

		return uClassPointer;
	};

	bool eventGetResult();
	void HandleLockRemoved(struct FName InLockName);
	void HandleLockAdded(struct FName InLockName);
	void ListenForLocks(class UBTLockCollection* Locks);
	void eventOnInit();
};

// Class TAGame.BTC_SegmentDistance
// 0x0028 (0x00E8 - 0x0110)
class UBTC_SegmentDistance : public UBTC_ProxyBase
{
public:
	class UBTTarget*                                   Start;                                            		// 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBTTarget*                                   End;                                              		// 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              StartGreaterThan;                                 		// 0x00F8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              StartLessThan;                                    		// 0x00FC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              EndGreaterThan;                                   		// 0x0100 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              EndLessThan;                                      		// 0x0104 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AbsSideGreaterThan;                               		// 0x0108 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AbsSideLessThan;                                  		// 0x010C (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_SegmentDistance");
		}

		return uClassPointer;
	};

	bool eventGetResult();
};

// Class TAGame.BTC_Skill
// 0x000C (0x008C - 0x0098)
class UBTC_Skill : public UBTCondition
{
public:
	float                                              SkillGreaterThan;                                 		// 0x0090 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SkillLessThan;                                    		// 0x0094 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_Skill");
		}

		return uClassPointer;
	};

	bool eventGetResult();
	void HandleSkillChanged(class AAIController_TA* InAI);
	void eventOnInit();
};

// Class TAGame.BTC_SoccarState
// 0x0010 (0x0098 - 0x00A8)
class UBTC_SoccarState : public UBTC_GameState
{
public:
	unsigned long                                      bKickoff : 1;                                     		// 0x0098 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class AGameEvent_Soccar_TA*                        SoccarGame;                                       		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_SoccarState");
		}

		return uClassPointer;
	};

	bool eventGetResult();
	void HandleBallHit(class AGameEvent_Soccar_TA* G);
	void eventOnInit();
};

// Class TAGame.BTC_Stuck
// 0x0004 (0x008C - 0x0090)
class UBTC_Stuck : public UBTCondition
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_Stuck");
		}

		return uClassPointer;
	};

	bool IsTouchingOtherCar();
	bool eventGetResult();
};

// Class TAGame.BTC_TeamSize
// 0x000C (0x008C - 0x0098)
class UBTC_TeamSize : public UBTCondition
{
public:
	int                                                MinTeamSize;                                      		// 0x0090 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                MaxTeamSize;                                      		// 0x0094 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_TeamSize");
		}

		return uClassPointer;
	};

	bool eventGetResult();
	void HandleMembersChanged(class ATeam_TA* Team, class APRI_TA* PRI);
	void eventOnInit();
};

// Class TAGame.BTC_TimeSinceBallHit
// 0x0020 (0x008C - 0x00AC)
class UBTC_TimeSinceBallHit : public UBTCondition
{
public:
	unsigned char                                      CheckTeam;                                        		// 0x0090 (0x0001) [0x0000000000000001] (CPF_Edit)    
	float                                              TimeGreaterThan;                                  		// 0x0094 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TimeLessThan;                                     		// 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class ABall_TA*                                    Ball;                                             		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              LastHitTime;                                      		// 0x00A8 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_TimeSinceBallHit");
		}

		return uClassPointer;
	};

	bool eventGetResult();
	void HandleCarTouch(class ABall_TA* InBall, class ACar_TA* HitCar, unsigned char HitType);
	void HandleBallChanged(class AAIController_Soccar_TA* InAI);
	void OnInit();
};

// Class TAGame.BTC_Traits
// 0x0004 (0x008C - 0x0090)
class UBTC_Traits : public UBTCondition
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_Traits");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTC_Vehicle
// 0x0014 (0x00E8 - 0x00FC)
class UBTC_Vehicle : public UBTC_ProxyBase
{
public:
	unsigned long                                      bOnBack : 1;                                      		// 0x00E8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bNotOnBack : 1;                                   		// 0x00E8 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bWheelsOnGround : 1;                              		// 0x00E8 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	unsigned long                                      bWheelsNotOnGround : 1;                           		// 0x00E8 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	float                                              GroundNormalGreaterThan;                          		// 0x00EC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              GroundNormalLessThan;                             		// 0x00F0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ForwardSpeedGreaterThan;                          		// 0x00F4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ForwardSpeedLessThan;                             		// 0x00F8 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_Vehicle");
		}

		return uClassPointer;
	};

	bool eventGetResult();
};

// Class TAGame.BTMoveModifier_Boost
// 0x0020 (0x0074 - 0x0094)
class UBTMoveModifier_Boost : public UBTMoveModifier
{
public:
	float                                              MinDistanceFromDestination;                       		// 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxAngleFromCar;                                  		// 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxAngleFromDestination;                          		// 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AVehiclePickup_Boost_TA*                     BoostPickup;                                      		// 0x0088 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              LastCheckTime;                                    		// 0x0090 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTMoveModifier_Boost");
		}

		return uClassPointer;
	};

	class AVehiclePickup_Boost_TA* FindBoostPickup(struct FVector Destination);
	void HandleBoostPickedUp(class AVehiclePickup_TA* Pickup);
	void SetBoostPickup(class AVehiclePickup_Boost_TA* NewPickup);
	void AdjustDestination(struct FVector Goal, struct FVector& Destination);
};

// Class TAGame.VehiclePickup_Boost_TA
// 0x0011 (0x02F0 - 0x0301)
class AVehiclePickup_Boost_TA : public AVehiclePickup_TA
{
public:
	float                                              BoostAmount;                                      		// 0x02F0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 LocalPickupSound;                                 		// 0x02F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      BoostType;                                        		// 0x0300 (0x0001) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.VehiclePickup_Boost_TA");
		}

		return uClassPointer;
	};

	void PlayPickedUpFX();
	void Pickup(class ACar_TA* Car);
	bool CanPickup(class ACar_TA* Car);
};

// Class TAGame.ReplayDirector_TA
// 0x0180 (0x0268 - 0x03E8)
class AReplayDirector_TA : public AActor
{
public:
	float                                              SlomoPreScoreTime;                                		// 0x0268 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SlomoPostScoreTime;                               		// 0x026C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SlomoDefendTime;                                  		// 0x0270 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SlomoDefendDistance;                              		// 0x0274 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SlomoTimeDilation;                                		// 0x0278 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinReplayTime;                                    		// 0x027C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxReplayTime;                                    		// 0x0280 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ReplayPadding;                                    		// 0x0284 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 ReplayStartSound;                                 		// 0x0288 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 SlomoStartSound;                                  		// 0x0290 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 SlomoStopSound;                                   		// 0x0298 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       LiveReplayStateGroup;                             		// 0x02A0 (0x0008) [0x0000000000000000]               
	struct FName                                       LiveReplay_PreScore;                              		// 0x02A8 (0x0008) [0x0000000000000000]               
	struct FName                                       LiveReplay_Slomo;                                 		// 0x02B0 (0x0008) [0x0000000000000000]               
	struct FName                                       LiveReplay_PostGoal;                              		// 0x02B8 (0x0008) [0x0000000000000000]               
	struct FName                                       LiveReplay_None;                                  		// 0x02C0 (0x0008) [0x0000000000000000]               
	float                                              HighlightReplayDuration;                          		// 0x02C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TimeBeforeHighlightReplay;                        		// 0x02CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UReplay_Soccar_TA*                           Replay;                                           		// 0x02D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AActor*                                      FocusCar;                                         		// 0x02D8 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              FocusCarChangeTime;                               		// 0x02E0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class AActor*                                      FocusBall;                                        		// 0x02E8 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	TArray<struct FBallHitInfo>                        BallTouches;                                      		// 0x02F0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FName                                       BallName;                                         		// 0x0300 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              ScoreTime;                                        		// 0x0308 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                ScoreHitIndex;                                    		// 0x030C (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGoal_TA*                                    ScoredGoal;                                       		// 0x0310 (0x0008) [0x0000000004082028] (CPF_ExportObject | CPF_Net | CPF_Transient | CPF_Component | CPF_EditInline)
	unsigned long                                      bSlomo : 1;                                       		// 0x0318 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bReplicatedSlomo : 1;                             		// 0x0318 (0x0004) [0x0000000000002020] [0x00000002] (CPF_Net | CPF_Transient)
	unsigned long                                      bSlomoForDefender : 1;                            		// 0x0318 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	unsigned long                                      bAutoSave : 1;                                    		// 0x0318 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	int                                                FocusHitIndex;                                    		// 0x031C (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<struct FReplayFocusCar>                     FocusCars;                                        		// 0x0320 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                FocusCarIdx;                                      		// 0x0330 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ReplayStartGameTime;                              		// 0x0334 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              BallSpawnTime;                                    		// 0x0338 (0x0004) [0x0000000000002000] (CPF_Transient)
	class AGameEvent_Soccar_TA*                        SoccarGame;                                       		// 0x0340 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	unsigned char                                      ScoredOnTeam;                                     		// 0x0348 (0x0001) [0x0000000000002000] (CPF_Transient)
	struct FReplayScoreData                            ScoreData;                                        		// 0x0350 (0x0020) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int                                                PreviousScores[0x2] ;                             		// 0x0370 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int                                                ForceCutToFocusActors;                            		// 0x0378 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UCameraConfig_TA*                            CameraConfig;                                     		// 0x0380 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventReplayFinished__Delegate;                  		// 0x0388 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventScoreDataChanged__Delegate;                		// 0x03A0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventAutoSaveChanged__Delegate;                 		// 0x03B8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventFocusCarChanged__Delegate;                 		// 0x03D0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ReplayDirector_TA");
		}

		return uClassPointer;
	};

	void HandleStatEvent(class APRI_TA* PRI, class UStatEvent_TA* StatEvent, int Count);
	void HandleReplayFinished(class UReplay_TA* InReplay);
	bool ShouldSlomo();
	void UpdateSlomo();
	void UpdateFocusActors();
	void PlayRandomHighlight();
	int GetNextHighlightFrame();
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void SetAutoSave();
	void SaveUserKeyframe();
	void BuildFocusCars();
	void SetSlomo(unsigned long bNewSlomo);
	void eventTick(float DeltaTime);
	void eventDestroyed();
	class AActor* GetReplayProxy(struct FName ReplayActorName);
	float GetReplayTimeSeconds();
	void SetFocusActors(class AActor* NewCar, class AActor* NewBall);
	float GetReplayStartTime();
	void SetSlomoForDefender(class ABall_TA* Ball, int DefendingTeam);
	void OnScoreDataChanged();
	void GoalScored(class ABall_TA* Ball, class UGoal_TA* Goal, int ScoreIndex, int AssistIndex);
	void HandleScoreUpdated(class ATeam_TA* Team);
	void HandleAllTeamsCreated(class AGameEvent_Team_TA* TeamGame);
	void RecordPlayers();
	void HandleGameStateChanged(class AGameEvent_TA* G);
	void OnSoccarGameSet();
	void SetGameEvent(class AGameEvent_Soccar_TA* InGameEvent);
	void eventReplicatedEvent(struct FName VarName);
	void EventFocusCarChanged(class AActor* NewFocusCar);
	void EventAutoSaveChanged(class AReplayDirector_TA* Director);
	void EventScoreDataChanged(class AReplayDirector_TA* Director);
	void EventReplayFinished(class AReplayDirector_TA* Director);
};

// Class TAGame.Camera_MainMenu_TA
// 0x0020 (0x06C8 - 0x06E8)
class ACamera_MainMenu_TA : public ACamera_X
{
public:
	struct FVector                                     HandheldCamFrequency;                             		// 0x06C8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     HandheldCamAmplitude;                             		// 0x06D4 (0x000C) [0x0000000000000001] (CPF_Edit)    
	class UCameraState_X*                              CurrentState;                                     		// 0x06E0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Camera_MainMenu_TA");
		}

		return uClassPointer;
	};

	float GetAspectRatio();
	void PostProcessCameraState(float DeltaTime, struct FCameraOrientation& OutPOV);
	void ApplyCameraModifiers(float DeltaTime, struct FTPOV& OutPOV);
	class UCameraState_X* SelectCameraState();
	void SetCameraState(struct FName StateName);
	class UCameraState_X* GetCameraStateByName(struct FName StateName);
	void InstanceCameraStates();
};

// Class TAGame.CameraState_CarPreview_TA
// 0x0074 (0x008C - 0x0100)
class UCameraState_CarPreview_TA : public UCameraState_X
{
public:
	TArray<float>                                      SideOffsets;                                      		// 0x0090 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FCameraOrientation>                  ViewOffsets;                                      		// 0x00A0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              BlendRate;                                        		// 0x00B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinPitch;                                         		// 0x00B4 (0x0004) [0x0000000000000000]               
	float                                              MaxPitch;                                         		// 0x00B8 (0x0004) [0x0000000000000000]               
	struct FCameraOrientation                          CurrentOrientation;                               		// 0x00BC (0x002C) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentSideOffset;                                		// 0x00E8 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    RotationOffset;                                   		// 0x00EC (0x000C) [0x0000000000002000] (CPF_Transient)
	class UCameraState_PremiumGarage_TA*               PrevPremiumGarageState;                           		// 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_CarPreview_TA");
		}

		return uClassPointer;
	};

	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void AdjustOutPOVCameraRotation(struct FRotator AddedRotator, struct FCameraOrientation& OutPOV);
	void OnSnap();
	void PreviewFadeIn();
	void PreviewFadeOut(class UCameraState_CarPreview_TA* InPrevState);
	void BeginCameraState();
	void GetAccumulatedOrientation(struct FVector& out_Location, struct FRotator& out_Rotation, int& NumPreviewActors);
	void GetActorOrientation(struct FCameraOrientation& OutPOV, float& OutSideOffset);
	void GetSingleActorOrientation(class ACarPreviewActor_TA* ViewTarget, struct FVector& OutLoc, struct FRotator& OutRot);
};

// Class TAGame.Camera_TA
// 0x00D8 (0x06C8 - 0x07A0)
class ACamera_TA : public ACamera_X
{
public:
	struct FSwivelExtent                               SwivelExtentSlow;                                 		// 0x06C8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FSwivelExtent                               SwivelExtentFast;                                 		// 0x06D4 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              SwivelFastSpeed;                                  		// 0x06E0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SwivelDieRate;                                    		// 0x06E4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FProfileSliderLimits                        FOVLimits;                                        		// 0x06E8 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        HeightLimits;                                     		// 0x06F4 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        AngleLimits;                                      		// 0x0700 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        DistanceLimits;                                   		// 0x070C (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        StiffnessLimits;                                  		// 0x0718 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        SwivelSpeedLimits;                                		// 0x0724 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        TransitionSpeedLimits;                            		// 0x0730 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	TArray<struct FProfileCameraSettings>              CameraPresetSettings;                             		// 0x0740 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	float                                              HorizontalSplitscreenHeightOffset;                		// 0x0750 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              HorizontalSplitscreenFOVOffset;                   		// 0x0754 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              VerticalSplitscreenFOVOffset;                     		// 0x0758 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ClipRate;                                         		// 0x075C (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    CurrentSwivel;                                    		// 0x0760 (0x000C) [0x0000000000002000] (CPF_Transient)
	class ARBActor_TA*                                 Demolisher;                                       		// 0x0770 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bDemolished : 1;                                  		// 0x0778 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class ACameraSettingsActor_TA*                     CameraSettings;                                   		// 0x0780 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventCameraTargetChanged__Delegate;             		// 0x0788 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Camera_TA");
		}

		return uClassPointer;
	};

	void eventOnViewTargetChanged();
	float ClipToField(float CameraLocationZ);
	void ApplyCameraModifiers(float DeltaTime, struct FTPOV& OutPOV);
	void Demolished(class ARBActor_TA* InDemolisher);
	void ApplyRearCameraView(struct FCameraOrientation& OutPOV);
	void ApplySwivel(struct FCameraOrientation& OutPOV);
	struct FRotator GetDesiredSwivel(float LookUp, float LookRight);
	void UpdateSwivel(float DeltaTime);
	float GetDefaultFOVOffset();
	float GetDefaultViewHeightOffset();
	void UpdateAspectRatio(struct FCameraOrientation& OutPOV);
	void PostProcessCameraState(float DeltaTime, struct FCameraOrientation& OutPOV);
	void UpdateFOV();
	class ACameraSettingsActor_TA* GetCameraSettings();
	void ProcessCameraState(float DeltaTime, struct FCameraOrientation& OutPOV);
	void HandleRemoveLocalFX(class USeqAct_AttachFX_TA* SeqAct);
	void HandleAddLocalFX(class USeqAct_AttachFX_TA* SeqAct);
	void InitializeFor(class APlayerController* PC);
	void EventCameraTargetChanged(class ACamera_TA* Camera, class AActor* Target);
};

// Class TAGame.CameraSettingsActor_TA
// 0x0070 (0x0268 - 0x02D8)
class ACameraSettingsActor_TA : public AReplicationInfo
{
public:
	float                                              UploadCameraDelay;                                		// 0x0268 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class APRI_TA*                                     PRI;                                              		// 0x0270 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FProfileCameraSettings                      ProfileSettings;                                  		// 0x0278 (0x001C) [0x0000000000002020] (CPF_Net | CPF_Transient)
	unsigned long                                      bUsingSecondaryCamera : 1;                        		// 0x0294 (0x0004) [0x0000000000002020] [0x00000001] (CPF_Net | CPF_Transient)
	unsigned long                                      bUsingBehindView : 1;                             		// 0x0294 (0x0004) [0x0000000000002020] [0x00000002] (CPF_Net | CPF_Transient)
	unsigned long                                      bUsingFreecam : 1;                                		// 0x0294 (0x0004) [0x0000000000002020] [0x00000004] (CPF_Net | CPF_Transient)
	unsigned long                                      bUsingSwivel : 1;                                 		// 0x0294 (0x0004) [0x0000000000002020] [0x00000008] (CPF_Net | CPF_Transient)
	unsigned long                                      bMouseCameraToggleEnabled : 1;                    		// 0x0294 (0x0004) [0x0000000000002020] [0x00000010] (CPF_Net | CPF_Transient)
	unsigned long                                      bHoldMouseCamera : 1;                             		// 0x0294 (0x0004) [0x0000000000002020] [0x00000020] (CPF_Net | CPF_Transient)
	unsigned long                                      bResetCamera : 1;                                 		// 0x0294 (0x0004) [0x0000000000002020] [0x00000040] (CPF_Net | CPF_Transient)
	unsigned long                                      bDirtySecondaryCamera : 1;                        		// 0x0294 (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bDirtyBehindView : 1;                             		// 0x0294 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned char                                      CameraPitch;                                      		// 0x0298 (0x0001) [0x0000000000002020] (CPF_Net | CPF_Transient)
	unsigned char                                      CameraYaw;                                        		// 0x0299 (0x0001) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              LastRotationChangeTime;                           		// 0x029C (0x0004) [0x0000000000000000]               
	float                                              LastReplicateRotationTime;                        		// 0x02A0 (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             __EventCameraChanged__Delegate;                   		// 0x02A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSecondaryCameraChanged__Delegate;          		// 0x02C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraSettingsActor_TA");
		}

		return uClassPointer;
	};

	void ReplicateChangesToServer();
	void ServerSetResetCamera(unsigned long bReset);
	void SetResetCamera(unsigned long bReset);
	void ServerSetHoldMouseCamera(unsigned long bHold);
	void SetHoldMouseCamera(unsigned long bHold);
	void ServerSetCameraRotationReliable(unsigned char Pitch, unsigned char Yaw);
	void ServerSetCameraRotation(unsigned char Pitch, unsigned char Yaw);
	void SetCameraRotation(unsigned char Pitch, unsigned char Yaw);
	void ServerSetUsingFreecam(unsigned long bUsing);
	void SetUsingFreecam(unsigned long bUsing);
	void ServerSetUsingBehindView(unsigned long bUsing);
	void SetUsingBehindView(unsigned long bUsing);
	void ServerSetUsingSecondaryCamera(unsigned long bUsing);
	void SetUsingSecondaryCamera(unsigned long bUsing);
	void ServerSetCameraSettings(struct FProfileCameraSettings InSettings);
	void SetProfileSettings(struct FProfileCameraSettings InSettings);
	void eventDestroyed();
	void ServerSetUseSwivel(unsigned long bInUsingSwivel);
	void HandleMouseCameraSwivelChanged();
	void ServerSetHoldMouseCameraEnabled(unsigned long bInHoldMouseCameraEnabled);
	void HandleHoldMouseCameraEnabledChanged();
	void HandleProfileSettings(class UProfileCameraSave_TA* Settings);
	void eventOnOwnerChanged();
	void eventReplicatedEvent(struct FName VarName);
	void EventSecondaryCameraChanged(class ACameraSettingsActor_TA* Actor);
	void EventCameraChanged(class ACameraSettingsActor_TA* Actor);
};

// Class TAGame.CameraState_TA
// 0x000C (0x008C - 0x0098)
class UCameraState_TA : public UCameraState_X
{
public:
	unsigned long                                      bShowCarHUD : 1;                                  		// 0x0090 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bAllowRearCamera : 1;                             		// 0x0090 (0x0004) [0x0000000000000002] [0x00000002] (CPF_Const)
	float                                              StateStartTime;                                   		// 0x0094 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_TA");
		}

		return uClassPointer;
	};

	void BeginCameraState();
};

// Class TAGame.SeqAct_AttachFX_TA
// 0x0008 (0x0160 - 0x0168)
class USeqAct_AttachFX_TA : public USequenceAction
{
public:
	class UParticleSystemComponent*                    PSC;                                              		// 0x0160 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_AttachFX_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.Camera_Replay_TA
// 0x00C0 (0x07A0 - 0x0860)
class ACamera_Replay_TA : public ACamera_TA
{
public:
	TArray<class UCameraState_X*>                      OverrideStates;                                   		// 0x07A0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     FocusActorString;                                 		// 0x07B0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FName                                       CameraMode;                                       		// 0x07C0 (0x0008) [0x0000000000000000]               
	struct FName                                       DefaultCameraMode;                                		// 0x07C8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FProfileSliderLimits                        DOFDistanceLimits;                                		// 0x07D0 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        DOFInfLimits;                                     		// 0x07DC (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        DOFKernelLimits;                                  		// 0x07E8 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        GreenScreenLimits;                                		// 0x07F4 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        BloomScaleLimits;                                 		// 0x0800 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        FilterOverlayLimits;                              		// 0x080C (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	unsigned long                                      bReplayTranslucency : 1;                          		// 0x0818 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bGreenScreen : 1;                                 		// 0x0818 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	float                                              GreenScreenColorIndex;                            		// 0x081C (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UCameraState_Replay_TA*                      CurrentCameraState;                               		// 0x0820 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UCameraState_X*                              PreviousCameraProxyState;                         		// 0x0828 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventCameraProxyStateChanged__Delegate;         		// 0x0830 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __CameraMode__ChangeNotify;                       		// 0x0848 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Camera_Replay_TA");
		}

		return uClassPointer;
	};

	bool __Camera_Replay_TA__InstanceCameraStates_49D5D27B4566CCAF23A7DBB4005C84E7(class UCameraState_X* S);
	void __CameraMode__ChangeNotifyFunc();
	float ClipToField(float CameraLocationZ);
	void UpdateAspectRatio(struct FCameraOrientation& OutPOV);
	void UpdateFOV();
	void ApplySwivel(struct FCameraOrientation& OutPOV);
	class AActor* GetFocusActor();
	class ACar_TA* GetFocusCar();
	class APRI_TA* GetFocusPRI();
	class ABall_TA* GetFocusBall();
	void SetFocusActor(struct FString InFocusActorString);
	void SetCameraMode(struct FName Mode);
	void UpdateCameraState();
	class UCameraState_X* GetCameraStateByName(struct FName ModeName);
	void eventUpdateCamera(float DeltaTime);
	bool ShouldHaveCameraTrackState();
	void InstanceCameraStates();
	void EventCameraProxyStateChanged(class UCameraState_Replay_TA* NewCameraState, class UCameraState_X* NewProxyState);
};

// Class TAGame.CameraState_Replay_TA
// 0x001C (0x0098 - 0x00B4)
class UCameraState_Replay_TA : public UCameraState_TA
{
public:
	unsigned long                                      bLocalMovement : 1;                               		// 0x0098 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bClipToField : 1;                                 		// 0x0098 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bUIHighlightFocus : 1;                            		// 0x0098 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	class AActor*                                      OldFocusActor;                                    		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     OldFocusActorLocation;                            		// 0x00A8 (0x000C) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_Replay_TA");
		}

		return uClassPointer;
	};

	class AActor* GetFocusActor();
	void UpdateFlyPOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void UpdateFocusActorPOV(class AActor* FocusActor, float DeltaTime, struct FCameraOrientation& OutPOV);
	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void BeginCameraState();
	class UCameraState_X* GetProxyCameraState();
	bool ShouldClipToField();
	bool AllowSwivel();
	bool IsDisabled(struct FName CameraMode, struct FString InFocusActorString);
};

// Class TAGame.CameraState_Director_TA
// 0x0050 (0x00B4 - 0x0104)
class UCameraState_Director_TA : public UCameraState_Replay_TA
{
public:
	class AGameEvent_Soccar_TA*                        GameEvent;                                        		// 0x00B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UCameraStateSelector_TA*                     IdleSelector;                                     		// 0x00C0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UCameraStateSelector_TA*                     CountdownSelector;                                		// 0x00C8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UCameraStateSelector_TA*                     KickoffSelector;                                  		// 0x00D0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UCameraStateSelector_TA*                     DefaultSelector;                                  		// 0x00D8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FProfileSliderLimits                        MinTransitionTimeLimits;                          		// 0x00E0 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UCameraStateSelector_TA*                     CurrentSelector;                                  		// 0x00F0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UCameraState_X*                              CurrentState;                                     		// 0x00F8 (0x0008) [0x0000000000000000]               
	unsigned long                                      bInitialized : 1;                                 		// 0x0100 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_Director_TA");
		}

		return uClassPointer;
	};

	bool IsDisabled(struct FName CameraMode, struct FString InFocusActorString);
	bool ShouldClipToField();
	void UpdateSelector();
	void SetSelector(class UCameraStateSelector_TA* InSelector);
	class UCameraState_X* GetProxyCameraState();
	void InitCameraState(class UCameraState_X* InState);
	void InitSelector(class UCameraStateSelector_TA* InSelector);
	void InitSelectors();
	void InitDirector();
};

// Class TAGame.CameraState_CarRef_TA
// 0x0010 (0x0098 - 0x00A8)
class UCameraState_CarRef_TA : public UCameraState_TA
{
public:
	class ACar_TA*                                     Car;                                              		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACameraSettingsActor_TA*                     CameraSettings;                                   		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_CarRef_TA");
		}

		return uClassPointer;
	};

	struct FProfileCameraSettings GetProfileCameraSettings();
	struct FRotator GetCarRotation();
	struct FVector GetCarLocation();
	bool IsOnGround();
	bool ShouldExecute();
	float TimeSinceSpawn();
	bool UpdateCarRef();
};

// Class TAGame.CameraState_Car_TA
// 0x0118 (0x00A8 - 0x01C0)
class UCameraState_Car_TA : public UCameraState_CarRef_TA
{
public:
	float                                              InterpToAirRate;                                  		// 0x00A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              InterpToGroundRate;                               		// 0x00AC (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FInterpVector                               FocusInterp;                                      		// 0x00B0 (0x0028) [0x0000000000000001] (CPF_Edit)    
	struct FInterpVector                               FocusOffsetInterp;                                		// 0x00D8 (0x0028) [0x0000000000000001] (CPF_Edit)    
	struct FInterpVector                               DistanceInterp;                                   		// 0x0100 (0x0028) [0x0000000000000001] (CPF_Edit)    
	float                                              GroundRotationInterpRate;                         		// 0x0128 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              GroundRotationInterpRateWall;                     		// 0x012C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AirVelocityInfluence;                             		// 0x0130 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AirVelocityInfluenceMaxSpeed;                     		// 0x0134 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DistanceSpeedScale;                               		// 0x0138 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DistanceOffsetMin;                                		// 0x013C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxSpeedFOV;                                      		// 0x0140 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FOVInterpSpeed;                                   		// 0x0144 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SupersonicFOV;                                    		// 0x0148 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SupersonicFOVInterpSpeed;                         		// 0x014C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BouncyChassisScale;                               		// 0x0150 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RollScale;                                        		// 0x0154 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              GroundNormalInterpRate;                           		// 0x0158 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AirGroundBlend;                                   		// 0x015C (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FCameraOrientation                          ViewOffset;                                       		// 0x0160 (0x002C) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bFirstExecution : 1;                              		// 0x018C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bFullRotationJustChanged : 1;                     		// 0x018C (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bFullRotationActive : 1;                          		// 0x018C (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	unsigned long                                      bOnGround : 1;                                    		// 0x018C (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	unsigned long                                      bLastHoldMouseCamera : 1;                         		// 0x018C (0x0004) [0x0000000000000000] [0x00000010] 
	struct FVector                                     GroundNormal;                                     		// 0x0190 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              MouseCameraDeadzone;                              		// 0x019C (0x0004) [0x0000000000000000]               
	float                                              MouseCameraLockWindowInDegrees;                   		// 0x01A0 (0x0004) [0x0000000000000000]               
	int                                                PitchMin;                                         		// 0x01A4 (0x0004) [0x0000000000000000]               
	int                                                PitchMax;                                         		// 0x01A8 (0x0004) [0x0000000000000000]               
	float                                              MouseCameraLockTimeWindow;                        		// 0x01AC (0x0004) [0x0000000000000000]               
	float                                              TimeOfLastCameraInput;                            		// 0x01B0 (0x0004) [0x0000000000000000]               
	class UCameraConfig_TA*                            Config;                                           		// 0x01B8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_Car_TA");
		}

		return uClassPointer;
	};

	void OverrideBlendParams(struct FViewTargetTransitionParams& Params);
	struct FViewTargetTransitionParams GetEndBlendParams(class UCameraState_X* NewState);
	void UpdateInterpVector(struct FVector NewValue, float DeltaTime, struct FInterpVector& Interp);
	void UpdateRotationModifiers(float DeltaTime, struct FCameraOrientation& OutPOV);
	void GetNewFOVParameters(float& NewFOV, float& NewInterpSpeed);
	void UpdateFOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void UpdateDistance(float DeltaTime, struct FCameraOrientation& OutPOV);
	void ScalePitch(float SpeedScale, struct FRotator& OutRotation);
	void UpdateAirPOV(float DeltaTime, struct FCameraOrientation& OutPOV, struct FRotator& OutRotatorNoBlend);
	void UpdateGroundPOV(float DeltaTime, struct FCameraOrientation& OutPOV, struct FRotator& OutRotatorNoBlend);
	void UpdateAirAndGroundCamera(float DeltaTime, struct FCameraOrientation& OutPOV, struct FRotator& OutRotatorNoBlend);
	void UpdateFocus(float DeltaTime, struct FCameraOrientation& OutPOV);
	void UpdateFocusWorldOffset(float DeltaTime);
	void UpdateAirGroundBlend(float DeltaTime);
	void UpdateViewOffset();
	bool ShouldSetFullRotationToInactive(float CameraPitch, float CameraYaw, struct FRotator RotatorNoBlend, struct FRotator RotatorPreUpdate);
	void UpdateSwivelRotationAndOffset(float DeltaTime, struct FCameraOrientation& OutPOV, struct FRotator& RotOffset);
	void UpdateValidPOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void HandleSecondaryCameraChanged(class ACameraSettingsActor_TA* Actor);
	void HandleStartNewRound(class AGameEvent_Soccar_TA* GameEvent);
	void ResetView();
	void BeginCameraState();
};

// Class TAGame.CameraConfig_TA
// 0x0004 (0x0078 - 0x007C)
class UCameraConfig_TA : public UOnlineConfig_X
{
public:
	unsigned long                                      bFramerateIndependentInterp : 1;                  		// 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bReplayFocusOnCarAfterGoal : 1;                   		// 0x0078 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraConfig_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.CameraState_BallCam_TA
// 0x0080 (0x01C0 - 0x0240)
class UCameraState_BallCam_TA : public UCameraState_Car_TA
{
public:
	float                                              RotationRate;                                     		// 0x01C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PitchScale;                                       		// 0x01C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PitchFocusZFactor;                                		// 0x01C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PitchExtentMin;                                   		// 0x01CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PitchExtentMax;                                   		// 0x01D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UBallCamTarget_TA*                           Target;                                           		// 0x01D8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	struct FCameraOrientation                          BasePOV;                                          		// 0x01E0 (0x002C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     OldTargetLocation;                                		// 0x020C (0x000C) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bWasReverseCam : 1;                               		// 0x0218 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bActive : 1;                                      		// 0x0218 (0x0004) [0x0000000000000000] [0x00000002] 
	TArray<struct FPlaneSelectData>                    PlaneSelectSettings;                              		// 0x0220 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FAngleSelectData>                    AngleSelectSettings;                              		// 0x0230 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_BallCam_TA");
		}

		return uClassPointer;
	};

	void UpdateFocus(float DeltaTime, struct FCameraOrientation& OutPOV);
	void UpdateFocusWorldOffset(float DeltaTime);
	void UpdateAirAndGroundCamera(float DeltaTime, struct FCameraOrientation& OutPOV, struct FRotator& OutRotatorNoBlend);
	void UpdateRotationModifiers(float DeltaTime, struct FCameraOrientation& OutPOV);
	void UpdateValidPOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	bool ShouldExecute();
	bool TargetIsWelded();
	bool IsValidTarget(class UBallCamTarget_TA* InTarget);
	bool RotatedPlaneContainsPoint(struct FVector Origin, struct FRotator PlaneRotation, float YExtent, float ZExtent, struct FVector Point, float& Out_DistanceToOrgin);
	class UBallCamTarget_TA* FindClosestTargetInRotatedPlane(float XExtent, float YExtent, float MaxRadius);
	class UBallCamTarget_TA* FindClosestTargetInDirection(struct FRotator StartRotation, int YDirection, float MaxRadius);
	class UBallCamTarget_TA* FindClosestTargetByAngle(float MinDotAngle, float MaxRadius);
	class UBallCamTarget_TA* GetBestBallTarget();
	bool ChooseTarget();
	void SetTarget(class UBallCamTarget_TA* NewTarget);
	void HandleRemoveTarget(class UObject* NewTarget);
	void HandleAddTarget(class UBallCamTarget_TA* NewTarget);
	void TargetSelect(class APlayerController_TA* PC, int Direction);
	void EndCameraState();
	void BeginCameraState();
	void Init(class ACamera_X* InCamera);
};

// Class TAGame.CarPreviewActor_TA
// 0x01D8 (0x0268 - 0x0440)
class ACarPreviewActor_TA : public AActor
{
public:
	int                                                ControllerId;                                     		// 0x0268 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UProductLoader_TA*                           ProductLoader;                                    		// 0x0270 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UCarMeshComponent_TA*                        CarMesh;                                          		// 0x0278 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class ULightEnvironmentComponent*                  LightEnvironment;                                 		// 0x0280 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class USilhouetteComponent*                        CarMeshSilhouette;                                		// 0x0288 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	TArray<class UCarPreviewAnim_TA*>                  AttachmentPreviewAnims;                           		// 0x0290 (0x0010) [0x0000000004480009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	TArray<class UCarPreviewAnim_TA*>                  WheelAnims;                                       		// 0x02A0 (0x0010) [0x0000000004480009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	class UCarPreviewAnim_TA*                          BodyAnim;                                         		// 0x02B0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UCarPreviewAnim_TA*                          EngineAudioAnim;                                  		// 0x02B8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UCarPreviewAnim_TA*                          EngineAudioAnimInstance;                          		// 0x02C0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	float                                              SupersonicFakeSpeed;                              		// 0x02C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class ATurnTableActor_TA*                          TurntableActor;                                   		// 0x02D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FLoadoutData                                Loadout;                                          		// 0x02D8 (0x0040) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FLoadoutData                                OldLoadout;                                       		// 0x0318 (0x0040) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UProductAsset_TA*>                    PreviewProducts;                                  		// 0x0358 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class AFXActor_Boost_TA*                           BoostFX;                                          		// 0x0368 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProductSlot_TA*                             PreviewSlot;                                      		// 0x0370 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ATeam_TA*                                    TeamArchetype;                                    		// 0x0378 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     PlayerName;                                       		// 0x0380 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class AFXActor_X*                                  BodyFX;                                           		// 0x0390 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProductAsset_Boost_TA*                      BoostAsset;                                       		// 0x0398 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProductAsset_SupersonicTrail_TA*            SupersonicAsset;                                  		// 0x03A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bLockLoadout : 1;                                 		// 0x03A8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bSpinWheelsFromBoost : 1;                         		// 0x03A8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bAddToCarPreviewList : 1;                         		// 0x03A8 (0x0004) [0x0000000000000000] [0x00000004] 
	TArray<class AFXActor_TA*>                         SupersonicFX;                                     		// 0x03B0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UProductAsset_EngineAudio_TA*                EngineAudioAsset;                                 		// 0x03C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UEngineAudioPreviewBase_TA*                  EngineAudioPreview;                               		// 0x03C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMusicStingersPreview_TA*                    MusicStingersArchetype;                           		// 0x03D0 (0x0008) [0x0000000000000000]               
	class UMusicStingersPreview_TA*                    MusicStingersPreview;                             		// 0x03D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                PreviewTeam;                                      		// 0x03E0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                LinkedControllerId;                               		// 0x03E4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_X*                                  RootFXActor;                                      		// 0x03E8 (0x0008) [0x0000000000000000]               
	class UAkParamGroup*                               Ak;                                               		// 0x03F0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FScriptDelegate                             __EventInitializeComponents__Delegate;            		// 0x03F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __ProductApplicatorDelegate__Delegate;            		// 0x0410 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventCarSetupFinished__Delegate;                		// 0x0428 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarPreviewActor_TA");
		}

		return uClassPointer;
	};

	void __CarPreviewActor_TA__PostBeginPlay_8B0202514322E0129105C6A936CB6276(class UCarMeshComponentBase_TA* _);
	void AddSilhouetteParents();
	void RefreshSilhouette();
	void ShowSilhouette(unsigned long bShow);
	void RefreshLoadout(class UProfile_TA* Profile);
	int GetTeamIndex(class UProfile_TA* Profile);
	void UpdateTeamFXState();
	void SetTeamIndex(class UProfile_TA* Profile, int TeamIndex);
	class ULoadoutSet_TA* GetLoadoutSet(class UProfile_TA* Profile);
	void SetLoadoutSet(class ULoadoutSet_TA* InLoadoutSet, int InTeamIndex);
	void EnableTick(unsigned long bEnable);
	void DestroyTurnTableActor();
	void ResetColors();
	void SetLockLoadout(unsigned long bInLock);
	void BuildOnlineLoadout(struct FLoadoutData& InLoadout, struct FClientLoadoutOnlineData& OnlineLoadout, TArray<int>& OutOnlineLoadout);
	void UpdateParticlesFakeVelocity();
	struct FRotator GetSMRotation();
	void SetTurnTableInput(float YawInput, unsigned long bGamepad);
	void ApplyTurntableBase();
	void SetTurnTableActor(class ATurnTableActor_TA* InTurnTableActor, struct FRotator StartRotation);
	void FindTurnTableActor();
	void eventOnOwnerChanged();
	void Tick(float DeltaTime);
	void SetPreviewHidden(unsigned long bHide);
	void SetPlayerName(struct FString InPlayerName);
	void AnimateBody();
	void AnimateWheels();
	void SetStartAndEndWheelAnimIndicies(int& OutStartIdx, int& OutEndIdx);
	void AnimateAttachment(class UProductSlot_TA* Slot, class UPrimitiveComponent* AttachmentComponent, struct FName CustomAnimName);
	void AnimateAntenna(class UAntennaComponent_TA* AntennaArchetype);
	class UPrimitiveComponent* FindAttachmentComponent(class UProductSlot_TA* Slot, struct FProductAttachment& AttachStruct);
	void AnimateSlotChange(class UProductAsset_TA* Product);
	class UActorComponent* FindAttachmentByArchetype(class UActorComponent* InArchetype);
	class UStaticMeshComponent* FindSMAttachmentByAsset(class UStaticMesh* Mesh);
	class USkeletalMeshComponent* FindSKAttachmentByAsset(class USkeletalMesh* Mesh);
	void UpdateTranslations();
	void ClearBodyFX();
	void ClearBoostFX();
	void ClearComponents();
	void InitMusicStingers();
	void InitSupersonicFX();
	void InitEngineAudioFX();
	void InitBoostFX();
	void InitBodyFX();
	void InitRootFXActor();
	void InitComponents();
	void HandleAllProductsLoaded(class UProductLoader_TA* Loader);
	void SetBoostGlow(float Glow);
	void UpdateBoostGlow();
	void DeactivatePreviewSlot();
	void ActivatePreviewSlot();
	void SetPreviewSlot(class UProductSlot_TA* InSlot);
	bool ChangeCarPart(int SlotIndex, int ProductID, unsigned long long OnlineID, int TeamPaintIndex);
	void ForceGarbageCollection();
	void ForceSetLoadout(unsigned long bBuildOnlineLoadout, struct FLoadoutData& InLoadout);
	void SetLoadout(struct FLoadoutData& InLoadout);
	void eventDestroyed();
	void eventPostBeginPlay();
	void EventCarSetupFinished(class ACarPreviewActor_TA* PreviewActor);
	void ProductApplicatorDelegate(class UProductAsset_TA* Asset);
	void EventInitializeComponents(class ACarPreviewActor_TA* PreviewActor);
};

// Class TAGame.CameraState_PremiumGarage_TA
// 0x0078 (0x0100 - 0x0178)
class UCameraState_PremiumGarage_TA : public UCameraState_CarPreview_TA
{
public:
	struct FViewTargetTransitionParams                 BetweenPremiumCameraBlend;                        		// 0x0100 (0x0010) [0x0000000000000000]               
	float                                              FadeInFromBlackTime;                              		// 0x0110 (0x0004) [0x0000000000000000]               
	float                                              FadeToBlackTime;                                  		// 0x0114 (0x0004) [0x0000000000000000]               
	float                                              PitchDeadzone;                                    		// 0x0118 (0x0004) [0x0000000000000000]               
	float                                              PitchSensitivity;                                 		// 0x011C (0x0004) [0x0000000000000000]               
	struct FInterpCurveFloat                           PitchAutocorrectCurve;                            		// 0x0120 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              PitchMaxSpeed;                                    		// 0x0138 (0x0004) [0x0000000000000000]               
	float                                              PitchBlendbackModifier;                           		// 0x013C (0x0004) [0x0000000000000000]               
	float                                              PitchBlendbackMin;                                		// 0x0140 (0x0004) [0x0000000000000000]               
	struct FInterpCurveFloat                           CameraReturnBlendCurve;                           		// 0x0148 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              LastAdjustTime;                                   		// 0x0160 (0x0004) [0x0000000000002000] (CPF_Transient)
	class ATurnTableActor_TA*                          TurntableActor;                                   		// 0x0168 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxShell_TA*                                Shell;                                            		// 0x0170 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_PremiumGarage_TA");
		}

		return uClassPointer;
	};

	void UpdateAllViewTargetRotation(float DeltaTime);
	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void AdjustOutPOVCameraRotation(struct FRotator AddedRotator, struct FCameraOrientation& OutPOV);
	float GetCameraCurveSpeed();
	void ManuallyAdjustCar(unsigned long bEnable);
	void BeginCameraState();
	struct FViewTargetTransitionParams GetEndBlendParams(class UCameraState_X* NewState);
	void GetActorOrientation(struct FCameraOrientation& OutPOV, float& OutSideOffset);
	void GetAccumulatedOrientation(struct FVector& out_Location, struct FRotator& out_Rotation, int& NumPreviewActors);
};

// Class TAGame.GameInfo_GFxMenu_TA
// 0x0088 (0x04D8 - 0x0560)
class AGameInfo_GFxMenu_TA : public AGameInfoBase_TA
{
public:
	class UCarPreviewSet_TA*                           CarPreviewSet;                                    		// 0x04D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPremiumGaragePreviewSet_TA*                 PremiumPreviewSet;                                		// 0x04E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UExplosionPreviewer_TA*                      ExplosionPreviewer;                               		// 0x04E8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UMenuSequencer_TA*                           MenuSequencer;                                    		// 0x04F0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FString                                     UIStateNames[0x2] ;                               		// 0x04F8 (0x0020) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FName                                       UISoundState_MainMenu;                            		// 0x0518 (0x0008) [0x0000000000000002] (CPF_Const)   
	TArray<class UCinematicIntroSequence_TA*>          CinematicSequences;                               		// 0x0520 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventIntroCarsInPosition__Delegate;             		// 0x0530 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventUIStateChanged__Delegate;                  		// 0x0548 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_GFxMenu_TA");
		}

		return uClassPointer;
	};

	bool AllowPausing(class APlayerController* PC);
	bool UIStateIsActive(class UGFxShell_TA* Shell, unsigned char UIState);
	void TriggerUIStateChangeEvents(unsigned char UIState);
	void SetUIState(class ULocalPlayer_TA* Player, unsigned char UIState);
	void HandlePrimaryPlayerIdChanged(class UOnlineGameAccount_X* Account, struct FUniqueNetId PlayerID);
	void SetUIMenuState(unsigned char MenuState);
	void HandlePrimaryPlayerSet(class APlayerController_Menu_TA* PC);
	bool ShouldSkipTitleScreen(class ULocalPlayer_TA* LocalPlayer);
	void InitShell(class APlayerController_Menu_TA* PC);
	void GenericPlayerInitialization(class AController* C);
	bool CanStartMatch();
	void RestartPlayer(class AController* NewPlayer);
	void eventDestroyed();
	void InitMenuSequencer();
	void InitPreviews();
	void eventPreBeginPlay();
	void EventUIStateChanged(class AGameInfo_GFxMenu_TA* GameInfoMenu, unsigned char UIState);
	void EventIntroCarsInPosition(class AGameInfo_GFxMenu_TA* GameInfoMenu);
};

// Class TAGame.CarPreviewSet_TA
// 0x0068 (0x0060 - 0x00C8)
class UCarPreviewSet_TA : public UObject
{
public:
	TArray<class ACarPreviewActor_TA*>                 CarPreviewActors;                                 		// 0x0060 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UOnlineGameParty_TA*                         OnlineParty;                                      		// 0x0070 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bRemotePlayersHidden : 1;                         		// 0x0078 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	int                                                MaxCars;                                          		// 0x007C (0x0004) [0x0000000000000002] (CPF_Const)   
	struct FScriptDelegate                             __EventPreviewActorsChanged__Delegate;            		// 0x0080 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPreviewActorSetProfile__Delegate;          		// 0x0098 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSwapFinished__Delegate;                    		// 0x00B0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarPreviewSet_TA");
		}

		return uClassPointer;
	};

	void __CarPreviewSet_TA__Cleanup_AA4D5FF944CA50F20759D7A5236D2692(class ACarPreviewActor_TA* PreviewActor);
	bool SetRemotePlayersHidden(unsigned long bHidden);
	void HandlePrimaryPlayerSet(class APlayerController_Menu_TA* PC);
	void OnPreviewActorsChanged();
	void HandlePartyMemberLoadoutRemoved();
	void HandlePartyMemberLoadoutChange(struct FUniqueNetId PlayerID);
	void HandleReceiveController(class UPlayer* PlayerRef);
	void HandlePlayerJoin(class ULocalPlayer* P);
	void UpdatePreview(int Index);
	void UpdatePreviewForPlayer(class ULocalPlayer* P);
	class ACarPreviewActor_TA* GetMainCarPreview(class ULocalPlayer* P);
	class ACarPreviewActor_TA* GetPlayerCarPreviewActor(class ULocalPlayer* P);
	void UpdateAllPreviews();
	void InitPreviewActors();
	void HandleCarPreviewActorAdded(class UGameShare_TA* GameShare, class ACarPreviewActor_TA* PreviewActor);
	void Cleanup();
	void Init();
	void EventSwapFinished();
	void EventPreviewActorSetProfile(class ACarPreviewActor_TA* Car);
	void EventPreviewActorsChanged(class UCarPreviewSet_TA* G);
};

// Class TAGame.CameraState_Demolished_TA
// 0x002C (0x0098 - 0x00C4)
class UCameraState_Demolished_TA : public UCameraState_TA
{
public:
	float                                              RotationInterpRate;                               		// 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class APawn*                                       DemolishedPawn;                                   		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              StateTime;                                        		// 0x00A8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              InitialFOV;                                       		// 0x00AC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FOVBlendTime;                                     		// 0x00B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bInterp : 1;                                      		// 0x00B4 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bTrackDemolisher : 1;                             		// 0x00B4 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	float                                              MaxZoomInFOV;                                     		// 0x00B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxFOVBlendDistance;                              		// 0x00BC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Distance;                                         		// 0x00C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_Demolished_TA");
		}

		return uClassPointer;
	};

	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void EndCameraState();
	void BeginCameraState();
	bool ShouldKeepExecuting();
	bool ShouldExecute();
	struct FViewTargetTransitionParams GetEndBlendParams(class UCameraState_X* NewState);
};

// Class TAGame.CameraState_Freecam_TA
// 0x0084 (0x00A8 - 0x012C)
class UCameraState_Freecam_TA : public UCameraState_CarRef_TA
{
public:
	struct FCameraOrientation                          ViewOffset_Near;                                  		// 0x00A8 (0x002C) [0x0000000000000001] (CPF_Edit)    
	struct FCameraOrientation                          ViewOffset_Far;                                   		// 0x00D4 (0x002C) [0x0000000000000001] (CPF_Edit)    
	struct FCameraOrientation                          ViewOffset;                                       		// 0x0100 (0x002C) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_Freecam_TA");
		}

		return uClassPointer;
	};

	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	bool ShouldExecute();
};

// Class TAGame.CameraState_LiveReplay_TA
// 0x00A0 (0x008C - 0x012C)
class UCameraState_LiveReplay_TA : public UCameraState_X
{
public:
	struct FVector                                     LocationOffset;                                   		// 0x0090 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           FocusSpeedOverTime;                               		// 0x00A0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              CarBallFocusBlendDistance;                        		// 0x00B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Distance;                                         		// 0x00BC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FOV;                                              		// 0x00C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SlomoInterpTime;                                  		// 0x00C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SlomoDistance;                                    		// 0x00C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SlomoFOV;                                         		// 0x00CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     VelocityPrediction;                               		// 0x00D0 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              InterpToFieldCenterRate;                          		// 0x00DC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              InterpToFieldCenterOffset;                        		// 0x00E0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ExplosionFocusDelay;                              		// 0x00E4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ScorerOffsetInterpSpeed;                          		// 0x00E8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AGameEvent_Soccar_TA*                        SoccarGame;                                       		// 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACar_TA*                                     FocusCar;                                         		// 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ABall_TA*                                    FocusBall;                                        		// 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bHasDoneFirstUpdate : 1;                          		// 0x0108 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bCanUpdate : 1;                                   		// 0x0108 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bSetGoalScorerFocusOffset : 1;                    		// 0x0108 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	float                                              LastFocusChangeTime;                              		// 0x010C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              SlomoTime;                                        		// 0x0110 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGoal_TA*                                    Goal;                                             		// 0x0118 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	struct FVector                                     GoalScorerFocusOffset;                            		// 0x0120 (0x000C) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_LiveReplay_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	struct FVector GetCameraBaseLocation(struct FVector CameraFocus);
	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void Tick(float DeltaTime);
	void UpdateSlomo(float DeltaTime);
	void EndCameraState();
	void BeginCameraState();
	struct FViewTargetTransitionParams GetEndBlendParams(class UCameraState_X* NewState);
	bool ShouldExecute();
};

// Class TAGame.CameraState_ReplayAutoCam_TA
// 0x020C (0x00B4 - 0x02C0)
class UCameraState_ReplayAutoCam_TA : public UCameraState_Replay_TA
{
public:
	float                                              FOVInterpSpeed;                                   		// 0x00B8 (0x0004) [0x0000000000000000]               
	float                                              StartViewFocusTime;                               		// 0x00BC (0x0004) [0x0000000000000000]               
	float                                              FocusPitchInterpSpeed;                            		// 0x00C0 (0x0004) [0x0000000000000000]               
	float                                              FocusYawInterpSpeed;                              		// 0x00C4 (0x0004) [0x0000000000000000]               
	float                                              AerialFOV;                                        		// 0x00C8 (0x0004) [0x0000000000000000]               
	float                                              CountDownFOV;                                     		// 0x00CC (0x0004) [0x0000000000000000]               
	float                                              CountDownPanSpeed;                                		// 0x00D0 (0x0004) [0x0000000000000000]               
	float                                              CountDownRotateSpeed;                             		// 0x00D4 (0x0004) [0x0000000000000000]               
	float                                              CountDownPanBlendAmount;                          		// 0x00D8 (0x0004) [0x0000000000000000]               
	float                                              CountDownFocusActorStartTime;                     		// 0x00DC (0x0004) [0x0000000000000000]               
	float                                              LocationBlendSpeed;                               		// 0x00E0 (0x0004) [0x0000000000000000]               
	float                                              BallAerialZStartTime;                             		// 0x00E4 (0x0004) [0x0000000000000000]               
	float                                              MinBallAerialZHeight;                             		// 0x00E8 (0x0004) [0x0000000000000000]               
	float                                              MinPlayerAerialZHeight;                           		// 0x00EC (0x0004) [0x0000000000000000]               
	float                                              MinFocusActorViewTime;                            		// 0x00F0 (0x0004) [0x0000000000000000]               
	float                                              BallFloorFocusPercent;                            		// 0x00F4 (0x0004) [0x0000000000000000]               
	float                                              LocationAngleInterpSpeed;                         		// 0x00F8 (0x0004) [0x0000000000000000]               
	float                                              LastLocationAngleUpdateTime;                      		// 0x00FC (0x0004) [0x0000000000000000]               
	float                                              MinStartRadiusForPlayerAerial;                    		// 0x0100 (0x0004) [0x0000000000000000]               
	float                                              MaxStartRadiusForPlayerAerial;                    		// 0x0104 (0x0004) [0x0000000000000000]               
	float                                              DesiredCameraDistance;                            		// 0x0108 (0x0004) [0x0000000000000000]               
	float                                              ResetToMapDefaultTime;                            		// 0x010C (0x0004) [0x0000000000000000]               
	float                                              MaxWaitTimeTillBallHit;                           		// 0x0110 (0x0004) [0x0000000000000000]               
	float                                              FocusActorZViewOffset;                            		// 0x0114 (0x0004) [0x0000000000000000]               
	float                                              FloorTraceDistance;                               		// 0x0118 (0x0004) [0x0000000000000000]               
	float                                              BackAwayFromWallDistance;                         		// 0x011C (0x0004) [0x0000000000000000]               
	float                                              NoCarsNearBallDistance;                           		// 0x0120 (0x0004) [0x0000000000000000]               
	float                                              MinPlayerCameraFloorHeight;                       		// 0x0124 (0x0004) [0x0000000000000000]               
	float                                              FocusPointInterpSpeed;                            		// 0x0128 (0x0004) [0x0000000000000000]               
	float                                              MinMaxPitch;                                      		// 0x012C (0x0004) [0x0000000000000000]               
	float                                              LastDesiredLocationBlendSpeed;                    		// 0x0130 (0x0004) [0x0000000000000000]               
	float                                              AdditionalFocusZ;                                 		// 0x0134 (0x0004) [0x0000000000000000]               
	float                                              TimeSinceIgnoredGoalFocusExtent;                  		// 0x0138 (0x0004) [0x0000000000000000]               
	float                                              LastTimeAPlayerWasNearBall;                       		// 0x013C (0x0004) [0x0000000000000000]               
	float                                              AdditionalBackAwayFromBallSpeed;                  		// 0x0140 (0x0004) [0x0000000000000000]               
	float                                              GoalScorerFocusDistance;                          		// 0x0144 (0x0004) [0x0000000000000000]               
	float                                              MapResetStartDistance;                            		// 0x0148 (0x0004) [0x0000000000000000]               
	float                                              MapResetStartHeight;                              		// 0x014C (0x0004) [0x0000000000000000]               
	float                                              GoalScoredDistance;                               		// 0x0150 (0x0004) [0x0000000000000000]               
	float                                              MaxGoalYZoomOutDistance;                          		// 0x0154 (0x0004) [0x0000000000000000]               
	float                                              MaxGoalXZoomOutDistance;                          		// 0x0158 (0x0004) [0x0000000000000000]               
	float                                              MinCameraDistanceToBall;                          		// 0x015C (0x0004) [0x0000000000000000]               
	unsigned long                                      bSnapFOV : 1;                                     		// 0x0160 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bSnapToFocus : 1;                                 		// 0x0160 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bBallHasBeenHit : 1;                              		// 0x0160 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bHasGoalScorerFocus : 1;                          		// 0x0160 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bHitWallLastFrame : 1;                            		// 0x0160 (0x0004) [0x0000000000000000] [0x00000010] 
	struct FVector                                     BallFloorLocation;                                		// 0x0164 (0x000C) [0x0000000000000000]               
	struct FVector                                     BallFloorNormal;                                  		// 0x0170 (0x000C) [0x0000000000000000]               
	struct FVector                                     LastCarFocusOffset;                               		// 0x017C (0x000C) [0x0000000000000000]               
	struct FVector                                     CountDownPanDirection;                            		// 0x0188 (0x000C) [0x0000000000000000]               
	struct FVector                                     CountDownPanStartOffset;                          		// 0x0194 (0x000C) [0x0000000000000000]               
	struct FVector                                     CountDownRotateOffset;                            		// 0x01A0 (0x000C) [0x0000000000000000]               
	struct FVector                                     LastFocusOffset;                                  		// 0x01AC (0x000C) [0x0000000000000000]               
	struct FVector                                     LastFocusLocation;                                		// 0x01B8 (0x000C) [0x0000000000000000]               
	struct FVector                                     LastDesiredLocation;                              		// 0x01C4 (0x000C) [0x0000000000000000]               
	struct FRotator                                    LocationAngle;                                    		// 0x01D0 (0x000C) [0x0000000000000000]               
	struct FRotator                                    DesiredLocationAngle;                             		// 0x01DC (0x000C) [0x0000000000000000]               
	struct FRotator                                    DesiredRotation;                                  		// 0x01E8 (0x000C) [0x0000000000000000]               
	struct FRotator                                    MapResetStartRotation;                            		// 0x01F4 (0x000C) [0x0000000000000000]               
	class APRI_TA*                                     FocusActor;                                       		// 0x0200 (0x0008) [0x0000000000000000]               
	class APRI_TA*                                     LastScorer;                                       		// 0x0208 (0x0008) [0x0000000000000000]               
	TArray<class APRI_TA*>                             AerialPRIs;                                       		// 0x0210 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class APRI_TA*>                             CountDownPRIs;                                    		// 0x0220 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UGoal_TA*                                    GoalFocus;                                        		// 0x0230 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	unsigned char                                      CountDownFocusType;                               		// 0x0238 (0x0001) [0x0000000000000000]               
	class ABall_TA*                                    Ball;                                             		// 0x0240 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AGameEvent_Soccar_TA*                        SoccarGame;                                       		// 0x0248 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UCameraState_X*                              ReplayCameraState;                                		// 0x0250 (0x0008) [0x0000000000000000]               
	struct FProfileSliderLimits                        CameraDistanceLimits;                             		// 0x0258 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        CameraZLimits;                                    		// 0x0264 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        CameraMoveSpeedLimits;                            		// 0x0270 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        CameraMoveSpeedZLimits;                           		// 0x027C (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        PlayerCameraDistanceLimits;                       		// 0x0288 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        RotateSpeedLimits;                                		// 0x0294 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        PlayerFocusBlendSpeedLimits;                      		// 0x02A0 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FProfileSliderLimits                        AerialPredictionLimits;                           		// 0x02AC (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UProfileCameraSave_TA*                       CameraSave;                                       		// 0x02B8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_ReplayAutoCam_TA");
		}

		return uClassPointer;
	};

	void __CameraState_ReplayAutoCam_TA__Init_2073008B493B6C62E479F3B0A40CC08E(class UProfileCameraSave_TA* SO);
	void DrawRotatedBox(struct FVector Origin, struct FRotator BoxRotation, struct FVector Extent, struct FColor C, unsigned long bPersistent);
	bool RotatedBoxContainsPoint(struct FVector Origin, struct FRotator BoxRotation, struct FVector Extent, struct FVector Point);
	struct FVector FlattenPointToPlane(struct FVector Center, struct FRotator Rot, struct FVector Point);
	class AGameEvent_Soccar_TA* GetSoccarGame();
	class UCameraState_X* GetProxyCameraState();
	bool LookingAtWall(struct FRotator CameraRotation);
	void HandleBallExploded(class ABall_TA* InBall);
	void ResetCameraToMapDefault();
	float GetDefaultMoveSpeed();
	bool WasJustIgnoringGoalFocusExtent(float MinTimeSince);
	float ModifyByAerialMultiplier(float Min, float Max);
	float GetAerialPredictionMultiplier();
	bool GetFocusOnGoals();
	bool GetCutToAerialCam();
	bool BallIsAboveMinAerialZ();
	bool GetAllowFocusActor();
	bool GetUseReplayCamera();
	float GetFocusActorBlendSpeed();
	float GetDesiredAerialActorDistance();
	float GetDesiredRotateSpeed();
	float GetDesiredMoveSpeedZ();
	float GetDesiredMoveSpeed();
	float GetDesiredCameraZ();
	bool BallHasBeenHit();
	void UpdateDesiredCameraDistance(float DeltaTime);
	float GetDefaultCameraDistance();
	float GetDesiredCameraDistance();
	float GetDesiredCameraFOV();
	void HandleGameStateChanged(class AGameEvent_TA* GameEvent);
	bool ChooseCountDownFocusActor();
	void UpdateCountDownTextureStreaming();
	class APRI_TA* GetNextEligibleCountDownFocusActor();
	bool IsCountDownFocusEligible(class APRI_TA* PRI);
	void ResetCountDownPRIs();
	void HandleFirstBallHit(class AGameEvent_Soccar_TA* GameEvent);
	bool InGameState(struct FName StateName);
	class APRI_TA* PredictFirstPlayerToBall();
	bool APlayerIsMovingTowardCenterWithinRadius(struct FVector Center, float Radius, float MinDotAngleTowardsBall);
	bool MovingTowardsBall(class APRI_TA* PRI, float MaxDotAngle);
	bool FlyingTowardsBall(class APRI_TA* PRI, float MinZFlyHeight, float MinAcceptableDistanceToBall);
	bool AddToAerialPRIs(class APRI_TA* PRI);
	void ResetFocusActorSettings();
	class APRI_TA* UpdateAerialPRIs(float PickWaitTime);
	bool SetFocusActor(class APRI_TA* PRI);
	bool UpdateFocusActor_PostGoal(struct FVector FocusPoint, float DeltaTime, struct FCameraOrientation& OutPOV);
	void HandlePlayerScored(class AGameEvent_Soccar_TA* GameEvent, class APRI_TA* Scorer);
	void UpdateFocusActor_POV(struct FVector FocusPoint, float DeltaTime, float BlendSpeed, unsigned long bCutToCamera, struct FCameraOrientation& OutPOV);
	bool UpdateFocusActor_Active(struct FVector FocusPoint, float DeltaTime, struct FCameraOrientation& OutPOV);
	bool UpdateFocusActor_CountDown(struct FVector FocusPoint, float DeltaTime, struct FCameraOrientation& OutPOV);
	bool UpdateFocusActor(struct FVector FocusPoint, float DeltaTime, struct FCameraOrientation& OutPOV);
	void AdjustSideLocation(struct FVector& AdjustedLocation);
	bool AdjustDesiredLocationAngleFromHit(struct FVector TraceStart, struct FVector HitLocation, struct FVector HitNormal, float ExtraTraceDistance, struct FVector& Out_AdjustedLocation);
	bool CanFitAtLocation(struct FVector DesiredLocation, float ExtraTraceDistance, struct FVector& Out_TraceStart, struct FVector& out_HitLocation, struct FVector& out_HitNormal);
	void AdjustDesiredLocation(struct FVector& AdjustedLocation);
	bool CanMoveCameraToThisAngle(struct FVector CameraLocation, struct FRotator NewAngle, float DesiredTraceDistance);
	struct FRotator GetBallSideAngle(struct FVector CameraLocation);
	void SetDesiredLocationAngle(struct FRotator NewAngle);
	bool BallToCloseOrMovingTowardCamera(struct FVector CameraLocation);
	bool UpdateLocationAngle(struct FCameraOrientation& POV);
	struct FVector GetBallFloorFocusPoint(float DeltaTime);
	class UGoal_TA* FindGoalWithinRange();
	float GetZAngleFromLocation(struct FVector ActorLocation, struct FRotator ActorRotation, struct FVector TestLocation);
	float GetYAngleFromLocation(struct FVector ActorLocation, struct FRotator ActorRotation, struct FVector TestLocation);
	bool FloorTrace(struct FVector TraceStart, float TraceDistance, struct FVector& out_HitLocation, struct FVector& out_HitNormal);
	float GetDesiredZLocation(struct FVector OldCameraLocation, struct FVector NewCameraLocation, struct FVector DesiredLocation, float& Out_MinZHeight);
	void UpdateLocation(struct FVector FocusPoint, float DeltaTime, struct FCameraOrientation& OutPOV);
	void UpdateRotation(struct FVector FocusPoint, float YawInterpSpeed, float PitchInterpSpeed, float DeltaTime, struct FCameraOrientation& OutPOV);
	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void SetFromMapInfo();
	void EndCameraState();
	void BeginCameraState();
	void Init(class ACamera_X* InCamera);
};

// Class TAGame.ProfileCameraSave_TA
// 0x00A0 (0x00C8 - 0x0168)
class UProfileCameraSave_TA : public USaveObject_TA
{
public:
	struct FProfileAutoCamSettings                     AutoCam;                                          		// 0x00C8 (0x0028) [0x0000000000000000]               
	struct FProfileCameraSettings                      Camera;                                           		// 0x00F0 (0x001C) [0x0000000000000000]               
	unsigned long                                      bInvertSwivelPitch : 1;                           		// 0x010C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bInvertSpectatorPitch : 1;                        		// 0x010C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bLockSpectatorBallCam : 1;                        		// 0x010C (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bFreecam : 1;                                     		// 0x010C (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bPrefersSecondaryCamera : 1;                      		// 0x010C (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bToggleSecondaryCamera : 1;                       		// 0x010C (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bToggleRearCamera : 1;                            		// 0x010C (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bUseBallIndicator : 1;                            		// 0x010C (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bUseBallCamIndicator : 1;                         		// 0x010C (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bEnableCameraShake : 1;                           		// 0x010C (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bDirectorAllowCameraBlending : 1;                 		// 0x010C (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bHoldMouseCameraEnabled : 1;                      		// 0x010C (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bMouseCameraSwivel : 1;                           		// 0x010C (0x0004) [0x0000000000000000] [0x00001000] 
	unsigned char                                      CameraSettingsPreset;                             		// 0x0110 (0x0001) [0x0000000000004000] (CPF_Config)  
	float                                              DirectorMinChangeTeamFocusTime;                   		// 0x0114 (0x0004) [0x0000000000000000]               
	float                                              DirectorMinSameTeamFocusTime;                     		// 0x0118 (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             __bToggleSecondaryCamera__ChangeNotify;           		// 0x0120 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bHoldMouseCameraEnabled__ChangeNotify;          		// 0x0138 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bMouseCameraSwivel__ChangeNotify;               		// 0x0150 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProfileCameraSave_TA");
		}

		return uClassPointer;
	};

	void __bMouseCameraSwivel__ChangeNotifyFunc();
	void __bHoldMouseCameraEnabled__ChangeNotifyFunc();
	void __bToggleSecondaryCamera__ChangeNotifyFunc();
	void OnLoad();
};

// Class TAGame.MapInfo_TA
// 0x00B4 (0x0060 - 0x0114)
class UMapInfo_TA : public UMapInfo
{
public:
	struct FWorldColorData                             WorldColors;                                      		// 0x0060 (0x0040) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      MirrorFieldType;                                  		// 0x00A0 (0x0001) [0x0000000000000001] (CPF_Edit)    
	int                                                MirrorFieldXYRotation;                            		// 0x00A4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     FieldCenter;                                      		// 0x00A8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              MinStadiumBrightness;                             		// 0x00B4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    MapResetStartRotation;                            		// 0x00B8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              MapResetStartHeight;                              		// 0x00C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MapResetStartDistance;                            		// 0x00C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxWaitTimeTillBallHit;                           		// 0x00CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              GoalScoredDistance;                               		// 0x00D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxGoalYZoomOutDistance;                          		// 0x00D4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxGoalXZoomOutDistance;                          		// 0x00D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CountDownFOV;                                     		// 0x00DC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BackAwayFromWallDistance;                         		// 0x00E0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     PylonExtentOverride;                              		// 0x00E4 (0x000C) [0x0000000000000001] (CPF_Edit)    
	class UArenaSoundSettings_TA*                      ArenaSoundSettings;                               		// 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UCrowdSounds_TA*                             CrowdSounds;                                      		// 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<class ACrowdActor_TA*>                      CrowdActors;                                      		// 0x0100 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long                                      bPlayGlobalCrowdSounds : 1;                       		// 0x0110 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MapInfo_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.CameraState_ReplayFly_TA
// 0x0004 (0x00B4 - 0x00B8)
class UCameraState_ReplayFly_TA : public UCameraState_Replay_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_ReplayFly_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.CameraState_ReplayFollow_TA
// 0x0030 (0x00B4 - 0x00E4)
class UCameraState_ReplayFollow_TA : public UCameraState_Replay_TA
{
public:
	float                                              FollowDistance;                                   		// 0x00B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinFollowDistance;                                		// 0x00BC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxFollowDistance;                                		// 0x00C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           FollowRotationRateCurve;                          		// 0x00C8 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long                                      bFirstExecution : 1;                              		// 0x00E0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_ReplayFollow_TA");
		}

		return uClassPointer;
	};

	void UpdateFocusActorPOV(class AActor* FocusActor, float DeltaTime, struct FCameraOrientation& OutPOV);
	bool IsDisabled(struct FName CameraMode, struct FString InFocusActorString);
	void eventBeginCameraState();
};

// Class TAGame.CameraState_ReplaySoftAttach_TA
// 0x0020 (0x00B4 - 0x00D4)
class UCameraState_ReplaySoftAttach_TA : public UCameraState_Replay_TA
{
public:
	struct FRotator                                    AttachRotation;                                   		// 0x00B8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     AttachOffset;                                     		// 0x00C4 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxDistance;                                      		// 0x00D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_ReplaySoftAttach_TA");
		}

		return uClassPointer;
	};

	void ClampPOV(struct FCameraOrientation& OutPOV);
	void UpdateFocusActorPOV(class AActor* FocusActor, float DeltaTime, struct FCameraOrientation& OutPOV);
	bool IsDisabled(struct FName CameraMode, struct FString InFocusActorString);
};

// Class TAGame.CameraState_ReplayHardAttach_TA
// 0x0004 (0x00D4 - 0x00D8)
class UCameraState_ReplayHardAttach_TA : public UCameraState_ReplaySoftAttach_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_ReplayHardAttach_TA");
		}

		return uClassPointer;
	};

	void UpdateFocusActorPOV(class AActor* FocusActor, float DeltaTime, struct FCameraOrientation& OutPOV);
	bool IsDisabled(struct FName CameraMode, struct FString InFocusActorString);
};

// Class TAGame.CameraState_ReplayPlayerView_TA
// 0x0024 (0x00B4 - 0x00D8)
class UCameraState_ReplayPlayerView_TA : public UCameraState_Replay_TA
{
public:
	class UCameraState_X*                              CarCameraState;                                   		// 0x00B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UCameraState_X*                              BallCameraState;                                  		// 0x00C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UCameraState_X*                              CurrentCameraState;                               		// 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProfileCameraSave_TA*                       CameraSave;                                       		// 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_ReplayPlayerView_TA");
		}

		return uClassPointer;
	};

	void __CameraState_ReplayPlayerView_TA__Init_EBEF90554D7145EB197F95BF526DB83F(class UProfileCameraSave_TA* SO);
	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	class UCameraState_X* GetProxyCameraState();
	void Init(class ACamera_X* InCamera);
	bool AllowSwivel();
	bool IsDisabled(struct FName CameraMode, struct FString InFocusActorString);
};

// Class TAGame.CameraState_SeasonIntro_TA
// 0x0014 (0x008C - 0x00A0)
class UCameraState_SeasonIntro_TA : public UCameraState_X
{
public:
	float                                              RotateSpeed;                                      		// 0x0090 (0x0004) [0x0000000000000000]               
	float                                              ZHeightPercent;                                   		// 0x0094 (0x0004) [0x0000000000000000]               
	float                                              XOffsetDistance;                                  		// 0x0098 (0x0004) [0x0000000000000000]               
	float                                              DefaultFOV;                                       		// 0x009C (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_SeasonIntro_TA");
		}

		return uClassPointer;
	};

	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	bool ShouldExecute();
	class AGameEvent_Soccar_TA* GetGameEvent();
};

// Class TAGame.CameraState_Waiting_TA
// 0x000C (0x020C - 0x0218)
class UCameraState_Waiting_TA : public UCameraState_CamActor_X
{
public:
	float                                              MinExecutionTime;                                 		// 0x0210 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ExecutionTime;                                    		// 0x0214 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_Waiting_TA");
		}

		return uClassPointer;
	};

	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void Tick(float DeltaTime);
	bool ShouldKeepExecuting();
	struct FViewTargetTransitionParams GetEndBlendParams(class UCameraState_X* NewState);
	bool ShouldExecute();
};

// Class TAGame.Cannon_TA
// 0x0041 (0x0268 - 0x02A9)
class ACannon_TA : public AActor
{
public:
	class USkeletalMeshComponent*                      Mesh;                                             		// 0x0268 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UAnimTree*                                   CannonAnimTree;                                   		// 0x0270 (0x0008) [0x0000000000000000]               
	class UAnimSet*                                    CannonAnimSet;                                    		// 0x0278 (0x0008) [0x0000000000000000]               
	class UAnimNodeSlot*                               FullBodyAnimSlot;                                 		// 0x0280 (0x0008) [0x0000000000000000]               
	class USkelControlSingleBone*                      PitchControl;                                     		// 0x0288 (0x0008) [0x0000000000000000]               
	float                                              Pitch;                                            		// 0x0290 (0x0004) [0x0000000000000020] (CPF_Net)     
	class UParticleSystem*                             EngineThrusterParticle;                           		// 0x0298 (0x0008) [0x0000000000000000]               
	class UAkSoundCue*                                 CannonFireSound;                                  		// 0x02A0 (0x0008) [0x0000000000000000]               
	unsigned char                                      FireCount;                                        		// 0x02A8 (0x0001) [0x0000000000000020] (CPF_Net)     
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Cannon_TA");
		}

		return uClassPointer;
	};

	void Fire();
	void DoSimulatedFire();
	void PlayFullBodyAnim(struct FName AnimName, float Rate, float BlendIn, float BlendOut, unsigned long bLoop);
	void SetPitch(float InPitch);
	void eventPostBeginPlay();
	void eventReplicatedEvent(struct FName VarName);
};

// Class TAGame.LocalPlayerAudioParamsComponent_TA
// 0x0018 (0x0070 - 0x0088)
class ULocalPlayerAudioParamsComponent_TA : public UComponent
{
public:
	class UISetParameter*                              ParameterInterface;                               		// 0x0070 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0078 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
	class APlayerController*                           PC;                                               		// 0x0080 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.LocalPlayerAudioParamsComponent_TA");
		}

		return uClassPointer;
	};

	void __LocalPlayerAudioParamsComponent_TA__Init_8189A771456EF0978C829DA38D802A1D(class AGameEvent_TA* _);
	void __LocalPlayerAudioParamsComponent_TA__Init_A85CA9FA4896C5DE13630A9B86EE8EA8(class ACamera_TA* C, class AActor* T);
	void __LocalPlayerAudioParamsComponent_TA__Init_95075B074FE13A3035E6EB8B062F7AD7(class ACamera_X* C, class UCameraState_X* CS);
	void UpdateReplayCameraLocalView(class ACamera_Replay_TA* Camera);
	void UpdateNumLocalPlayers(class UGameViewportClient_TA* GVC, int LocalPlayerCount);
	void HandleLocalPlayerChange(class ULocalPlayer* NewPlayer);
	int GetListenerFromSplitScreenPosition(unsigned char InSplitScreenPosition);
	void ApplyParams(unsigned long bIsLocal, unsigned char SplitScreenPosition);
	void UpdateParams();
	void Init(class APlayerController* InPC, class UISetParameter* InParameterInterface);
};

// Class TAGame.TeamColorPreferences_TA
// 0x0020 (0x0060 - 0x0080)
class UTeamColorPreferences_TA : public UObject
{
public:
	unsigned long                                      bColorBlind : 1;                                  		// 0x0060 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bForceDefaultColors : 1;                          		// 0x0060 (0x0004) [0x0000000000000000] [0x00000002] 
	struct FScriptDelegate                             EventPropertyChange;                              		// 0x0068 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TeamColorPreferences_TA");
		}

		return uClassPointer;
	};

	void EventPropertyChangeFunc();
	bool AllowCustomTeamColors();
};

// Class TAGame.__CarMeshComponentBase_TA__ApplyPaintToObject_6A2FF8F84770403770D7B095407959B0
// 0x0020 (0x0060 - 0x0080)
class U__CarMeshComponentBase_TA__ApplyPaintToObject_6A2FF8F84770403770D7B095407959B0 : public UObject
{
public:
	class UProductPaint_TA*                            ProductPaint;                                     		// 0x0060 (0x0008) [0x0000000000000000]               
	class UProductAttribute_PaintSettings_TA*          PaintSettings;                                    		// 0x0068 (0x0008) [0x0000000000000000]               
	class UObject*                                     ObjectToPaint;                                    		// 0x0070 (0x0008) [0x0000000000000000]               
	class UProductAsset_TA*                            Product;                                          		// 0x0078 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CarMeshComponentBase_TA__ApplyPaintToObject_6A2FF8F84770403770D7B095407959B0");
		}

		return uClassPointer;
	};

	void __CarMeshComponentBase_TA__ApplyPaintToObject_6A2FF8F84770403770D7B095407959B0();
};

// Class TAGame.__CarMeshComponentBase_TA__AttachOrnament_DD2553CE48F041BC9061CE82F12499F6
// 0x0008 (0x0060 - 0x0068)
class U__CarMeshComponentBase_TA__AttachOrnament_DD2553CE48F041BC9061CE82F12499F6 : public UObject
{
public:
	class UAprilConfig_X*                              AprilConfig;                                      		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CarMeshComponentBase_TA__AttachOrnament_DD2553CE48F041BC9061CE82F12499F6");
		}

		return uClassPointer;
	};

	void __CarMeshComponentBase_TA__AttachOrnament_5445E1B74C6B3147B9F03CA7FBA8B219(class UPrimitiveComponent* PrimComp);
	void __CarMeshComponentBase_TA__AttachOrnament_DD2553CE48F041BC9061CE82F12499F6(class UPrimitiveComponent* PrimComp);
};

// Class TAGame.AssetAttribute_ChangeProductDrawScale_TA
// 0x0010 (0x0060 - 0x0070)
class UAssetAttribute_ChangeProductDrawScale_TA : public UProductAssetAttribute_TA
{
public:
	TArray<struct FProductSlotNewDrawScale>            NewProductDrawScales;                             		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AssetAttribute_ChangeProductDrawScale_TA");
		}

		return uClassPointer;
	};

	float GetDrawScale(class UProductSlot_TA* SlotToFind);
};

// Class TAGame.__CarMeshComponentBase_TA__ApplyPaintSettings_B1CDDD34498AD8D382BF4980C4A8E334
// 0x0038 (0x0060 - 0x0098)
class U__CarMeshComponentBase_TA__ApplyPaintSettings_B1CDDD34498AD8D382BF4980C4A8E334 : public UObject
{
public:
	struct FAssociativeMaterialParams                  AdditionalParams;                                 		// 0x0060 (0x0038) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CarMeshComponentBase_TA__ApplyPaintSettings_B1CDDD34498AD8D382BF4980C4A8E334");
		}

		return uClassPointer;
	};

	bool __CarMeshComponentBase_TA__ApplyPaintSettings_B1CDDD34498AD8D382BF4980C4A8E334(class UMaterialInterface* X);
};

// Class TAGame.AssetAttribute_ForceWheelAxle_TA
// 0x0010 (0x0060 - 0x0070)
class UAssetAttribute_ForceWheelAxle_TA : public UProductAssetAttribute_TA
{
public:
	unsigned char                                      AxleToForce;                                      		// 0x0060 (0x0001) [0x0000000000000001] (CPF_Edit)    
	class UProductAsset_Wheel_TA*                      ForcedWheel;                                      		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AssetAttribute_ForceWheelAxle_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__CarMeshComponentBase_TA__RemoveProductAttributeFromProduct_E773EAED45D8F25912AFF29725AD2B3F
// 0x0008 (0x0060 - 0x0068)
class U__CarMeshComponentBase_TA__RemoveProductAttributeFromProduct_E773EAED45D8F25912AFF29725AD2B3F : public UObject
{
public:
	class UClass*                                      AttributeClassToRemove;                           		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CarMeshComponentBase_TA__RemoveProductAttributeFromProduct_E773EAED45D8F25912AFF29725AD2B3F");
		}

		return uClassPointer;
	};

	bool __CarMeshComponentBase_TA__RemoveProductAttributeFromProduct_E773EAED45D8F25912AFF29725AD2B3F(class UProductAttribute_TA* CurAttribute);
};

// Class TAGame.__CarMeshComponentBase_TA__CreateWheelAttachment_1C639FA640446178D2D38781EE8BCC99
// 0x0010 (0x0060 - 0x0070)
class U__CarMeshComponentBase_TA__CreateWheelAttachment_1C639FA640446178D2D38781EE8BCC99 : public UObject
{
public:
	class UProductAsset_Wheel_TA*                      Asset;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
	class UPrimitiveComponent*                         PrimComp;                                         		// 0x0068 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CarMeshComponentBase_TA__CreateWheelAttachment_1C639FA640446178D2D38781EE8BCC99");
		}

		return uClassPointer;
	};

	void __CarMeshComponentBase_TA__CreateWheelAttachment_1C639FA640446178D2D38781EE8BCC99(class UAttachmentBehavior_TA* Behavior);
};

// Class TAGame.__CarMeshComponentBase_TA__CreateWheelMesh_896849014A42527382C0BFA16502F3A5
// 0x0010 (0x0060 - 0x0070)
class U__CarMeshComponentBase_TA__CreateWheelMesh_896849014A42527382C0BFA16502F3A5 : public UObject
{
public:
	class UProductAsset_Wheel_TA*                      Asset;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
	class UMeshComponent*                              WheelMesh;                                        		// 0x0068 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CarMeshComponentBase_TA__CreateWheelMesh_896849014A42527382C0BFA16502F3A5");
		}

		return uClassPointer;
	};

	void __CarMeshComponentBase_TA__CreateWheelMesh_896849014A42527382C0BFA16502F3A5(struct FWheelAttachment A);
};

// Class TAGame.__CarMeshComponentBase_TA__AddVisualAsset_DEF90C8C47958DB99001B5981F3E71D3
// 0x0008 (0x0060 - 0x0068)
class U__CarMeshComponentBase_TA__AddVisualAsset_DEF90C8C47958DB99001B5981F3E71D3 : public UObject
{
public:
	class UProductAsset_TA*                            Asset;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CarMeshComponentBase_TA__AddVisualAsset_DEF90C8C47958DB99001B5981F3E71D3");
		}

		return uClassPointer;
	};

	void __CarMeshComponentBase_TA__AddVisualAsset_DEF90C8C47958DB99001B5981F3E71D3(struct FProductAttachment A);
};

// Class TAGame.ThrottleStateComponent_TA
// 0x0024 (0x00A4 - 0x00C8)
class UThrottleStateComponent_TA : public UActorComponent_X
{
public:
	class UAkSoundCue*                                 EngageSound;                                      		// 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 ReleaseSound;                                     		// 0x00B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AVehicle_TA*                                 Car;                                              		// 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              PrevThrottle;                                     		// 0x00C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bPrevCarAccelerating : 1;                         		// 0x00C4 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bPrevCarIdling : 1;                               		// 0x00C4 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bCanThrottleEngage : 1;                           		// 0x00C4 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ThrottleStateComponent_TA");
		}

		return uClassPointer;
	};

	void StopThrottleSounds();
	void eventTick(float DeltaTime);
	void eventDetached();
	void eventAttached();
};

// Class TAGame.__ProductLoader_TA__GetAssetByID_C6EE026D4559850D7DD6138C84AE4585
// 0x0004 (0x0060 - 0x0064)
class U__ProductLoader_TA__GetAssetByID_C6EE026D4559850D7DD6138C84AE4585 : public UObject
{
public:
	int                                                ProductID;                                        		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ProductLoader_TA__GetAssetByID_C6EE026D4559850D7DD6138C84AE4585");
		}

		return uClassPointer;
	};

	bool __ProductLoader_TA__GetAssetByID_C6EE026D4559850D7DD6138C84AE4585(class UProductAsset_TA* A);
};

// Class TAGame.__ProductLoader_TA__GetAssetBySlot_B2848ECC4EE0B64A16762890B04B9FA6
// 0x0008 (0x0060 - 0x0068)
class U__ProductLoader_TA__GetAssetBySlot_B2848ECC4EE0B64A16762890B04B9FA6 : public UObject
{
public:
	class UProductSlot_TA*                             Slot;                                             		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ProductLoader_TA__GetAssetBySlot_B2848ECC4EE0B64A16762890B04B9FA6");
		}

		return uClassPointer;
	};

	bool __ProductLoader_TA__GetAssetBySlot_B2848ECC4EE0B64A16762890B04B9FA6(class UProductAsset_TA* A);
};

// Class TAGame.DemolishExplosion_TA
// 0x001C (0x0280 - 0x029C)
class ADemolishExplosion_TA : public AExplosion_X
{
public:
	float                                              PartRandomAngle;                                  		// 0x0280 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PartRandomSpeedMin;                               		// 0x0284 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PartRandomSpeedMax;                               		// 0x0288 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PartRandomSpeedMinZ;                              		// 0x028C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PartRandomSpeedMaxZ;                              		// 0x0290 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PartRandomAngularSpeed;                           		// 0x0294 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BodyLifetime;                                     		// 0x0298 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DemolishExplosion_TA");
		}

		return uClassPointer;
	};

	struct FVector GetRandomAngularVelocity();
	struct FVector GetRandomVelocity(struct FRotator AttackerRotation);
	void SpawnParts(struct FDemolishData Data);
	void Init(struct FDemolishData Data);
};

// Class TAGame.DemolishedCar_TA
// 0x0028 (0x0060 - 0x0088)
class UDemolishedCar_TA : public UObject
{
public:
	struct FDemolishData                               Data;                                             		// 0x0060 (0x0028) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DemolishedCar_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__Car_TA__QueueDemolish_BD1C4001478D8D6DAA6C57B6EEE1E161
// 0x0030 (0x0060 - 0x0090)
class U__Car_TA__QueueDemolish_BD1C4001478D8D6DAA6C57B6EEE1E161 : public UObject
{
public:
	struct FDemolishData                               Data;                                             		// 0x0060 (0x0028) [0x0000000000000000]               
	class AFXActor_X*                                  GoalExplosionDemoFxArchetype;                     		// 0x0088 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__Car_TA__QueueDemolish_BD1C4001478D8D6DAA6C57B6EEE1E161");
		}

		return uClassPointer;
	};

	void __Car_TA__QueueDemolish_BD1C4001478D8D6DAA6C57B6EEE1E161(float _);
};

// Class TAGame.DemoExplosionHandler_TA
// 0x0008 (0x0150 - 0x0158)
class UDemoExplosionHandler_TA : public UExplosionHitHandler_TA
{
public:
	class AFXActor_X*                                  DemoFXToApply;                                    		// 0x0150 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DemoExplosionHandler_TA");
		}

		return uClassPointer;
	};

	void ApplyImpulse(class ACar_TA* CarHit, struct FVector HitLocation, float DamageScale, struct FContactInformation& ContactInfo);
};

// Class TAGame.__Car_TA__QueueDemolish_Deprecated_B3151E084A3163F897B29DBC8150B861
// 0x0030 (0x0060 - 0x0090)
class U__Car_TA__QueueDemolish_Deprecated_B3151E084A3163F897B29DBC8150B861 : public UObject
{
public:
	struct FDemolishData                               Data;                                             		// 0x0060 (0x0028) [0x0000000000000000]               
	class AFXActor_X*                                  CustomDemoFX;                                     		// 0x0088 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__Car_TA__QueueDemolish_Deprecated_B3151E084A3163F897B29DBC8150B861");
		}

		return uClassPointer;
	};

	void __Car_TA__QueueDemolish_Deprecated_B3151E084A3163F897B29DBC8150B861(float _);
};

// Class TAGame.CarTrajectoryComponent_TA
// 0x0058 (0x00A4 - 0x00FC)
class UCarTrajectoryComponent_TA : public UActorComponent_X
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	TArray<struct FVector>                             Points;                                           		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                TotalDrawPoints;                                  		// 0x00C0 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                FramesBetweenPoints;                              		// 0x00C4 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              LastAngle;                                        		// 0x00C8 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    VelocityRot;                                      		// 0x00CC (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     CurrentVelocity;                                  		// 0x00D8 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     LastRotateAxis;                                   		// 0x00E4 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     LastVelocity;                                     		// 0x00F0 (0x000C) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarTrajectoryComponent_TA");
		}

		return uClassPointer;
	};

	float GetPointInterpSpeed(int PointIndex);
	void eventTick(float DeltaTime);
	void eventAttached();
	void SetEnabled(unsigned long bEnable);
};

// Class TAGame.NameplateComponent_TA
// 0x003C (0x00A4 - 0x00E0)
class UNameplateComponent_TA : public UActorComponent_X
{
public:
	struct FString                                     PlayerName;                                       		// 0x00A8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	int                                                Team;                                             		// 0x00B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bIsLocalPlayer : 1;                               		// 0x00BC (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bIsReady : 1;                                     		// 0x00BC (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bLocalizeName : 1;                                		// 0x00BC (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	int                                                SpectatorShortcut;                                		// 0x00C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FScriptDelegate                             __EventPlayerNameSet__Delegate;                   		// 0x00C8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NameplateComponent_TA");
		}

		return uClassPointer;
	};

	int GetSpectatorShortcut();
	bool IsReady();
	bool IsLocalPlayer(class APRI_TA* LocalPRI);
	int GetPlayerTeam();
	struct FString GetPlayerName();
	class APRI_TA* GetPRI();
	void SetPlayerName(struct FString InPlayerName);
	void eventDetached();
	void eventAttached();
	void EventPlayerNameSet(class UNameplateComponent_TA* NameplateComponent);
};

// Class TAGame.NameplateComponentCar_TA
// 0x0008 (0x00E0 - 0x00E8)
class UNameplateComponentCar_TA : public UNameplateComponent_TA
{
public:
	class ACar_TA*                                     Car;                                              		// 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NameplateComponentCar_TA");
		}

		return uClassPointer;
	};

	int GetSpectatorShortcut();
	bool IsReady();
	bool IsLocalPlayer(class APRI_TA* LocalPRI);
	int GetPlayerTeam();
	struct FString GetPlayerName();
	class APRI_TA* GetPRI();
	void eventAttached();
};

// Class TAGame.Car_Season_TA
// 0x0000 (0x0B20 - 0x0B20)
class ACar_Season_TA : public ACar_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Car_Season_TA");
		}

		return uClassPointer;
	};

	int GetLoadoutTeamIndex();
	void HandleLogoChanged(class ATeam_TA* Team);
	void UpdateTeamLogo();
	bool UpdateTeamLoadout();
};

// Class TAGame.ProfileControlsSave_TA
// 0x0048 (0x00C8 - 0x0110)
class UProfileControlsSave_TA : public USaveObject_TA
{
public:
	float                                              WaveformScalar;                                   		// 0x00C8 (0x0004) [0x0000000000000002] (CPF_Const)   
	unsigned char                                      ForceFeedbackType;                                		// 0x00CC (0x0001) [0x0000000000000000]               
	unsigned char                                      ForceFeedbackMode;                                		// 0x00CD (0x0001) [0x0000000000000000]               
	float                                              LegacyForceFeedbackScales[0x6] ;                  		// 0x00D0 (0x0018) [0x0000000000002002] (CPF_Const | CPF_Transient)
	float                                              ForceFeedbackScale;                               		// 0x00E8 (0x0004) [0x0000000000000000]               
	unsigned long                                      bPushToTalk : 1;                                  		// 0x00EC (0x0004) [0x0000000000000000] [0x00000001] 
	struct FName                                       ControlPresetName;                                		// 0x00F0 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __ControlPresetName__ChangeNotify;                		// 0x00F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProfileControlsSave_TA");
		}

		return uClassPointer;
	};

	void __ProfileControlsSave_TA__GetVersionDelegates_3E932BC94ADFE517C71F9BA2D2CD84A8(class UObject* SaveObj);
	void __ControlPresetName__ChangeNotifyFunc();
	void GetVersionDelegates(TArray<struct FScriptDelegate>& VersionDelegates);
	float GetWaveformScale();
	void OnCreate();
};

// Class TAGame.__CarComponent_Boost_TA__SetUnlimitedBoostDelayed_8882F4844F8418C465017080953D3C36
// 0x0004 (0x0060 - 0x0064)
class U__CarComponent_Boost_TA__SetUnlimitedBoostDelayed_8882F4844F8418C465017080953D3C36 : public UObject
{
public:
	unsigned long                                      Enabled : 1;                                      		// 0x0060 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CarComponent_Boost_TA__SetUnlimitedBoostDelayed_8882F4844F8418C465017080953D3C36");
		}

		return uClassPointer;
	};

	void __CarComponent_Boost_TA__SetUnlimitedBoostDelayed_8882F4844F8418C465017080953D3C36();
};

// Class TAGame.CarPreviewAnim_TA
// 0x0084 (0x00A4 - 0x0128)
class UCarPreviewAnim_TA : public UActorComponent_X
{
public:
	class UProductSlot_TA*                             Slot;                                             		// 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FPreviewAnimKeyframe>                KeyFrames;                                        		// 0x00B0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              Delay;                                            		// 0x00C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bDelayHidden : 1;                                 		// 0x00C4 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bLoop : 1;                                        		// 0x00C4 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bComponentWasAttached : 1;                        		// 0x00C4 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	struct FName                                       SkelControlName;                                  		// 0x00C8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class ACarPreviewActor_TA*                         PreviewActor;                                     		// 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPrimitiveComponent*                         Component;                                        		// 0x00D8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	struct FPreviewAnimKeyframe                        FinalKeyframe;                                    		// 0x00E0 (0x0038) [0x0000000000002000] (CPF_Transient)
	float                                              KeyframeTime;                                     		// 0x0118 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                KeyframeIndex;                                    		// 0x011C (0x0004) [0x0000000000002000] (CPF_Transient)
	class USkelControlSingleBone*                      SkelControl;                                      		// 0x0120 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarPreviewAnim_TA");
		}

		return uClassPointer;
	};

	void SetRotation(struct FRotator Rotation);
	void SetTranslation(struct FVector Translation);
	void UpdateAnim();
	void UpdateKeyframeIndex(float DeltaTime);
	void eventTick(float DeltaTime);
	void eventDetached();
	void Start(class ACarPreviewActor_TA* InOwner, class UPrimitiveComponent* InComponent);
};

// Class TAGame.MusicStingersPreview_TA
// 0x0028 (0x0060 - 0x0088)
class UMusicStingersPreview_TA : public UObject
{
public:
	class UProductAsset_MusicStingers_TA*              ProductAsset;                                     		// 0x0060 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UAkSoundCue*                                 StingerPreviewFadeCue;                            		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              PlayPreviewDelay;                                 		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                CurrentPlayingID;                                 		// 0x0074 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bStreamerSafe : 1;                                		// 0x0078 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class UStreamerSafeConfig_TA*                      StreamerSafeConfig;                               		// 0x0080 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MusicStingersPreview_TA");
		}

		return uClassPointer;
	};

	bool IsPreviewable();
	void StopPreview();
	void PlayPreview();
	void StartPreview();
	void UpdateStreamerSafe();
	void StreamerSafeConfigChanged();
	void Init(class UProductAsset_MusicStingers_TA* InProductAsset);
};

// Class TAGame.__CarPreviewActor_TA__UpdateTranslations_1FB201F04F27307488A981B293E8EB96
// 0x0008 (0x0060 - 0x0068)
class U__CarPreviewActor_TA__UpdateTranslations_1FB201F04F27307488A981B293E8EB96 : public UObject
{
public:
	class UProductAsset_Body_TA*                       BodyAsset;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CarPreviewActor_TA__UpdateTranslations_1FB201F04F27307488A981B293E8EB96");
		}

		return uClassPointer;
	};

	void __CarPreviewActor_TA__UpdateTranslations_1FB201F04F27307488A981B293E8EB96(struct FWheelSkelControlSet WC);
};

// Class TAGame.Profile_TA
// 0x0518 (0x0060 - 0x0578)
class UProfile_TA : public UObject
{
public:
	int                                                LocalId;                                          		// 0x0060 (0x0004) [0x0000000000000000]               
	struct FString                                     ProfileName;                                      		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class USaveData_TA*                                SaveData;                                         		// 0x0078 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                ControllerId;                                     		// 0x0080 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bMetric : 1;                                      		// 0x0084 (0x0004) [0x0000000000000002] [0x00000001] (CPF_Const)
	unsigned long                                      bMuteStatEvents : 1;                              		// 0x0084 (0x0004) [0x0000000000000002] [0x00000002] (CPF_Const)
	unsigned long                                      bDisableDivisions : 1;                            		// 0x0084 (0x0004) [0x0000000000000002] [0x00000004] (CPF_Const)
	unsigned long                                      bAlternateNameplates : 1;                         		// 0x0084 (0x0004) [0x0000000000000002] [0x00000008] (CPF_Const)
	unsigned long                                      bAlwaysShowNameplates : 1;                        		// 0x0084 (0x0004) [0x0000000000000002] [0x00000010] (CPF_Const)
	unsigned long                                      bPushToTalk : 1;                                  		// 0x0084 (0x0004) [0x0000000000000002] [0x00000020] (CPF_Const)
	unsigned long                                      bUseBallIndicator : 1;                            		// 0x0084 (0x0004) [0x0000000000000002] [0x00000040] (CPF_Const)
	unsigned long                                      bUseBallCamIndicator : 1;                         		// 0x0084 (0x0004) [0x0000000000000002] [0x00000080] (CPF_Const)
	unsigned long                                      bInvertSwivelPitch : 1;                           		// 0x0084 (0x0004) [0x0000000000000002] [0x00000100] (CPF_Const)
	unsigned long                                      bInvertSpectatorPitch : 1;                        		// 0x0084 (0x0004) [0x0000000000000002] [0x00000200] (CPF_Const)
	unsigned long                                      bPrefersSecondaryCamera : 1;                      		// 0x0084 (0x0004) [0x0000000000000002] [0x00000400] (CPF_Const)
	unsigned long                                      bToggleSecondaryCamera : 1;                       		// 0x0084 (0x0004) [0x0000000000000002] [0x00000800] (CPF_Const)
	unsigned long                                      bToggleRearCamera : 1;                            		// 0x0084 (0x0004) [0x0000000000000002] [0x00001000] (CPF_Const)
	unsigned long                                      bFreecam : 1;                                     		// 0x0084 (0x0004) [0x0000000000000002] [0x00002000] (CPF_Const)
	unsigned long                                      bLockSpecatorBallCam : 1;                         		// 0x0084 (0x0004) [0x0000000000000002] [0x00004000] (CPF_Const)
	unsigned long                                      bEnableCameraShake : 1;                           		// 0x0084 (0x0004) [0x0000000000000002] [0x00008000] (CPF_Const)
	unsigned long                                      bEnableHorizontalSplitscreen : 1;                 		// 0x0084 (0x0004) [0x0000000000000002] [0x00010000] (CPF_Const)
	unsigned long                                      bDisableCrossPlay : 1;                            		// 0x0084 (0x0004) [0x0000000000000002] [0x00020000] (CPF_Const)
	unsigned long                                      bAimAssistEnabled : 1;                            		// 0x0084 (0x0004) [0x0000000000000002] [0x00040000] (CPF_Const)
	unsigned long                                      bBallTrajectoryEnabled : 1;                       		// 0x0084 (0x0004) [0x0000000000000002] [0x00080000] (CPF_Const)
	unsigned long                                      bShouldRandomizeLoadoutEachGame : 1;              		// 0x0084 (0x0004) [0x0000000000000000] [0x00100000] 
	TArray<struct FUISavedKeyValue>                    UISavedValues;                                    		// 0x0088 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FPlaylistMapPrefs>                   MapPrefs;                                         		// 0x0098 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	class UTutorialSave_TA*                            Tutorial;                                         		// 0x00A8 (0x0008) [0x0000000000000000]               
	unsigned char                                      ForceFeedbackType;                                		// 0x00B0 (0x0001) [0x0000000000000002] (CPF_Const)   
	unsigned char                                      MatchmakingViewTab;                               		// 0x00B1 (0x0001) [0x0000000000000002] (CPF_Const)   
	unsigned char                                      CameraSettingsPreset;                             		// 0x00B2 (0x0001) [0x0000000000000000]               
	struct FName                                       ControlsPresetName;                               		// 0x00B4 (0x0008) [0x0000000000000002] (CPF_Const)   
	TArray<struct FPlayerBinding>                      PCBindings;                                       		// 0x00C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              MouseSensitivity;                                 		// 0x00D0 (0x0004) [0x0000000000000000]               
	float                                              MouseXDeadZone;                                   		// 0x00D4 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              MouseYDeadZone;                                   		// 0x00D8 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              MouseXDeadZoneAir;                                		// 0x00DC (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              MouseYDeadZoneAir;                                		// 0x00E0 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              KeyboardAxisBlendTime;                            		// 0x00E4 (0x0004) [0x0000000000000000]               
	TArray<struct FName>                               QuickMatchPlaylists;                              		// 0x00E8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<struct FString>                             QuickMatchRegions;                                		// 0x00F8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FProfileCameraSettings                      Camera;                                           		// 0x0108 (0x001C) [0x0000000000000002] (CPF_Const)   
	struct FProfileAutoCamSettings                     AutoCam;                                          		// 0x0124 (0x0028) [0x0000000000000002] (CPF_Const)   
	TArray<struct FName>                               QuickChatBindings;                                		// 0x0150 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                TotalXP;                                          		// 0x0160 (0x0004) [0x0000000000000002] (CPF_Const)   
	struct FName                                       PlayerTitle;                                      		// 0x0164 (0x0008) [0x0000000000000000]               
	int                                                PreviewTeamIndex;                                 		// 0x016C (0x0004) [0x0000000000000000]               
	TArray<class ULoadoutSet_TA*>                      LoadoutSets;                                      		// 0x0170 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class ULoadoutSet_TA*                              EquippedLoadoutSet;                               		// 0x0180 (0x0008) [0x0000000000000000]               
	struct FTourSearchSettings                         TourSearchSettings;                               		// 0x0188 (0x0060) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FTourCreateSettings                         TourCreateSettings;                               		// 0x01E8 (0x0038) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<class USeason_TA*>                          Seasons;                                          		// 0x0220 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FPlayerBinding>                      GamepadBindings;                                  		// 0x0230 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              ControllerDeadzone;                               		// 0x0240 (0x0004) [0x0000000000000000]               
	float                                              DodgeInputThreshold;                              		// 0x0244 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              SteeringSensitivity;                              		// 0x0248 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              AirControlSensitivity;                            		// 0x024C (0x0004) [0x0000000000000002] (CPF_Const)   
	class UPlayerBannerSave_TA*                        PlayerBannerData;                                 		// 0x0250 (0x0008) [0x0000000000000000]               
	class ULoadout_TA*                                 Loadout;                                          		// 0x0258 (0x0008) [0x0000000000000000]               
	struct FCustomMatchSettings                        PrivateMatchSettings;                             		// 0x0260 (0x0090) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FCustomMatchSettings                        SplitscreenMatchSettings;                         		// 0x02F0 (0x0090) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FCustomMatchSettings                        ServerBrowserSettings;                            		// 0x0380 (0x0090) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FCustomMatchSettings                        CustomMatchSettings;                              		// 0x0410 (0x0090) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<struct FKeyValuePair>                       CustomMatchGameTags;                              		// 0x04A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     CustomMatchRegion;                                		// 0x04B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UGameTags_TA*>                        GameTags;                                         		// 0x04C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FStatValue>                          StatValues;                                       		// 0x04D0 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<struct FProductStat>                        ProductStats;                                     		// 0x04E0 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	int                                                AimAssistLevelOverride;                           		// 0x04F0 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                MaxAimAssistLevelOverride;                        		// 0x04F4 (0x0004) [0x0000000000000002] (CPF_Const)   
	struct FString                                     BugReportEmail;                                   		// 0x04F8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                ProfileVersion;                                   		// 0x0508 (0x0004) [0x0000000000000000]               
	int                                                EditLoadoutSetIndex;                              		// 0x050C (0x0004) [0x0000000000002000] (CPF_Transient)
	class UObjectProvider*                             SaveObjectProvider;                               		// 0x0510 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	TArray<class USaveObject_TA*>                      SaveObjects;                                      		// 0x0518 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UProfileLoadoutSave_TA*                      LoadoutSave;                                      		// 0x0528 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventPreEquipProductToLoadouts__Delegate;       		// 0x0530 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventActiveBindingsChanged__Delegate;           		// 0x0548 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventProfileProductChanged__Delegate;           		// 0x0560 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Profile_TA");
		}

		return uClassPointer;
	};

	void __Profile_TA__CommonInit_6A779ACC4A080888CCF65682D88E1981(class UPlayerVanitySave_TA* LoadedVanitySave);
	void __Profile_TA__CommonInit_CB1F27494C81C68842279BA418740936();
	void __Profile_TA__CommonInit_092D7FB5494B9B0BA089528421ADE2B5(unsigned long long _);
	void __Profile_TA__CommonInit_C0CBFF804E790D29B866DCBBD708B7B6(class UProfileLoadoutSave_TA* Save);
	void __Profile_TA__CommonInit_2287F5B64E982F923772948597C28345();
	void __Profile_TA__CommonInit_8E41B2B4463BA064A2C140BFAE1B3941();
	void __Profile_TA__CommonInit_792C4D4E42C3C7151B7DFE9FF3B3533B(class USaveObject_TA* S);
	void __Profile_TA__Unload_2ADD9F6C471938F1C5F7C8BD32FE02D7(class USaveObject_TA* S);
	bool __Profile_TA__GetUniqueNetId_3BBB11464C1C51CF1D078FB10176F1AA(class ULocalPlayer* P);
	class USaveObject_TA* __Profile_TA__InstantiateSaveObjects_FB1ED6D54269367FFB6836AA9EEB8508(class UClass* T);
	bool __Profile_TA__InstantiateSaveObjects_BD8063994E989EF271292292EBB512B4(class UClass* T);
	void __Profile_TA__OnProfileSet_FDD6261A45F6DA7899D99AA92ADDEDB2(class USaveObject_TA* T);
	bool __Profile_TA__GetLocalPlayer_E9FE3F8346CE9140CD69A9B59218B7D3(class ULocalPlayer* P);
	bool IsProductEquipped(struct FProductHashID HashID);
	void UpdateSaveObjectReference(class USaveObject_TA* NewObject);
	class ULocalPlayer* GetLocalPlayer();
	void OnProfileSet();
	TArray<class UClass*> InstantiateSaveObjects();
	struct FUniqueNetId GetUniqueNetId();
	TArray<struct FProfileProduct> GetProfileProducts();
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	bool GetBallTrajectoryEnabled();
	void ResetControlBindingsToPresetValues(class UControlPreset_X* ControlPreset);
	void ResetAllSavedControlBindings();
	void SetControlsPreset(struct FName PresetName);
	void AddLoadoutProductData(int SlotIndex, int ProductID, class UOnlineProduct_TA* OnlineProduct, TArray<class UProductAttribute_TA*> Attributes, TArray<struct FLoadoutProductData>& OutProducts);
	void InitServerSetLoadoutParams(struct FLoadoutData Loadouts, TArray<struct FProfileProduct> ProfileProducts, struct FServerSetLoadoutParams& OutParams);
	struct FServerSetLoadoutParams BuildServerSetLoadoutParams();
	void SetEditingLoadoutSet(int Index);
	class ULoadoutSet_TA* GetEditingLoadoutSet();
	class ULoadout_TA* GetEditingLoadout(int TeamIndex);
	void SetCustomMatchSettings(unsigned char Type, struct FCustomMatchSettings& Settings);
	struct FCustomMatchSettings GetCustomMatchSettings(unsigned char Type);
	class UGameTags_TA* GetGameTags(unsigned char Type);
	void ValidateLoadoutSet(class ULoadoutSet_TA* InLoadoutSet);
	void ValidateLoadoutsWithProduct(unsigned long long OnlineID);
	void ValidateLoadouts();
	void RemoveGameSettingsTag(struct FString GameSettingName);
	void OnLoaded(class USaveData_TA* InSaveData);
	void Save();
	void Unload();
	void ValidateVanityObjects();
	void HandleRemovedOnlineProduct(class USaveData_TA* PlayerSaveData, class UOnlineProduct_TA* OnlineProduct);
	void CommonInit();
	void Init(class USaveData_TA* InSaveData, struct FString InProfileName, int InLocalID);
	void EventProfileProductChanged();
	void EventActiveBindingsChanged(class UProfile_TA* Profile);
	void EventPreEquipProductToLoadouts(class UProfile_TA* Profile, int ProductID);
};

// Class TAGame.TurnTableActor_TA
// 0x008C (0x02CC - 0x0358)
class ATurnTableActor_TA : public ASkeletalMeshActor
{
public:
	class URotateComponent_TA*                         RotateComponent;                                  		// 0x02D0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	unsigned long                                      bIsSwapping : 1;                                  		// 0x02D8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bInReveal : 1;                                    		// 0x02D8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bCarLocked : 1;                                   		// 0x02D8 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	unsigned long                                      bMultiDrop : 1;                                   		// 0x02D8 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	struct FName                                       SwapCarName;                                      		// 0x02DC (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       LiftItemName;                                     		// 0x02E4 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       LockCarName;                                      		// 0x02EC (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       TriggerRevealCompleteName;                        		// 0x02F4 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                DelayedPreviewSlot;                               		// 0x02FC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TurntableRiseDelay;                               		// 0x0300 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UOnlineProduct_TA*                           RevealProduct;                                    		// 0x0308 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventCarSwapComplete__Delegate;                 		// 0x0310 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventRevealStarted__Delegate;                   		// 0x0328 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventRevealComplete__Delegate;                  		// 0x0340 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TurnTableActor_TA");
		}

		return uClassPointer;
	};

	void EnableCollision(unsigned long bEnable);
	void StopMovement();
	struct FRotator GetDiscRotation();
	void SetBoneRotation(struct FRotator NewRot);
	void HandleRotationChanged(class URotateComponent_TA* InRotateComponent, struct FRotator NewRotation);
	void SetDiscRotation(float InDirectionMag, float DeltaTime);
	bool CanSubstituteCars();
	void LockCar();
	void eventOnAnimEnd(class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime);
	void TriggerRevealComplete();
	void DelayPreviewSlot(int SlotIndex);
	void OnStartReveal();
	void DoDelayedReveal();
	void DoReveal(class UOnlineProduct_TA* OnlineProduct, unsigned long bMultiProductDrop);
	void TriggerNamedEvent(struct FName NamedEvent);
	void SwapCars(unsigned long bReverse);
	void eventDestroyed();
	void eventPostBeginPlay();
	void EventRevealComplete(int SlotIndex);
	void EventRevealStarted();
	void EventCarSwapComplete();
};

// Class TAGame.RotateComponent_TA
// 0x00C4 (0x00A4 - 0x0168)
class URotateComponent_TA : public UActorComponent_X
{
public:
	float                                              Momentum;                                         		// 0x00A8 (0x0004) [0x0000000000000000]               
	float                                              LastMomentum;                                     		// 0x00AC (0x0004) [0x0000000000000000]               
	float                                              RotationSpeed;                                    		// 0x00B0 (0x0004) [0x0000000000000000]               
	struct FRotator                                    CurrentRotation;                                  		// 0x00B4 (0x000C) [0x0000000000000000]               
	float                                              TurntableDirection;                               		// 0x00C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UAkSoundCue*                                 SFX_Rotating;                                     		// 0x00C8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 SFX_Reversing;                                    		// 0x00D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           FallOffCurve;                                     		// 0x00D8 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           YawSpeedCurveMouse;                               		// 0x00F0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           YawSpeedCurveGamepad;                             		// 0x0108 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long                                      bGrabbed : 1;                                     		// 0x0120 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bDeterminedSnapRotation : 1;                      		// 0x0120 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bUsingGamepad : 1;                                		// 0x0120 (0x0004) [0x0000000000000000] [0x00000004] 
	struct FRotator                                    SnapRotation;                                     		// 0x0124 (0x000C) [0x0000000000000000]               
	float                                              SnapAngle;                                        		// 0x0130 (0x0004) [0x0000000000000000]               
	int                                                TotalSnaps;                                       		// 0x0134 (0x0004) [0x0000000000000000]               
	struct FRotator                                    SnapStartRotation;                                		// 0x0138 (0x000C) [0x0000000000000000]               
	float                                              MinStopMomentum;                                  		// 0x0144 (0x0004) [0x0000000000000000]               
	float                                              SnapBlendSpeed;                                   		// 0x0148 (0x0004) [0x0000000000000000]               
	float                                              Input;                                            		// 0x014C (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             __EventRotationChanged__Delegate;                 		// 0x0150 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RotateComponent_TA");
		}

		return uClassPointer;
	};

	void DontStartSound();
	void DontPlayReverse();
	bool IsTimerActive(struct FName FuncName);
	void SetTimer(float Time, unsigned long bLoop, struct FName FuncName);
	void ClearTimer(struct FName FuncName);
	float CalculateMomentumFalloff(float DeltaTime);
	void SetGrabbed(unsigned long bGrab);
	float DetermineTurnSpeed(float DeltaTime, float YawInput, unsigned long bGamepad);
	void DetermineSnapRotation(int MoveDirection);
	void UpdateSpin(float DeltaTime, float YawInput, unsigned long bGamepad);
	int IncrementSlotIndex(int InTotalSnaps, int CurrentIndex, int AddAmount);
	struct FRotator GetSlotRotation(int SlotIndex);
	int GetClosestSlotInRotation(struct FVector WorldDirection, struct FRotator InRotation, int InTotalSnaps, float InSnapAngle);
	void SetSnap(struct FRotator InSnapStartRotation, int InTotalSnaps, float InSnapAngle, float InMinStopMomentum);
	void StopMovement();
	void StopRotatingSound();
	void SetComponentRotation(float InDirectionMag, float DeltaTime);
	void SetCurrentRotation(struct FRotator NewRotation);
	void ResetInput();
	void SetInput(float YawInput, unsigned long bGamepad);
	void eventTick(float DeltaTime);
	void eventBeginPlay();
	void EventRotationChanged(class URotateComponent_TA* RotateComponent, struct FRotator NewRotation);
};

// Class TAGame.ProductAsset_MusicStingers_TA
// 0x0018 (0x00F8 - 0x0110)
class UProductAsset_MusicStingers_TA : public UProductAsset_TA
{
public:
	class UAkSoundCue*                                 GoalScoredStinger;                                		// 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 EpicSaveStinger;                                  		// 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 MVPAnthem;                                        		// 0x0108 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_MusicStingers_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.EngineAudioPreviewRev_TA
// 0x0024 (0x0084 - 0x00A8)
class UEngineAudioPreviewRev_TA : public UEngineAudioPreviewBase_TA
{
public:
	class UEngineAudioProfileREV_TA*                   Profile;                                          		// 0x0088 (0x0008) [0x0000000000000000]               
	class UAkRevPhysicsSimulation*                     PhysicsSim;                                       		// 0x0090 (0x0008) [0x0000000000000000]               
	struct FAkRevSimFrame                              SimFrame;                                         		// 0x0098 (0x0010) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioPreviewRev_TA");
		}

		return uClassPointer;
	};

	void __EngineAudioPreviewRev_TA__Init_535197B24066CFD369F58687262965D7(class UAkRevPhysicsSimulation* S);
	void Init(class UProductAsset_EngineAudio_TA* InAsset, class UAkParamGroup* InAkParams);
};

// Class TAGame.PlayerController_Menu_TA
// 0x0048 (0x0968 - 0x09B0)
class APlayerController_Menu_TA : public APlayerControllerBase_TA
{
public:
	TArray<class UPlayerInputSequence_TA*>             InputSequences;                                   		// 0x0968 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long                                      bExecutedKonamiCode : 1;                          		// 0x0978 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	struct FScriptDelegate                             __EventKonamiCode__Delegate;                      		// 0x0980 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventBecomePrimaryPlayer__Delegate;             		// 0x0998 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerController_Menu_TA");
		}

		return uClassPointer;
	};

	void ShowControllerApplet();
	void ShowAccountPicker();
	void MusicTogglePlaylistSelection();
	void MusicNextTrack();
	void KonamiCode();
	void eventPlayerTick(float DeltaTime);
	void ClientSetOnlineStatus();
	void RemoveInputSequence(struct FName SequenceName);
	void RemoveSplashScreenSequences();
	void eventDestroyed();
	int GetInputSequencePriority(class UPlayerInputSequence_TA* Sequence);
	void HandleCameraSave(class UProfileCameraSave_TA* CameraSettings);
	void eventReceivedPlayer();
	void EventBecomePrimaryPlayer(class APlayerController_Menu_TA* Primary);
	void EventKonamiCode();
};

// Class TAGame.OnlineProductStoreSet_TA
// 0x0050 (0x00C0 - 0x0110)
class UOnlineProductStoreSet_TA : public UIdenticalProductCache_TA
{
public:
	class ULocalPlayer*                                Player;                                           		// 0x00C0 (0x0008) [0x0000000000000000]               
	struct FUniqueNetId                                PlayerID;                                         		// 0x00C8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineProductStoreSet_TA");
		}

		return uClassPointer;
	};

	class UOnlineProduct_TA* AddProductData(struct FOnlineProductData& Data);
	struct FUniqueNetId GetPlayerID();
	void InitRemote(struct FUniqueNetId InPlayerId);
	void InitLocal(class ULocalPlayer* InPlayer);
};

// Class TAGame.CarThumbnailActor_TA
// 0x0008 (0x0268 - 0x0270)
class ACarThumbnailActor_TA : public AActor
{
public:
	class UCarMeshComponent_TA*                        Mesh;                                             		// 0x0268 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarThumbnailActor_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.CheatManagerBase_TA
// 0x0010 (0x0098 - 0x00A8)
class UCheatManagerBase_TA : public UCheatManager_X
{
public:
	int                                                LastEquippedProductID;                            		// 0x0098 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long long                                 LastEquippedInstanceID;                           		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CheatManagerBase_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.CheatManager_TA
// 0x0020 (0x00A8 - 0x00C8)
class UCheatManager_TA : public UCheatManagerBase_TA
{
public:
	class AInputRecorder_TA*                           InputRecorder;                                    		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FColor                                      DebugColor;                                       		// 0x00B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                TestClubColor;                                    		// 0x00B4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              BodyHandlingTestTime;                             		// 0x00B8 (0x0004) [0x0000000000000000]               
	int                                                BodyHandlingTestIndex;                            		// 0x00BC (0x0004) [0x0000000000000000]               
	class UTickNotifyDelegate_TA*                      TickNotifier;                                     		// 0x00C0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CheatManager_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.Constraint2D_TA
// 0x0000 (0x02A0 - 0x02A0)
class AConstraint2D_TA : public ARB_ConstraintActor
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Constraint2D_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.CrowdActor_TA
// 0x0070 (0x0268 - 0x02D8)
class ACrowdActor_TA : public AActor
{
public:
	class UAkSoundCue*                                 CrowdSound;                                       		// 0x0268 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UCrowdActorSettings_TA*                      Settings;                                         		// 0x0270 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AGameEvent_Soccar_TA*                        GameEvent;                                        		// 0x0278 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              TargetIdleNoise;                                  		// 0x0280 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TargetIdleNoiseRate;                              		// 0x0284 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentIdleNoise;                                 		// 0x0288 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ModifiedNoise;                                    		// 0x028C (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              CurrentNoise;                                     		// 0x0290 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<struct FCrowdNoiseModifierInstance>         NoiseModifiers;                                   		// 0x0298 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FCrowdNoiseModifierInstance                 TimeAlmostOutNoiseInstance;                       		// 0x02A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentBallGoalDistanceNoise;                     		// 0x02B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UAkSoundCue*                                 ReplicatedOneShotSound;                           		// 0x02B8 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int                                                ReplicatedCountDownNumber;                        		// 0x02C0 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int                                                ReplicatedRoundCountDownNumber;                   		// 0x02C4 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              LastBallHitNoiseTime;                             		// 0x02C8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                LastBallHitNoiseLevel;                            		// 0x02CC (0x0004) [0x0000000000002000] (CPF_Transient)
	class UCrowdSounds_TA*                             Sounds;                                           		// 0x02D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CrowdActor_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void HandleCarTouch(class ABall_TA* Ball, class ACar_TA* HitCar, unsigned char HitType);
	void HandleBallRemoved(class AGameEvent_Soccar_TA* G, class ABall_TA* Ball);
	void HandleBallAdded(class AGameEvent_Soccar_TA* G, class ABall_TA* Ball);
	void HandleGaveStat(class AStatFactory_TA* Factory, class APRI_TA* ToPRI, class UStatEvent_TA* StatEvent, class ABall_TA* Ball, int BallHitIndex, class APRI_TA* Victim);
	void HandleCountdownTimeUpdated(class AGameEvent_TA* InGameEvent, int Seconds);
	void HandleGameTimeUpdated(class AGameEvent_Soccar_TA* InGameEvent);
	void UpdateTimeAlmostOutNoiseModifier(class AGameEvent_Soccar_TA* InGameEvent);
	void HandleOvertimeUpdated(class AGameEvent_Soccar_TA* InGameEvent);
	void HandleGameStateChanged(class AGameEvent_TA* InGameEvent);
	void PlayRoundCountDownSound(int CountDownNumber);
	void PlayCountDownSound(int CountDownNumber);
	void HandleEndGameCountDown(class AGameEvent_Soccar_TA* G, int TimeRemaining);
	void HandleStingerForfeit(class AGameEvent_Soccar_TA* G);
	void HandleStingerLose(class AGameEvent_Soccar_TA* G);
	void HandleStingerWin(class AGameEvent_Soccar_TA* G);
	void eventTick(float DeltaTime);
	void TickBallGoalDistance();
	void SetNoise(float NewNoise);
	void TickNoise(float DeltaTime, float TargetNoise);
	void ClearOneShotSound();
	void PlayOneShotSound(class UAkSoundCue* Sound);
	void AddNoiseModifier(class UCrowdNoiseModifier_TA* Modifier);
	struct FCrowdNoiseModifierInstance CreateNoiseModifierInstance(class UCrowdNoiseModifier_TA* Modifier);
	void TickNoiseModifiers(float DeltaTime);
	void TickIdleNoise(float DeltaTime);
	void UpdateTargetIdleNoise();
	void Init(class AGameEvent_Soccar_TA* InGameEvent);
	void eventDestroyed();
	void eventPostBeginPlay();
	float GetRandomValue(struct FRandomRange Range);
	void eventReplicatedEvent(struct FName VarName);
};

// Class TAGame.StatFactory_TA
// 0x01E0 (0x0278 - 0x0458)
class AStatFactory_TA : public AStatFactoryBase_TA
{
public:
	struct FStatEventCollection                        Events;                                           		// 0x0278 (0x0158) [0x0000000000000003] (CPF_Edit | CPF_Const)
	TArray<struct FBallInfo>                           BallCache;                                        		// 0x03D0 (0x0010) [0x0000000000482000] (CPF_Transient | CPF_Component | CPF_NeedCtorLink)
	float                                              GoalSizeFudge;                                    		// 0x03E0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ShotMaxTime;                                      		// 0x03E4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ShotArriveTime;                                   		// 0x03E8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ShotMaxDistance;                                  		// 0x03EC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RedZoneDistance;                                  		// 0x03F0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              JuggleMinSpeed;                                   		// 0x03F4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BulletHitSpeed;                                   		// 0x03F8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AerialHitHeight;                                  		// 0x03FC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AerialHitMinRelSpeed;                             		// 0x0400 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BicycleSpinSpeed;                                 		// 0x0404 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              LongGoalDistance;                                 		// 0x0408 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                HatTrickThreshold;                                		// 0x040C (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                PlaymakerThreshold;                               		// 0x0410 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                SaviorThreshold;                                  		// 0x0414 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                DemolitionThreshold;                              		// 0x0418 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bGaveFirstTouch : 1;                              		// 0x041C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class AGameEvent_Soccar_TA*                        SoccarGame;                                       		// 0x0420 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APRI_TA*                                     ScoringPRI;                                       		// 0x0428 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class ACar_TA*>                             CarsIssuedAnyFiveHit;                             		// 0x0430 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventGaveStat__Delegate;                        		// 0x0440 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatFactory_TA");
		}

		return uClassPointer;
	};

	void HandlePlayerRestarted(class AGameEvent_TA* GameEvent, class ACar_TA* PlayerCar);
	void RegisterBalls();
	void RegisterCars();
	void UnregisterCars();
	void HandleBumpedCar(class ACar_TA* Car, class ACar_TA* HitCar, struct FVector HitLocation);
	unsigned char InitiatorFiveHitType(class ACar_TA* Initiator, class ACar_TA* Receiver);
	void OnBallAdded(class AGameEvent_Soccar_TA* GameEventSoccar, class ABall_TA* Ball);
	void OnMatchEnded(class AGameEvent_Soccar_TA* SoccarEvent);
	void DetermineTouchCounts(class AGameEvent_Soccar_TA* SoccarEvent);
	void DeterminePickupCounts(class AGameEvent_Soccar_TA* SoccarEvent);
	void OnActiveRoundChanged(class AGameEvent_Soccar_TA* InGameEvent);
	void BackflipCars(TArray<class ACar_TA*> CarsToFlip);
	void BackflipCar(class ACar_TA* Car);
	void OnCarDemolished(class ACar_TA* Victim, struct FDemolishData Data);
	void OnGameStateChanged(class AGameEvent_TA* InGame);
	void OnGoalScored(class AGameEvent_Soccar_TA* InGameEvent, class ABall_TA* Ball, class UGoal_TA* Goal, int ScoreIndex, int AssistIndex);
	void OnCarTouch(class ABall_TA* Ball, class ACar_TA* HitCar, unsigned char HitType);
	void OnBallHitWorld(class ABall_TA* Ball, struct FVector HitLoc, struct FVector HitNormal);
	void TickBalls(float DeltaTime);
	void Tick(float DeltaTime);
	void UpdateRedZone(int BallIdx);
	class UGoal_TA* CalculateShotGoal(class UGoal_TA* GoalToTest, class ABall_TA* Ball, float ArriveTime);
	void UpdateShotGoal(int BallIdx);
	bool IsBallBehindGoal(class ABall_TA* Ball, class UGoal_TA* Goal);
	class UGoal_TA* FindShotGoal(class ABall_TA* Ball);
	bool IsBulletHit(struct FBallHitInfo Hit);
	bool IsBackwardsHit(struct FBallHitInfo Hit);
	float GetDeltaSpeed(struct FBallHitInfo Hit);
	bool IsTurtleHit(struct FBallHitInfo Hit);
	bool IsJuggleHit(struct FBallHitInfo Hit);
	bool IsBicycleHit(struct FBallHitInfo Hit);
	bool IsLocationFarOffGround(struct FVector InLocation);
	bool IsAerialHit(struct FBallHitInfo Hit);
	bool IsInRedZone(class UGoal_TA* Goal, class ABall_TA* Ball);
	bool IsEpicSave(class ABall_TA* Ball, struct FBallHitInfo Hit, class UGoal_TA* Goal);
	float GetHitDistanceToGoal(class ABall_TA* Ball, struct FBallHitInfo Hit, class UGoal_TA* Goal);
	void BroadcastStatTickerEvent(class APRI_TA* Receiver, class APRI_TA* Victim, class UStatEvent_TA* StatEvent);
	void GiveScore(class APRI_TA* ToPRI, class UStatEvent_TA* StatEvent, class ABall_TA* Ball, int BallHitIndex, class APRI_TA* Victim, int Count);
	void UnregisterCar(class APawn_X* Car);
	void RegisterCar(class ACar_TA* Car);
	void UnregisterBall(class APawn_X* Ball);
	void RegisterBall(class ABall_TA* Ball);
	int GetBallIndex(class ABall_TA* Ball);
	void SetGameEvent(class AGameEvent_Soccar_TA* InGameEvent);
	void EventGaveStat(class AStatFactory_TA* Factory, class APRI_TA* ToPRI, class UStatEvent_TA* StatEvent, class ABall_TA* Ball, int BallHitIndex, class APRI_TA* Victim);
};

// Class TAGame.CrowdSounds_TA
// 0x027C (0x0060 - 0x02DC)
class UCrowdSounds_TA : public UObject
{
public:
	class UAkSoundCue*                                 Sound;                                            		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FCrowdExcitementSounds                      GoalScored;                                       		// 0x0068 (0x0028) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FCrowdExcitementSounds                      ShotAttempt;                                      		// 0x0090 (0x0028) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FCrowdExcitementSounds                      OpenGoal;                                         		// 0x00B8 (0x0028) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FCrowdExcitementSounds                      Save;                                             		// 0x00E0 (0x0028) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FCrowdExcitementSounds                      Aerial;                                           		// 0x0108 (0x0028) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FCrowdExcitementSounds                      LongTimeNearGoal;                                 		// 0x0130 (0x0028) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FCrowdExcitementSounds                      FastBreak;                                        		// 0x0158 (0x0028) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FCrowdExcitementSounds                      Hit0Second;                                       		// 0x0180 (0x0028) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FCrowdExcitementSounds                      AnyDemolition;                                    		// 0x01A8 (0x0028) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FCrowdExcitementSounds                      RelevantDemolition;                               		// 0x01D0 (0x0028) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FCrowdExcitementSounds                      GameStart;                                        		// 0x01F8 (0x0028) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FCrowdExcitementSounds                      RoundStart;                                       		// 0x0220 (0x0028) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FCrowdExcitementSounds                      KickoffTouch;                                     		// 0x0248 (0x0028) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FCrowdExcitementSounds                      TenseClear;                                       		// 0x0270 (0x0028) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FCrowdExcitementSounds>              MatchEndCountDown;                                		// 0x0298 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UAkSoundCue*                                 LowEnergyChant;                                   		// 0x02A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 OvertimeStart;                                    		// 0x02B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 Win;                                              		// 0x02B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 Lose;                                             		// 0x02C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 Forfeit;                                          		// 0x02C8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 MatchEndedEncore;                                 		// 0x02D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              MatchEndedEncoreDelay;                            		// 0x02D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CrowdSounds_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.CrowdManager_TA
// 0x0048 (0x0268 - 0x02B0)
class ACrowdManager_TA : public AActor
{
public:
	TArray<class ACrowdActor_TA*>                      CrowdActors;                                      		// 0x0268 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UCrowdActorSettings_TA*                      Settings;                                         		// 0x0278 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bInitialized : 1;                                 		// 0x0280 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	TArray<class ACrowdActor_TA*>                      RandomChantCrowdActors;                           		// 0x0288 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UAkSoundCue*                                 ReplicatedGlobalOneShotSound;                     		// 0x0298 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              DefenseZoneTime;                                  		// 0x02A0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class AGameEvent_Soccar_TA*                        GameEvent;                                        		// 0x02A8 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CrowdManager_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void TimerUpdateDefenseChant();
	void StartTimerDefenseChant();
	void PlayRandomChant();
	void SetRandomChantTimer();
	void PlayMatchEndedEncore();
	void HandleMatchEnded(class AGameEvent_Soccar_TA* G);
	void HandleOvertimeUpdated(class AGameEvent_Soccar_TA* InGameEvent);
	void HandleGameStateChanged(class AGameEvent_TA* G);
	void ClearGlobalOneShotSound();
	void PlayGlobalOneShotSound(class UAkSoundCue* Sound);
	void Init(class AGameEvent_Soccar_TA* InGameEvent);
	void eventPostBeginPlay();
	void eventReplicatedEvent(struct FName VarName);
};

// Class TAGame.MatchType_Custom_TA
// 0x000C (0x009C - 0x00A8)
class UMatchType_Custom_TA : public UMatchType_TA
{
public:
	unsigned long                                      bOnePlayerSelectedTeam : 1;                       		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	int                                                LargestMaxTeamSize;                               		// 0x00A4 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchType_Custom_TA");
		}

		return uClassPointer;
	};

	bool CanCheckForBannedPlayers();
	bool CanIncreaseMaxTeamSize();
	bool UseCustomMatchSettings();
	bool ShouldSetGameOwner();
	bool AllowMatchAdmin();
	bool AllowSpectators();
	bool RecordPlayedMap();
	class ATeam_TA* PickTeam(class AController* C);
	bool CanRestartPlayer(class AController* NewPlayer);
	bool ShouldAutoSelectTeam(class AController* NewPlayer);
	int GetMaxTeamSize();
	bool ChooseTeam(int TeamIndex, class APlayerController_TA* Player);
	bool CanJoinATeam();
	void OnPlayerAddedToTeam();
	bool ShouldStartMatch();
	void SetGameData();
	void InitMaxTeamSize();
	void OnInitGameEvent();
};

// Class TAGame.MatchType_Offline_TA
// 0x0000 (0x00A8 - 0x00A8)
class UMatchType_Offline_TA : public UMatchType_Custom_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchType_Offline_TA");
		}

		return uClassPointer;
	};

	struct FName GetOfflinePlaylistName(class AGameEvent_TA* InGameEvent, struct FString Options);
	void OnInitGameEvent();
	void Init(class AGameEvent_TA* InGameEvent, struct FString Options);
};

// Class TAGame.MatchType_Tutorial_TA
// 0x0000 (0x00A8 - 0x00A8)
class UMatchType_Tutorial_TA : public UMatchType_Offline_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchType_Tutorial_TA");
		}

		return uClassPointer;
	};

	bool AllowMatchAdmin();
	void InitCustomMatchSettings(struct FCustomMatchSettings Settings);
	struct FName GetOfflinePlaylistName(class AGameEvent_TA* InGameEvent, struct FString Options);
	int GetMaxTeamSize();
};

// Class TAGame.DebugHelpMenu_TA
// 0x0038 (0x00D0 - 0x0108)
class UDebugHelpMenu_TA : public UInteraction
{
public:
	float                                              CategoryTextScale;                                		// 0x00D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ItemTextScale;                                    		// 0x00D4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              KeyTextScale;                                     		// 0x00D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FDebugCategory>                      HelpCategories;                                   		// 0x00E0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                SelectedCategoryIdx;                              		// 0x00F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                SelectedItemIdx;                                  		// 0x00F4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ItemsWidth;                                       		// 0x00F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ItemsHeight;                                      		// 0x00FC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              Fade;                                             		// 0x0100 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bClosing : 1;                                     		// 0x0104 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DebugHelpMenu_TA");
		}

		return uClassPointer;
	};

	void Close();
	void ExecuteItem(int CatIdx, int ItemIdx);
	bool HandleInputKey(int ControllerId, struct FName Key, unsigned char EventType, float AmountDepressed, unsigned long bGamepad);
	void DrawItem(class UCanvas* C, int CategoryIdx, int ItemIdx);
	void DrawCategory(class UCanvas* C, int CategoryIdx);
	void eventPostRender(class UCanvas* C);
	void BuildHelpItems();
	int GetCategoryIndex(struct FString CategoryName);
	bool GetHelpValues(struct FString Cmd, struct FString& Command, struct FString& Category, struct FString& Description);
};

// Class TAGame.DebugInput_TA
// 0x0000 (0x02F8 - 0x02F8)
class UDebugInput_TA : public UPlayerInput
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DebugInput_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.DecalBlockingActor_TA
// 0x0000 (0x0288 - 0x0288)
class ADecalBlockingActor_TA : public AStaticMeshActor
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DecalBlockingActor_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.DynamicMeshActor_TA
// 0x0008 (0x0268 - 0x0270)
class ADynamicMeshActor_TA : public AActor
{
public:
	class UStaticMeshComponent*                        StaticMeshComponent;                              		// 0x0268 (0x0008) [0x00000000040A000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DynamicMeshActor_TA");
		}

		return uClassPointer;
	};

	void ToggleBallPosition(unsigned long bAdd);
	void eventDestroyForMapUnload();
	void eventDestroyed();
	void eventPostBeginPlay();
};

// Class TAGame.DynamicSpawnPoint_TA
// 0x0000 (0x0268 - 0x0268)
class ADynamicSpawnPoint_TA : public AActor
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DynamicSpawnPoint_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SystemSettingsManager_TA
// 0x0004 (0x0060 - 0x0064)
class USystemSettingsManager_TA : public UObject
{
public:
	int                                                NumPlayers;                                       		// 0x0060 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SystemSettingsManager_TA");
		}

		return uClassPointer;
	};

	void ApplySettings(class UGameViewportClient_TA* GVC);
	void UpdateNumPlayers(class UGameViewportClient_TA* GVC);
	void HandleSplitScreenTypeChanged(class UGameViewportClient_TA* GVC);
	void HandleWorldFullScreenChanged(class UGameViewportClient_TA* GVC);
	void Init();
};

// Class TAGame.SoundSettingsManager_TA
// 0x0018 (0x0060 - 0x0078)
class USoundSettingsManager_TA : public UObject
{
public:
	class USoundSettingsSave_TA*                       SoundSave;                                        		// 0x0060 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USoundSettingsControllerSave_TA*             SoundSaveController;                              		// 0x0068 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ULocalPlayer_TA*                             PrimaryPlayer;                                    		// 0x0070 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SoundSettingsManager_TA");
		}

		return uClassPointer;
	};

	void __SoundSettingsManager_TA__HandleSoundSettingsLoaded_46182AB441AE0B4550F4D59FD8C3199C();
	void __SoundSettingsManager_TA__HandleSoundSettingsLoaded_A4ADD1F84E2FC65A1C3E019D72E4ABDC();
	void __SoundSettingsManager_TA__HandleSoundSettingsLoaded_EA8227354B5D47F0D003D4A5AA3A8DF6();
	void __SoundSettingsManager_TA__HandleSoundSettingsLoaded_F56AED87437D0B3AA0FD24A93BC6A846();
	void __SoundSettingsManager_TA__HandleSoundSettingsLoaded_FE213B9F403A057C38899BA9613D9105();
	void __SoundSettingsManager_TA__HandleSoundSettingsLoaded_3075DAD74C101D1156168E898F0991A6();
	void __SoundSettingsManager_TA__HandleSoundSettingsLoaded_BDC6DC504DB414098E996ABF8B4663E7();
	void __SoundSettingsManager_TA__HandleSoundSettingsLoaded_BB366C0947BB50253EFDA7B7B578F9A1();
	void __SoundSettingsManager_TA__HandleSoundSettingsLoaded_09A6C15F4F12B2649003BB876E590BB1();
	void __SoundSettingsManager_TA__HandleSoundSettingsLoaded_B01F9E3F4281B2CD0E6F8C8451930E3E();
	void __SoundSettingsManager_TA__HandleSoundSettingsControllerLoaded_544027204E112FB47706CBA2E0100216();
	void __SoundSettingsManager_TA__HandleSoundSettingsControllerLoaded_53C6071D434F44AAF5BEA78A836D5910();
	void SetStreamerSafeAudio(unsigned long bStreamerSafeAudioEnabled);
	void SetMuteOnFocusLost(unsigned long bMuteOnFocusLost);
	void SetControllerSoundMode(unsigned char NewValue);
	void HandleLocalPlayerCountChange(class ULocalPlayer* Player);
	void SetControllerVolume(float NewValue);
	void SetDynamicRange(unsigned char NewValue);
	void SetOutputType(unsigned char NewValue);
	float GetMasterVolumeValue();
	void SetVoiceVolume(float NewValue);
	void SetCrowdVolume(float NewValue);
	void SetAmbientVolume(float NewValue);
	void SetGameplayMusicVolume(float NewValue);
	void SetMusicVolume(float NewValue);
	void SetSoundVolume(float NewValue);
	void ApplyControllerSoundSettings();
	void HandleSoundSettingsControllerUnloaded(class USoundSettingsControllerSave_TA* InSoundSave);
	void HandleSoundSettingsControllerLoaded(class USoundSettingsControllerSave_TA* InSoundSave);
	void ApplySoundSettings();
	void HandleSoundSettingsUnloaded(class USoundSettingsSave_TA* InSoundSave);
	void HandleSoundSettingsLoaded(class USoundSettingsSave_TA* InSoundSave);
	void InitFromPlayer(class ULocalPlayer_TA* Player);
	void HandlePrimaryPlayerChange(class ULocalPlayer* Old, class ULocalPlayer_TA* NewPlayer);
	void HandleLocalPlayerLeave(class ULocalPlayer_TA* Player);
	void HandleLocalPlayerJoin(class ULocalPlayer_TA* Player);
	void Init();
};

// Class TAGame.AppMetrics_TA
// 0x0000 (0x0080 - 0x0080)
class UAppMetrics_TA : public UMetricsGroup_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AppMetrics_TA");
		}

		return uClassPointer;
	};

	void AppStart();
};

// Class TAGame.__OnlineProductStore_TA__FindProductsFromHash_4F1725284D48BBEF8F5224961E2FDDD4
// 0x0004 (0x0060 - 0x0064)
class U__OnlineProductStore_TA__FindProductsFromHash_4F1725284D48BBEF8F5224961E2FDDD4 : public UObject
{
public:
	struct FProductHashID                              HashID;                                           		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineProductStore_TA__FindProductsFromHash_4F1725284D48BBEF8F5224961E2FDDD4");
		}

		return uClassPointer;
	};

	TArray<class UOnlineProduct_TA*> __OnlineProductStore_TA__FindProductsFromHash_4F1725284D48BBEF8F5224961E2FDDD4(class UOnlineProductStoreSet_TA* Set);
};

// Class TAGame.FloppyBits_TA
// 0x001C (0x0074 - 0x0090)
class UFloppyBits_TA : public UAttachmentBehavior_TA
{
public:
	class UPhysicsAsset*                               PhysAsset;                                        		// 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FRBCollisionChannelContainer                CollisionChannels;                                		// 0x0080 (0x0004) [0x0000000000000000]               
	class USkeletalMeshComponent*                      SkelMesh;                                         		// 0x0088 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FloppyBits_TA");
		}

		return uClassPointer;
	};

	void InitPhysics();
	void HandleAttached(class UCarMeshComponent_TA* CarMesh);
	void OnInit();
};

// Class TAGame.BeamTraceComponent_TA
// 0x003C (0x00A4 - 0x00E0)
class UBeamTraceComponent_TA : public UActorComponent_X
{
public:
	TArray<class UParticleSystemComponent*>            BeamSystems;                                      		// 0x00A8 (0x0010) [0x0000000004480009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	float                                              TraceDistance;                                    		// 0x00B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinRetraceRate;                                   		// 0x00BC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxRetraceRate;                                   		// 0x00C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FBeamTraceProps>                     Beams;                                            		// 0x00C8 (0x0010) [0x0000000000482000] (CPF_Transient | CPF_Component | CPF_NeedCtorLink)
	class AFXActor_X*                                  FXOwner;                                          		// 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BeamTraceComponent_TA");
		}

		return uClassPointer;
	};

	void eventTick(float DeltaTime);
	void eventDetached();
	void eventAttached();
};

// Class TAGame.__FXActor_TA__ApplyPaintToAttachment_7CA0AB6C4238B2095F6C4BBD22349D4F
// 0x0010 (0x0060 - 0x0070)
class U__FXActor_TA__ApplyPaintToAttachment_7CA0AB6C4238B2095F6C4BBD22349D4F : public UObject
{
public:
	class UProductAttribute_PaintSettings_TA*          PaintSettings;                                    		// 0x0060 (0x0008) [0x0000000000000000]               
	class UProductPaint_TA*                            Paint;                                            		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__FXActor_TA__ApplyPaintToAttachment_7CA0AB6C4238B2095F6C4BBD22349D4F");
		}

		return uClassPointer;
	};

	void __FXActor_TA__ApplyPaintToAttachment_7CA0AB6C4238B2095F6C4BBD22349D4F(class UParticleSystemComponent* BeamPSC);
};

// Class TAGame.__FXActor_TA__ApplyPaint_E6B91E374B5F6EA7DCBDB1ADFE4A5678
// 0x0010 (0x0060 - 0x0070)
class U__FXActor_TA__ApplyPaint_E6B91E374B5F6EA7DCBDB1ADFE4A5678 : public UObject
{
public:
	class UProductAttribute_PaintSettings_TA*          PaintSettings;                                    		// 0x0060 (0x0008) [0x0000000000000000]               
	class UProductPaint_TA*                            Paint;                                            		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__FXActor_TA__ApplyPaint_E6B91E374B5F6EA7DCBDB1ADFE4A5678");
		}

		return uClassPointer;
	};

	void __FXActor_TA__ApplyPaint_E6B91E374B5F6EA7DCBDB1ADFE4A5678(struct FFXAttachment FXAttach);
};

// Class TAGame.__FXActor_Boost_TA__DuplicateAttachment_E050816341E582CF28F31BB06D818E8B
// 0x0014 (0x0060 - 0x0074)
class U__FXActor_Boost_TA__DuplicateAttachment_E050816341E582CF28F31BB06D818E8B : public UObject
{
public:
	TArray<class UActorComponent*>                     ComponentsToUse;                                  		// 0x0060 (0x0010) [0x0000000004480008] (CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	int                                                AttachmentIdx;                                    		// 0x0070 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__FXActor_Boost_TA__DuplicateAttachment_E050816341E582CF28F31BB06D818E8B");
		}

		return uClassPointer;
	};

	void __FXActor_Boost_TA__DuplicateAttachment_E050816341E582CF28F31BB06D818E8B(struct FName X);
};

// Class TAGame.AssetAttribute_SoundOverrides_TA
// 0x0010 (0x0060 - 0x0070)
class UAssetAttribute_SoundOverrides_TA : public UProductAssetAttribute_TA
{
public:
	TArray<struct FFXAttachmentSoundOverride>          SoundOverrides;                                   		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AssetAttribute_SoundOverrides_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.FunctionTemplates
// 0x0000 (0x0060 - 0x0060)
class UFunctionTemplates : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FunctionTemplates");
		}

		return uClassPointer;
	};

	void Object__Swap__Int(int& A, int& B);
	void Object__SwapArrayItems__TourTeam(int Idx1, int Idx2, TArray<struct FTourTeam>& A);
	void ArrayFuncs__ShuffleArray__MusicTrack_TA(TArray<class UMusicTrack_TA*>& ArrayToShuffle);
	void Object__SwapArrayItems__MusicTrack_TA(int Idx1, int Idx2, TArray<class UMusicTrack_TA*>& A);
	void ArrayFuncs__ShuffleArray__String(TArray<struct FString>& ArrayToShuffle);
	void Object__SwapArrayItems__String(int Idx1, int Idx2, TArray<struct FString>& A);
	void ArrayFuncs__ShuffleArray__SpecialPickup_TA(TArray<class ASpecialPickup_TA*>& ArrayToShuffle);
	void Object__SwapArrayItems__SpecialPickup_TA(int Idx1, int Idx2, TArray<class ASpecialPickup_TA*>& A);
	class UProductAsset_Skin_TA* ProductDatabase_TA__TLoadAsset__ProductAsset_Skin_TA(int ProductID);
	class UProductAsset_Body_TA* ProductDatabase_TA__TLoadAsset__ProductAsset_Body_TA(int ProductID);
	void Object__Swap__ClubColorSet(struct FClubColorSet& A, struct FClubColorSet& B);
	void Object__Swap__ClubDetails_X(class UClubDetails_X*& A, class UClubDetails_X*& B);
};

// Class TAGame.XPManager_TA
// 0x0028 (0x0060 - 0x0088)
class UXPManager_TA : public UObject
{
public:
	int                                                LevelCap;                                         		// 0x0060 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int                                                Level_Max;                                        		// 0x0064 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int                                                Level_XPBaseStep;                                 		// 0x0068 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int                                                Level_XPBucketSize;                               		// 0x006C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              Level_XPIncrementAmt;                             		// 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int                                                Level_XPBaseRequirement;                          		// 0x0074 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	TArray<struct FTitleInfo>                          Titles;                                           		// 0x0078 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.XPManager_TA");
		}

		return uClassPointer;
	};

	int GetTotalXPRequiredForLevel(int Level);
	struct FString DetermineLevelTitle(int Level);
	int CalculateRequiredXPForLevel(int Level);
	int CalculatePlayerLevel(int XP, unsigned long bShowLog);
};

// Class TAGame.TeamNameComponent_TA
// 0x0060 (0x0070 - 0x00D0)
class UTeamNameComponent_TA : public UComponent
{
public:
	struct FString                                     SanitizedTeamName;                                		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long                                      bHasCustomColor : 1;                              		// 0x0080 (0x0004) [0x0000000000000000] [0x00000001] 
	int                                                TeamIndex;                                        		// 0x0084 (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             __EventNameChanged__Delegate;                     		// 0x0088 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __SanitizedTeamName__ChangeNotify;                		// 0x00A0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bHasCustomColor__ChangeNotify;                  		// 0x00B8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TeamNameComponent_TA");
		}

		return uClassPointer;
	};

	void __TeamNameComponent_TA__SetCustomTeamName_51B4CE504095A1ACE3D68598573CDA23(struct FString _, struct FString InSanitized);
	void __bHasCustomColor__ChangeNotifyFunc();
	void __SanitizedTeamName__ChangeNotifyFunc();
	struct FString GetTeamName();
	void HandleClubDetails(class UClubDetails_X* Club);
	void SetCustomTeamName(class ATeam_TA* InTeam, struct FString NewName);
	void UpdateTeamName();
	void eventConstruct();
	void EventNameChanged(class UTeamNameComponent_TA* TeamNameComponent, struct FString NewName);
};

// Class TAGame.GameMetrics_TA
// 0x0000 (0x0080 - 0x0080)
class UGameMetrics_TA : public UMetricsGroup_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameMetrics_TA");
		}

		return uClassPointer;
	};

	void StatEvent(struct FUniqueNetId PlayerID, struct FName StatName, struct FString HitLocation);
	void RecordStatEvent(struct FUniqueNetId PlayerID, struct FName StatName, struct FVector HitLocation);
	void GameEnd(int WinningTeam, int Team0Score, int Team1Score);
	void Overtime();
	void GoalScoreHit(struct FUniqueNetId PlayerID, struct FString CarLocation, struct FString CarVelocity, struct FString BallLocation, struct FString BallVelocity, float ElapsedTimeSeconds);
	void RecordGoalScoreTouch(struct FBallHitInfo Hit);
	void GoalScored(int Team, struct FString BallLocation, struct FString BallVelocity);
	void RecordGoalScored(int Team, struct FVector BallLocation, struct FVector BallVelocity);
	void ForfeitVoteFail(int Team);
	void ForfeitVotePass(int Team);
	void ForfeitVoteStart(struct FUniqueNetId Instigator, int Team);
	void LeaveTeam(struct FUniqueNetId PlayerID);
	void JoinTeam(struct FUniqueNetId PlayerID, int Team);
	void EndRound(int SecondsRemaining);
	void StartRound(int SecondsRemaining);
	void IdleKick(struct FUniqueNetId PlayerID);
	void RemovePlayer(struct FUniqueNetId PlayerID);
	void AddPlayer(struct FUniqueNetId PlayerID);
	void PlayMutator(struct FName MutatorName);
	void GameInit(struct FName MapName, struct FName EventName, struct FName MatchType, int Playlist, struct FString MatchGUID);
};

// Class TAGame.__Team_TA__OnPlayerMarkedAsIdleBanned_8198100741114D83B54A5A89006D8F07
// 0x0008 (0x0060 - 0x0068)
class U__Team_TA__OnPlayerMarkedAsIdleBanned_8198100741114D83B54A5A89006D8F07 : public UObject
{
public:
	class APRI_TA*                                     IdlePlayer;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__Team_TA__OnPlayerMarkedAsIdleBanned_8198100741114D83B54A5A89006D8F07");
		}

		return uClassPointer;
	};

	bool __Team_TA__OnPlayerMarkedAsIdleBanned_8198100741114D83B54A5A89006D8F07(class APRI_TA* M);
};

// Class TAGame.GameSettingPlaylist_TA
// 0x0044 (0x0120 - 0x0164)
class UGameSettingPlaylist_TA : public UGameSettingPlaylist_X
{
public:
	int                                                XPLevelUnlocked;                                  		// 0x0120 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FMapSkillSettings>                   MapSkillRequirements;                             		// 0x0128 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UClass*                                      TourServerInfoClass;                              		// 0x0138 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FTeamColor>                          TeamColors;                                       		// 0x0140 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FColorOverride                              BallSuperSonicColor;                              		// 0x0150 (0x0014) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameSettingPlaylist_TA");
		}

		return uClassPointer;
	};

	void Setup(class UPlaylistSettings_X* Settings);
};

// Class TAGame.UIConfig_TA
// 0x0068 (0x0078 - 0x00E0)
class UUIConfig_TA : public UOnlineConfig_X
{
public:
	unsigned long                                      bReportServerButton : 1;                          		// 0x0078 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bTournamentTeamColorSection : 1;                  		// 0x0078 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bShowCurrencyRechargeButton : 1;                  		// 0x0078 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bCrateRouletteEnabled : 1;                        		// 0x0078 (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	unsigned long                                      bPsyNetFriendListEnabled : 1;                     		// 0x0078 (0x0004) [0x0000000040000000] [0x00000010] (CPF_EditInlineNotify)
	unsigned long                                      bShowStatGraphOptions : 1;                        		// 0x0078 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bUseCoherentBrowser : 1;                          		// 0x0078 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bRankedSportsEnabled : 1;                         		// 0x0078 (0x0004) [0x0000000040000000] [0x00000080] (CPF_EditInlineNotify)
	unsigned long                                      bShowStarterBundles : 1;                          		// 0x0078 (0x0004) [0x0000000040000001] [0x00000100] (CPF_Edit | CPF_EditInlineNotify)
	unsigned long                                      bPurchaseProTier : 1;                             		// 0x0078 (0x0004) [0x0000000040000001] [0x00000200] (CPF_Edit | CPF_EditInlineNotify)
	unsigned long                                      bShowAnthems : 1;                                 		// 0x0078 (0x0004) [0x0000000040000000] [0x00000400] (CPF_EditInlineNotify)
	unsigned long                                      bDisplayVideoQualitySetting : 1;                  		// 0x0078 (0x0004) [0x0000000000000000] [0x00000800] 
	int                                                FriendInvitationLimit;                            		// 0x007C (0x0004) [0x0000000000000000]               
	int                                                ClubInvitationLimit;                              		// 0x0080 (0x0004) [0x0000000000000000]               
	unsigned char                                      MainMenuBG;                                       		// 0x0084 (0x0001) [0x0000000000000000]               
	TArray<struct FTeamColor>                          MainMenuTeamColors;                               		// 0x0088 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        XPDataRanges;                                     		// 0x0098 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                TradeConfirmationLockoutSeconds;                  		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     SupportURL;                                       		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                CurrentActiveSeason;                              		// 0x00C0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FScriptDelegate                             __MainMenuBG__ChangeNotify;                       		// 0x00C8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.UIConfig_TA");
		}

		return uClassPointer;
	};

	int __UIConfig_TA__Apply_F8672EF947A164666581D0BE9ED3087C(int L, int R);
	void __MainMenuBG__ChangeNotifyFunc();
	unsigned char FindXPTier(int XPAmount);
	void Apply();
};

// Class TAGame.SeqEvent_StadiumTeamColorsChanged_TA
// 0x0020 (0x017C - 0x019C)
class USeqEvent_StadiumTeamColorsChanged_TA : public USequenceEvent
{
public:
	int                                                Team;                                             		// 0x0180 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     Primary;                                          		// 0x0184 (0x000C) [0x0000000000000000]               
	struct FVector                                     Secondary;                                        		// 0x0190 (0x000C) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_StadiumTeamColorsChanged_TA");
		}

		return uClassPointer;
	};

	void LinearColorToVector(struct FLinearColor& InColor, struct FVector& OutVector);
	void SetTeamColors(TArray<struct FLinearColor>& Colors);
};

// Class TAGame.__Team_TA__GetPartyFollowerIds_A5C483124602BF738DE7238FDE966D12
// 0x0008 (0x0060 - 0x0068)
class U__Team_TA__GetPartyFollowerIds_A5C483124602BF738DE7238FDE966D12 : public UObject
{
public:
	class APRI_TA*                                     PRI;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__Team_TA__GetPartyFollowerIds_A5C483124602BF738DE7238FDE966D12");
		}

		return uClassPointer;
	};

	bool __Team_TA__GetPartyFollowerIds_A5C483124602BF738DE7238FDE966D12(class APRI_TA* P);
};

// Class TAGame.__Team_TA__UpdateCustomColors_1049553F4A41D7ABD1D176AE8F7E6FCE
// 0x0004 (0x0060 - 0x0064)
class U__Team_TA__UpdateCustomColors_1049553F4A41D7ABD1D176AE8F7E6FCE : public UObject
{
public:
	unsigned long                                      bHasCustomColor : 1;                              		// 0x0060 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__Team_TA__UpdateCustomColors_1049553F4A41D7ABD1D176AE8F7E6FCE");
		}

		return uClassPointer;
	};

	void __Team_TA__UpdateCustomColors_1049553F4A41D7ABD1D176AE8F7E6FCE(class ATeam_TA* Team);
};

// Class TAGame.Team_Soccar_TA
// 0x0040 (0x0458 - 0x0498)
class ATeam_Soccar_TA : public ATeam_TA
{
public:
	int                                                GameScore;                                        		// 0x0458 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	TArray<class AActor*>                              PrimaryStarts;                                    		// 0x0460 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class AActor*>                              SecondaryStarts;                                  		// 0x0470 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventGameScoreUpdated__Delegate;                		// 0x0480 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Team_Soccar_TA");
		}

		return uClassPointer;
	};

	void OnGameScoreUpdated();
	void SetGameScore(int Value);
	void ScoreGame();
	void InitSpawnPoints();
	class AActor* MirrorStartPoint(class AActor* SpawnPoint, struct FVector Pivot);
	void eventDestroyed();
	void SetGameEvent(class AGameEvent_Team_TA* InGameEvent);
	void eventReplicatedEvent(struct FName VarName);
	void EventGameScoreUpdated(class ATeam_Soccar_TA* Team);
};

// Class TAGame.MatchSeries_TA
// 0x0030 (0x0060 - 0x0090)
class UMatchSeries_TA : public UObject
{
public:
	int                                                SeriesLength;                                     		// 0x0060 (0x0004) [0x0000000000000000]               
	TArray<struct FSeriesTeam>                         Teams;                                            		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSeriesGameForfeit__Delegate;               		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchSeries_TA");
		}

		return uClassPointer;
	};

	int __MatchSeries_TA__GetGamesPlayed_B605DC3743C554D20217A7AC8CFAB2F3(int Sum, struct FSeriesTeam Team);
	int __MatchSeries_TA__GetSeriesWinner_81DE629442E2084B1CC841BB6A4C967B(struct FSeriesTeam T);
	int GetSeriesWinCount(int InSeriesLength);
	int GetSeriesWinnerFromData(int InSeriesLength, TArray<int>& InGamesWon);
	int GetSeriesWinner();
	int GetGamesPlayed();
	bool AllGamesPlayed();
	void ForfeitGame(int WinningTeamIndex);
	void ScoreGame(int TeamIndex);
	int FindTeamForPlayer(struct FUniqueNetId Player);
	void RemoveTeamPlayer(struct FUniqueNetId Player);
	void AddTeamPlayer(int TeamIndex, struct FUniqueNetId Player);
	void EventSeriesGameForfeit(class UMatchSeries_TA* MatchSeries, int WinningTeamIndex);
};

// Class TAGame.SkinOverrideTable_TA
// 0x0010 (0x0060 - 0x0070)
class USkinOverrideTable_TA : public UObject
{
public:
	TArray<struct FProductSkinOverride>                Skins;                                            		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SkinOverrideTable_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_ProductLink_TA
// 0x0004 (0x0080 - 0x0084)
class UProductAttribute_ProductLink_TA : public UProductAttribute_TA
{
public:
	int                                                ProductID;                                        		// 0x0080 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_ProductLink_TA");
		}

		return uClassPointer;
	};

	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& Attributes);
};

// Class TAGame.ProductAttribute_Masterpiece_TA
// 0x0000 (0x0080 - 0x0080)
class UProductAttribute_Masterpiece_TA : public UProductAttribute_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Masterpiece_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_Level_TA
// 0x0004 (0x0080 - 0x0084)
class UProductAttribute_Level_TA : public UProductAttribute_TA
{
public:
	int                                                Level;                                            		// 0x0080 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Level_TA");
		}

		return uClassPointer;
	};

	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& Attributes);
};

// Class TAGame.ProductAttribute_EquippableSlot_TA
// 0x0001 (0x0080 - 0x0081)
class UProductAttribute_EquippableSlot_TA : public UProductAttribute_TA
{
public:
	unsigned char                                      Slot;                                             		// 0x0080 (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_EquippableSlot_TA");
		}

		return uClassPointer;
	};

	struct FName GetSlotName();
	struct FString GetOnlineProductAttributeValue();
	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& Attributes);
};

// Class TAGame.ProductAttribute_Expiration_TA
// 0x0008 (0x0080 - 0x0088)
class UProductAttribute_Expiration_TA : public UProductAttribute_TA
{
public:
	unsigned long long                                 ExpirationTime;                                   		// 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Expiration_TA");
		}

		return uClassPointer;
	};

	struct FString eventGetHashID();
	struct FString GetTypeHashID();
	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& OtherAttributes);
};

// Class TAGame.ProductAttribute_Rental_TA
// 0x0004 (0x0080 - 0x0084)
class UProductAttribute_Rental_TA : public UProductAttribute_TA
{
public:
	int                                                RentalLength;                                     		// 0x0080 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Rental_TA");
		}

		return uClassPointer;
	};

	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& OtherAttributes);
};

// Class TAGame.ProductAttribute_Indestructible_TA
// 0x0004 (0x0080 - 0x0084)
class UProductAttribute_Indestructible_TA : public UProductAttribute_TA
{
public:
	unsigned long                                      bIndestructible : 1;                              		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Indestructible_TA");
		}

		return uClassPointer;
	};

	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& OtherAttributes);
};

// Class TAGame.ProductAttribute_BlueprintCost_TA
// 0x0004 (0x0080 - 0x0084)
class UProductAttribute_BlueprintCost_TA : public UProductAttribute_TA
{
public:
	int                                                Cost;                                             		// 0x0080 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_BlueprintCost_TA");
		}

		return uClassPointer;
	};

	struct FString GetOnlineProductAttributeValue();
	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& OtherAttributes);
};

// Class TAGame.ProductAttribute_NoNotify_TA
// 0x0000 (0x0080 - 0x0080)
class UProductAttribute_NoNotify_TA : public UProductAttribute_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_NoNotify_TA");
		}

		return uClassPointer;
	};

	bool OnInit(struct FString AttributeValue, TArray<struct FOnlineProductAttribute>& Attributes);
};

// Class TAGame.EOSOnlineStorageUploader_TA
// 0x0018 (0x0060 - 0x0078)
class UEOSOnlineStorageUploader_TA : public UObject
{
public:
	class UOnlineStorageConfig_TA*                     Config;                                           		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bSaveDataDirty : 1;                               		// 0x0068 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bUploadInFlight : 1;                              		// 0x0068 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long long                                 LastSuccessfulUploadTime;                         		// 0x0070 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EOSOnlineStorageUploader_TA");
		}

		return uClassPointer;
	};

	struct FOnlineSaveObject __EOSOnlineStorageUploader_TA__UploadSaveData_8C2414A3471AA4AC7AC0E5A66D2B376C(class USaveObject_TA* S);
	bool __EOSOnlineStorageUploader_TA__UploadSaveData_498E1F2043C6DC398054AD9DA5498119(class USaveObject_TA* S);
	void HandleFileWriteComplete(unsigned long bWasSuccessful, struct FString UserId, struct FString Filename);
	bool UploadSaveData(unsigned long bForce);
	void SetSaveDataDirty();
	void Unload();
	void HandleEOSInitialized();
	void eventConstruct();
};

// Class TAGame.Mutator_TA
// 0x0004 (0x0060 - 0x0064)
class UMutator_TA : public UObject
{
public:
	unsigned long                                      bRecordMetrics : 1;                               		// 0x0060 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_TA");
		}

		return uClassPointer;
	};

	void MutateObject(class UObject* O);
	void Init(class AGameEvent_TA* GameEvent);
};

// Class TAGame.MatchRecorder_TA
// 0x0018 (0x0078 - 0x0090)
class UMatchRecorder_TA : public UMatchRecorder_X
{
public:
	TArray<class APRI_TA*>                             PRIs;                                             		// 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class AGameEvent_Soccar_TA*                        SoccarGame;                                       		// 0x0088 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchRecorder_TA");
		}

		return uClassPointer;
	};

	struct FName __MatchRecorder_TA__SetGameEvent_998366E34415B301AA945A93CDA4D881(class UMutator_TA* Mutator);
	void __MatchRecorder_TA__HandleTeamsCreated_D2DA2E6F4DE93DFD55B93FB7091137AB(class ATeam_TA* Team);
	void UpdatePlayerData(class APRI_TA* PRI);
	void Finished();
	void HandleMatchEnded(class AGameEvent_Soccar_TA* G);
	void HandleMatchStarted(class AGameEvent_TA* G);
	void HandleJoinTeam(class ATeam_TA* Team, class APRI_TA* Member);
	void HandleTeamsCreated(class AGameEvent_Team_TA* G);
	void HandlePlayerRemoved(class AGameEvent_TA* G, class APRI_TA* PRI);
	void HandlePlayerAdded(class AGameEvent_TA* G, class APRI_TA* PRI);
	void SetClubMatch();
	void SetGameEvent(class AGameEvent_TA* InGame);
	void AddPlayer(struct FUniqueNetId PlayerID, struct FString PlayerName);
};

// Class TAGame.BanSync_TA
// 0x0028 (0x0060 - 0x0088)
class UBanSync_TA : public UObject
{
public:
	TArray<class UBanMessage_X*>                       BanMessages;                                      		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSyncedBanStatus__Delegate;                 		// 0x0070 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BanSync_TA");
		}

		return uClassPointer;
	};

	bool __BanSync_TA__SyncAllPlayers_D02B2AA64364C320DD79B79EBEE5AD7C(struct FUniqueNetId Id);
	struct FUniqueNetId __BanSync_TA__SyncAllPlayers_74D6857E4989A26B4A0D2EB8BDABB38F(class APRI_TA* P);
	bool __BanSync_TA__SyncAllPlayers_1BA625F346EB292F98276D9A151B4699(class APRI_TA* P);
	void __BanSync_TA__SetBanMessages_4A62E3C74E3DF972DFDC5E840F1F5181(class UBanMessage_X* M);
	void Clear();
	class UBanMessage_X* GetBanMessage(unsigned char BanType, struct FUniqueNetId PlayerID);
	TArray<class UBanMessage_X*> GetPlayerBanMessages(struct FUniqueNetId PlayerID);
	TArray<class UBanMessage_X*> GetBanMessageTypes(unsigned char BanType);
	void SetBanMessages(TArray<class UBanMessage_X*>& Messages);
	void HandleBanStatusResponse(class URPC_GetBanStatus_TA* RPC);
	void SyncBanStatus(TArray<struct FUniqueNetId>& PlayerIDs);
	void SyncLocalPlayers();
	void HandleLocalPlayersChanged(class ULocalPlayer* NewPlayer);
	void HandlePsyNetLogin();
	void SyncAllPlayers();
	void HandlePlayerAdded(class AGameEvent_TA* GameEvent, class APRI_TA* PRI);
	void eventConstruct();
	void EventSyncedBanStatus(class UBanSync_TA* BanSync);
};

// Class TAGame.OnlineGameDedicatedServer_TA
// 0x0048 (0x03B0 - 0x03F8)
class UOnlineGameDedicatedServer_TA : public UOnlineGameDedicatedServer_X
{
public:
	class UOnlineGameTourServer_TA*                    Tournaments;                                      		// 0x03B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                LastPlaylistID;                                   		// 0x03B8 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<class UObject*>                             AllRelevantProducts;                              		// 0x03C0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UReplay_TA*                                  ReplayToUpload;                                   		// 0x03D0 (0x0008) [0x0000000000000000]               
	class ARLBot_SessionRecorder_TA*                   FlatbufferSession;                                		// 0x03D8 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventGameEventInitialized__Delegate;            		// 0x03E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineGameDedicatedServer_TA");
		}

		return uClassPointer;
	};

	void HandleActiveRoundChanged(class AGameEvent_Soccar_TA* GameEvent);
	int GetTeamScore(int TeamIdx);
	bool DidRematchVotePass();
	void UploadFlatbuffersSession(class ARLBot_SessionRecorder_TA* Session, struct FString URL, TArray<struct FKeyValuePair>& Headers);
	void InitFlatbufferUpload(class URPC_GetUploadUrls_TA* RPC, class UMatchData_X* Match, class ARLBot_SessionRecorder_TA* Session);
	void InitReplayUpload(class URPC_GetUploadUrls_TA* RPC, class UReplay_TA* Replay);
	void InitMatchLogUpload(class URPC_GetUploadUrls_TA* RPC, class UMatchLog_X* Log);
	void UploadMatchFiles();
	bool AllowServerMigration();
	bool CanStartMatch();
	bool AllowSplitscreenJoinRankedMatch();
	bool AllowSplitscreenJoin(struct FUniqueNetId PrimaryPlayerId, struct FUniqueNetId PlayerID, struct FString PlayerName, struct FString& Error);
	void AllowPlayerLogin(struct FString Options, struct FUniqueNetId PlayerID, struct FString& ErrorMessage);
	void GoToNextMap();
	struct FName GetNextRandomMapName(int GameMode, unsigned long bStandardOnly);
	void GotoPrivateMatchMap(struct FName MapName, int GameMode, struct FString GameTags);
	unsigned char GetTeamNum(struct FUniqueNetId PlayerID);
	void ReportLowFPS();
	int GetPlaylistPlayerCount(class UGameSettingPlaylist_X* Playlist);
	void SetPlaylist(int PlaylistId);
	void GoInactive();
	void OnMainEventDestroyed();
	struct FString GetKickReason();
	bool KickPlayersOnGameEventDestroyed();
	void HandleMigrationJoin();
	void ClearSettings();
	void HandleGameEventEnded(class AGameEvent_Soccar_TA* GameEvent);
	void HandleGameInitialized(class AGameInfo_TA* Game);
	void StartMatch();
	class AGameEvent_TA* GetCurrentGameEvent();
	void LoadAllRelevantProducts();
	void HandleRLBotMatchEnded(class AGameEvent_Soccar_TA* _);
	void HandleRLBotMatchStarted(class AGameEvent_Soccar_TA* _);
	void HandleReplayDirector(class AGameEvent_Soccar_TA* G);
	void OnInit();
	void EventGameEventInitialized(class AGameEvent_TA* GameEvent);
};

// Class TAGame.MatchAdminComponent_TA
// 0x0010 (0x0060 - 0x0070)
class UMatchAdminComponent_TA : public UObject
{
public:
	class AGameEvent_TA*                               GameEvent;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
	class UOnlinePlayerPermissions_X*                  PlayerPermissions;                                		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchAdminComponent_TA");
		}

		return uClassPointer;
	};

	bool IsMatchAdmin(class APRI_TA* PRI);
	bool IsLocalHost();
	void UpdateAll();
	void UpdatePlayer(class APRI_TA* PRI);
	void HandlePermissionsUpdated(class UOnlinePlayerPermissions_X* P);
	void HandleGameOwnerUpdated(class AGameEvent_TA* G, class APRI_TA* PRI);
	void HandlePlayerAdded(class AGameEvent_TA* G, class APRI_TA* PRI);
	void Init(class AGameEvent_TA* InGameEvent);
};

// Class TAGame.BotConfig_TA
// 0x00C8 (0x0078 - 0x0140)
class UBotConfig_TA : public UOnlineConfig_X
{
public:
	struct FInterpCurveFloat                           BotSkillByPlayerSkillCurve;                       		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FInterpCurveFloat                           BotSkillCurveForFTEMatches;                       		// 0x0090 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              BotBoostThreshold_vsAI;                           		// 0x00A8 (0x0004) [0x0000000000000000]               
	float                                              Skills[0x5] ;                                     		// 0x00AC (0x0014) [0x0000000000000000]               
	TArray<int>                                        AvatarIDs;                                        		// 0x00C0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<int>                                        BannerIDs;                                        		// 0x00D0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<int>                                        UnselectedAvatarIDs;                              		// 0x00E0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<int>                                        UnselectedBannerIDs;                              		// 0x00F0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<int>                                        AllowedAvatarIDs;                                 		// 0x0100 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        AllowedBannerIDs;                                 		// 0x0110 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        IgnoredAvatarIDs;                                 		// 0x0120 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        IgnoredBannerIDs;                                 		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BotConfig_TA");
		}

		return uClassPointer;
	};

	int PickRandomUnusedProductID(TArray<int>& AllIDs, TArray<int>& UnselectedIDs);
	int PickUnusedBannerProductID();
	int PickUnusedAvatarProductID();
	TArray<int> RefreshIDs(class UProductSlot_TA* Slot, TArray<int>& AllowedIDs, TArray<int>& IgnoredIDs);
	void Apply();
};

// Class TAGame.PlayerRemovedEvent_TA
// 0x0008 (0x0060 - 0x0068)
class UPlayerRemovedEvent_TA : public UObject
{
public:
	class APRI_TA*                                     Player;                                           		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerRemovedEvent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GameEventFinishedState_TA
// 0x0000 (0x0060 - 0x0060)
class UGameEventFinishedState_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEventFinishedState_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ListenServer_TA
// 0x002C (0x0060 - 0x008C)
class UListenServer_TA : public UObject
{
public:
	class AGRI_X*                                      GRI;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
	class UAdHocBeacon_X*                              AdHocBeacon;                                      		// 0x0068 (0x0008) [0x0000000000000000]               
	class AGameEvent_TA*                               GameEvent;                                        		// 0x0070 (0x0008) [0x0000000000000000]               
	TArray<struct FLoadingPlayer>                      LoadingPlayers;                                   		// 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long                                      bRegistered : 1;                                  		// 0x0088 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ListenServer_TA");
		}

		return uClassPointer;
	};

	int __ListenServer_TA__GetNumPlayers_8DF3EE3442184568BF6FA48F267C3866(struct FLoadingPlayer P);
	void GoToNextMap();
	void HandleCreateLanServerError(class UError* Error);
	void HandleLanServerCreated();
	void RegisterLanServer();
	void SubmitLanServerMetaData();
	struct FString BuildLanServerMetaData();
	void RebuildReservations();
	void TimerUpdateReservations();
	void UpdateReservations();
	void TimeoutLoadingPlayers();
	float GetMapLoadTime(unsigned char Platform);
	void RemoveLoadingPlayer(struct FUniqueNetId PlayerID);
	int GetMaxPlayers();
	int GetNumPlayers();
	void KickConnectedPlayers();
	struct FUniqueNetId GetCustomMatchOwner();
	struct FCustomMatchSettings GetCustomMatchSettings();
	void PlayerLoggedOut(class APlayerReplicationInfo* PRI);
	void PlayerLoggedIn(class APlayerReplicationInfo* PRI);
	bool AllowSplitscreenJoin(struct FUniqueNetId PrimaryPlayerId, struct FUniqueNetId PlayerID, struct FString PlayerName, struct FString& Error);
	bool IsLocalPlayer(struct FUniqueNetId PlayerID);
	bool CanAddPlayers(int Count);
	void AllowPlayerLogin(struct FString Options, struct FUniqueNetId PlayerID, struct FString& ErrorMessage);
	void HandleGRIChanged();
	void Init(class AGameEvent_TA* InGameEvent);
};

// Class TAGame.HUDBase_TA
// 0x0078 (0x0320 - 0x0398)
class AHUDBase_TA : public AHUD_X
{
public:
	class UGFxShell_TA*                                Shell;                                            		// 0x0320 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     DisconnectedString;                               		// 0x0328 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ServerMaintString;                                		// 0x0338 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     PartyChatTitle;                                   		// 0x0348 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UGFxData_Chat_TA*                            ChatData;                                         		// 0x0358 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxData_MultiItemDrops_TA*                  MultiItemDropData;                                		// 0x0360 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventGameMessage__Delegate;                     		// 0x0368 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventChatMessage__Delegate;                     		// 0x0380 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.HUDBase_TA");
		}

		return uClassPointer;
	};

	void DrawLookupTextures();
	void DrawHUD();
	void NotifyChatBannedPermanently();
	void NotifyChatBanned(unsigned long long ChatBanExpiration);
	void NotifyChatDisabled(float Time);
	void NotifyServerShutdown();
	void ToggleScoreboard();
	bool ChatWithExternalKeyboard(struct FString Title, struct FScriptDelegate Callback);
	void OpenPartyChat();
	void OpenTeamChat();
	void OpenChat();
	void ToggleMidGameMenu();
	void UpdatePRIData();
	void ReceiveMessage(class UMessage_TA* Message, struct FString Text);
	bool ShouldDeliverMessage(struct FUniqueNetId SenderId);
	void AddChatMessage(unsigned long bPreset, struct FGFxChatMessage& GFxMessage);
	void OnChatMessage(struct FChatMessage NewMsg);
	void EraseChatByType(unsigned char ChatChannel, struct FUniqueNetId PersonaId);
	void RepopulateChatHistory(unsigned char ChatChannel, struct FUniqueNetId PersonaId);
	void LobbyMessage_TA(struct FString PlayerName, struct FString Message, unsigned char ChatChannel, class APlayerReplicationInfo* SenderPRI);
	void IndividualMessage_TA(struct FString PlayerName, struct FString Message, unsigned char ChatChannel, struct FUniqueNetId PersonaId);
	void Message_TA(class APlayerReplicationInfo* PRI, struct FString Message, unsigned char ChatChannel, unsigned long bPreset, struct FUniqueNetId Recipient);
	class UOnlineGame_X* GetOnlineGame();
	class UOnlinePlayer_TA* GetOnlinePlayer();
	class AGameEvent_TA* GetGameEvent();
	void eventDestroyed();
	void Init();
	void EventChatMessage(struct FChatMessage Message);
	void EventGameMessage(class UMessage_TA* Message, struct FString Text);
};

// Class TAGame.MatchType_FTE_TA
// 0x0000 (0x00A8 - 0x00A8)
class UMatchType_FTE_TA : public UMatchType_Offline_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchType_FTE_TA");
		}

		return uClassPointer;
	};

	bool ShouldAutoSelectTeam(class AController* NewPlayer);
	bool ShouldSubmitMatchComplete();
};

// Class TAGame.MatchType_Lan_TA
// 0x0000 (0x00A8 - 0x00A8)
class UMatchType_Lan_TA : public UMatchType_Custom_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchType_Lan_TA");
		}

		return uClassPointer;
	};

	void SetGameData();
};

// Class TAGame.MatchType_Private_TA
// 0x0000 (0x00A8 - 0x00A8)
class UMatchType_Private_TA : public UMatchType_Custom_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchType_Private_TA");
		}

		return uClassPointer;
	};

	bool IsOnlineMultiplayer();
};

// Class TAGame.__GameEvent_TA__SetBotSkillByTeam_F91CE63F4E4E8499446112B4245F48A3
// 0x000C (0x0060 - 0x006C)
class U__GameEvent_TA__SetBotSkillByTeam_F91CE63F4E4E8499446112B4245F48A3 : public UObject
{
public:
	int                                                Team;                                             		// 0x0060 (0x0004) [0x0000000000000000]               
	float                                              NewSkill;                                         		// 0x0064 (0x0004) [0x0000000000000000]               
	float                                              BoostThreshold;                                   		// 0x0068 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameEvent_TA__SetBotSkillByTeam_F91CE63F4E4E8499446112B4245F48A3");
		}

		return uClassPointer;
	};

	void __GameEvent_TA__SetBotSkillByTeam_A30A689947FE215A99231187996DBD83(class AAIController_TA* AI);
	bool __GameEvent_TA__SetBotSkillByTeam_F91CE63F4E4E8499446112B4245F48A3(class AAIController_TA* AI);
};

// Class TAGame.LoadoutRandomizer_TA
// 0x0000 (0x0060 - 0x0060)
class ULoadoutRandomizer_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.LoadoutRandomizer_TA");
		}

		return uClassPointer;
	};

	int GetRandomColorID(class UCarColorSet_TA* Set);
	void RandomizeTeamPaint(struct FLoadoutData& Data);
	void RandomizeSlot(class UProfile_TA* Profile, int SlotIndex, struct FLoadoutData& Data);
	void RandomizeSlotFromProductList(class UProductSlot_TA* Slot, struct FLoadoutData& Data, TArray<class UProduct_TA*>& ProductList);
	void Randomize(class UProfile_TA* Profile, struct FLoadoutData& Loadouts);
	void RandomizeLoadout(class UProfile_TA* Profile, struct FLoadoutData& Loadout);
	void RandomizerLog(struct FString LogStr);
};

// Class TAGame.__GameEvent_TA__GetGeneratedBotName_047A92324FE2883D43428DAF3F693766
// 0x0010 (0x0060 - 0x0070)
class U__GameEvent_TA__GetGeneratedBotName_047A92324FE2883D43428DAF3F693766 : public UObject
{
public:
	struct FString                                     BotName;                                          		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameEvent_TA__GetGeneratedBotName_047A92324FE2883D43428DAF3F693766");
		}

		return uClassPointer;
	};

	bool __GameEvent_TA__GetGeneratedBotName_047A92324FE2883D43428DAF3F693766(class APRI_TA* PRI);
};

// Class TAGame.__GameEvent_TA__HasPlayerNamed_282A601E41878F68024EAEA5288210C5
// 0x0010 (0x0060 - 0x0070)
class U__GameEvent_TA__HasPlayerNamed_282A601E41878F68024EAEA5288210C5 : public UObject
{
public:
	struct FString                                     PlayerName;                                       		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameEvent_TA__HasPlayerNamed_282A601E41878F68024EAEA5288210C5");
		}

		return uClassPointer;
	};

	bool __GameEvent_TA__HasPlayerNamed_282A601E41878F68024EAEA5288210C5(class APRI_TA* PRI);
};

// Class TAGame.GameState_TA
// 0x0010 (0x0060 - 0x0070)
class UGameState_TA : public UObject
{
public:
	TArray<struct FComponentTemplate>                  Components;                                       		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameState_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__GameEvent_TA__HasMutatorType_915D8ED1452C683C945D44B757E78E0B
// 0x0008 (0x0060 - 0x0068)
class U__GameEvent_TA__HasMutatorType_915D8ED1452C683C945D44B757E78E0B : public UObject
{
public:
	class UClass*                                      MutatorClass;                                     		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameEvent_TA__HasMutatorType_915D8ED1452C683C945D44B757E78E0B");
		}

		return uClassPointer;
	};

	bool __GameEvent_TA__HasMutatorType_915D8ED1452C683C945D44B757E78E0B(class UMutator_TA* M);
};

// Class TAGame.__GameEvent_TA__HasMutatorNamed_52B6B70247BB7507E1E615B04C444EAA
// 0x0008 (0x0060 - 0x0068)
class U__GameEvent_TA__HasMutatorNamed_52B6B70247BB7507E1E615B04C444EAA : public UObject
{
public:
	struct FName                                       MutatorName;                                      		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameEvent_TA__HasMutatorNamed_52B6B70247BB7507E1E615B04C444EAA");
		}

		return uClassPointer;
	};

	bool __GameEvent_TA__HasMutatorNamed_52B6B70247BB7507E1E615B04C444EAA(class UMutator_TA* M);
};

// Class TAGame.RPC_ChatLog_TA
// 0x0020 (0x00E8 - 0x0108)
class URPC_ChatLog_TA : public URPC_X
{
public:
	TArray<struct FPlayerChatMessage>                  Messages;                                         		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     GameID;                                           		// 0x00F8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_ChatLog_TA");
		}

		return uClassPointer;
	};

	class URPC_ChatLog_TA* SetGameID(struct FString InGameID);
	class URPC_ChatLog_TA* SetMessages(TArray<struct FPlayerChatMessage>& InMessages);
};

// Class TAGame.MatchType_FaceIt_TA
// 0x0010 (0x00D0 - 0x00E0)
class UMatchType_FaceIt_TA : public UMatchType_Tournament_TA
{
public:
	int                                                MinPlayersMetWaitTimeSeconds;                     		// 0x00D0 (0x0004) [0x0000000000000000]               
	unsigned long long                                 WaitForPlayersExpirationTimeStamp;                		// 0x00D8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchType_FaceIt_TA");
		}

		return uClassPointer;
	};

	int GetMaxTeamSize();
	bool ShouldShowWaitingForPlayersTime();
	bool IsWaitingForPlayersTimeExpired();
	bool ShouldCancelMatch();
	bool ShouldStartMatch();
	int GetWaitTimeRemaining();
	void OnStartWaitingForPlayers();
};

// Class TAGame.SeqEvent_GameEventStateChanged_TA
// 0x0014 (0x017C - 0x0190)
class USeqEvent_GameEventStateChanged_TA : public USequenceEvent
{
public:
	struct FString                                     StateName;                                        		// 0x0180 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_GameEventStateChanged_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PlayerReplicatedEventInfo_TA
// 0x0008 (0x0268 - 0x0270)
class APlayerReplicatedEventInfo_TA : public AActor
{
public:
	class APRI_TA*                                     OwnerPRI;                                         		// 0x0268 (0x0008) [0x0000000000000020] (CPF_Net)     
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerReplicatedEventInfo_TA");
		}

		return uClassPointer;
	};

	void eventOnOwnerChanged();
};

// Class TAGame.GameEvent_Lobby_TA
// 0x0010 (0x0700 - 0x0710)
class AGameEvent_Lobby_TA : public AGameEvent_TA
{
public:
	class ABall_TA*                                    BallArchetype;                                    		// 0x0700 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class ABall_TA*                                    Ball;                                             		// 0x0708 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Lobby_TA");
		}

		return uClassPointer;
	};

	void SpawnBall();
	bool AllowShutdown();
	void eventDestroyed();
	void HandleBallAtGoal(class ABall_TA* ParticularBall, class UGoal_TA* Goal);
	void OnCarSpawned(class ACar_TA* NewCar);
	void InitField();
	void eventPostBeginPlay();
	void StartFirstState();
	void OnInit();
};

// Class TAGame.GameEvent_PostGameLobby_TA
// 0x0000 (0x0710 - 0x0710)
class AGameEvent_PostGameLobby_TA : public AGameEvent_Lobby_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_PostGameLobby_TA");
		}

		return uClassPointer;
	};

	bool ShouldShowBallIndicator();
	void StartFirstState();
};

// Class TAGame.GameEvent_Soccar_SubRules_TA
// 0x0000 (0x0060 - 0x0060)
class UGameEvent_Soccar_SubRules_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Soccar_SubRules_TA");
		}

		return uClassPointer;
	};

	void Unapply();
	void OnGetBallModifiedScore(class ABall_TA* Ball, int ScoreIndex, int& BallScore);
	void OnGetBallSpawnPosition(struct FVector& BallPosition);
	bool OnCanUseBallCam();
	class ATeam_TA* OnGetWinningTeam();
	bool ShouldSpawnBall();
	bool ShouldDisableStatXP();
	void SetBallListeners(class ABall_TA* Ball, unsigned long bListen);
	void OnRestartPlayer(class AController* NewPlayer);
	void OnTick(float DeltaTime);
	void OnRemoveGameBall();
	void OnAddGameBall(class ABall_TA* Ball);
	void OnFirstBallHit();
	void OnMatchEnd();
	void OnNewRound();
	void Init();
};

// Class TAGame.GoalIndicator_TA
// 0x0058 (0x0268 - 0x02C0)
class AGoalIndicator_TA : public AActor
{
public:
	class UGoal_TA*                                    Goal;                                             		// 0x0268 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class APlayerController_TA*                        PCOwner;                                          		// 0x0270 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APRI_TA*                                     PRI;                                              		// 0x0278 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ULensFlareComponent_X*                       LensFlareComponent;                               		// 0x0280 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UStaticMeshComponent*                        StaticMeshComponent;                              		// 0x0288 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UStaticMesh*                                 DefenseMesh;                                      		// 0x0290 (0x0008) [0x0000000000000000]               
	class UStaticMesh*                                 OffenseMesh;                                      		// 0x0298 (0x0008) [0x0000000000000000]               
	class UMaterialInterface*                          MaterialGoalDefense;                              		// 0x02A0 (0x0008) [0x0000000000000000]               
	class UMaterialInterface*                          MaterialGoalOffense;                              		// 0x02A8 (0x0008) [0x0000000000000000]               
	TArray<class ULensFlare*>                          LensFlareTeamList;                                		// 0x02B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GoalIndicator_TA");
		}

		return uClassPointer;
	};

	void HandleViewerTeamChanged(class APRI_X* InPRI);
	void HandleViewerReceivedPRI(class APlayerController_X* PC);
	void Destroyed();
	void SetGoal(class AGameEvent_Soccar_TA* GameEvent, class UGoal_TA* In_Goal);
};

// Class TAGame.MatchBroadcastComponent_TA
// 0x0010 (0x0070 - 0x0080)
class UMatchBroadcastComponent_TA : public UComponent
{
public:
	class UMatchBroadcastLog_TA*                       MatchLog;                                         		// 0x0070 (0x0008) [0x0000000000000000]               
	class UOnlineGame_Base_X*                          OnlineGame;                                       		// 0x0078 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchBroadcastComponent_TA");
		}

		return uClassPointer;
	};

	void AppendBroadcastLog(class AMatchBroadcast_TA* Broadcast, struct FString EventJson);
	void SetBroadcast(class AMatchBroadcast_TA* Broadcast);
	void InitServer(class AGameEvent_Soccar_TA* GameEvent);
	void HandleLocalPlayersChanged(class AGameEvent_TA* GameEvent);
	void InitClient(class AGameEvent_Soccar_TA* GameEvent);
	bool CreateMatchLog();
	struct FString GetLogFileName();
	void Init(class AGameEvent_Soccar_TA* GameEvent);
};

// Class TAGame.MatchWinner_TA
// 0x0008 (0x0060 - 0x0068)
class UMatchWinner_TA : public UObject
{
public:
	class ATeam_TA*                                    WinningTeam;                                      		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchWinner_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.CountdownObject_TA
// 0x0024 (0x008C - 0x00B0)
class UCountdownObject_TA : public UTickableStateObject_X
{
public:
	int                                                CountTime;                                        		// 0x0090 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FScriptDelegate                             __EventCountChange__Delegate;                     		// 0x0098 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CountdownObject_TA");
		}

		return uClassPointer;
	};

	void UpdateCountdown();
	void StopCount();
	void Start(int InCountTime);
	void EventCountChange(class UCountdownObject_TA* CountdownObject, int CountValue);
};

// Class TAGame.OvertimeComponent_TA
// 0x0018 (0x00A4 - 0x00BC)
class UOvertimeComponent_TA : public UActorComponent_X
{
public:
	unsigned char                                      TieBreaker;                                       		// 0x00A8 (0x0001) [0x0000000000000001] (CPF_Edit)    
	int                                                OvertimeGameTime;                                 		// 0x00AC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BallHitGroundTimeoutSeconds;                      		// 0x00B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                FirstScoreTeamIndex;                              		// 0x00B4 (0x0004) [0x0000000000000000]               
	int                                                RandomWinningTeamIndex;                           		// 0x00B8 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OvertimeComponent_TA");
		}

		return uClassPointer;
	};

	class ATeam_TA* PickRandomTeam();
	class ATeam_TA* PickFirstScore();
	class ATeam_TA* PickWinner();
	void HandleGoalScored(class AGameEvent_Soccar_TA* GameEvent, class ABall_TA* Ball, class UGoal_TA* Goal, int ScoreIndex, int AssistIdx);
	void eventDetached();
	void eventAttached();
};

// Class TAGame.SeqEvent_GoalScored_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_GoalScored_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_GoalScored_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqEvent_ScoreChanged_TA
// 0x000C (0x017C - 0x0188)
class USeqEvent_ScoreChanged_TA : public USequenceEvent
{
public:
	int                                                BlueScore;                                        		// 0x0180 (0x0004) [0x0000000000000000]               
	int                                                RedScore;                                         		// 0x0184 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_ScoreChanged_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqEvent_CountDownStart_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_CountDownStart_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_CountDownStart_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ServerPerformanceTracker_TA
// 0x0024 (0x00A4 - 0x00C8)
class UServerPerformanceTracker_TA : public UActorComponent_X
{
public:
	class UServerPerformanceConfig_TA*                 ServerPerformanceConfig;                          		// 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UConnectionQualityConfig_TA*                 ConnectionQualityConfig;                          		// 0x00B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              RollingFpsAverage;                                		// 0x00B8 (0x0004) [0x0000000000000000]               
	float                                              InternalLowFpsTime;                               		// 0x00BC (0x0004) [0x0000000000000000]               
	float                                              ServerPerformanceLastUpdateTime;                  		// 0x00C0 (0x0004) [0x0000000000000000]               
	unsigned long                                      bReportedServerForPoorPerformance : 1;            		// 0x00C4 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ServerPerformanceTracker_TA");
		}

		return uClassPointer;
	};

	void HandleInternalServerPerformanceCheck(float CurrentFps, float DeltaTime);
	unsigned char GetPerformanceStatus(float InPerformance, float MediocreBoundary, float BadBoundary);
	void eventTick(float DeltaTime);
	void eventAttached();
};

// Class TAGame.GameEventMatchActive_TA
// 0x0000 (0x0060 - 0x0060)
class UGameEventMatchActive_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEventMatchActive_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqEvent_CountDownCompleted_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_CountDownCompleted_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_CountDownCompleted_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqEvent_RoundStart_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_RoundStart_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_RoundStart_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqEvent_LiveReplay_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_LiveReplay_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_LiveReplay_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_MatchComplete_TA
// 0x0098 (0x00E8 - 0x0180)
class URPC_MatchComplete_TA : public URPC_X
{
public:
	int                                                PlaylistId;                                       		// 0x00E8 (0x0004) [0x0000000000000000]               
	struct FString                                     MatchGUID;                                        		// 0x00F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FOnlinePlayerMatchData>              MatchData;                                        		// 0x0100 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FGuid                                       AppSessionID;                                     		// 0x0110 (0x0010) [0x0000000000000000]               
	struct FGuid                                       LevelSessionID;                                   		// 0x0120 (0x0010) [0x0000000000000000]               
	int                                                MaxTeamSize;                                      		// 0x0130 (0x0004) [0x0000000000000000]               
	int                                                MatchWinner;                                      		// 0x0134 (0x0004) [0x0000000000000000]               
	struct FString                                     MapName;                                          		// 0x0138 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FName                                       MatchType;                                        		// 0x0148 (0x0008) [0x0000000000000000]               
	TArray<int>                                        TeamScores;                                       		// 0x0150 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FOnlineProductDrop>                  Drops;                                            		// 0x0160 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FName>                               StatsToSend;                                      		// 0x0170 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_MatchComplete_TA");
		}

		return uClassPointer;
	};

	class URPC_MatchComplete_TA* SetGameEventData(class AGameEvent_Soccar_TA* GameEvent);
	TArray<struct FCurrency> GetCurrencyDrops(struct FUniqueNetId& PlayerID);
	TArray<struct FOnlineXPReward> GetRewardDrops(struct FUniqueNetId& PlayerID);
	TArray<struct FOnlineProductData> GetDrops(struct FUniqueNetId& PlayerID);
	bool ContainsPlayerData(struct FUniqueNetId& PlayerID);
	class URPC_MatchComplete_TA* SetLevelSessionID(struct FGuid& InLevelSessionID);
	class URPC_MatchComplete_TA* SetAppSessionID(struct FGuid& InAppSessionID);
	class URPC_MatchComplete_TA* SetMatchData(TArray<struct FOnlinePlayerMatchData>& InMatchData);
	class URPC_MatchComplete_TA* SetPlaylistID(int InPlaylistID);
};

// Class TAGame.StatCategory_TA
// 0x0014 (0x0060 - 0x0074)
class UStatCategory_TA : public UObject
{
public:
	TArray<class UStatTitle_TA*>                       Titles;                                           		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              Multiplier;                                       		// 0x0070 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatCategory_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.StatTitle_TA
// 0x003D (0x0060 - 0x009D)
class UStatTitle_TA : public UObject
{
public:
	struct FString                                     PrimaryTitle;                                     		// 0x0060 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     SecondaryTitle;                                   		// 0x0070 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	int                                                Points;                                           		// 0x0080 (0x0004) [0x0000000000000000]               
	int                                                MinStatValueRequired;                             		// 0x0084 (0x0004) [0x0000000000000000]               
	int                                                MaxStatValueAllowed;                              		// 0x0088 (0x0004) [0x0000000000000000]               
	class UStatEvent_TA*                               Stat;                                             		// 0x0090 (0x0008) [0x0000000000000000]               
	unsigned long                                      bPerStat : 1;                                     		// 0x0098 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bInverseStat : 1;                                 		// 0x0098 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bClampStatToOne : 1;                              		// 0x0098 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned char                                      StatUnitType;                                     		// 0x009C (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatTitle_TA");
		}

		return uClassPointer;
	};

	struct FString GetUnitTypeAsString(unsigned long bMetric);
	bool GetNumPoints(class APRI_TA* Member, class UStatCategory_TA* Category, int& PointsEarned, int& StatCount);
};

// Class TAGame.SpawnPointCluster_TA
// 0x0010 (0x0060 - 0x0070)
class USpawnPointCluster_TA : public UObject
{
public:
	TArray<class USpawnPointGroup_TA*>                 SpawnTeams;                                       		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpawnPointCluster_TA");
		}

		return uClassPointer;
	};

	class USpawnPointGroup_TA* GetGroup(class ATeamInfo* Team);
	int GetGroupId(class AActor* SpawnPoint);
	void RemoveFromSpawnPoints(class AController* ForPlayer);
	bool GetSpawnOrientation(class AController* ForPlayer, struct FVector& out_Location, struct FRotator& out_Rotation);
	bool TryAddToSpawnPointAtIndex(class AController* ForPlayer, int PointIdx);
	bool TryAddToSpawnPoint(class AController* ForPlayer);
	void SetSpawnPoints(class AGameEvent_TA* GameEvent, struct FVector Center, struct FRotator Orientation);
	void Init(class AGameEvent_TA* GameEvent, struct FVector CenterOffset, struct FRotator CenterRotation);
};

// Class TAGame.__GameEvent_Soccar_TA__GetGoalByTeamIndex_AB6F7D3B43E5D4B2BE59D496DDF61F51
// 0x0004 (0x0060 - 0x0064)
class U__GameEvent_Soccar_TA__GetGoalByTeamIndex_AB6F7D3B43E5D4B2BE59D496DDF61F51 : public UObject
{
public:
	int                                                TeamIndex;                                        		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameEvent_Soccar_TA__GetGoalByTeamIndex_AB6F7D3B43E5D4B2BE59D496DDF61F51");
		}

		return uClassPointer;
	};

	bool __GameEvent_Soccar_TA__GetGoalByTeamIndex_AB6F7D3B43E5D4B2BE59D496DDF61F51(class UGoal_TA* G);
};

// Class TAGame.Replay_Soccar_TA
// 0x0048 (0x02B0 - 0x02F8)
class UReplay_Soccar_TA : public UReplay_TA
{
public:
	int                                                TeamSize;                                         		// 0x02B0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                UnfairTeamSize;                                   		// 0x02B4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bUnfairBots : 1;                                  		// 0x02B8 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	int                                                PrimaryPlayerTeam;                                		// 0x02BC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Team0Score;                                       		// 0x02C0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Team1Score;                                       		// 0x02C4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FScoredGoal>                         Goals;                                            		// 0x02C8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FHighlight>                          HighLights;                                       		// 0x02D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FReplayPlayerStats>                  PlayerStats;                                      		// 0x02E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Replay_Soccar_TA");
		}

		return uClassPointer;
	};

	void eventPreExport();
	void RemoveTimelineKeyframe(int KeyframeIndex);
	void AddTimelineEvent(struct FName EventID, float TimeBeforeEvent);
	void RecordUserEvent();
	void RecordHighlight(class APRI_TA* FocusPlayer, struct FName BallName);
	void RecordSave(class APRI_TA* Saver, struct FName BallName);
	void RecordGoal(int TeamNum, class APRI_TA* Scorer, struct FName BallName);
	void AddPlayer(class APRI_TA* PRI);
};

// Class TAGame.GFxHUD_TA
// 0x0178 (0x0398 - 0x0510)
class AGFxHUD_TA : public AHUDBase_TA
{
public:
	struct FString                                     UIState;                                          		// 0x0398 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UGFxMoviePlayer_X*                           MatchInfoMovieArchetype;                          		// 0x03A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UGFxMoviePlayer_X*                           MatchInfoMovie;                                   		// 0x03B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxNameplatesManager_TA*                    NameplatesManager;                                		// 0x03B8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FString                                     PlayerJoinString;                                 		// 0x03C0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     PlayerLeaveString;                                		// 0x03D0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     PlayerTimedOutString;                             		// 0x03E0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ChatTitle;                                        		// 0x03F0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     TeamChatTitle;                                    		// 0x0400 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ChatDisabledMessage;                              		// 0x0410 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ReplayQueSaveMessage;                             		// 0x0420 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ChatBannedMessage;                                		// 0x0430 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ChatBannedPermanentlyMessage;                     		// 0x0440 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class APRI_TA*                                     OwnerPRI;                                         		// 0x0450 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACar_TA*                                     OwnerCar;                                         		// 0x0458 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AGameEvent_TA*                               GameEvent;                                        		// 0x0460 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AGameEvent_Team_TA*                          TeamGameEvent;                                    		// 0x0468 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxData_GameEvent_TA*                       GameEventData;                                    		// 0x0470 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxData_LocalCar_TA*                        CarData;                                          		// 0x0478 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class UGFxData_PRI_TA*>                     PRIData;                                          		// 0x0480 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UGFxData_PlayerRecord_TA*>            PlayerRecordData;                                 		// 0x0490 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              CloseScoreboardTime;                              		// 0x04A0 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bShowedDisconnectMessage : 1;                     		// 0x04A4 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	TArray<class APRI_TA*>                             PendingShowAddMessagePlayers;                     		// 0x04A8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class ARBActor_TA*                                 LastTarget;                                       		// 0x04B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              TestLastLogTime;                                  		// 0x04C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class ACar_TA*                                     CarDisplayingBoost;                               		// 0x04C8 (0x0008) [0x0000000000000000]               
	class UAdHocBeacon_X*                              AdHocBeacon;                                      		// 0x04D0 (0x0008) [0x0000000000000000]               
	struct FString                                     ServerMigrationTitle;                             		// 0x04D8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ServerMigrationBody;                              		// 0x04E8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FScriptDelegate                             __VoteLambda__Delegate;                           		// 0x04F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxHUD_TA");
		}

		return uClassPointer;
	};

	void __GFxHUD_TA__HandleServerNameChanged_C7F8F68541B3C9C9174195BD5481BB19(struct FString O, struct FString S);
	void __GFxHUD_TA__SetGameEvent_80DA09FF4F1628E2639032B462E48785(class AGameEvent_Soccar_TA* Soccar);
	void SetRespawnTimeRemaining(int NewTime);
	void HandleReplaceBot(class APRI_TA* InPRI);
	struct FScreenLocation GetScreenLocation(struct FVector WorldLocation, float SafeZone);
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void DrawNameplatesTexture();
	void DrawHUD();
	void HandleReplayAutoSave(class AReplayDirector_TA* Director);
	void HandleVoteFinished(class AVoteActor_TA* VoteActor);
	class UGFxData_Vote_TA* GetVoteBySubject(unsigned char VoteSubject);
	class UGFxData_Vote_TA* GetVoteByRow(int RowIndex);
	int GetVoteRow(struct FScriptDelegate MatchCondition);
	void HandleVoteStarted(class AVoteActor_TA* VoteActor);
	void NotifyChatBannedPermanently();
	void NotifyChatBanned(unsigned long long ChatBanExpiration);
	void NotifyChatDisabled(float Time);
	void ChatPreset(int Index);
	void HandleInternetConnectionChanged(unsigned long bConnected);
	void NotifyClientTravel();
	void NotifyServerMigration();
	void NotifyServerShutdown();
	void HandlePRICameraChanged(class APRI_TA* InPRI);
	void CloseScoreboard();
	void OpenScoreboard();
	void OpenMidgameMenu();
	void ReceiveMessage(class UMessage_TA* Message, struct FString Text);
	void HandleStatTickerMessage(class APRI_TA* Receiver, class APRI_TA* Victim, class UStatEvent_TA* StatEvent);
	bool CanDisplayStatEvent(class UStatEvent_TA* StatEvent);
	void HandleStatEvent(class APRI_TA* PRI, class UStatEvent_TA* StatEvent, int Count);
	void OpenPartyChat();
	void OpenTeamChat();
	void OpenChat();
	bool CanOpenChat();
	bool AnyPlayerChatRestricted();
	void UpdateCarData();
	class ACar_TA* GetFocusCar();
	void ClearPickupTarget();
	void UpdateCarDataFromCar(class ACar_TA* Car);
	void UpdateCameraYaw();
	void eventTick(float DeltaTime);
	int GetBoostAmountForUI(class ACarComponent_Boost_TA* Boost);
	void UpdatePRIData();
	void SetOwnerCar(class ACar_TA* NewCar);
	void HandlePawnChanged(class APlayerController_X* PC, class APawn* OldPawn, class APawn* NewPawn);
	void OnAllTeamsCreated();
	void HandleAllTeamsCreated(class AGameEvent_Team_TA* G);
	void HandleGameStateChanged(class AGameEvent_TA* G);
	void HandlePlayerRemoved(class AGameEvent_TA* G, class APRI_TA* InPRI);
	void HandlePlayerIDChanged(class APRI_X* InPRI);
	void HideNameplates();
	void ShowNameplates();
	void ToggleNameplates();
	void UpdatePendingAddMessagePlayers();
	void HandlePlayerAdded(class AGameEvent_TA* G, class APRI_TA* InPRI);
	struct FString GetPlayerName(class APRI_TA* PRI);
	void UpdateGFxPlayerRecord(class APRI_TA* InPRI);
	void UpdateSessionStatus();
	void DestroyGFxPRIData(class UGFxData_PRI_TA* OldData);
	class UGFxData_PRI_TA* CreateGFxPRIData();
	void HandleReservationsUpdated(class AGRI_X* GRI);
	bool IsValidID(struct FUniqueNetId PlayerID);
	class UGFxData_PRI_TA* GetPRIDataFromID(struct FUniqueNetId PlayerID);
	int GetPRIDataIndex(class APRI_TA* InPRI);
	void HandleMatchTypeSet(class AGameEvent_TA* InGameEvent);
	void SetGameEvent(class AGameEvent_TA* InGameEvent);
	void HandleGameEventChanged(class APRI_TA* InPRI);
	void SetTeam(class ATeam_TA* Team);
	void HandleTeamChanged(class APRI_X* InPRI);
	void SetOwnerPRI(class APRI_TA* InPRI);
	void HandleReceivedPRI(class APlayerController_X* PC);
	void UpdateMutatorTags(struct FString MatchTags);
	void UpdateMutatorTagsFromPreset(class UPresetMutators_X* Presets);
	void HandleGameDataSelected(int PlaylistId, int MutatorIndex);
	void HandleServerNameChanged(class AGRI_X* GRI);
	void HandleCanVoteForfeitChanged(class AGameEvent_TA* InGameEvent);
	void HandlePenaltyChanged(class AGameEvent_TA* InGameEvent);
	void HandleGRIReplicated(class AGRI_X* GRI);
	void HandleHideWorldUIChanged(class UGameShare_TA* G);
	void eventDestroyed();
	void InitGFxData();
	void InitGFx();
	void Init();
	bool VoteLambda(class AVoteActor_TA* InVoteActor);
};

// Class TAGame.SeqEvent_PodiumStart_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_PodiumStart_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_PodiumStart_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__GameEvent_Soccar_TA__ShouldAutoReadyUp_1E3413E140611F902735D3BEE4820084
// 0x0048 (0x0060 - 0x00A8)
class U__GameEvent_Soccar_TA__ShouldAutoReadyUp_1E3413E140611F902735D3BEE4820084 : public UObject
{
public:
	struct FUniqueNetId                                PrimaryID;                                        		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameEvent_Soccar_TA__ShouldAutoReadyUp_1E3413E140611F902735D3BEE4820084");
		}

		return uClassPointer;
	};

	bool __GameEvent_Soccar_TA__ShouldAutoReadyUp_1E3413E140611F902735D3BEE4820084(class APRI_TA* P);
};

// Class TAGame.SeqEvent_GameTimeChanged_TA
// 0x000C (0x017C - 0x0188)
class USeqEvent_GameTimeChanged_TA : public USequenceEvent
{
public:
	float                                              CallTimePercent;                                  		// 0x0180 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bHasBeenCalled : 1;                               		// 0x0184 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_GameTimeChanged_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.BotDetection_TA
// 0x0034 (0x00A4 - 0x00D8)
class UBotDetection_TA : public UActorComponent_X
{
public:
	float                                              ThrottleThreshold;                                		// 0x00A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AirRollThreshold;                                 		// 0x00AC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CameraRotationThreshold;                          		// 0x00B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FPlayerAggregateStats>               PlayerStats;                                      		// 0x00B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UBotDetectionConfig_TA*                      BotConfig;                                        		// 0x00C8 (0x0008) [0x0000000000000000]               
	class AGameEvent_Soccar_TA*                        SoccarData;                                       		// 0x00D0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BotDetection_TA");
		}

		return uClassPointer;
	};

	void HandleBoostPickup(class AVehiclePickup_Boost_TA* BoostPickup);
	void MatchComplete();
	void eventTick(float DeltaTime);
	struct FBinaryInput UpdateBinaryInput(struct FBinaryInput Input, unsigned long bNewInput);
	struct FAggregateInput UpdateAggregateInput(struct FAggregateInput Input, unsigned long bValue, float DeltaTime);
	void HandleCarHitBall(class ACar_TA* InCar, class ABall_TA* InBall, struct FVector HitLocation, struct FVector HitNormal);
	void HandleCarAdded(class AGameEvent_TA* InGameEvent, class ACar_TA* InCar);
	void HandlePlayerAdded(class AGameEvent_TA* InGameEvent, class APRI_TA* InPRI);
	void eventDetached();
	void eventAttached();
};

// Class TAGame.RPC_RecordMatchStats_TA
// 0x0028 (0x00E8 - 0x0110)
class URPC_RecordMatchStats_TA : public URPC_X
{
public:
	struct FString                                     MatchGUID;                                        		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                PlaylistId;                                       		// 0x00F8 (0x0004) [0x0000000000000000]               
	TArray<struct FPlayerAggregateStats>               Aggregates;                                       		// 0x0100 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_RecordMatchStats_TA");
		}

		return uClassPointer;
	};

	class URPC_RecordMatchStats_TA* SetPlaylistID(int InID);
	class URPC_RecordMatchStats_TA* SetMatchGUID(struct FString InGuid);
};

// Class TAGame.__GameEvent_Soccar_TA__CommitPlayerMatchData_626F00BF448A25D8F7913EB4954BDBC2
// 0x0008 (0x0060 - 0x0068)
class U__GameEvent_Soccar_TA__CommitPlayerMatchData_626F00BF448A25D8F7913EB4954BDBC2 : public UObject
{
public:
	class APRI_TA*                                     PRI;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameEvent_Soccar_TA__CommitPlayerMatchData_626F00BF448A25D8F7913EB4954BDBC2");
		}

		return uClassPointer;
	};

	bool __GameEvent_Soccar_TA__CommitPlayerMatchData_626F00BF448A25D8F7913EB4954BDBC2(struct FReservationData Reservation);
};

// Class TAGame.ConsecutiveMatchTracker_TA
// 0x0010 (0x0060 - 0x0070)
class UConsecutiveMatchTracker_TA : public UObject
{
public:
	TArray<struct FMatchData>                          PlayerMatchData;                                  		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ConsecutiveMatchTracker_TA");
		}

		return uClassPointer;
	};

	bool __ConsecutiveMatchTracker_TA__HandleGameEnded_3D6753D54E9508AD3AC0DB830C41AD49(class APRI_TA* PRI);
	void Reset();
	int GetConsecutiveMatchesPlayed(struct FUniqueNetId PlayerID);
	void HandleGameEnded(class AGameEvent_Soccar_TA* GameEvent);
	void eventConstruct();
};

// Class TAGame.__GameEvent_Soccar_TA__ReportFps_CB8C6BA14AB4AB3F550775A828404A32
// 0x0004 (0x0060 - 0x0064)
class U__GameEvent_Soccar_TA__ReportFps_CB8C6BA14AB4AB3F550775A828404A32 : public UObject
{
public:
	int                                                TotalFrames;                                      		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameEvent_Soccar_TA__ReportFps_CB8C6BA14AB4AB3F550775A828404A32");
		}

		return uClassPointer;
	};

	void __GameEvent_Soccar_TA__ReportFps_CB8C6BA14AB4AB3F550775A828404A32(struct FFPSBucketMetrics Bucket);
};

// Class TAGame.PerfMetrics_TA
// 0x0000 (0x0080 - 0x0080)
class UPerfMetrics_TA : public UMetricsGroup_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PerfMetrics_TA");
		}

		return uClassPointer;
	};

	void ClientFPS(int TotalFrames, TArray<struct FFPSBucketMetrics> Buckets);
	void ServerInactiveFPS(int TotalFrames, TArray<struct FFPSBucketMetrics> Buckets);
	void ServerFPS(int TotalFrames, TArray<struct FFPSBucketMetrics> Buckets);
};

// Class TAGame.__GameEvent_Soccar_TA__InitClubMatch_A7F2755B45C9552E65A575B61089EA50
// 0x0008 (0x0060 - 0x0068)
class U__GameEvent_Soccar_TA__InitClubMatch_A7F2755B45C9552E65A575B61089EA50 : public UObject
{
public:
	class UOnlineClubCache_X*                          Cache;                                            		// 0x0060 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameEvent_Soccar_TA__InitClubMatch_A7F2755B45C9552E65A575B61089EA50");
		}

		return uClassPointer;
	};

	unsigned long long __GameEvent_Soccar_TA__InitClubMatch_AEF97A0940E81CE1B571EE90F11F4F89(struct FReservationData P);
	unsigned long long __GameEvent_Soccar_TA__InitClubMatch_A7F2755B45C9552E65A575B61089EA50(struct FReservationData P);
};

// Class TAGame.ClubUtil_TA
// 0x0000 (0x0060 - 0x0060)
class UClubUtil_TA : public UClubUtil_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ClubUtil_TA");
		}

		return uClassPointer;
	};

	int AccentColorToUIColorID(int InColor);
	int ColorToUIColorID(int InColor);
	int UIAccentColorIDToColor(int ColorID);
	int UIColorIDToColor(int ColorID);
	struct FClubColorSet GetClubColorSet(class UClubDetails_X* Club);
	unsigned char EnsureDifferentColorsTA(struct FClubColorSet& Set0, struct FClubColorSet& Set1);
};

// Class TAGame.ClientConnectionTracker_TA
// 0x006C (0x00A4 - 0x0110)
class UClientConnectionTracker_TA : public UActorComponent_X
{
public:
	unsigned long                                      bDisconnectedFromServer : 1;                      		// 0x00A8 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bShowConnectionQualityIndicators : 1;             		// 0x00A8 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned char                                      LatencyStatus;                                    		// 0x00AC (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      JitterStatus;                                     		// 0x00AD (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      PacketStatus;                                     		// 0x00AE (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	float                                              LatencyLastUpdateTime;                            		// 0x00B0 (0x0004) [0x0000000000000000]               
	float                                              JitterRollingAverage;                             		// 0x00B4 (0x0004) [0x0000000000000000]               
	float                                              JitterLastUpdateTime;                             		// 0x00B8 (0x0004) [0x0000000000000000]               
	float                                              PacketLastUpdateTime;                             		// 0x00BC (0x0004) [0x0000000000000000]               
	float                                              NewPacketsRollingAverage;                         		// 0x00C0 (0x0004) [0x0000000000000000]               
	float                                              PacketsLostRollingAverage;                        		// 0x00C4 (0x0004) [0x0000000000000000]               
	float                                              RollingPercentLost;                               		// 0x00C8 (0x0004) [0x0000000000000000]               
	float                                              PriorTotalPacketsInOut;                           		// 0x00CC (0x0004) [0x0000000000000000]               
	float                                              PriorTotalPacketsLost;                            		// 0x00D0 (0x0004) [0x0000000000000000]               
	float                                              RollingBadPingTime;                               		// 0x00D4 (0x0004) [0x0000000000000000]               
	float                                              RollingBadJitterTime;                             		// 0x00D8 (0x0004) [0x0000000000000000]               
	float                                              RollingBadPacketLossTime;                         		// 0x00DC (0x0004) [0x0000000000000000]               
	class UConnectionQualityConfig_TA*                 ConnectionQualityConfig;                          		// 0x00E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class APRI_TA*                                     TrackedPRI;                                       		// 0x00E8 (0x0008) [0x0000000000000000]               
	class UConnectionQualitySave_TA*                   ConnectionQualitySave;                            		// 0x00F0 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventNetStatsPolled__Delegate;                  		// 0x00F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ClientConnectionTracker_TA");
		}

		return uClassPointer;
	};

	unsigned char GetWorstConnectionStatusBeyondLatency();
	unsigned char GetConnectionStatus(float InMetricValue, float MediocreBoundary, float BadBoundary);
	bool ShouldUpdateMetric(unsigned char ExistingValue, unsigned char NewValue, float LastUpdateTime, float CurrentTime, float DelayTime);
	void PollMetric(unsigned char NewState, float NewTime, float DelayTime, unsigned char& ExistingState, float& UpdateTime);
	void UpdateSavedRollingMetricTimes();
	void UpdateRollingConnectionQuality(unsigned char Status, float& RollingTime);
	void UpdateRollingConnectionQualities();
	float ComputeRollingPacketLossPercent();
	float ComputeRollingJitter();
	void PollConnectionStats();
	void HandleConnectionQualitySaveUnloaded(class UConnectionQualitySave_TA* InConnectionQualitySave);
	void HandleConnectionQualitySaveLoaded(class UConnectionQualitySave_TA* InConnectionQualitySave);
	void SubscribeToConnectionQualitySave(class USaveData_TA* SaveData);
	void ResetConnectionStatuses();
	void StopTrackingConnection();
	void BeginTrackingConnection();
	void SetTrackedPRI(class APRI_TA* InPRI);
	void eventDetached();
	void eventAttached();
	void EventNetStatsPolled(class UClientConnectionTracker_TA* InTracker, struct FClientConnectionStats InStats);
};

// Class TAGame.EndRoundComponent_TA
// 0x000C (0x00A4 - 0x00B0)
class UEndRoundComponent_TA : public UActorComponent_X
{
public:
	class AGameEvent_Soccar_TA*                        SoccarGame;                                       		// 0x00A8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EndRoundComponent_TA");
		}

		return uClassPointer;
	};

	void EndRound();
	void HandleBallHitGroundTimeout();
	void HandleBallHitGround(class ABall_TA* Ball, struct FVector HitLoc, struct FVector HitNorm);
	void eventDetached();
	void eventAttached();
};

// Class TAGame.CrowdSoundManager_TA
// 0x00E4 (0x00A4 - 0x0188)
class UCrowdSoundManager_TA : public UActorComponent_X
{
public:
	class UCrowdSoundSettings_TA*                      Settings;                                         		// 0x00A8 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class ACrowdActorManager_TA*                       CrowdActorManager;                                		// 0x00B0 (0x0008) [0x0000000000000000]               
	class UCrowdSounds_TA*                             Sounds;                                           		// 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bInitializedMods : 1;                             		// 0x00C0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bFastBreakInProgress : 1;                         		// 0x00C0 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bShotInProgress : 1;                              		// 0x00C0 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	unsigned long                                      bAerialInProgress : 1;                            		// 0x00C0 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	unsigned long                                      bIn0Seconds : 1;                                  		// 0x00C0 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	unsigned long                                      bWaitingForKickoffTouch : 1;                      		// 0x00C0 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	unsigned long                                      bLowEnergy : 1;                                   		// 0x00C0 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	unsigned long                                      bWaitingForTenseClear : 1;                        		// 0x00C0 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	float                                              DefenseZoneTime;                                  		// 0x00C4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastBallHitNoiseTime;                             		// 0x00C8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                LastBallHitNoiseLevel;                            		// 0x00CC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimeSinceLastGoal;                                		// 0x00D0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                LeadChanges;                                      		// 0x00D4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              OpenGoalTime;                                     		// 0x00D8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              NearGoalTime;                                     		// 0x00DC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              FastBreakTime;                                    		// 0x00E0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGoal_TA*                                    ShotGoal;                                         		// 0x00E8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	float                                              ShotMaxScorability;                               		// 0x00F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastShotTime;                                     		// 0x00F4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              AerialDuration;                                   		// 0x00F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastAerialTime;                                   		// 0x00FC (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FString                                     DebugLastExcitementSoundValue;                    		// 0x0100 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              DebugLastExcitementSoundTime;                     		// 0x0110 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimeSince0Seconds;                                		// 0x0114 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UDynamicValueModifier_X*                     Mod0Seconds;                                      		// 0x0118 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentLowEnergyDuration;                         		// 0x0120 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ChantLowEnergyDuration;                           		// 0x0124 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TenseNearGoalTime;                                		// 0x0128 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                LastScoreSeparation;                              		// 0x012C (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                ScoreSeparationTrend;                             		// 0x0130 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FName                                       LastExcitementState;                              		// 0x0134 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       LastTensionState;                                 		// 0x013C (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       LastScoreState;                                   		// 0x0144 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     AprilCrowdOverridePath;                           		// 0x0150 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FVector                                     AprilCrowdLocation;                               		// 0x0160 (0x000C) [0x0000000000000000]               
	struct FScriptDelegate                             __GetSound__Delegate;                             		// 0x0170 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CrowdSoundManager_TA");
		}

		return uClassPointer;
	};

	class UAkSoundCue* __CrowdSoundManager_TA__InitCrowd_632E1899462D0628C2F23AB7C4FDDDCB(class UCrowdSounds_TA* S);
	float __CrowdSoundManager_TA__InitModifiers_BDBC60554A5C9B98904AB983F2F55DBD();
	float __CrowdSoundManager_TA__InitModifiers_DA6E4C794287D0B81E1F9CA6D4D8C9B7();
	float __CrowdSoundManager_TA__InitModifiers_E0227D1B46B9A82D4D5A7EAC3777E5EF();
	float __CrowdSoundManager_TA__InitModifiers_1EA6D74E4205A3FE2EAFBBAAFC3063BC();
	float __CrowdSoundManager_TA__InitModifiers_2E99F35848C29A99A3F8FAA6091F4DBE();
	float __CrowdSoundManager_TA__InitModifiers_E9079F80401305F11E3B968B25B118E6();
	float __CrowdSoundManager_TA__InitModifiers_70E51D68417250C227835F80136D4B3E();
	float __CrowdSoundManager_TA__InitModifiers_2EB291E34B9E1FDF02E5229ACD498E3B();
	float __CrowdSoundManager_TA__InitModifiers_3D43A2EF4289981EF2FB7697C27E64DF();
	float __CrowdSoundManager_TA__InitModifiers_C1D5A4674907973DE07F679899A71737();
	float __CrowdSoundManager_TA__InitModifiers_1B0895494D7B90B728E48E98B18B988C();
	float __CrowdSoundManager_TA__InitModifiers_DF6E0A6F4702C81347290C824011B823();
	float __CrowdSoundManager_TA__InitModifiers_EB4F728B433A2EF8D95CB2B981FDD8E1();
	float __CrowdSoundManager_TA__InitModifiers_A8AEC5DB45DDE9BA8CED69A1268B8772();
	float __CrowdSoundManager_TA__InitModifiers_4466925A4E489C00023814AE038B9BB5();
	float __CrowdSoundManager_TA__InitModifiers_2F5505EF4B6DAF9197226B9B517FE836();
	void __CrowdSoundManager_TA__HandleGameStateChanged_3AE868A84068C42689B884B747DA6F0F(class ACrowdActor_TA* C);
	void __CrowdSoundManager_TA__HandleGameStateChanged_9C2E5E2541B393C357630480786113AA(class ACrowdActor_TA* C);
	class UAkSoundCue* __CrowdSoundManager_TA__HandleOvertimeUpdated_C8BF2A8947367142B540A099AE597035(class UCrowdSounds_TA* S);
	class UAkSoundCue* __CrowdSoundManager_TA__PlayMatchEndedEncore_519DDEAB4BDEB795322DD1904B64CBA1(class UCrowdSounds_TA* S);
	class UAkSoundCue* __CrowdSoundManager_TA__GoalScored_D77124114BEAA7B2974E5C8CA2D3B987(class UCrowdSounds_TA* S);
	void __CrowdSoundManager_TA__GoalScored_4F4D7F794B7144E48FCE488482B7DC66(class ACrowdActor_TA* C);
	void __CrowdSoundManager_TA__GoalScored_401708C54835427745B3E2BA508F94B7(class ACrowdActor_TA* C);
	class UAkSoundCue* __CrowdSoundManager_TA__HandleGameWinnerSet_E1A48C304D3A3D2D666ECC93F3ADE655(class UCrowdSounds_TA* S);
	class UAkSoundCue* __CrowdSoundManager_TA__HandleGameWinnerSet_5475C68B43E117D4E97E9DBDD254BF24(class UCrowdSounds_TA* S);
	class UAkSoundCue* __CrowdSoundManager_TA__HandleGameWinnerSet_FD1E92B84AA45C0BB85284B34BAAA7FF(class UCrowdSounds_TA* S);
	void __CrowdSoundManager_TA__HandleDemolish_603B607544756128EADCB6AB2884A60F(class ACrowdActor_TA* C);
	void __CrowdSoundManager_TA__HandleDemolish_4E9C46A9490B8C824B6A5F8D7CB3779C(class ACrowdActor_TA* C);
	void __CrowdSoundManager_TA__HandleGameTimeUpdated_A0F8C6D44C42AAAC456EB6A9AEF88A16(class ACrowdActor_TA* C);
	float __CrowdSoundManager_TA__HandleGameTimeUpdated_D33223B44B89435CAA43B3877DD78890();
	void __CrowdSoundManager_TA__HandleCarHitBall_C96CD5324F4C14AFBC0022B2675205DB(class ACrowdActor_TA* C);
	void __CrowdSoundManager_TA__HandleCarHitBall_D5F328B84B2398228A1FA8BE54BF02BB(class ACrowdActor_TA* C);
	void __CrowdSoundManager_TA__CheckGoals_AF17D6B2479CD64EABAE42BE5706BFF0(class ACrowdActor_TA* C);
	void __CrowdSoundManager_TA__CheckGoals_57F592C44CCC33814FFD1A89C32F54DA(class ACrowdActor_TA* C);
	void __CrowdSoundManager_TA__CheckGoals_D3F454E646BC91E2DE0F85B2843664F7(class ACrowdActor_TA* C);
	void __CrowdSoundManager_TA__CheckGoals_96C4F3744FB4646AEB5F9AB0BCDE10E1(class ACrowdActor_TA* C);
	void __CrowdSoundManager_TA__CheckGoals_E181C2E3405E97B14AE01F94AE4BC70B(class ACrowdActor_TA* C);
	void __CrowdSoundManager_TA__CheckAerial_DD2806BA4529443764091B8F5C3CE2CE(class ACrowdActor_TA* C);
	class UAkSoundCue* __CrowdSoundManager_TA__CheckEnergy_11829FBF4CFFC0EED8A57EA66E859323(class UCrowdSounds_TA* S);
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	float GetCrowdValue(unsigned char Type);
	void StopCrowdExcitementSound(struct FCrowdExcitementSounds ExcitementSounds, class AActor* FromActor);
	void PlayCrowdExcitementSoundNoCooldown(struct FCrowdExcitementSounds ExcitementSounds, class AActor* FromActor);
	void PlayCrowdExcitementSound(class AActor* FromActor, struct FCrowdExcitementSounds& ExcitementSounds);
	void SetNextChantDuration();
	void CheckEnergy(float DeltaTime);
	void CheckAerial(float DeltaTime);
	void ClearShotInProgress();
	void CheckGoals(float DeltaTime);
	void HandleCarHitBall(class ACar_TA* InCar, class ABall_TA* InBall);
	void Update0Seconds(float DeltaTime);
	void PlayMatchEndCountdown(int InSecondsRemaining, class UCrowdSounds_TA* InSounds, class AActor* FromActor);
	void HandleGameTimeUpdated(class AGameEvent_Soccar_TA* InGameEvent);
	void HandleDemolish(class AGameEvent_TA* InGameEvent, struct FDemolishData Data);
	void HandleGameWinnerSet(class AGameEvent_Soccar_TA* InGameEvent);
	float GetTimeRemaining();
	float GetScoreSeparation();
	void UpdateScoreState();
	void UpdateStates();
	void TickValues(float DeltaTime);
	void TickActive(float DeltaTime);
	void eventTick(float DeltaTime);
	void AfterGoalScored();
	void GoalScored();
	void PlayMatchEndedEncore();
	void HandleMatchEnded(class AGameEvent_Soccar_TA* G);
	void HandleOvertimeUpdated(class AGameEvent_Soccar_TA* InGameEvent);
	void HandleGameStateChanged(class AGameEvent_TA* G);
	void ClearPendingCrowdFlags();
	void StopCrowdActorSound(struct FScriptDelegate GetSoundDelegate);
	void PlayCrowdActorSound(struct FScriptDelegate GetSoundDelegate);
	class UAkSoundCue* GetSound(class UCrowdSounds_TA* InSounds);
	class UDynamicValueModifier_X* AddDynamicModifier(class UDynamicValue_X* Value, class UDynamicValueModifier_X* ModArchetype);
	bool CanModifyCrowd();
	class UDynamicValueModifier_X* CreateCurveModifier(class UDynamicValueModifierCurve_X* ModArchetype, struct FScriptDelegate InDelegate);
	void RemoveAllModifiers();
	void InitModifiers();
	void InitGameObserver();
	void InitCrowd();
	void eventDetached();
	void eventAttached();
};

// Class TAGame.SimilarSeasonLogos_TA
// 0x0010 (0x0060 - 0x0070)
class USimilarSeasonLogos_TA : public UObject
{
public:
	TArray<struct FSimilarLogoGroup>                   LogoGroups;                                       		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SimilarSeasonLogos_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GameEvent_Soccar_SubRules_Basketball_TA
// 0x0008 (0x0060 - 0x0068)
class UGameEvent_Soccar_SubRules_Basketball_TA : public UGameEvent_Soccar_SubRules_TA
{
public:
	int                                                LongDistanceScore;                                		// 0x0060 (0x0004) [0x0000000000000000]               
	int                                                DefaultScore;                                     		// 0x0064 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Soccar_SubRules_Basketball_TA");
		}

		return uClassPointer;
	};

	void OnGetBallModifiedScore(class ABall_TA* Ball, int ScoreIndex, int& BallScore);
};

// Class TAGame.Tutorial_TA
// 0x01BC (0x008C - 0x0248)
class UTutorial_TA : public UTickableStateObject_X
{
public:
	class USequenceAction*                             KNode_Owner;                                      		// 0x0090 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APlayerController_TA*                        PC;                                               		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AGameEvent_Tutorial_TA*                      GameEvent;                                        		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     ModalSectionName;                                 		// 0x00A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UGFxModal_X*                                 MessageModal;                                     		// 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<struct FMessageInfo>                        Messages;                                         		// 0x00C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                MessageIndex;                                     		// 0x00D0 (0x0004) [0x0000000000000000]               
	float                                              DisplayMessageStartTime;                          		// 0x00D4 (0x0004) [0x0000000000000000]               
	unsigned long                                      bEndTutorialOnFinalMessage : 1;                   		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bCompleteTutorialOnFinalMessage : 1;              		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bInitialMessagesFinished : 1;                     		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bFadeAudio : 1;                                   		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bSkipFadeIn : 1;                                  		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bFadeTransitionComplete : 1;                      		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bTutorialStarted : 1;                             		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bActionNameToDetectPressed : 1;                   		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bCarTouched : 1;                                  		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bCompleteOnBallTouch : 1;                         		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bFailTutorialOnOtherCarHitBall : 1;               		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bDestroyBallsOnFadeIn : 1;                        		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bDestroyBotsOnFadeIn : 1;                         		// 0x00D8 (0x0004) [0x0000000000000000] [0x00001000] 
	unsigned long                                      bHasBot : 1;                                      		// 0x00D8 (0x0004) [0x0000000000000000] [0x00002000] 
	unsigned long                                      bFoundBot : 1;                                    		// 0x00D8 (0x0004) [0x0000000000000000] [0x00004000] 
	unsigned long                                      bStartWithSecondaryCamActive : 1;                 		// 0x00D8 (0x0004) [0x0000000000000000] [0x00008000] 
	unsigned long                                      bStartWithBoostMeterDisabled : 1;                 		// 0x00D8 (0x0004) [0x0000000000000000] [0x00010000] 
	unsigned long                                      bBotCanPlay : 1;                                  		// 0x00D8 (0x0004) [0x0000000000000000] [0x00020000] 
	unsigned long                                      bStartBotOnAllMessagesDisplayed : 1;              		// 0x00D8 (0x0004) [0x0000000000000000] [0x00040000] 
	unsigned long                                      bBallCanHitPlayersGoal : 1;                       		// 0x00D8 (0x0004) [0x0000000000000000] [0x00080000] 
	unsigned long                                      bCompleteOnLastBallTouched : 1;                   		// 0x00D8 (0x0004) [0x0000000000000000] [0x00100000] 
	unsigned long                                      bCompleteOnHitGoal : 1;                           		// 0x00D8 (0x0004) [0x0000000000000000] [0x00200000] 
	unsigned long                                      bFailOnHitGoal : 1;                               		// 0x00D8 (0x0004) [0x0000000000000000] [0x00400000] 
	unsigned long                                      bFreezeCarOnSpawn : 1;                            		// 0x00D8 (0x0004) [0x0000000000000000] [0x00800000] 
	unsigned long                                      bCanEverDodge : 1;                                		// 0x00D8 (0x0004) [0x0000000000000000] [0x01000000] 
	unsigned long                                      bCanEverDoubleJump : 1;                           		// 0x00D8 (0x0004) [0x0000000000000000] [0x02000000] 
	unsigned long                                      bTutorialFinished : 1;                            		// 0x00D8 (0x0004) [0x0000000000000000] [0x04000000] 
	unsigned long                                      bPauseDuringMessages : 1;                         		// 0x00D8 (0x0004) [0x0000000000000000] [0x08000000] 
	unsigned long                                      bCanResetTutorial : 1;                            		// 0x00D8 (0x0004) [0x0000000000000000] [0x10000000] 
	unsigned long                                      bCanSkipTutorial : 1;                             		// 0x00D8 (0x0004) [0x0000000000000000] [0x20000000] 
	unsigned long                                      bShowGameFinishMessage : 1;                       		// 0x00D8 (0x0004) [0x0000000000000000] [0x40000000] 
	unsigned long                                      bSkipped : 1;                                     		// 0x00D8 (0x0004) [0x0000000000000000] [0x80000000] 
	unsigned long                                      bQuit : 1;                                        		// 0x00DC (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bReset : 1;                                       		// 0x00DC (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bTLog : 1;                                        		// 0x00DC (0x0004) [0x0000000000000000] [0x00000004] 
	struct FMessageInfo                                CorrectAnswer;                                    		// 0x00E0 (0x0040) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FMessageInfo                                IncorrectAnswer;                                  		// 0x0120 (0x0040) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              StartFadeDisplayTime;                             		// 0x0160 (0x0004) [0x0000000000000000]               
	struct FColor                                      FadeColor;                                        		// 0x0164 (0x0004) [0x0000000000000000]               
	float                                              FadeTime;                                         		// 0x0168 (0x0004) [0x0000000000000000]               
	class UGFxShell_TA*                                Shell;                                            		// 0x0170 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       ActionNameToDetect;                               		// 0x0178 (0x0008) [0x0000000000000000]               
	float                                              FailTimeAfterBallTouch;                           		// 0x0180 (0x0004) [0x0000000000000000]               
	float                                              CountdownTime;                                    		// 0x0184 (0x0004) [0x0000000000000000]               
	int                                                BotTeam;                                          		// 0x0188 (0x0004) [0x0000000000000000]               
	float                                              TutorialFailTime;                                 		// 0x018C (0x0004) [0x0000000000000000]               
	float                                              TutorialCompleteTime;                             		// 0x0190 (0x0004) [0x0000000000000000]               
	float                                              BallDestroyTimeOnTouch;                           		// 0x0194 (0x0004) [0x0000000000000000]               
	float                                              AllMessagesDisplayedTime;                         		// 0x0198 (0x0004) [0x0000000000000000]               
	float                                              WaitTimeBeforeCheckCompleteAction;                		// 0x019C (0x0004) [0x0000000000000000]               
	unsigned char                                      TutorialStatus;                                   		// 0x01A0 (0x0001) [0x0000000000000000]               
	float                                              StartTime;                                        		// 0x01A4 (0x0004) [0x0000000000000000]               
	struct FString                                     StartTimeString;                                  		// 0x01A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FString>                             UseActions;                                       		// 0x01B8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FName>                               IgnoreActionPressList;                            		// 0x01C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FName>                               FailedActionPressList;                            		// 0x01D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FName>                               StartActionPressList;                             		// 0x01E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FName>                               CompleteActionPressList;                          		// 0x01F8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FName>                               CompleteActionIgnorePressList;                    		// 0x0208 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTutorialEnded__Delegate;                   		// 0x0218 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTutorialCompleted__Delegate;               		// 0x0230 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Tutorial_TA");
		}

		return uClassPointer;
	};

	struct FString GetTutorialName();
	void SkipTutorial_Confirm(class UGFxModal_X* Modal);
	void SkipTutorial();
	void ResetTutorial();
	void SelectMultipleChoiceButton(class UGFxModal_X* Modal, int buttonIndex);
	void MultipleChoice_Button3(class UGFxModal_X* Modal);
	void MultipleChoice_Button2(class UGFxModal_X* Modal);
	void MultipleChoice_Button1(class UGFxModal_X* Modal);
	void MultipleChoice_Button0(class UGFxModal_X* Modal);
	void ForceActivateOutput(unsigned char Output);
	void NotifyEventOnTutorial(struct FString EventName);
	void ReachedTimeAfterBallTouch();
	void HandleBallDestroyed(class APawn_X* Pawn);
	void HandleCarTouch(class ABall_TA* Ball, class ACar_TA* HitCar, unsigned char HitType);
	void HandleHitGoal(class ABall_TA* Ball, class UGoal_TA* Goal);
	void HandleBallAdded(class AGameEvent_Soccar_TA* InGameEvent, class ABall_TA* Ball);
	void RegisterGameBallDelegates();
	void CloseMessageModal();
	void TutorialCompleteTimeFinished();
	void TutorialFailTimeFinished();
	void EndTutorial();
	void ShowGameMessage(struct FName Type, struct FString Message);
	void FailedTutorial();
	void CompletedTutorial();
	void SetIgnoreOnCompleteActionList();
	void AddKeyNameFromAction(struct FName ActionName, TArray<struct FString>& KeyList);
	TArray<struct FString> GetActionDisplayNames(struct FActionNameInfo ActionInfo);
	bool RemoveMatchingKeys(struct FString KeyToAdd, TArray<struct FString>& Out_KeyList);
	struct FString GetUIReadableString(struct FString Key);
	struct FString GetMergedActionString(TArray<struct FString> KeyList);
	struct FString GetBodyText(struct FMessageInfo InMessage);
	bool DisplayMessage(struct FMessageInfo InMessage);
	bool DisplayNextMessage();
	void DisplayCurrentMessage();
	void OnAllMessagesDisplayed();
	void ShowNextMessage(class UGFxModal_X* Modal);
	struct FMessageInfo GetMessage();
	void eventTick(float DeltaTime);
	void CheckActionNameToDetect();
	void OnActionNameToDetectReleased();
	void OnActionNameToDetectPressed();
	void OnActionKeyReleased(struct FName ActionName);
	void OnActionKeyPressed(struct FName ActionName);
	bool NotifyKeyInput(int ControllerId, struct FName Key, unsigned char EventType, float AmountDepressed, unsigned long bGamepad);
	bool NotifyAxisInput(int ControllerId, struct FName Key, float delta, float DeltaTime, unsigned long bGamepad);
	bool CompleteActionPressed(struct FName Key, unsigned long bGamepad);
	bool StartActionPressed(struct FName Key, unsigned long bGamepad);
	void SetIgnoredInput(unsigned long bClearPreviousActions);
	void SetAllDriving(unsigned char PlayerDriveType, unsigned long bDriving);
	void TutorialStart();
	void CountTimeElapsed();
	void InitTutorial();
	void OnScreenFadedOut();
	void OnScreenFadedIn();
	void HideFadeScreen();
	void ShowFadeScreen(float DisplayTime);
	void Destroyed();
	bool CanDestroy();
	void FoundBot();
	void HandleVehicleSetup(class AGameEvent_Tutorial_TA* InGameEvent, class ACar_TA* Car);
	void HandleInputTypeChanged(class UGFxShell_X* InShell);
	void Init(class APlayerController_TA* InPC, class AGameEvent_Tutorial_TA* InGameEvent, class USequenceAction* InKNode_Owner);
	void EventTutorialCompleted(class UTutorial_TA* Tutorial);
	void EventTutorialEnded(class UTutorial_TA* Tutorial);
};

// Class TAGame.GameEvent_Training_Goalie_TA
// 0x0004 (0x0EB0 - 0x0EB4)
class AGameEvent_Training_Goalie_TA : public AGameEvent_Training_TA
{
public:
	int                                                Score;                                            		// 0x0EB0 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Training_Goalie_TA");
		}

		return uClassPointer;
	};

	void CommitRedoRound();
	void ResetGameEvent();
	void GetBallAimInfo(struct FVector BallSpawnLoc, struct FFieldSpawnInfo SpawnInfo, struct FVector& Out_GoalAimLocation, float& Out_DepthPercent, float& Out_HeightPercent, float& Out_WidthPercent);
	struct FVector GetBallArchVelocity(struct FVector BallSpawnLoc, struct FFieldSpawnInfo SpawnInfo);
	struct FVector GetBallForwardVelocity(struct FVector BallSpawnLoc, struct FFieldSpawnInfo SpawnInfo);
	struct FVector GetBallAimVelocity(struct FVector BallSpawnLoc, struct FFieldSpawnInfo SpawnInfo);
	struct FVector DetermineBallInitialVelocity(struct FVector BallSpawnLoc, class ACar_TA* Car, struct FFieldSpawnInfo SpawnInfo);
	struct FRotator GetCarSpawnRotation(struct FFieldSpawnInfo SpawnInfo, struct FVector CarSpawnLocation);
	struct FVector GetCarSpawnLocation(struct FFieldSpawnInfo SpawnInfo);
	int GetScore();
};

// Class TAGame.TutorialSave_TA
// 0x0020 (0x00C8 - 0x00E8)
class UTutorialSave_TA : public USaveObject_TA
{
public:
	TArray<struct FString>                             TrainingEventsPlayed;                             		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FString>                             TrainingEventsPerfected;                          		// 0x00D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TutorialSave_TA");
		}

		return uClassPointer;
	};

	bool AddToTrainingPerfectList_Internal(struct FString EventName);
	bool AddToTrainingPerfectList(struct FString EventName, struct FString Difficulty);
	bool HasPerfectedTraining_Internal(struct FString EventName);
	bool HasPerfectedTraining(struct FString EventName, struct FString Difficulty);
	bool AddToTutorialPlayedList_Internal(struct FString EventName);
	bool AddToTutorialPlayedList(struct FString EventName, struct FString Difficulty);
	bool HasPlayedTraining_Internal(struct FString EventName);
	bool HasPlayedTraining(struct FString EventName, struct FString Difficulty);
};

// Class TAGame.GFxShell_TA
// 0x0178 (0x0130 - 0x02A8)
class UGFxShell_TA : public UGFxShell_X
{
public:
	float                                              BugReportDelay;                                   		// 0x0130 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UChampionshipTrophy_TA*                      ChampionshipTrophyArchetype;                      		// 0x0138 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class ULocalPlayer_TA*                             TAPlayer;                                         		// 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxData_System_TA*                          SystemData;                                       		// 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxData_LocalPlayer_TA*                     LocalPlayerData;                                  		// 0x0150 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     BugReportEmail;                                   		// 0x0158 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long                                      bEnableFocusDebugger : 1;                         		// 0x0168 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bDisableStartupMovies : 1;                        		// 0x0168 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bAllowOnlineStorageResyncModal : 1;               		// 0x0168 (0x0004) [0x0000000000004002] [0x00000004] (CPF_Const | CPF_Config)
	class UBugReport_X*                                CurrentBugReport;                                 		// 0x0170 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     EOSReconnectMessage;                              		// 0x0178 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     EOSNotConnectedMessage;                           		// 0x0188 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     SaveReplayMessage;                                		// 0x0198 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     BugReportWaitMessage;                             		// 0x01A8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     DefaultDisconnectionTitle;                        		// 0x01B8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     PsyNetReconnectMessage;                           		// 0x01C8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     PSPlusTipTitle;                                   		// 0x01D8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     PSPlusTipMessage;                                 		// 0x01E8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     RankedReconnectTitle;                             		// 0x01F8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     RankedReconnectBody;                              		// 0x0208 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     BannedTimeRemainingMessage;                       		// 0x0218 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     PermaBannedMessage;                               		// 0x0228 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	TArray<class UGFxModal_X*>                         ActiveModals;                                     		// 0x0238 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned char                                      PendingMessageType;                               		// 0x0248 (0x0001) [0x0000000000002000] (CPF_Transient)
	struct FString                                     PendingErrorTitle;                                		// 0x0250 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     PendingErrorMessage;                              		// 0x0260 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              LastPsyNetReconnectTime;                          		// 0x0270 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxModal_X*                                 ModalKick;                                        		// 0x0278 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     BuildEdition;                                     		// 0x0280 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FScriptDelegate                             __EventBanButtonClicked__Delegate;                		// 0x0290 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxShell_TA");
		}

		return uClassPointer;
	};

	void __GFxShell_TA__HandleOnlinePlayerStorageSyncError_87BD6F694CEE4AA4DC970499B1FF3FA9(class UGFxModal_X* _);
	void __GFxShell_TA__HandleSaveDataLoaded_974625DC43756980C38CC1ABAD46D917(class UOnlineStorageSyncManager_TA* _, class UAsyncTask* Task);
	void __GFxShell_TA__HandleBanned_89376D2A44A9B1DD35D365BDEB5DC8D0(class UGFxModal_X* _);
	bool __GFxShell_TA__InitPlaylistSkills_E0F9B9CC43F1179EC329679C90BDA8FE(class UGameSettingPlaylist_X* P);
	struct FString ReplaceHtmlEntities(struct FString Text);
	class UGFxDataStore_X* GetData(class ULocalPlayer_X* ForPlayer);
	class UGFxShell_TA* GetShell(class ULocalPlayer_X* ForPlayer);
	void HandleTopMenuChange(struct FName PrevMenu, struct FName TopMenu);
	class UGFxModal_X* InitErrorModal(class UGFxModal_X* Modal, struct FString Error, struct FString Title);
	class UGFxModal_X* AlertErrorObj(class UError* Error);
	class UGFxModal_X* AlertError(struct FString Error, struct FString Title, class UClass* ModalClass);
	bool AnyPlayerChatRestricted();
	void PreloadLegalText();
	struct FString GetPaymentServices();
	struct FString GetSCT();
	struct FString GetPrivacyPolicy();
	struct FString GetTermsOfService();
	struct FString GetEULA();
	void OnRankedReconnect(struct FServerReservationData Reservation);
	void ShowRankedReconnectModal(struct FServerReservationData Reservation);
	void OnGotoStorePage(class UGFxModal_X* Modal);
	void ShowUnauthorizedModal();
	void InitPlaylistSkills(class UGFxShell_TA* InShell, class UDownloadedPlaylistsData_X* DownloadedPlaylists, class USyncedSkillData_X* Skill);
	void SetInputActionEnabled(struct FName ActionName, unsigned long bEnabled);
	void VoteToForfeit();
	class UGFxModal_X* ShowTextInput(struct FString Title, struct FString Body, struct FScriptDelegate Callback, unsigned long bDisplayAsPassword, struct FString DefaultText, int MaxLength);
	void HandleCommerceDialogClosed();
	void SetViewingOnlineScene(unsigned long bViewing);
	void TryReconnectingToEpicOnlineServices(class UOnlinePlayer_X* OnlinePlayer);
	void HandlePsyNetLoginAttempt(class UOnlinePlayerAuthentication_X* Auth);
	void HandlePsyNetLoginConfirm(class UGFxModal_X* Modal);
	struct FString GetPrivilegeRestrictionMessage(class UError* FailReason);
	void HandlePrivilegeCheckRestriction(class UPrivilegeCheck_X* PrivilegeCheck);
	void HandleOnlineGameConnectionError(class UError* Error, class UOnlinePlayer_X* OnlinePlayer);
	void HandlePsyNetDisabled(class UPsyNetConnection_X* Connection);
	void HandleBanned(class UOnlinePlayerAuthentication_X* Auth);
	void HandlePauseChanged();
	void PopUISoundState(struct FName StateName);
	void PushUISoundState(struct FName StateName);
	void CheckoutCompleteFlashNNX();
	void OpenStoreOverlay();
	void OnKickPlayerAccepted(class UGFxModal_X* Modal);
	void OnKickPlayerModalClosed(class UGFxModal_X* Modal);
	void HandleCloseKickPlayerDialog();
	void HandleDrawWorldFullScreenChanged(class UGameViewportClient_TA* GVC);
	void HandleSplitScreenTypeChanged(class UGameViewportClient_TA* GVC);
	void ShowControllerPickerUI();
	void ShowControllerUI();
	void ShowKickPlayerModal(int ControllerIndex);
	void ShowLoginUI(int ControllerIndex);
	void HandleKickedResponse(class UGFxModal_X* Modal);
	void HandleUserSaveReplay(class UGFxModal_X* Modal);
	void ShowErrorMessage();
	void HandleGameInit(class AGRI_X* GRI);
	void HandleConnectionError(unsigned char MessageType, struct FString Title, struct FString Message);
	void OnCancelSaveSaveData(class UGFxModal_X* Modal);
	void OnRetrySaveSaveData(class UGFxModal_X* Modal);
	class UGFxModal_X* CreateSaveErrorModal(class UError* Error);
	void HandleSaveDataSaved(class USaveGameManager_TA* SaveManager, class USaveData_TA* SaveData, class UError* Error);
	void NotifyEnableSaveDataProcess(class UGFxModal_X* Modal);
	void OnDisableSaveData(class UGFxModal_X* Modal);
	void OnLoadFailureDisableSaveData(class UGFxModal_X* Modal);
	void OnCreateNewSaveData(class UGFxModal_X* Modal);
	void OnConfirmCreateNewSaveData(class UGFxModal_X* Modal);
	void OnRetryLoadSaveData(class UGFxModal_X* Modal);
	void HandleSaveDataLoaded(class USaveGameManager_TA* SaveManager, class USaveData_TA* SaveData, class UError* Error);
	void HandleOnlinePlayerStorageSyncError(class UError* Error);
	void DelayedNotifyWhenSaveDataLoaded();
	void CancelBugReport();
	void SubmitBugReport(struct FString Title, struct FString Description, struct FString Email);
	bool StartBugReport();
	void HandleModalClosed(class UGFxModal_X* Modal);
	class UGFxObject* OnCreateCinematicModal();
	class UGFxObject* OnCreateTutorialModal();
	class UGFxObject* OnCreateModal(struct FString ClassType);
	void OnShowModal(class UGFxObject* Modal);
	class UGFxModal_X* CreateModal_NoShow(class UClass* ModalClass);
	class UGFxObject* GetModalObject(class UClass* ModalClass);
	class UGFxModal_X* ShowModalObject(class UGFxModal_X* Modal);
	class UGFxModal_X* CreateModal(class UClass* ModalClass);
	void OpenFriendsList();
	void ViewProfile(struct FUniqueNetId ProfileId);
	int GetKeyCodeForAction(struct FName Action, unsigned long bGamepad);
	struct FString GetKeyForAction(struct FName Action, unsigned long bGamepad);
	void ExitToOpenContainer(struct FProductHashID ContainerID);
	void LeaveMatch();
	void ExitToMainMenu();
	void PlaySeason();
	void PlayNow();
	void OpenScreen(struct FString ScreenName);
	void OnPrintOpenScreens();
	void OnChampionshipTrophyScreenFinished();
	void ChampionshipTrophyScreenFinished();
	void SpawnChampionshipTrophy();
	void SeasonSkipPreMatch();
	void RestartMatch();
	class UProfile_TA* GetProfile();
	void HandleGameSessionEnded();
	void HandleGameInvitePassword(struct FString Password, unsigned long bCanceled);
	void HandleGameInvitePasswordRequired();
	void ShowPasswordPrompt(struct FScriptDelegate Callback);
	void HandleGameInviteConfirmed(class UGFxModal_X* Modal);
	void HandleGameInviteConfirmation(struct FName ConfirmationReason);
	void HandleGameInviteAccepted();
	void ShowSingleButtonMessage(struct FString MessageType);
	void HandlePCDestroyed(class APlayerController_X* PC);
	void HandleReceivedController(class UPlayer* PlayerRef);
	void eventOnStart();
	class UOnlineGame_X* GetOnlineGame();
	void EventBanButtonClicked(class UGFxShell_TA* GFxShell);
};

// Class TAGame.UISavedValues_TA
// 0x0010 (0x00C8 - 0x00D8)
class UUISavedValues_TA : public USaveObject_TA
{
public:
	TArray<struct FUISavedKeyValue>                    Values;                                           		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.UISavedValues_TA");
		}

		return uClassPointer;
	};

	void Clear(struct FName Key);
	void Set(struct FName Key, struct FString Value);
	bool Contains(struct FName Key);
	struct FString Get(struct FName Key);
};

// Class TAGame.UIStrings_TA
// 0x0180 (0x0060 - 0x01E0)
class UUIStrings_TA : public UUIStrings_X
{
public:
	struct FString                                     Continue;                                         		// 0x0060 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ExitGame;                                         		// 0x0070 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Retry;                                            		// 0x0080 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     OK;                                               		// 0x0090 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Cancel;                                           		// 0x00A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Yes;                                              		// 0x00B0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     No;                                               		// 0x00C0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     SignIn;                                           		// 0x00D0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Days;                                             		// 0x00E0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Hours;                                            		// 0x00F0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Minutes;                                          		// 0x0100 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Seconds;                                          		// 0x0110 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Meters;                                           		// 0x0120 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Kilometers;                                       		// 0x0130 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Feet;                                             		// 0x0140 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Miles;                                            		// 0x0150 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     MetersUnit;                                       		// 0x0160 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     FeetUnit;                                         		// 0x0170 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     MetersPerSecondUnit;                              		// 0x0180 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     FeetPerSecondUnit;                                		// 0x0190 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Error;                                            		// 0x01A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Warning;                                          		// 0x01B0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Close;                                            		// 0x01C0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Savage;                                           		// 0x01D0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.UIStrings_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GameInfo_Tutorial_TA
// 0x0018 (0x0550 - 0x0568)
class AGameInfo_Tutorial_TA : public AGameInfo_Soccar_TA
{
public:
	unsigned long                                      bAutoEntered : 1;                                 		// 0x0550 (0x0004) [0x0000000000000000] [0x00000001] 
	TArray<struct FString>                             TutorialTypes;                                    		// 0x0558 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_Tutorial_TA");
		}

		return uClassPointer;
	};

	unsigned char GetTutorialV2Type(struct FString MapName);
	struct FString GetTutorialV2Map(unsigned char Type);
	void TutorialHelper();
	void SkipTutorial();
	void InitTutorialGameEvent(class AGameEvent_TA* GameEventArchetype, int InDifficulty);
	void StartTutorialType(struct FString Type, struct FString Difficulty);
	void SetTutorialDifficulty(int Difficulty);
	void eventPostBeginPlay();
};

// Class TAGame.GameEvent_Training_Aerial_TA
// 0x0000 (0x0EB0 - 0x0EB0)
class AGameEvent_Training_Aerial_TA : public AGameEvent_Training_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Training_Aerial_TA");
		}

		return uClassPointer;
	};

	void CheckForReset();
	struct FVector DetermineBallInitialVelocity(struct FVector BallSpawnLoc, class ACar_TA* Car, struct FFieldSpawnInfo SpawnInfo);
};

// Class TAGame.GameEvent_Training_Striker_TA
// 0x0000 (0x0EB0 - 0x0EB0)
class AGameEvent_Training_Striker_TA : public AGameEvent_Training_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Training_Striker_TA");
		}

		return uClassPointer;
	};

	void CheckForReset();
	struct FVector DetermineBallInitialVelocity(struct FVector BallSpawnLoc, class ACar_TA* Car, struct FFieldSpawnInfo SpawnInfo);
	int GetScore();
};

// Class TAGame.GameEvent_Tutorial_Basic_TA
// 0x000C (0x0E98 - 0x0EA4)
class AGameEvent_Tutorial_Basic_TA : public AGameEvent_Tutorial_TA
{
public:
	int                                                CurrentScore;                                     		// 0x0E98 (0x0004) [0x0000000000000000]               
	int                                                TotalRounds;                                      		// 0x0E9C (0x0004) [0x0000000000000000]               
	int                                                CurrentRounds;                                    		// 0x0EA0 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Tutorial_Basic_TA");
		}

		return uClassPointer;
	};

	bool MoveToGround(class AActor* Mover, float HeightCheck);
	void OnVehicleSetup(class ACar_TA* Car);
	void InitBallVelocity();
	void CheckForReset();
	void StartRound();
	void HideTimer();
	void SetManualScores(int InTotalRounds, int InCurrentRound, int InCurrentScore);
	int GetGameEventRounds();
	int GetTotalRounds();
	int GetScore();
	void SkipTutorial();
	class ATeam_TA* PickTeam(class AController* C);
	bool GetSpawnOrientation(class AController* ForPlayer, struct FVector& out_Location, struct FRotator& out_Rotation);
};

// Class TAGame.GameEvent_Tutorial_Advanced_TA
// 0x0004 (0x0EA4 - 0x0EA8)
class AGameEvent_Tutorial_Advanced_TA : public AGameEvent_Tutorial_Basic_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Tutorial_Advanced_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GameEvent_Tutorial_FreePlay_TA
// 0x0000 (0x0E98 - 0x0E98)
class AGameEvent_Tutorial_FreePlay_TA : public AGameEvent_Tutorial_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Tutorial_FreePlay_TA");
		}

		return uClassPointer;
	};

	void ResetBalls();
	bool GetSpawnOrientation(class AController* ForPlayer, struct FVector& out_Location, struct FRotator& out_Rotation);
	void InitMutators();
	void ResetGameEvent();
	void CheckForReset();
	void OnVehicleSetup(class ACar_TA* Car);
	void InitGameSetup(class ACar_TA* Car);
};

// Class TAGame.__GameEvent_Tutorial_FreePlay_TA__HandleHitGoal_A702E4134E4ADA5D72762DB690509084
// 0x0008 (0x0060 - 0x0068)
class U__GameEvent_Tutorial_FreePlay_TA__HandleHitGoal_A702E4134E4ADA5D72762DB690509084 : public UObject
{
public:
	class UGoal_TA*                                    Goal;                                             		// 0x0060 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameEvent_Tutorial_FreePlay_TA__HandleHitGoal_A702E4134E4ADA5D72762DB690509084");
		}

		return uClassPointer;
	};

	void __GameEvent_Tutorial_FreePlay_TA__HandleHitGoal_A702E4134E4ADA5D72762DB690509084(class APlayerController_TA* PC);
};

// Class TAGame.GameInfo_Cinematic_TA
// 0x0000 (0x04D8 - 0x04D8)
class AGameInfo_Cinematic_TA : public AGameInfoBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_Cinematic_TA");
		}

		return uClassPointer;
	};

	void SetStadiumColors();
	void GenericPlayerInitialization(class AController* C);
	class APlayerController* SpawnPlayerController(struct FVector SpawnLocation, struct FRotator SpawnRotation);
	void InitGame(struct FString Options, struct FString& ErrorMessage);
};

// Class TAGame.PlayerController_Cinematic_TA
// 0x0008 (0x0860 - 0x0868)
class APlayerController_Cinematic_TA : public APlayerController_X
{
public:
	class UPostProcessManager_X*                       PostProcessManagerArchetype;                      		// 0x0860 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerController_Cinematic_TA");
		}

		return uClassPointer;
	};

	void eventReceivedPlayer();
};

// Class TAGame.__GameInfo_GFxMenu_TA__Destroyed_C574878643F96DEE128F77A8FF2F3903
// 0x0008 (0x0060 - 0x0068)
class U__GameInfo_GFxMenu_TA__Destroyed_C574878643F96DEE128F77A8FF2F3903 : public UObject
{
public:
	class UGFxEngine_TA*                               GFxEngine;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameInfo_GFxMenu_TA__Destroyed_C574878643F96DEE128F77A8FF2F3903");
		}

		return uClassPointer;
	};

	void __GameInfo_GFxMenu_TA__Destroyed_C574878643F96DEE128F77A8FF2F3903(class UGFxShell_X* Shell);
};

// Class TAGame.ExplosionPreviewer_TA
// 0x0030 (0x0070 - 0x00A0)
class UExplosionPreviewer_TA : public UComponent
{
public:
	class UProductLoader_TA*                           ProductLoader;                                    		// 0x0070 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	unsigned long long                                 ExplosionId;                                      		// 0x0078 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProductAsset_GoalExplosion_TA*              ExplosionProduct;                                 		// 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AFXActor_X*                                  ExplosionInstance;                                		// 0x0088 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bPreviewing : 1;                                  		// 0x0090 (0x0004) [0x0000000000000000] [0x00000001] 
	class APlayerController*                           PC;                                               		// 0x0098 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ExplosionPreviewer_TA");
		}

		return uClassPointer;
	};

	void ClearPreview();
	void ApplyExplosionParameters(class AFXActor_X* Instance);
	void StopExplosion();
	void PlayExplosion();
	void HandleProductLoaded(class UProductLoader_TA* InLoader);
	void SetProduct(int ProductID, unsigned long long OnlineProductId);
	void SetLoadout(struct FLoadoutData& InLoadout);
	void UpdateExplosion();
	void SetPreviewSlot(class UProductSlot_TA* InSlot);
	void SetPreviewSlotIndex(int InSlotIndex);
};

// Class TAGame.GFxData_MenuSequence_TA
// 0x0010 (0x0098 - 0x00A8)
class UGFxData_MenuSequence_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FMenuSequencePair>                   MenuStack;                                        		// 0x0098 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_MenuSequence_TA");
		}

		return uClassPointer;
	};

	void OnSequenceChange(struct FName NewSequence);
	void HandleSequenceChanged(class UMenuSequence_TA* NewSequence);
	void SetMenuSequence(struct FName MenuSequence);
	void PopMenuSequence(struct FName MenuID);
	void PushMenuSequence(struct FName MenuSequence, struct FName MenuID);
	void eventOnShellSet();
};

// Class TAGame.GFxData_System_TA
// 0x0058 (0x0098 - 0x00F0)
class UGFxData_System_TA : public UGFxDataSingleton_X
{
public:
	struct FString                                     Language;                                         		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     UIState;                                          		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     SharedUIState;                                    		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                LocalPlayerCount;                                 		// 0x00C8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bSaveDataLoaded : 1;                              		// 0x00CC (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bLoggedInPsyNet : 1;                              		// 0x00CC (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bLoggedInPlatform : 1;                            		// 0x00CC (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bUndocked : 1;                                    		// 0x00CC (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	unsigned char                                      SplitScreenType;                                  		// 0x00D0 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      AvailableGamepadType;                             		// 0x00D1 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	float                                              SafeZoneRatio;                                    		// 0x00D4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	float                                              UIScale;                                          		// 0x00D8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     Platform;                                         		// 0x00E0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_System_TA");
		}

		return uClassPointer;
	};

	void __GFxData_System_TA__OnShellSet_9895FB904E9FFFB2C380D1AB28CCB5E0(struct FString _);
	void SetUIState(struct FString NewState);
	void HandleSafeZoneRatioUpdated(class UGameViewportClient_TA* GVC);
	void HandleUIScaleModifierUpdated(class UGameViewportClient_TA* GVC);
	void HandleAvailableGamepadTypeChanged(class UGFxEngine_X* Engine);
	void HandleLocalPlayerChanged(class ULocalPlayer* NewPlayer);
	void HandleSplitScreenTypeChanged(class UGameViewportClient_TA* GVC);
	void SetExclusiveInput(unsigned long bEnabled);
	void SetSharedUIState(struct FString NewSharedUIState);
	void HandleProfileSet(class ULocalPlayer_TA* InPlayer);
	void HandleSaveDataLoaded(class USaveGameManager_TA* Manager, class USaveData_TA* SaveData, class UError* Error);
	void HandleLocalPlayerLoginStatusChanged(class UOnlinePlayer_X* InPlayer);
	void HandleQuitGame(class UGFxModal_X* Modal);
	void HandleLoginResult(class UOnlinePlayerAuthentication_X* Auth);
	void HandlePsyWebLoginChanged(class UOnlinePlayerAuthentication_X* Auth);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.GFxData_LocalPlayer_TA
// 0x00F0 (0x0098 - 0x0188)
class UGFxData_LocalPlayer_TA : public UGFxDataSingleton_X
{
public:
	unsigned long                                      bOpenedStartMenu : 1;                             		// 0x0098 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bCheckedStartupEvents : 1;                        		// 0x0098 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bSaveDataLoaded : 1;                              		// 0x0098 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bBallcam : 1;                                     		// 0x0098 (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	unsigned long                                      bUseHoldBallCam : 1;                              		// 0x0098 (0x0004) [0x0000000040000000] [0x00000010] (CPF_EditInlineNotify)
	unsigned long                                      bUseBallCamIndicator : 1;                         		// 0x0098 (0x0004) [0x0000000040000000] [0x00000020] (CPF_EditInlineNotify)
	unsigned long                                      bAlternateNameplates : 1;                         		// 0x0098 (0x0004) [0x0000000040000000] [0x00000040] (CPF_EditInlineNotify)
	unsigned long                                      bMetric : 1;                                      		// 0x0098 (0x0004) [0x0000000040000000] [0x00000080] (CPF_EditInlineNotify)
	unsigned long                                      bTeamColoredBoostMeter : 1;                       		// 0x0098 (0x0004) [0x0000000040000000] [0x00000100] (CPF_EditInlineNotify)
	unsigned long                                      bPrimaryPlayer : 1;                               		// 0x0098 (0x0004) [0x0000000040000000] [0x00000200] (CPF_EditInlineNotify)
	unsigned long                                      bPartyLeader : 1;                                 		// 0x0098 (0x0004) [0x0000000040000000] [0x00000400] (CPF_EditInlineNotify)
	unsigned long                                      bIsInParty : 1;                                   		// 0x0098 (0x0004) [0x0000000040000000] [0x00000800] (CPF_EditInlineNotify)
	unsigned long                                      bIsPlayerTrading : 1;                             		// 0x0098 (0x0004) [0x0000000040000000] [0x00001000] (CPF_EditInlineNotify)
	unsigned long                                      bDemoBuild : 1;                                   		// 0x0098 (0x0004) [0x0000000040000000] [0x00002000] (CPF_EditInlineNotify)
	unsigned long                                      bForceSplitScreenUI : 1;                          		// 0x0098 (0x0004) [0x0000000040000000] [0x00004000] (CPF_EditInlineNotify)
	unsigned long                                      bPrivateMatchGameOwner : 1;                       		// 0x0098 (0x0004) [0x0000000040000000] [0x00008000] (CPF_EditInlineNotify)
	unsigned long                                      bAgeRestricted : 1;                               		// 0x0098 (0x0004) [0x0000000040000000] [0x00010000] (CPF_EditInlineNotify)
	unsigned long                                      bPendingIdleKick : 1;                             		// 0x0098 (0x0004) [0x0000000040000000] [0x00020000] (CPF_EditInlineNotify)
	unsigned long                                      bStartVoteToForfeitDisabled : 1;                  		// 0x0098 (0x0004) [0x0000000040000000] [0x00040000] (CPF_EditInlineNotify)
	unsigned long                                      bDisableCrossPlay : 1;                            		// 0x0098 (0x0004) [0x0000000040000000] [0x00080000] (CPF_EditInlineNotify)
	unsigned long                                      bReplacingBot : 1;                                		// 0x0098 (0x0004) [0x0000000040000000] [0x00100000] (CPF_EditInlineNotify)
	unsigned long                                      bDisableDivisions : 1;                            		// 0x0098 (0x0004) [0x0000000040000000] [0x00200000] (CPF_EditInlineNotify)
	unsigned long                                      bDisableDivisionsSports : 1;                      		// 0x0098 (0x0004) [0x0000000040000000] [0x00400000] (CPF_EditInlineNotify)
	unsigned long                                      bCheckedBootMessage : 1;                          		// 0x0098 (0x0004) [0x0000000000000000] [0x00800000] 
	unsigned long                                      bUseSteamInput : 1;                               		// 0x0098 (0x0004) [0x0000000040000000] [0x01000000] (CPF_EditInlineNotify)
	struct FString                                     SaveDataError;                                    		// 0x00A0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     OnlineError;                                      		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     PlayerName;                                       		// 0x00C0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UTexture*                                    PlayerAvatarTexture;                              		// 0x00D0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                XpLevel;                                          		// 0x00D8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     XPTitle;                                          		// 0x00E0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                XPTotal;                                          		// 0x00F0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                XPProgressInCurrentLevel;                         		// 0x00F4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                XPRequiredForNextLevel;                           		// 0x00F8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Team;                                             		// 0x00FC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	float                                              CameraYaw;                                        		// 0x0100 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SplitScreenPosition;                              		// 0x0104 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                ControllerId;                                     		// 0x0108 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                LocalPlayerIndex;                                 		// 0x010C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FName                                       LastMatchType;                                    		// 0x0110 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	float                                              IdleKickSeconds;                                  		// 0x0118 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FProductHashID                              ContainerToOpenId;                                		// 0x011C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      OrphanedControllerId;                             		// 0x0120 (0x0001) [0x0000000000002000] (CPF_Transient)
	class UPersonaSave_TA*                             PersonaSave;                                      		// 0x0128 (0x0008) [0x0000000000000000]               
	struct FUniqueNetId                                PlayerID;                                         		// 0x0130 (0x0048) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class ULocalPlayer_TA*                             Player;                                           		// 0x0178 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxModal_X*                                 ModalOrphaned;                                    		// 0x0180 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_LocalPlayer_TA");
		}

		return uClassPointer;
	};

	void HandlePersonaSaveLoaded(class UPersonaSave_TA* InPersonaSave);
	void HandleXPUnloaded(class UClientXPSave_TA* XPSave);
	void HandleXPLoaded(class UClientXPSave_TA* XPSave);
	void HandleBallCamModeChanged();
	void HandleCameraSettingsLoaded(class UProfileCameraSave_TA* CameraSettings);
	void HandleProfileGameplaySettingsLoaded(class UProfileGameplaySave_TA* GameplaySettings);
	void ClearContainerToOpen();
	bool HasBlueprintToPreview();
	bool HasContainerToOpen();
	bool AreDivisionsDisabled();
	void HandleCrossPlatformEnabledChanged();
	void HandleAccountSettingsAdded(class UAccountSettingsComponent_TA* AccountSettings);
	void OnExitToStartScreen(class UGFxModal_X* Modal);
	void OnPickAccount(class UGFxModal_X* Modal);
	void ShowOrphanedUserDialog(unsigned char InControllerID);
	void ShowSecondaryPlayerOrphanedModal();
	void ShowPrimaryPlayerOrphanedModal();
	void OnUserRestored(unsigned char InControllerID);
	void OnUserOrphaned(unsigned char InControllerID);
	void HandleVoteToForfeitDisabledChanged(class APRI_TA* PRI);
	void HandleCanPlayOnlineChanged(class UOnlinePlayer_X* P);
	void HandleLocalPlayerChanged(class ULocalPlayer* NewPlayer);
	void ClearLocalPlayerData(class AGameEvent_TA* GameEvent);
	void HandlePrivateMatchGameOwnerUpdated(class AGameEvent_TA* GameEvent, class APRI_TA* NewGameOwner);
	void ChangeName(struct FString NewName);
	void Spectate();
	void OnJoinTeamFailed(int TeamNum);
	void OnServerChangeTeamFailed(int TeamNum);
	void ChangeTeam(int TeamIndex);
	class APRI_TA* GetPRI();
	bool GetOverlayEnabled();
	void SetCheckedStartupEvents(unsigned long bHasChecked);
	void SetOpenedStartMenu(unsigned long bHasBeenOpened);
	void UpdateXP(class UClientXPSave_TA* XPSave);
	void OnXpInitialized(int NewXP);
	void HandleSplitScreenPositionChanged(class ULocalPlayer_TA* LocalPlayer);
	class UOnlineGame_X* GetOnlineGame();
	void HandleGetAvatar(struct FUniqueNetId InPlayerId, class UTexture* Avatar, struct FString OnlinePlayerName);
	void HandleReceivedPRI(class APlayerController_X* PC);
	void HandleReceivedController(class UPlayer* PlayerRef);
	void CheckBootMessages();
	void HandleOnlineNameChanged(class UOnlinePlayer_X* P);
	void HandlePsyNetConnected(class UPsyNetConnection_X* C);
	void HandleLoginStatusChanged(class UOnlinePlayer_X* OnlinePlayer);
	void HandleSyncSuccess(class UOnlineStorageSyncManager_TA* OnlineStorageSyncManager);
	void HandleGamepadInputAPIChanged(class UGameViewportClient* InGVC, int InControllerID, unsigned char InInputAPI);
	void HandleProfileSet(class ULocalPlayer_TA* InLocalPlayer);
	void HandleSplitScreenTypeChanged(class UGameViewportClient_TA* GVC);
	void HandleDrawWorldFullScreenChanged(class UGameViewportClient_TA* GVC);
	void UpdateName();
	void UpdatePrimaryPlayer();
	void HandlePrimaryPlayerChange(class ULocalPlayer* OldPrimary, class ULocalPlayer* NewPrimary);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.PremiumGaragePreviewSet_TA
// 0x0070 (0x0060 - 0x00D0)
class UPremiumGaragePreviewSet_TA : public UObject
{
public:
	int                                                PreviewActorIndices[0x2] ;                        		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<class ACarPreviewActor_TA*>                 CarPreviewActors;                                 		// 0x0068 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UOnlineGameParty_TA*                         OnlineParty;                                      		// 0x0078 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACarPreviewActor_TA*                         CurrentCar;                                       		// 0x0080 (0x0008) [0x0000000000000000]               
	int                                                CurrentCarIdx;                                    		// 0x0088 (0x0004) [0x0000000000000000]               
	unsigned long                                      bFirstSet : 1;                                    		// 0x008C (0x0004) [0x0000000000000000] [0x00000001] 
	class UDLCPack_TA*                                 QueuedSwapPack;                                   		// 0x0090 (0x0008) [0x0000000000000000]               
	int                                                QueuedSwapSubIdx;                                 		// 0x0098 (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             __EventSwapFinished__Delegate;                    		// 0x00A0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventRevealComplete__Delegate;                  		// 0x00B8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PremiumGaragePreviewSet_TA");
		}

		return uClassPointer;
	};

	void SetPreviewBaseLoadout();
	void FinishReveal();
	void OnRevealFinished(int SlotIdx);
	void OnRevealStarted();
	void DoReveal(class UOnlineProduct_TA* OnlineProduct, unsigned long bMultiProductDrop);
	void SetupCarReveal(class UProductSlot_TA* RevealSlot);
	void InitReveal();
	void ResetInvalidAssets(class ACarPreviewActor_TA* PreviewActor, int SlotIndex, int ProductID);
	void SetTurnTableYawOffset(int YawOffset);
	void SetCarRotations(int Rotation, unsigned long bGamepad);
	void ExitPremiumGarage();
	void EnterPremiumGarage();
	class ATurnTableActor_TA* GetTurntable();
	struct FLoadoutData GetCurrentLoadout();
	void SetPreviewSlot(class UProductSlot_TA* Slot);
	void SetPreviewSlotIndex(int SlotIndex);
	void SetPreviewProduct(int SlotIdx, int ProductID, unsigned long long OnlineID, int TeamIdx, unsigned long bUsePrimaryBaseLoadout);
	void SetOldLoadout(struct FLoadoutData Loadout);
	void HandleCarSwapComplete();
	void UpdateWheel(struct FAssetLoadResult Result);
	void SwapPremiumCarTo(class UDLCPack_TA* DLCPack, int SubIdx);
	void HandleCarPreviewActorAdded(class UGameShare_TA* GameShare, class ACarPreviewActor_TA* PreviewActor);
	void Cleanup();
	void Init();
	void EventRevealComplete(int SlotIdx);
	void EventSwapFinished();
};

// Class TAGame.MenuSequencer_TA
// 0x005C (0x00A4 - 0x0100)
class UMenuSequencer_TA : public UActorComponent_X
{
public:
	TArray<class UMenuSequence_TA*>                    Sequences;                                        		// 0x00A8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FName                                       DefaultSequence;                                  		// 0x00B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMenuSequence_TA*                            CurrentSequence;                                  		// 0x00C0 (0x0008) [0x0000000000000000]               
	class UMenuSequence_TA*                            PendingSequence;                                  		// 0x00C8 (0x0008) [0x0000000000000000]               
	unsigned char                                      Status;                                           		// 0x00D0 (0x0001) [0x0000000000000000]               
	TArray<class UMenuSequence_TA*>                    PendingSequenceQueue;                             		// 0x00D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSequenceChanged__Delegate;                 		// 0x00E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MenuSequencer_TA");
		}

		return uClassPointer;
	};

	class APlayerController* GetLocalPlayerController();
	bool IsSequencePending(struct FName SequenceName);
	bool IsSequenceActive(struct FName SequenceName);
	void eventTick(float DeltaTime);
	void HandleSequenceEntered(class UMenuSequence_TA* Sequence);
	void InternalSequenceEnter(class UMenuSequence_TA* NewSequence, class UMenuSequence_TA* PrevSequence);
	void InternalSequenceLeave(class UMenuSequence_TA* NewSequence, class UMenuSequence_TA* PrevSequence);
	void HandleSequenceLeft(class UMenuSequence_TA* FromSequence);
	void TryEnterNextSequence();
	void SetSequence(struct FName SequenceName);
	class UMenuSequence_TA* GetSequence(struct FName SequenceName);
	class UMenuSequence_TA* InstanceSequence(class UMenuSequence_TA* Archetype);
	void InstanceSequences();
	void eventAttached();
	void EventSequenceChanged(class UMenuSequence_TA* NewSequence);
};

// Class TAGame.CinematicIntroSequence_TA
// 0x00C0 (0x0060 - 0x0120)
class UCinematicIntroSequence_TA : public UObject
{
public:
	int                                                SequenceIndex;                                    		// 0x0060 (0x0004) [0x0000000000000000]               
	class UGFxModal_X*                                 MessageModal;                                     		// 0x0068 (0x0008) [0x0000000000000000]               
	TArray<struct FName>                               ActionNames;                                      		// 0x0070 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<struct FName>                               PressedKeys;                                      		// 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FPressedAxis>                        PressedAxes;                                      		// 0x0090 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     LocalizationFile;                                 		// 0x00A0 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FString                                     LocalizationGroup;                                		// 0x00B0 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FString                                     LocalizationKeyPrefix;                            		// 0x00C0 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	float                                              AxisDeadzone;                                     		// 0x00D0 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              AxisPressTime;                                    		// 0x00D4 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              AutoFinishTime;                                   		// 0x00D8 (0x0004) [0x0000000000000002] (CPF_Const)   
	TArray<struct FPlayerBinding>                      TrackedBindingsPC;                                		// 0x00E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FPlayerBinding>                      TrackedBindingsGamepad;                           		// 0x00F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UInteraction*                                InputInteraction;                                 		// 0x0100 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventSequenceFinished__Delegate;                		// 0x0108 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CinematicIntroSequence_TA");
		}

		return uClassPointer;
	};

	void __CinematicIntroSequence_TA__StartSequence_10A7CC314E5E9E7F7B0662ADC0F441C4(class UGFxShell_X* _);
	bool __CinematicIntroSequence_TA__AllActionsPressed_00BF2B794A2EE09BC3BFBBA9F535D8CD(struct FName Action);
	void CloseMessageModal();
	bool GetActionBinding(struct FName ActionName, struct FPlayerBinding& Out_Binding);
	struct FString GetActionKey(struct FName ActionName);
	bool IsAxisPressed(struct FPlayerBinding Binding);
	bool IsKeyPressed(struct FPlayerBinding Binding);
	bool ActionIsPressed(struct FName ActionName);
	bool AllActionsPressed();
	void CheckAllKeysPressed();
	bool NotifyKeyInput(int ControllerId, struct FName Key, unsigned char EventType, float AmountDepressed, unsigned long bGamepad);
	bool NotifyAxisInput(int ControllerId, struct FName Key, float delta, float DeltaTime, unsigned long bGamepad);
	struct FString GetBodyText();
	void RefreshMessage();
	void SetTrackedBindings();
	void EndSequence();
	void StartSequence(int InSequenceIndex);
	void EventSequenceFinished(class UCinematicIntroSequence_TA* Seq);
};

// Class TAGame.GameInfo_PerfTest_TA
// 0x0000 (0x04D8 - 0x04D8)
class AGameInfo_PerfTest_TA : public AGameInfoBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_PerfTest_TA");
		}

		return uClassPointer;
	};

	int SortCameraActors(class ACameraActor* A, class ACameraActor* B);
	void SelectCamera(int Direction);
	void PrevCamera();
	void NextCamera();
	void GenericPlayerInitialization(class AController* C);
	class APlayerController* SpawnPlayerController(struct FVector SpawnLocation, struct FRotator SpawnRotation);
};

// Class TAGame.PostProcessManager_TA
// 0x0018 (0x00D0 - 0x00E8)
class UPostProcessManager_TA : public UPostProcessManager_X
{
public:
	unsigned char                                      PostProcessAAType;                                		// 0x00D0 (0x0001) [0x0000000000002000] (CPF_Transient)
	float                                              DOF_DistanceLimit;                                		// 0x00D4 (0x0004) [0x0000000000000000]               
	float                                              DOF_InnerRadiusLimit;                             		// 0x00D8 (0x0004) [0x0000000000000000]               
	float                                              DOF_KernelDefault;                                		// 0x00DC (0x0004) [0x0000000000000000]               
	float                                              DOF_MaxFarDefault;                                		// 0x00E0 (0x0004) [0x0000000000000000]               
	float                                              DOF_DistanceExtent;                               		// 0x00E4 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PostProcessManager_TA");
		}

		return uClassPointer;
	};

	float GetPostProcessProperty(unsigned char PropertyName);
	void SetPostProcessProperty(unsigned char PropertyName, float InValue, unsigned long bSetToDefault);
	void SetDOFDistance(float Value);
	bool IsReplayFXDirtied();
	void RestoreReplayFXPostProcessSettings();
	void CacheReplayFXPostProcessSettings();
	void ApplyPostProcessTypeOverride();
	void SetAAType(unsigned char NewType);
};

// Class TAGame.PlayerStart_TA
// 0x0000 (0x0398 - 0x0398)
class APlayerStart_TA : public APlayerStart
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerStart_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.DynamicPlayerStart_TA
// 0x0000 (0x0398 - 0x0398)
class ADynamicPlayerStart_TA : public APlayerStart_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DynamicPlayerStart_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GameInfo_Season_TA
// 0x0008 (0x0540 - 0x0548)
class AGameInfo_Season_TA : public AGameInfo_TA
{
public:
	class AGameEvent_Soccar_TA*                        SoccarArchetype;                                  		// 0x0540 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_Season_TA");
		}

		return uClassPointer;
	};

	void RestartLevel();
	void RestartPlayer(class AController* aPlayer);
	bool PlayerCanRestart(class APlayerController* aPlayer);
	void eventPostLogin(class APlayerController* NewPlayer);
};

// Class TAGame.MapSelector_TA
// 0x0098 (0x0070 - 0x0108)
class UMapSelector_TA : public UComponent
{
public:
	unsigned long                                      bDebug : 1;                                       		// 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	TArray<class UMapData_TA*>                         AllMaps;                                          		// 0x0078 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UMapData_TA*>                         FilteredMaps;                                     		// 0x0088 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FMapGroup>                           AllGroups;                                        		// 0x0098 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FMapGroup>                           RemainingGroupMaps;                               		// 0x00A8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<int>                                        RemainingGroups;                                  		// 0x00B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<int>                                        PreviousGroups;                                   		// 0x00C8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                PreviousGroupMax;                                 		// 0x00D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UMapData_TA*                                 LastPlayedMap;                                    		// 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              Skill;                                            		// 0x00E8 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<struct FMapSkillSettings>                   MapSkillRequirements;                             		// 0x00F0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FName                                       MapSetName;                                       		// 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MapSelector_TA");
		}

		return uClassPointer;
	};

	struct FMapGroup __MapSelector_TA__GetNextMap_14E48D434C54B5A65E69DAAF15DC2714(int GroupIdx);
	struct FName GetNextPreferredMapName(int NumPlayers, TArray<struct FName>& Likes, TArray<struct FName>& Dislikes);
	class UMapData_TA* GetNextPreferredMap(int NumPlayers, TArray<struct FName>& Likes, TArray<struct FName>& Dislikes);
	struct FMapGroup GetChosenGroup(TArray<float> GroupWeights);
	TArray<float> GetMapGroupWeights(int NumPlayers, TArray<struct FName>& Likes, TArray<struct FName>& Dislikes);
	float GetMapGroupWeight(struct FMapGroup Group, int NumPlayers, TArray<struct FName>& Likes, TArray<struct FName>& Dislikes);
	struct FName GetNextMapName();
	struct FString GetMapsString(TArray<class UMapData_TA*> Maps);
	void SetMapPlayed(class UMapData_TA* Map);
	class UMapData_TA* GetNextMap();
	void RebuildRemainingGroups();
	void FilterRemainingGroupsBySkill();
	TArray<class UMapData_TA*> FilterMapsBySkill(TArray<class UMapData_TA*> InMaps);
	void RebuildMaps();
	void SetSkill(float InSkill, TArray<struct FMapSkillSettings> InSkillReqs);
	void SetMaps(TArray<class UMapData_TA*> Maps);
};

// Class TAGame.__GameInfo_Soccar_TA__QueueShutdown_E5DEB41C454C9EBAF417C1AFCEE46483
// 0x0008 (0x0060 - 0x0068)
class U__GameInfo_Soccar_TA__QueueShutdown_E5DEB41C454C9EBAF417C1AFCEE46483 : public UObject
{
public:
	class UOnlineGameDedicatedServer_X*                DedicatedServer;                                  		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameInfo_Soccar_TA__QueueShutdown_E5DEB41C454C9EBAF417C1AFCEE46483");
		}

		return uClassPointer;
	};

	void __GameInfo_Soccar_TA__QueueShutdown_E5DEB41C454C9EBAF417C1AFCEE46483(class AGameEvent_Soccar_TA* _);
};

// Class TAGame.SeqEvent_TutorialHelper_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_TutorialHelper_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_TutorialHelper_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PlaylistSettings_TA
// 0x0044 (0x0118 - 0x015C)
class UPlaylistSettings_TA : public UPlaylistSettings_X
{
public:
	int                                                XPLevelUnlocked;                                  		// 0x0118 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FMapSkillSettings>                   MapSkillRequirements;                             		// 0x0120 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UClass*                                      TourServerInfoClass;                              		// 0x0130 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FTeamColor>                          TeamColors;                                       		// 0x0138 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FColorOverride                              BallSuperSonicColor;                              		// 0x0148 (0x0014) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlaylistSettings_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.TourServerInfo_TA
// 0x0020 (0x0060 - 0x0080)
class UTourServerInfo_TA : public UObject
{
public:
	struct FName                                       InfoName;                                         		// 0x0060 (0x0008) [0x0000000000000002] (CPF_Const)   
	int                                                NumAllowedSpectators;                             		// 0x0068 (0x0004) [0x0000000000000002] (CPF_Const)   
	unsigned long                                      bUsesTieBreakerRules : 1;                         		// 0x006C (0x0004) [0x0000000000000002] [0x00000001] (CPF_Const)
	unsigned long                                      bRestoreInterruptedMatches : 1;                   		// 0x006C (0x0004) [0x0000000000000002] [0x00000002] (CPF_Const)
	class UClass*                                      GetMatchDetailsClass;                             		// 0x0070 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UClass*                                      GameUpdateClass;                                  		// 0x0078 (0x0008) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourServerInfo_TA");
		}

		return uClassPointer;
	};

	class UObject* CreateClientReservationMessage(class UReservationBeacon_X* Beacon, struct FServerReservationData& Reservation, struct FUniqueNetId& PlayerID, struct FTourServerSettings& TourSettings);
	struct FString GetTieBreakerRules(struct FTourServerSettings& InSettings);
	bool IsTourSet(struct FTourServerSettings& TourSettings);
};

// Class TAGame.__GameShare_TA__NotifyCarPreviewActorAdded_0AFB0F194D6D7306640690ADE12D050C
// 0x0018 (0x0060 - 0x0078)
class U__GameShare_TA__NotifyCarPreviewActorAdded_0AFB0F194D6D7306640690ADE12D050C : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameShare_TA__NotifyCarPreviewActorAdded_0AFB0F194D6D7306640690ADE12D050C");
		}

		return uClassPointer;
	};

	void __GameShare_TA__NotifyCarPreviewActorAdded_0AFB0F194D6D7306640690ADE12D050C(class ACarPreviewActor_TA* C);
};

// Class TAGame.GameplaySettingsSave_TA
// 0x0048 (0x00C8 - 0x0110)
class UGameplaySettingsSave_TA : public USaveObject_TA
{
public:
	unsigned char                                      VoiceFilter;                                      		// 0x00C8 (0x0001) [0x0000000000000000]               
	unsigned char                                      ChatFilter;                                       		// 0x00C9 (0x0001) [0x0000000000000000]               
	unsigned char                                      EffectIntensity;                                  		// 0x00CA (0x0001) [0x0000000000000000]               
	unsigned char                                      StatEventDisplayLevel;                            		// 0x00CB (0x0001) [0x0000000000004000] (CPF_Config)  
	unsigned char                                      StatGraphLevel;                                   		// 0x00CC (0x0001) [0x0000000000000000]               
	float                                              SafeZoneRatio;                                    		// 0x00D0 (0x0004) [0x0000000000000000]               
	float                                              UIScale;                                          		// 0x00D4 (0x0004) [0x0000000000000000]               
	unsigned long                                      bColorBlind : 1;                                  		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bForceDefaultColors : 1;                          		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bEnableHorizontalSplitscreen : 1;                 		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bEnableFreeplayUnlimitedBoost : 1;                		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bUseSteamInput : 1;                               		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000010] 
	float                                              NameplateScale;                                   		// 0x00DC (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             __bEnableFreeplayUnlimitedBoost__ChangeNotify;    		// 0x00E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bUseSteamInput__ChangeNotify;                   		// 0x00F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameplaySettingsSave_TA");
		}

		return uClassPointer;
	};

	void __bUseSteamInput__ChangeNotifyFunc();
	void __bEnableFreeplayUnlimitedBoost__ChangeNotifyFunc();
	void SetNameplateScale(float Value);
	void SetUIScale(float Value);
	void SetSafeZone(float Value);
	void OnLoad();
};

// Class TAGame.OverlayInteractionEGS_TA
// 0x0000 (0x00D0 - 0x00D0)
class UOverlayInteractionEGS_TA : public UInteraction
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OverlayInteractionEGS_TA");
		}

		return uClassPointer;
	};

	bool HandleInputChar(int ControllerId, struct FString Character);
	bool HandleInputAxis(int ControllerId, struct FName Key, float delta, float DeltaTime, unsigned long bGamepad);
	bool HandleInputKey(int ControllerId, struct FName Key, unsigned char EventType, float AmountDepressed, unsigned long bGamepad);
};

// Class TAGame.__GameViewportClient_TA__AllowTournamentSplitscreen_14DE200B416843478FAA9D9A0C10ABD2
// 0x0048 (0x0060 - 0x00A8)
class U__GameViewportClient_TA__AllowTournamentSplitscreen_14DE200B416843478FAA9D9A0C10ABD2 : public UObject
{
public:
	struct FUniqueNetId                                PlayerIDCompare;                                  		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameViewportClient_TA__AllowTournamentSplitscreen_14DE200B416843478FAA9D9A0C10ABD2");
		}

		return uClassPointer;
	};

	bool __GameViewportClient_TA__AllowTournamentSplitscreen_14DE200B416843478FAA9D9A0C10ABD2(struct FTourPlayer P);
};

// Class TAGame.OnlineGameTournaments_TA
// 0x00B0 (0x0098 - 0x0148)
class UOnlineGameTournaments_TA : public UOnline_X
{
public:
	class UTourConfig_TA*                              Config;                                           		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourEvent_TA*                               TourEventArchetype;                               		// 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourService_TA*                             ServiceArchetype;                                 		// 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourService_TA*                             Service;                                          		// 0x00B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourSubscriptions_TA*                       Subscriptions;                                    		// 0x00B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourRegistration_TA*                        Registration;                                     		// 0x00C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourCheckIn_TA*                             CheckIn;                                          		// 0x00C8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourCheckInError_TA*                        CheckInError;                                     		// 0x00D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourPartyCheckIn_TA*                        PartyCheckIn;                                     		// 0x00D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourPartyLeaderLeave_TA*                    PartyLeaderLeave;                                 		// 0x00E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourCheckInWindowWatcher_TA*                WindowWatcher;                                    		// 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourRewards_TA*                             Rewards;                                          		// 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourBracketCache_TA*                        Brackets;                                         		// 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourCredentials_TA*                         Credentials;                                      		// 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourSettingsCache_TA*                       Cache;                                            		// 0x0108 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourMatchServerBrowser_TA*                  MatchServerBrowser;                               		// 0x0110 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourStatus_TA*                              Status;                                           		// 0x0118 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAutoTour_TA*                                AutoTour;                                         		// 0x0120 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourEvent_TA*                               TourEvent;                                        		// 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventTourActivated__Delegate;                   		// 0x0130 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineGameTournaments_TA");
		}

		return uClassPointer;
	};

	bool IsTournamentPlaylist(class UGameSettingPlaylist_X* Playlist);
	bool IsInTournamentGame(class AGRI_X* GRI);
	void AlertError(class UGFxShell_TA* Shell, class UError* Error, struct FScriptDelegate Callback, class UClass* ModalClass);
	int GetTourRank(struct FUniqueNetId PlayerID, class UTourSettings_TA* Settings);
	bool IsTournamentActiveAndLive(unsigned long long TournamentID);
	bool IsTournamentActive(unsigned long long TournamentID);
	void HandleTourEventDeactivated(class UTourEvent_TA* InTourEvent, class UError* Error);
	bool GetCanRegister(unsigned long long TournamentID);
	bool IsRegisteredWithCrossPlatformTour();
	bool GetIsRegistered();
	void NotifyTourActivated(struct FScriptDelegate Callback);
	void ActivateTourEvent(struct FUniqueNetId PlayerID, class UTourSettings_TA* Settings, struct FTourTeam& Team);
	void OnNewGame();
	void InitServiceProvider();
	void OnInit();
	void EventTourActivated(class UOnlineGameTournaments_TA* Tournament, class UTourEvent_TA* Event);
};

// Class TAGame._TourTypes_TA
// 0x0020 (0x0060 - 0x0080)
class U_TourTypes_TA : public UObject
{
public:
	TArray<struct FName>                               DisabledMutatorCategories;                        		// 0x0060 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<struct FName>                               DisabledMutatorSettings;                          		// 0x0070 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame._TourTypes_TA");
		}

		return uClassPointer;
	};

	TArray<struct FName> ___TourTypes_TA__StripDisabledGameTags_687EFE2244861979333E1F960B138122(class UGameSettingCategory_X* GSC);
	struct FName ___TourTypes_TA__StripDisabledGameTags_9D0603844A0931679183219C2502825B(class UGameSetting_X* GS);
	bool ___TourTypes_TA__StripDisabledGameTags_A52915C74E8E4A124A10E490F7A5A790(class UGameSettingCategory_X* GSC);
	struct FName ___TourTypes_TA__StripDisabledGameTags_FFE392374D9992E935082E9D4E90B916(struct FString SettingName);
	struct FString StripDisabledGameTags(struct FString GameTags, TArray<class UGameSettingCategory_X*>& GameSettingCategories);
};

// Class TAGame.TourEvent_TA
// 0x00E8 (0x0060 - 0x0148)
class UTourEvent_TA : public UObject
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UOnlineGameTourMatchmaking_TA*               TourMatchmaking;                                  		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FUniqueNetId                                PlayerID;                                         		// 0x0070 (0x0048) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UTourSettings_TA*                            ActiveTour;                                       		// 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FTourTeam                                   Team;                                             		// 0x00C0 (0x0048) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UTourEventMatch_TA*                          EventMatch;                                       		// 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UTourEventMatchComplete_TA*                  MatchComplete;                                    		// 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventStartTimeElapsed__Delegate;                		// 0x0118 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventDeactivated__Delegate;                     		// 0x0130 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourEvent_TA");
		}

		return uClassPointer;
	};

	void __TourEvent_TA__SetActiveTour_23B5740F4A4DD2B2B0E87F9C44AD14D6(class ULocalPlayer* O, class ULocalPlayer* N);
	struct FUniqueNetId __TourEvent_TA__IsPartyInPlayersTourTeam_218469AD41DEDEF667FC23BCF185BCF5(struct FLobbyMember M);
	bool IsPartyInPlayersTourTeam(struct FActiveLobbyInfo& LobbyInfo);
	bool IsPlayerInTourTeam(struct FUniqueNetId UserPlayerID);
	bool IsTerminalError(class UError* Error);
	void HandleError(class UError* Error);
	void HandleMatchmakingError(class UOnlineGameTourMatchmaking_TA* InMatchMaking, class UError* Error);
	void HandleMatchError(class UTourEventMatch_TA* InEventMatch, class UError* Error);
	void HandleUnsubscribe(class UTourSubscriptions_TA* Subscriptions, unsigned long long TournamentID);
	void DeactivateWithError(class UError* Error);
	void Deactivate();
	void HandleStartTimeElapsed();
	void NotifyOnStartTimeElapsed(struct FScriptDelegate Callback);
	void SetActiveTour(struct FUniqueNetId InPlayerId, class UTourSettings_TA* InSettings, struct FTourTeam& InTeam);
	void EventDeactivated(class UTourEvent_TA* TourEvent, class UError* Error);
	void EventStartTimeElapsed(class UTourEvent_TA* TourEvent);
};

// Class TAGame.TourErrors_TA
// 0x0198 (0x0080 - 0x0218)
class UTourErrors_TA : public UErrorList
{
public:
	class UErrorType*                                  TournamentFull;                                   		// 0x0080 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TournamentPaused;                                 		// 0x0088 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TournamentsDisabled;                              		// 0x0090 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  InActiveTournament;                               		// 0x0098 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  SplitScreenIsInActiveTournament;                  		// 0x00A0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  NoMatchFound;                                     		// 0x00A8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TeamEliminated;                                   		// 0x00B0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  AlreadyRegistered;                                		// 0x00B8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  NotAdmin;                                         		// 0x00C0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  NotEligible;                                      		// 0x00C8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  AlreadyStarted;                                   		// 0x00D0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  InvalidTournamentState;                           		// 0x00D8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  InvalidCredentials;                               		// 0x00E0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TournamentNotFound;                               		// 0x00E8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TournamentHasConcluded;                           		// 0x00F0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  CheckInRankIneligible;                            		// 0x00F8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  CheckInNotOpen;                                   		// 0x0100 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  CheckInRequiresPartyLeader;                       		// 0x0108 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TooManyPlayersCheckingIn;                         		// 0x0110 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  CannotMatchmakeIfRegistered;                      		// 0x0118 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  CannotCheckInWhileOnline;                         		// 0x0120 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  CannotCancelAfterRegistration;                    		// 0x0128 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TournamentHasBeenCancelled;                       		// 0x0130 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TeamSizeTooLarge;                                 		// 0x0138 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TeamSizeTooSmall;                                 		// 0x0140 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  PlayerNotRegistered;                              		// 0x0148 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TeamNameNotAllowed;                               		// 0x0150 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TournamentNameNotAllowed;                         		// 0x0158 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TournamentCreateLimitReached;                     		// 0x0160 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  AutoTournamentNoTeamFound;                        		// 0x0168 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  AutoTournamentRequiresCrossplatform;              		// 0x0170 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  AutoTourmamentRequiresCrossplatformNotLeader;     		// 0x0178 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  AutoTournamentBanned;                             		// 0x0180 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  AutoTournamentResultsRevoked;                     		// 0x0188 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  IneligibleForLateTournament;                      		// 0x0190 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  PlayerNotInTourTeam;                              		// 0x0198 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  PartyMembersNotInTourTeam;                        		// 0x01A0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  KickedNotInPartyTour;                             		// 0x01A8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  KickedPartyIsCheckingIn;                          		// 0x01B0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  NoSplitscreenDuringCheckin;                       		// 0x01B8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  NoInvitesWhileCheckingIn;                         		// 0x01C0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  NoJoiningWhileCheckingIn;                         		// 0x01C8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  SkillRequirementsNotMet;                          		// 0x01D0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  PartySkillRequirementsNotMet;                     		// 0x01D8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  ScheduleRegionIsLocked;                           		// 0x01E0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  ScheduleRegionIsInvalid;                          		// 0x01E8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  ScheduleRegionNotSet;                             		// 0x01F0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TourCreateCrossplatformDisabled;                  		// 0x01F8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  CustomTourmamentRequiresCrossplatform;            		// 0x0200 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  CannotSpectateWhileInParty;                       		// 0x0208 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TourRankDisparity;                                		// 0x0210 (0x0008) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourErrors_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.TourCheckIn_TA
// 0x0010 (0x0060 - 0x0070)
class UTourCheckIn_TA : public UObject
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0060 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UAsyncTask*                                  CheckInTask;                                      		// 0x0068 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourCheckIn_TA");
		}

		return uClassPointer;
	};

	void __TourCheckIn_TA__CheckIn_2E648D1C4B9F55E93773579393A08427(class UError* _);
	bool IsCheckingIn();
	class UErrorType* GetCheckInError(struct FUniqueNetId PlayerID, class UTourSettings_TA* InSettings, unsigned long bHasTeam);
	void HandleCheckIn(struct FUniqueNetId PlayerID, class UTourSettings_TA* TourSettings, struct FTourTeam Team);
	class UAsyncTask* CheckIn(struct FUniqueNetId PlayerID, class UTourSettings_TA* Settings, struct FCustomMatchTeamSettings TeamSettings, unsigned long long TeamID);
	void Init(class UOnlineGameTournaments_TA* InTournaments);
};

// Class TAGame.GFxData_Chat_TA
// 0x00C0 (0x0098 - 0x0158)
class UGFxData_Chat_TA : public UGFxDataSingleton_X
{
public:
	int                                                MaxMessages;                                      		// 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                MaxActiveChatTabs;                                		// 0x009C (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<struct FActiveChatTab>                      ActiveChatTabs;                                   		// 0x00A0 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FChatPresetMessageGroup>             PresetGroups;                                     		// 0x00B0 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FChatPresetMessage>                  PresetMessages;                                   		// 0x00C0 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FGFxChatMessage>                     Messages;                                         		// 0x00D0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     BlockedMessageString;                             		// 0x00E0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ChatFilteredString;                               		// 0x00F0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	unsigned long                                      bPreMatchLobby : 1;                               		// 0x0100 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned char                                      LastMessagedCrossPlatformChatState;               		// 0x0104 (0x0001) [0x0000000000000000]               
	class UChatHistory_TA*                             ChatHistory;                                      		// 0x0108 (0x0008) [0x0000000000000000]               
	int                                                MaxNumGroups;                                     		// 0x0110 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                MaxNumMessagesPerGroup;                           		// 0x0114 (0x0004) [0x0000000000000002] (CPF_Const)   
	struct FChatPresetGroupOverride                    PostGameGroupOverride;                            		// 0x0118 (0x0020) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FChatPresetGroupOverride                    PreGameGroupOverride;                             		// 0x0138 (0x0020) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Chat_TA");
		}

		return uClassPointer;
	};

	void __GFxData_Chat_TA__OnShellSet_C789F20E49C8A88687E64C8E60F19865(class UObject* AccountSettings);
	void ClearDistracted();
	void OnOpenPartyChat();
	void OpenPartyChat();
	void OnOpenTeamChat();
	void OpenTeamChat();
	void OnOpenChat();
	void OpenChat();
	void RepopulatedChat();
	void CloseIndividualChatTab(struct FUniqueNetId PersonaId);
	void RepopulateIndividualChat(struct FUniqueNetId PersonaId);
	void ClearChat();
	void ClearChatByType(unsigned char ChatChannel, struct FUniqueNetId Persona);
	void OnChatMessage(int Team, struct FString PlayerName, struct FString Message, unsigned char ChatChannel, unsigned long bLocalPlayer, struct FUniqueNetId SenderId, unsigned long bWarning);
	void HandleMessageSanitizeError(class UError* Error, unsigned char Channel);
	void InternalAddMessage(struct FGFxChatMessage& Data);
	void AddRepopulatedMessage(struct FGFxChatMessage NewMessage);
	void AddPresetMessage(struct FGFxChatMessage NewMessage);
	void AddTransientMessage(struct FGFxChatMessage NewMessage);
	void AddChatMessage(struct FGFxChatMessage NewMessage);
	void DispatchChatMessage(struct FString Message, unsigned char ChatChannel, struct FUniqueNetId Recipient);
	void EraseChatByType(unsigned char ChatChannel, struct FUniqueNetId PersonaId);
	void HandleReceivedUnfriendNotice(struct FUniqueNetId PersonaId);
	void HandleIndividualChat(struct FString InMessage, struct FUniqueNetId SenderId, unsigned long bIsLocal);
	void SendPartyChatMessage(struct FString Message, unsigned long bCanceled);
	void SendTeamChatMessage(struct FString Message, unsigned long bCanceled);
	void SendGlobalChatMessage(struct FString Message, unsigned long bCanceled);
	void SendChatChannelMessage(struct FString Message, unsigned char ChatChannel, struct FUniqueNetId Recipient);
	void SendChatMessage(struct FString Message, unsigned long bTeamMessage);
	unsigned char GetChatFilter();
	void OnPressChatPreset(int Index);
	void SendChatPresetMessage(struct FName MessageId, unsigned long bTeam);
	void DisplayFreshCrossPlatformFilterHint(unsigned char NewCrossplayChatState, class UOnlineGameParty_X* Party);
	void HandleCrossPlatformChatStateChanged();
	void HandlePartyChanged(class UOnlineGameParty_X* Party);
	void InitChatTabs();
	void UpdateChatGroups(struct FChatPresetGroupOverride GroupOverride);
	void HandleQuickChatSaveChanged();
	class APlayerController_TA* GetPlayerController();
	class AGameEvent_Soccar_TA* GetGameEvent();
	void eventOnRemoved();
	void HandleGameEnded(class AGameEvent_Soccar_TA* GameEvent);
	void HandleStateChanged(class AGameEvent_TA* GameEvent);
	void RefreshQuickChat(class AGameEvent_Soccar_TA* GameEvent);
	void InitializeQuickChat(class AGameEvent_Soccar_TA* GameEvent, class UProfileQuickChatSave_TA* QuickChatSave);
	void OnQuickChatAdded(class UGFxData_Chat_TA* GFxChat, class AGameEvent_Soccar_TA* GameEvent, class UProfileQuickChatSave_TA* QuickChatSave);
	void OnShellSet();
};

// Class TAGame.AccountSettingsComponent_TA
// 0x0060 (0x0070 - 0x00D0)
class UAccountSettingsComponent_TA : public UComponent
{
public:
	unsigned long                                      bCrossPlatformEnabled : 1;                        		// 0x0070 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bPlatformAllowsCrossPlatform : 1;                 		// 0x0070 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bPlatformAllowsInvites : 1;                       		// 0x0070 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned char                                      CrossPlatformChatState;                           		// 0x0074 (0x0001) [0x0000000000000000]               
	class UNetworkSave_TA*                             NetworkSave;                                      		// 0x0078 (0x0008) [0x0000000000000000]               
	class UPlatformAccountSettings*                    PlatformSettings;                                 		// 0x0080 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FScriptDelegate                             __EventAccountSettingsChanged__Delegate;          		// 0x0088 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bCrossPlatformEnabled__ChangeNotify;            		// 0x00A0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __CrossPlatformChatState__ChangeNotify;           		// 0x00B8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AccountSettingsComponent_TA");
		}

		return uClassPointer;
	};

	void __CrossPlatformChatState__ChangeNotifyFunc();
	void __bCrossPlatformEnabled__ChangeNotifyFunc();
	bool IsCrossPlatformEnabled();
	bool VerifyCrossPlatformChat();
	bool VerifyCrossPlatformEnabled();
	void ReadPlatformSettings();
	void RecheckAllSettings();
	void SavedCrossPlatformEnabledChanged();
	void HandlePlatformSettingsChanged(class UPlatformAccountSettings* _);
	void HandleNetworkSaveSet(class UNetworkSave_TA* InSave);
	void HandlePlatformSettingsCreated(class UPlatformAccountSettings* InPlatformSettings, unsigned char InControllerID);
	void eventConstruct();
	void EventAccountSettingsChanged(class UAccountSettingsComponent_TA* AccountSettings);
};

// Class TAGame.__GFxData_Chat_TA__AddChatMessage_4C15062843C0106DC95016B9A5078803
// 0x0080 (0x0060 - 0x00E0)
class U__GFxData_Chat_TA__AddChatMessage_4C15062843C0106DC95016B9A5078803 : public UObject
{
public:
	struct FGFxChatMessage                             NewMessage;                                       		// 0x0060 (0x0080) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Chat_TA__AddChatMessage_4C15062843C0106DC95016B9A5078803");
		}

		return uClassPointer;
	};

	void __GFxData_Chat_TA__AddChatMessage_D87899664EAC29C75F1388B469A0AB45(struct FString _, class UError* Error);
	void __GFxData_Chat_TA__AddChatMessage_4C15062843C0106DC95016B9A5078803(struct FString _, struct FString Sanitized);
};

// Class TAGame.ChatHistory_TA
// 0x0014 (0x0060 - 0x0074)
class UChatHistory_TA : public UObject
{
public:
	TArray<class UStoredChatData_TA*>                  StoredChat;                                       		// 0x0060 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                MaxNumHistories;                                  		// 0x0070 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ChatHistory_TA");
		}

		return uClassPointer;
	};

	bool __ChatHistory_TA__FindHistory_B3DEF71B4621AE609B8F8286D17CE095(class UStoredChatData_TA* N);
	int __ChatHistory_TA__StoreMessageInternal_7C52F6134AC105BDB31E05895227F0C4(class UStoredChatData_TA* L, class UStoredChatData_TA* R);
	void RepopulateChatFromHistory(class UGFxData_Chat_TA* GFxChat, unsigned char Channel, struct FUniqueNetId SenderId);
	void ClearHistory(unsigned char Channel, struct FUniqueNetId SenderId);
	void StoreMessageInternal(class UStoredChatData_TA* ChatInfo, struct FGFxChatMessage& Data);
	class UStoredChatData_TA* CreateNewHistory(unsigned char Channel, struct FUniqueNetId SenderId);
	class UStoredChatData_TA* FindHistory(unsigned char Channel, struct FUniqueNetId SenderId);
	class UStoredChatData_TA* GetOrCreateHistory(unsigned char Channel, struct FUniqueNetId SenderId);
	void StoreMessage(struct FGFxChatMessage& Data);
	void ActivateStoredChat(class UStoredChatData_TA* StoredChatHistory);
	void DeactivateStoredChatForPersona(struct FUniqueNetId PersonaId);
	bool CanStoreMessage(unsigned char ChannelMessage);
};

// Class TAGame.StoredChatData_TA
// 0x0070 (0x0060 - 0x00D0)
class UStoredChatData_TA : public UObject
{
public:
	unsigned char                                      ChatChannel;                                      		// 0x0060 (0x0001) [0x0000000000000000]               
	struct FUniqueNetId                                SenderId;                                         		// 0x0068 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 LastChatUpdate;                                   		// 0x00B0 (0x0008) [0x0000000000000000]               
	TArray<struct FGFxChatMessage>                     Messages;                                         		// 0x00B8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long                                      bIsActive : 1;                                    		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000001] 
	int                                                MaxChatLength;                                    		// 0x00CC (0x0004) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StoredChatData_TA");
		}

		return uClassPointer;
	};

	void RepopulateChat(class UGFxData_Chat_TA* GFxChat);
	void StoreChatMessage(struct FGFxChatMessage& Data);
};

// Class TAGame.ProfileQuickChatSave_TA
// 0x0010 (0x00C8 - 0x00D8)
class UProfileQuickChatSave_TA : public USaveObject_TA
{
public:
	TArray<struct FName>                               QuickChatBindings;                                		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProfileQuickChatSave_TA");
		}

		return uClassPointer;
	};

	void __ProfileQuickChatSave_TA__GetVersionDelegates_D5EBCCF54DEDFEAE5B20FDB48921585F(class UObject* SaveObj);
	void ResetQuickChatBindings();
	void ChangeQuickChatBinding(int Index, struct FName Message);
	void GetVersionDelegates(TArray<struct FScriptDelegate>& VersionDelegates);
};

// Class TAGame.GFxData_Community_TA
// 0x0030 (0x0098 - 0x00C8)
class UGFxData_Community_TA : public UGFxDataSingleton_X
{
public:
	TArray<class UGFxData_BlogTile_TA*>                GFxBlogTiles;                                     		// 0x0098 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UBlogConfig_X*                               Config;                                           		// 0x00A8 (0x0008) [0x0000000000000000]               
	struct FString                                     MotD;                                             		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UBlogTileCache_TA*                           Cache;                                            		// 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Community_TA");
		}

		return uClassPointer;
	};

	void __GFxData_Community_TA__OnShellSet_946DD91B465C156AA2AA1E800AD48120(class UBlogTileCache_TA* InCache);
	struct FString __GFxData_Community_TA__UpdateFromCache_7F077BE04E1F3FD04C1651B611D25F8A(class UGFxData_BlogTile_TA* X);
	class UGFxData_BlogTile_TA* __GFxData_Community_TA__HandleBlogChanged_060CC1F2434A1E2AC2749DBB2A4C6763(class UBlogTile_X* BlogTile);
	bool __GFxData_Community_TA__HandleBlogChanged_BD7CA5EB4F31AA1C433191BF2CA89EF7(class UBlogTile_X* X);
	void HandleBlogChanged();
	void UpdateFromCache();
	void ClearBlogTileNewInfo(int Row);
	void eventOnShellSet();
};

// Class TAGame.BlogTileCache_TA
// 0x0020 (0x00C8 - 0x00E8)
class UBlogTileCache_TA : public USaveObject_TA
{
public:
	TArray<struct FString>                             UnreadTileIDs;                                    		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FString>                             PreviouslyDisplayedTileIDs;                       		// 0x00D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BlogTileCache_TA");
		}

		return uClassPointer;
	};

	bool __BlogTileCache_TA__UpdateTileIDs_AC9A92394F49AF69AEA85EBB2A9BD076(struct FString ActiveTileID);
	void SetAsRead(struct FString TileID);
	bool IsUnread(struct FString TileID);
	void UpdateTileIDs(TArray<struct FString>& ActiveTileIDs);
};

// Class TAGame.GFxData_BlogTile_TA
// 0x0018 (0x0094 - 0x00AC)
class UGFxData_BlogTile_TA : public UGFxDataRow_X
{
public:
	class UTexture*                                    ImageTexture;                                     		// 0x0098 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TextureSizeX;                                     		// 0x00A0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TextureSizeY;                                     		// 0x00A4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bNewInfo : 1;                                     		// 0x00A8 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_BlogTile_TA");
		}

		return uClassPointer;
	};

	void __GFxData_BlogTile_TA__SetBlogTile_FEE2CA6C418A1E880DB55B8345DA63CA(class UTexture2DDynamic* BlogTexture);
	void SetIsNewInfo(unsigned long bInNewInfo);
	class UGFxData_BlogTile_TA* SetBlogTile(class UBlogTile_X* InBlogTile);
};

// Class TAGame.GFxData_Controls_TA
// 0x00D0 (0x0098 - 0x0168)
class UGFxData_Controls_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FLocalizedBindingCategory>           Categories;                                       		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FLocalizedAction>                    Actions;                                          		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FUIPlayerBinding>                    PCBindings;                                       		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FUIPlayerBinding>                    GamepadBindings;                                  		// 0x00C8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UProfile_TA*                                 Profile;                                          		// 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProfileGamepadSave_TA*                      GamepadSave;                                      		// 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<struct FBindingAction>                      BindingActions;                                   		// 0x00E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FName                                       PendingRecordBindingAction;                       		// 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       PendingRecordBindingAxis;                         		// 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UInteraction*                                Interaction;                                      		// 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProfilePCSave_TA*                           ProfilePCSave;                                    		// 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     CustomPresetOverwriteWarning;                     		// 0x0118 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ClearButtonBindingTitle;                          		// 0x0128 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ClearKeybindTitle;                                		// 0x0138 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ClearButtonBindingDesc;                           		// 0x0148 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ClearKeybindDesc;                                 		// 0x0158 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Controls_TA");
		}

		return uClassPointer;
	};

	void __GFxData_Controls_TA__HandleProfileSet_9E5E7E8E42F8FF21381E1494D594D0FB(class UPlayer* P);
	void __GFxData_Controls_TA__HandleProfileSet_5C45A7EF479116BAE380E28D1290A774(class UProfileGamepadSave_TA* Save);
	void __GFxData_Controls_TA__HandleProfileSet_B86590DE4345833D9FB13A8A9B4E07B5(class UProfilePCSave_TA* Save);
	void HandleActiveBindingsChanged(class UPlayerInput_X* PlayerInput);
	bool IsRemappableType(struct FName Action, unsigned char RemappableType, TArray<struct FPlayerBinding>& Bindings);
	bool IsRemappable(struct FName Action, TArray<struct FPlayerBinding> Bindings);
	void Save();
	void ResetToPreset(struct FName PresetName);
	void ReseToDefaults();
	void OnBindingSet();
	void OnRecordBindingCanceled();
	struct FUIPlayerBinding MapUIBinding(struct FPlayerBinding Binding);
	void InitUIBindings(struct FName PresetName);
	void InvertAxisForBinding(struct FName Action, TArray<struct FPlayerBinding>& OutBindings);
	void InvertAxis(struct FName Axis);
	void RemoveBinding(struct FName Action, struct FName Key, unsigned char AxisSign, TArray<struct FPlayerBinding>& OutBindings);
	void SetSingleBinding(struct FName Action, struct FName Key, unsigned char AxisSign, TArray<struct FPlayerBinding>& DefaultBindings, TArray<struct FPlayerBinding>& OutBindings);
	void SetBinding(struct FName Action, struct FName Key, unsigned char AxisSign, TArray<struct FPlayerBinding>& DefaultBindings, TArray<struct FPlayerBinding>& OutBindings);
	void SetCurrentBinding(struct FName Key, unsigned long bGamepad, unsigned char AxisSign);
	void HandleOverwriteCustomBindingPreset(struct FName Key, unsigned long bGamepad, unsigned char AxisSign);
	bool HandleBindingInputAxis(int ControllerId, struct FName Key, float delta, float DeltaTime, unsigned long bGamepad);
	bool HandleBindingInputKey(int ControllerId, struct FName Key, unsigned char EventType, float AmountDepressed, unsigned long bGamepad);
	void ClearBindingFromArray(struct FName Action, TArray<struct FPlayerBinding>& DefaultBindings, TArray<struct FPlayerBinding>& OutBindings);
	void ClearKeyBinding(struct FName Action);
	void HandleOverwriteCustomBindingsClear(struct FName Action);
	void ClearBinding(struct FName Action);
	void CancelRecordBinding();
	void StartRecordBinding(struct FName Action);
	struct FString LocalizeKeyInternal(struct FName Key);
	struct FString LocalizeKey(struct FName Key, unsigned char AxisSign);
	struct FLocalizedAction GetLocalizedAction(struct FName ActionName);
	void SetUpKeyBindings();
	void HandleProfileSet(class ULocalPlayer_TA* InLocalPlayer);
	void eventOnShellSet();
};

// Class TAGame.__GFxData_Controls_TA__ClearBinding_374B3B0E4399D7CD62B342B2060F273B
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Controls_TA__ClearBinding_374B3B0E4399D7CD62B342B2060F273B : public UObject
{
public:
	struct FName                                       Action;                                           		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Controls_TA__ClearBinding_374B3B0E4399D7CD62B342B2060F273B");
		}

		return uClassPointer;
	};

	void __GFxData_Controls_TA__ClearBinding_3DB9B49747E2E65255BF96AA5EBF819D(class UGFxModal_X* _);
	void __GFxData_Controls_TA__ClearBinding_374B3B0E4399D7CD62B342B2060F273B(class UGFxModal_X* _);
};

// Class TAGame.__GFxData_Controls_TA__SetCurrentBinding_46145C7440B868E6AD5DEE98011E01D7
// 0x000D (0x0060 - 0x006D)
class U__GFxData_Controls_TA__SetCurrentBinding_46145C7440B868E6AD5DEE98011E01D7 : public UObject
{
public:
	struct FName                                       Key;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
	unsigned long                                      bGamepad : 1;                                     		// 0x0068 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned char                                      AxisSign;                                         		// 0x006C (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Controls_TA__SetCurrentBinding_46145C7440B868E6AD5DEE98011E01D7");
		}

		return uClassPointer;
	};

	void __GFxData_Controls_TA__SetCurrentBinding_46145C7440B868E6AD5DEE98011E01D7(class UGFxModal_X* _);
};

// Class TAGame.ProfileGamepadSave_TA
// 0x0020 (0x00C8 - 0x00E8)
class UProfileGamepadSave_TA : public USaveObject_TA
{
public:
	TArray<struct FPlayerBinding>                      GamepadBindings;                                  		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              ControllerDeadzone;                               		// 0x00D8 (0x0004) [0x0000000000000000]               
	float                                              DodgeInputThreshold;                              		// 0x00DC (0x0004) [0x0000000000000000]               
	float                                              SteeringSensitivity;                              		// 0x00E0 (0x0004) [0x0000000000000000]               
	float                                              AirControlSensitivity;                            		// 0x00E4 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProfileGamepadSave_TA");
		}

		return uClassPointer;
	};

	void __ProfileGamepadSave_TA__GetVersionDelegates_B2419FBF4DF857C7D87D5F99823ABE93(class UObject* SaveObj);
	void GetVersionDelegates(TArray<struct FScriptDelegate>& VersionDelegates);
	void OnCreate();
	void SetAirControlSensitivity(float Value);
	void SetSteeringSensitivity(float Value);
	void SetDodgeInputThreshold(float Value);
};

// Class TAGame.ProfilePCSave_TA
// 0x002C (0x00C8 - 0x00F4)
class UProfilePCSave_TA : public USaveObject_TA
{
public:
	TArray<struct FPlayerBinding>                      PCBindings;                                       		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              MouseSensitivity;                                 		// 0x00D8 (0x0004) [0x0000000000000000]               
	float                                              MouseXDeadZone;                                   		// 0x00DC (0x0004) [0x0000000000000000]               
	float                                              MouseYDeadZone;                                   		// 0x00E0 (0x0004) [0x0000000000000000]               
	float                                              MouseXDeadZoneAir;                                		// 0x00E4 (0x0004) [0x0000000000000000]               
	float                                              MouseYDeadZoneAir;                                		// 0x00E8 (0x0004) [0x0000000000000000]               
	float                                              KeyboardAxisBlendTime;                            		// 0x00EC (0x0004) [0x0000000000000000]               
	unsigned long                                      bAirPitchSafetyEnabled : 1;                       		// 0x00F0 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProfilePCSave_TA");
		}

		return uClassPointer;
	};

	void __ProfilePCSave_TA__GetVersionDelegates_DD8B0F3C4107717EF808A396171BAEBF(class UObject* SaveObj);
	void GetVersionDelegates(TArray<struct FScriptDelegate>& VersionDelegates);
	void OnCreate();
};

// Class TAGame.GFxData_Credits_TA
// 0x0060 (0x0098 - 0x00F8)
class UGFxData_Credits_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FLocalizedDepartmentData>            LocalizedDepartmentGroups;                        		// 0x0098 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FLocalizedPostCreditData>            LocalizedCopyrightGroups;                         		// 0x00A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FLocalizedPostCreditData>            LocalizedMusicGroups;                             		// 0x00B8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FDepartmentData>                     DepartmentGroups;                                 		// 0x00C8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FPostCreditData>                     CopyrightGroups;                                  		// 0x00D8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FPostCreditData>                     MusicGroups;                                      		// 0x00E8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Credits_TA");
		}

		return uClassPointer;
	};

	void __GFxData_Credits_TA__LoadCredits_DACE345149E8AB904F07B5B37054D121(struct FLocalizedPostCreditData LocalizedPostCredit);
	void AddToPostCreditData(struct FLocalizedPostCreditData LocalizedPostCredit, TArray<struct FPostCreditData>& Out_PostCredits);
	void AddToDepartmentData(struct FString LocalizedDepartmentTitle, struct FLocalizedNameData LocalizedNameInfo);
	void UnloadCredits();
	void MarkCreditsViewed();
	void LoadCredits();
};

// Class TAGame.GFxData_GameEvent_TA
// 0x00A4 (0x0098 - 0x013C)
class UGFxData_GameEvent_TA : public UGFxDataSingleton_X
{
public:
	int                                                TimeRemaining;                                    		// 0x0098 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TimeToNextMatch;                                  		// 0x009C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TimeWaitingForPlayersRemaining;                   		// 0x00A0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bOverTime : 1;                                    		// 0x00A4 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bOnline : 1;                                      		// 0x00A4 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bUnfairTeams : 1;                                 		// 0x00A4 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bForfeit : 1;                                     		// 0x00A4 (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	unsigned long                                      bNoContest : 1;                                   		// 0x00A4 (0x0004) [0x0000000040000000] [0x00000010] (CPF_EditInlineNotify)
	unsigned long                                      bServerTraveling : 1;                             		// 0x00A4 (0x0004) [0x0000000040000000] [0x00000020] (CPF_EditInlineNotify)
	unsigned long                                      bRankedMatch : 1;                                 		// 0x00A4 (0x0004) [0x0000000040000000] [0x00000040] (CPF_EditInlineNotify)
	unsigned long                                      bSolo : 1;                                        		// 0x00A4 (0x0004) [0x0000000040000000] [0x00000080] (CPF_EditInlineNotify)
	unsigned long                                      bIsBotMatch : 1;                                  		// 0x00A4 (0x0004) [0x0000000040000000] [0x00000100] (CPF_EditInlineNotify)
	unsigned long                                      bForfeitVoteAllowed : 1;                          		// 0x00A4 (0x0004) [0x0000000040000000] [0x00000200] (CPF_EditInlineNotify)
	unsigned long                                      bHasLeaveMatchPenalty : 1;                        		// 0x00A4 (0x0004) [0x0000000040000000] [0x00000400] (CPF_EditInlineNotify)
	unsigned long                                      bCanVoteToForfeit : 1;                            		// 0x00A4 (0x0004) [0x0000000040000000] [0x00000800] (CPF_EditInlineNotify)
	unsigned long                                      bViewingEndGameReplay : 1;                        		// 0x00A4 (0x0004) [0x0000000040000000] [0x00001000] (CPF_EditInlineNotify)
	unsigned long                                      bShowIntroScene : 1;                              		// 0x00A4 (0x0004) [0x0000000040000000] [0x00002000] (CPF_EditInlineNotify)
	unsigned long                                      bDisableTeamSelectScreen : 1;                     		// 0x00A4 (0x0004) [0x0000000040000000] [0x00004000] (CPF_EditInlineNotify)
	unsigned long                                      bStayAsPartyButtonVisible : 1;                    		// 0x00A4 (0x0004) [0x0000000040000000] [0x00008000] (CPF_EditInlineNotify)
	unsigned long                                      bStayAsPartyButtonEnabled : 1;                    		// 0x00A4 (0x0004) [0x0000000040000000] [0x00010000] (CPF_EditInlineNotify)
	unsigned long                                      bServerShutdown : 1;                              		// 0x00A4 (0x0004) [0x0000000040000000] [0x00020000] (CPF_EditInlineNotify)
	struct FString                                     MatchState;                                       		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FName                                       GameState;                                        		// 0x00B8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FName                                       MatchType;                                        		// 0x00C0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FName                                       EventType;                                        		// 0x00C8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                ReplayScoredBy;                                   		// 0x00D0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                ReplayAssistedBy;                                 		// 0x00D4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	float                                              ReplaySpeed;                                      		// 0x00D8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	float                                              ReplayTime;                                       		// 0x00DC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                WinningTeam;                                      		// 0x00E0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      TieBreakDecision;                                 		// 0x00E4 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                MaxPlayers;                                       		// 0x00E8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                MaxScore;                                         		// 0x00EC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     PlaylistName;                                     		// 0x00F0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FName                                       PlaylistId;                                       		// 0x0100 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     ServerName;                                       		// 0x0108 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     PartyPlaylistName;                                		// 0x0118 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     MutatorsString;                                   		// 0x0128 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                SeriesGames;                                      		// 0x0138 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_GameEvent_TA");
		}

		return uClassPointer;
	};

	void SetIsViewingEndgameReplay(unsigned long Value);
	void OnSkipScoreIntro();
	void OnCloseScoreboard();
	void OnOpenScoreboard();
	void OnCloseMidgameMenu();
	void OnOpenMidgameMenu();
	void OnTickerEvent(struct FString EventName, class UTexture* Texture, int ReceiverIndex, int VictimIndex);
	void OnGameMessage(struct FName Type, struct FString Message);
	void OnStatEvent(struct FString EventName, int Points, class UTexture* Texture, struct FName Sound);
	void StayAsPartyVoteBegin();
	void ForceStartPlay();
	void SetReadyToPlay(unsigned long bReady, unsigned long bReadyAllLocalPlayers);
};

// Class TAGame.GFxData_Garage_TA
// 0x01E8 (0x0098 - 0x0280)
class UGFxData_Garage_TA : public UGFxDataSingleton_X
{
public:
	TArray<class UProductSlot_TA*>                     LoadoutSlots;                                     		// 0x0098 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class ACarPreviewActor_TA*                         PreviewActor;                                     		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class UGFxData_GarageProductSlot_TA*>       GarageProductSlots;                               		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FGarageTeam>                         Teams;                                            		// 0x00C0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                PaintFinishSlotIndex;                             		// 0x00D0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                PreviewTeam;                                      		// 0x00D4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FGFxTeamColor>                       CustomColors;                                     		// 0x00D8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FGFxTeamColor>                       Team0Colors;                                      		// 0x00E8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FGFxTeamColor>                       Team1Colors;                                      		// 0x00F8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long                                      bTeam0FinishDisabled : 1;                         		// 0x0108 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bTeam1FinishDisabled : 1;                         		// 0x0108 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bCustom0FinishDisabled : 1;                       		// 0x0108 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bCustom1FinishDisabled : 1;                       		// 0x0108 (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	unsigned long                                      bTeam0ColorForced : 1;                            		// 0x0108 (0x0004) [0x0000000040000000] [0x00000010] (CPF_EditInlineNotify)
	unsigned long                                      bTeam1ColorForced : 1;                            		// 0x0108 (0x0004) [0x0000000040000000] [0x00000020] (CPF_EditInlineNotify)
	unsigned long                                      bCustom0ColorForced : 1;                          		// 0x0108 (0x0004) [0x0000000040000000] [0x00000040] (CPF_EditInlineNotify)
	unsigned long                                      bCustom1ColorForced : 1;                          		// 0x0108 (0x0004) [0x0000000040000000] [0x00000080] (CPF_EditInlineNotify)
	struct FString                                     ForcedTeam0FinishName;                            		// 0x0110 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     ForcedTeam1FinishName;                            		// 0x0120 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                ForcedTeam0Color;                                 		// 0x0130 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                ForcedTeam1Color;                                 		// 0x0134 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                ForcedCustom0Color;                               		// 0x0138 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                ForcedCustom1Color;                               		// 0x013C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class UProfile_TA*                                 Profile;                                          		// 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FLoadoutData                                Loadouts[0x2] ;                                   		// 0x0148 (0x0080) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FLoadoutData                                LastNonLicensedLoadout[0x2] ;                     		// 0x01C8 (0x0080) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class ULoadoutSet_TA*                              LoadoutSet;                                       		// 0x0248 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UCarPreviewSet_TA*                           CarPreviewSet;                                    		// 0x0250 (0x0008) [0x0000000000000000]               
	class UExplosionPreviewer_TA*                      ExplosionPreview;                                 		// 0x0258 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FName                                       GoalExplosionSeqName;                             		// 0x0260 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FScriptDelegate                             __PreviewTeamAction__Delegate;                    		// 0x0268 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Garage_TA");
		}

		return uClassPointer;
	};

	void __GFxData_Garage_TA__InitProductSlots_04E6F00D4F1FF9E24B2E27A16F0D492D(class UGFxData_GarageProductSlot_TA* S);
	class UOnlineProductStoreSet_TA* GetLocalOnlineProductSet();
	void UpdateExplosionPreviewer();
	void HandleUpdatedNumLocalPlayers(class UGameViewportClient_TA* GVC, int LocalPlayerCount);
	bool AllowTeamSpecificEquip(int SlotIndex, struct FProductHashID HashID);
	bool AreDuplicateProducts(unsigned long long ProductA, unsigned long long ProductB);
	void SetPreviewLoadout(struct FLoadoutData& InLoadout);
	bool HasNewProducts();
	void UpdateColorSettings();
	bool InitForcedCustomColor(int TeamIndex, class UProductAsset_Body_TA* BodyAsset, class UProductAsset_Skin_TA* SkinAssets, int& OutColor);
	bool InitForcedTeamColor(int TeamIndex, class UProductAsset_Body_TA* BodyAsset, class UProductAsset_Skin_TA* SkinAssets, int& OutColor);
	struct FString GetForcedFinishLabel(unsigned long bFinishDisabled, class UProductAsset_Body_TA* BodyAsset, class UProductAsset_Skin_TA* SkinAsset, int TeamID);
	void OnProductsChanged();
	void HandleDLCChange();
	void HandleLoadoutChanged(class ULoadoutSet_TA* InLoadoutSet, class ULoadout_TA* InLoadout);
	void CommitLoadout();
	void SetPreviewTeam(int Team);
	void UpdateCustomFinish(int Team, struct FProductHashID HashID);
	void SetCustomFinish(int Team, struct FProductHashID HashID);
	bool IsCustomFinishDisabled(int Team);
	void SetPreviewCustomFinish(struct FProductHashID HashID);
	void UpdateTeamFinish(int Team, struct FProductHashID HashID);
	void SetTeamFinish(int Team, struct FProductHashID HashID);
	bool IsTeamFinishDisabled(int Team);
	void SetPreviewTeamFinish(int Team, struct FProductHashID HashID);
	void SetCustomColor(int Team, int ColorID);
	bool IsCustomColorDisabled(int Team);
	void SetPreviewCustomColor(int ColorID);
	void SetTeamColor(int Team, int ColorID);
	bool IsTeamColorDisabled(int Team);
	void SetPreviewTeamColor(int Team, int ColorID);
	void ClearPreviewPaint(int Team);
	bool ProductSlotIsEnabled(class UGFxData_ProductSlot_TA* ProductSlot, struct FProductHashID BodySlotHashID);
	void RefreshEnabledProductSlots();
	void EquipProduct(int SlotIndex, struct FProductHashID HashID, unsigned char EquipAction);
	void HandleLicensedLoadouts(int InProductID);
	void ClearPreviewLoadout(int PendingPreviewProductID);
	void ClearPreviewProduct();
	void SetPreviewProduct(int SlotIndex, struct FProductHashID HashID);
	void SetSlot(int SlotIndex);
	void InitColors();
	void InitProductSlots();
	void InitTeams();
	void InitLoadouts(class ULoadoutSet_TA* NewLoadoutSet, int TeamIndex);
	void HandleLoadoutSaveLoaded(class UProfileLoadoutSave_TA* LoadoutSave);
	void LoadUserLoadout();
	void HandlePreviewActorsChanged(class UCarPreviewSet_TA* G);
	void eventOnRemoved();
	void eventOnShellSet();
	void PreviewTeamAction();
};

// Class TAGame.OnlineDLCProductCache_TA
// 0x0048 (0x0060 - 0x00A8)
class UOnlineDLCProductCache_TA : public UObject
{
public:
	TArray<class UOnlineProduct_TA*>                   GeneratedProducts;                                		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UClass*>                              AllowedAttributes;                                		// 0x0070 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	TArray<class UOnlineProduct_TA*>                   PreviousGeneratedProducts;                        		// 0x0080 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventDLCChange__Delegate;                       		// 0x0090 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineDLCProductCache_TA");
		}

		return uClassPointer;
	};

	class UOnlineProduct_TA* GetOldGeneratedOnlineProduct(unsigned long long InstanceID);
	void ClearProducts();
	void RemoveGeneratedProduct(int ProductID);
	void RemoveDuplicateGeneratedItems();
	TArray<struct FString> GetCurrentFakeEntitlements();
	bool Contains(int ProductID);
	class UOnlineProduct_TA* GenerateOnlineDLCProduct(int ProductID);
	void GetDLCProducts(TArray<class UProduct_TA*>& Unlocked, TArray<class UProduct_TA*>& Locked);
	void HandleUnlockedDLCChanged();
	void RegenerateOnlineDLCProducts();
	void EventDLCChange();
};

// Class TAGame.ProductHash_TA
// 0x0000 (0x0060 - 0x0060)
class UProductHash_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductHash_TA");
		}

		return uClassPointer;
	};

	struct FProductHashID GetHashIDFromInstanceID(unsigned long long InstanceID, class UOnlineProductStoreSet_TA* ProductSet);
	class UProduct_TA* GetProductFromInstanceID(unsigned long long InstanceID, class UOnlineProductStoreSet_TA* ProductSet);
	struct FProductHashSource GetProductSourceFromInstanceID(unsigned long long InstanceID, class UOnlineProductStoreSet_TA* ProductSet);
	TArray<class UOnlineProduct_TA*> GetOnlineProductsFromHashID(struct FProductHashID HashID, class UOnlineProductStoreSet_TA* ProductSet);
	class UOnlineProduct_TA* GetOnlineProductFromHashID(struct FProductHashID HashID, class UOnlineProductStoreSet_TA* ProductSet);
	class UProduct_TA* GetProductFromHashID(struct FProductHashID HashID, class UOnlineProductStoreSet_TA* ProductSet);
	int GetProductIDFromHashID(struct FProductHashID HashID, class UOnlineProductStoreSet_TA* ProductSet);
	struct FProductHashSource ProductToProductSource(class UProduct_TA* Product);
	struct FProductHashSource OnlineProductToProductSource(class UOnlineProduct_TA* OnlineProduct);
	TArray<struct FProductHashSource> GetProductSourcesFromHashID(struct FProductHashID HashID, class UOnlineProductStoreSet_TA* ProductSet);
	struct FProductHashSource GetProductSourceFromHashID(struct FProductHashID HashID, class UOnlineProductStoreSet_TA* ProductSet);
};

// Class TAGame.GFxData_ProductSlot_TA
// 0x0054 (0x0094 - 0x00E8)
class UGFxData_ProductSlot_TA : public UGFxDataRow_X
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x0098 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bCanUnequip : 1;                                  		// 0x0098 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	struct FName                                       SlotName;                                         		// 0x009C (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     Label;                                            		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     PluralLabel;                                      		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UTexture*                                    Icon;                                             		// 0x00C8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SlotIndex;                                        		// 0x00D0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FProductHashID                              EquippedHashID0;                                  		// 0x00D4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FProductHashID                              EquippedHashID1;                                  		// 0x00D8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FProductHashID                              EquippedPack;                                     		// 0x00DC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                DefaultProductID;                                 		// 0x00E0 (0x0004) [0x0000000000000000]               
	int                                                MatchesNeededToUnlock;                            		// 0x00E4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductSlot_TA");
		}

		return uClassPointer;
	};

	void SetupProductSlot(class UProductSlot_TA* Slot);
};

// Class TAGame.GFxData_GarageProductSlot_TA
// 0x0000 (0x00E8 - 0x00E8)
class UGFxData_GarageProductSlot_TA : public UGFxData_ProductSlot_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_GarageProductSlot_TA");
		}

		return uClassPointer;
	};

	void SetupGarageProductSlot(class UProductSlot_TA* Slot, class ULoadoutSet_TA* LoadoutSet, int PreviewTeam);
};

// Class TAGame.__GFxData_Garage_TA__SetPreviewProduct_60C786534B6C386E61D41C8A9B4389CB
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Garage_TA__SetPreviewProduct_60C786534B6C386E61D41C8A9B4389CB : public UObject
{
public:
	int                                                SlotIndex;                                        		// 0x0060 (0x0004) [0x0000000000000000]               
	struct FProductHashID                              HashID;                                           		// 0x0064 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Garage_TA__SetPreviewProduct_60C786534B6C386E61D41C8A9B4389CB");
		}

		return uClassPointer;
	};

	void __GFxData_Garage_TA__SetPreviewProduct_60C786534B6C386E61D41C8A9B4389CB();
};

// Class TAGame.GFxData_Products_TA
// 0x0138 (0x0098 - 0x01D0)
class UGFxData_Products_TA : public UGFxDataSingleton_X
{
public:
	TArray<class ULoadingProduct_TA*>                  LoadingProducts;                                  		// 0x0098 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FProductStatInfo>                    Stats;                                            		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     ProductLabel;                                     		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     ProductLongLabel;                                 		// 0x00C8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UTexture*                                    ProductIcon;                                      		// 0x00D8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     ProductDescription;                               		// 0x00E0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long long                                 ProductID;                                        		// 0x00F0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                BaseProductID;                                    		// 0x00F8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FProductHashID                              HashID;                                           		// 0x00FC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FProductHashID                              ProductPackHashID;                                		// 0x0100 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SchematicPointerID;                               		// 0x0104 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                ProductSlot;                                      		// 0x0108 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     ProductSlotLabel;                                 		// 0x0110 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     ProductSlotLongLabel;                             		// 0x0120 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long                                      bProductEquipped : 1;                             		// 0x0130 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bProductEquipped01 : 1;                           		// 0x0130 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bProductUnlocked : 1;                             		// 0x0130 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bProductIsPack : 1;                               		// 0x0130 (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	unsigned long                                      bProductIsNew : 1;                                		// 0x0130 (0x0004) [0x0000000040000000] [0x00000010] (CPF_EditInlineNotify)
	unsigned long                                      bProductHasNewSkin : 1;                           		// 0x0130 (0x0004) [0x0000000040000000] [0x00000020] (CPF_EditInlineNotify)
	unsigned long                                      bProductCanBeTradedIn : 1;                        		// 0x0130 (0x0004) [0x0000000040000000] [0x00000040] (CPF_EditInlineNotify)
	unsigned long                                      bProductCanBePlayerTraded : 1;                    		// 0x0130 (0x0004) [0x0000000040000000] [0x00000080] (CPF_EditInlineNotify)
	unsigned long                                      bProductIsContainer : 1;                          		// 0x0130 (0x0004) [0x0000000040000000] [0x00000100] (CPF_EditInlineNotify)
	unsigned long                                      bProductIsContainerKey : 1;                       		// 0x0130 (0x0004) [0x0000000040000000] [0x00000200] (CPF_EditInlineNotify)
	unsigned long                                      bProductIsSchematic : 1;                          		// 0x0130 (0x0004) [0x0000000040000000] [0x00000400] (CPF_EditInlineNotify)
	unsigned long                                      bProductUpgradable : 1;                           		// 0x0130 (0x0004) [0x0000000040000000] [0x00000800] (CPF_EditInlineNotify)
	unsigned long                                      bIsFavorited : 1;                                 		// 0x0130 (0x0004) [0x0000000040000000] [0x00001000] (CPF_EditInlineNotify)
	unsigned long                                      bIsArchived : 1;                                  		// 0x0130 (0x0004) [0x0000000040000000] [0x00002000] (CPF_EditInlineNotify)
	unsigned long                                      bCanArchive : 1;                                  		// 0x0130 (0x0004) [0x0000000040000000] [0x00004000] (CPF_EditInlineNotify)
	unsigned long                                      bDebugLoadingProducts : 1;                        		// 0x0130 (0x0004) [0x0000000000000001] [0x00008000] (CPF_Edit)
	struct FColor                                      ProductPaintColor;                                		// 0x0134 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     ProductPaintColorName;                            		// 0x0138 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned char                                      ProductQuality;                                   		// 0x0148 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                ProductQuantity;                                  		// 0x014C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TradeHold;                                        		// 0x0150 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SeriesID;                                         		// 0x0154 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     SeriesDescription;                                		// 0x0158 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                SchematicResources;                               		// 0x0168 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class UGFxProductAttributeMap_TA*                  AttributeMap;                                     		// 0x0170 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	struct FString                                     AttributeTables;                                  		// 0x0178 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<class UProduct_TA*>                         NewProducts;                                      		// 0x0188 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UProductsFavoriteSave_TA*                    FavoriteSave;                                     		// 0x0198 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProductsArchiveSave_TA*                     ArchiveSave;                                      		// 0x01A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProfileLoadoutSave_TA*                      LoadoutSave;                                      		// 0x01A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class UClass*>                              DynamicThumbnailsIgnorableOnlinePaintedProducts;  		// 0x01B0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UMtxConfig_TA*                               MtxConfig;                                        		// 0x01C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UProductsConfig_TA*                          ProductsConfig;                                   		// 0x01C8 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Products_TA");
		}

		return uClassPointer;
	};

	void __GFxData_Products_TA__OnShellSet_EBEF54E645D947C4723A4A914CFE958B(class UWallet_TA* Wallet);
	void __GFxData_Products_TA__OnShellSet_115FDBA945217F62EE7B8088A6AD6C2D(class UWallet_TA* _);
	void __GFxData_Products_TA__OnShellSet_424EB5AD4585D95F5782AFBE8801E6DB(class UProductsArchiveSave_TA* InArchiveSave);
	void __GFxData_Products_TA__OnShellSet_BE34DDD54F12F5142A623493E558E4D5(class UProfileLoadoutSave_TA* InLoadoutSave);
	void __GFxData_Products_TA__OnShellSet_53C7C4D746ABCC231F66B38DC9AFA7CA(class UProductsFavoriteSave_TA* InFavoriteSave);
	bool __GFxData_Products_TA__GetAttributesWithAdditionalAssets_9EB7BF88482BA70783B569BDFF01E244(class UProductAttribute_TA* A);
	class UGFxData_ProductAttribute_TA* __GFxData_Products_TA__InstanceAttributes_18A79B4A4B4A341638896091576E09E5(class UClass* GFxClass);
	class UClass* __GFxData_Products_TA__InstanceAttributes_2715CD8744D7EFF15AC70EB8DBF3DB10(class UProductAttribute_TA* Attribute);
	struct FName __GFxData_Products_TA__BuildAttributeTableStr_3D0915A74764DEE4CC0ADCBC4FDC31F0(class UGFxData_ProductAttribute_TA* GFxAttribute);
	bool __GFxData_Products_TA__HasNewOnlineProducts_D3E59B9E40B0012731EBD4A7B523FB81(unsigned long long Id);
	bool __GFxData_Products_TA__FolderContainsNewProducts_451BED8E443C424DD62CB8A8EEE9CE13(class UProduct_TA* P);
	unsigned long long __GFxData_Products_TA__GetMatchingInstancesByProductID_82372E874A5670DF2F0DDC8F2BAA30BD(class UOnlineProduct_TA* OnlineProduct);
	class ACarPreviewActor_TA* GetCarPreview();
	int GetEditTeamIndex(class UProfile_TA* Profile);
	class ULoadoutSet_TA* GetEditLoadoutSet(class UProfile_TA* Profile);
	class ULoadout_TA* GetEditLoadout(class UProfile_TA* Profile, int TeamIndex);
	void OnSchematicResourcesChanged();
	void HandleSchematicResourcesChanged(class USaveData_TA* SaveData);
	void RefreshSchematicResources();
	void HandleRemovedOnlineProduct(class USaveData_TA* Data, class UOnlineProduct_TA* OnlineProduct);
	void HandleNewOnlineProduct(class USaveData_TA* Data, class UOnlineProduct_TA* OnlineProduct);
	void OnProductsRefreshed();
	void HandleOnlineProductsSynced(class USaveData_TA* SaveData);
	void TimerRefreshProducts();
	void RefreshProducts();
	TArray<unsigned long long> GetMatchingInstancesByProductID(int InProductID);
	int GetTimeHoldRemaining(struct FProductHashID InHashID);
	void UpdateTeamProductData();
	void UpdateAllProductData();
	struct FProductHashID GetNewestProductId();
	bool SlotContainsNewProducts(int SlotIndex);
	bool FolderContainsNewProducts();
	bool HasNewOnlineProducts();
	struct FString GetProductLongLabel(struct FProductHashID InHashID);
	unsigned char GetProductQuality(struct FProductHashID InHashID);
	struct FString GetProductTrademarkLabel(struct FProductHashID InHashID);
	struct FString GetProductLabel(struct FProductHashID InHashID);
	bool BaseProductsMatch(struct FProductHashID FirstProduct, struct FProductHashID SecondProduct);
	struct FProductHashID GetHashIDFromProductID(int InProductID);
	struct FString GetSlotLabel(struct FProductHashID InHashID);
	int GetSlotIndex(struct FProductHashID InHashID);
	bool IsContainer(struct FProductHashID InHashID);
	void OnProductFailedToLoad(struct FProductHashID InHashID);
	void OnProductLoaded(struct FProductHashID InHashID, int ThumbnailSize);
	struct FString BuildAttributeTableStr(TArray<class UGFxData_ProductAttribute_TA*>& Attributes);
	TArray<class UGFxData_ProductAttribute_TA*> InstanceAttributes(class UIProductAttributeProvider_TA* AttributeProvider);
	void ClearAttributes();
	void UpdateProductData(class ULoadingProduct_TA* ProductData);
	bool UpdateEquippedVanity(int SlotIndex, struct FProductHashID ProductHash);
	void UpdateNextProductData();
	void SetUpdateProductDataTimer();
	void QueUpdateProductData(class ULoadingProduct_TA* LoadingProduct);
	bool CanBePlayerTraded(class UProduct_TA* Product);
	bool CanBeTradedIn(class UProduct_TA* Product);
	void HandleRenderTargetUpdate(class UTextureRenderTarget2D* Texture, class ULoadingProduct_TA* LoadingProduct);
	void HandleThumbnailLoaded(struct FAssetLoadResult Result, class ULoadingProduct_TA* LoadingProduct);
	void HandleProductThumbnailRendered(struct FProductThumbnailResult Result, class ULoadingProduct_TA* LoadingProduct);
	void RenderProductThumbnail(class ULoadingProduct_TA* ProductData);
	void HandleAdditionalProductReferenceLoaded(class ULoadingProduct_TA* LoadingProduct, struct FAssetLoadResult& Result);
	void HandlePaintedProductLoaded(class ULoadingProduct_TA* LoadingProduct, struct FAssetLoadResult& Result);
	TArray<class UProductAttribute_TA*> GetAttributesWithAdditionalAssets(class ULoadingProduct_TA* ProductData);
	void LoadAdditionalProductReferences(class ULoadingProduct_TA* LoadingProduct);
	void SetIsArchived(struct FProductHashID InHashID, unsigned long bValue);
	void SetIsFavorited(struct FProductHashID InHashID, unsigned long bValue);
	void StartLoadingProduct(struct FProductHashID InHashID, unsigned char ThumbnailSize, int ViewId, unsigned long bIgnoreEquipped);
	class UOnlineProductStoreSet_TA* GetLocalOnlineProductSet();
	void RefreshProduct(class ULoadingProduct_TA* LoadingProduct, int ViewId, unsigned long bIgnoreEquipped);
	void LoadProduct(struct FProductHashID InHashID, unsigned char ThumbnailSize, int ViewId, unsigned long bIgnoreEquipped);
	void OnClearViewedProduct(struct FProductHashID InHashID, unsigned char ThumbnailSize);
	bool IsThumbnailReferenced(class UProductAsset_TA* Asset, class UOnlineProduct_TA* OnlineProduct, unsigned char ThumbnailSize);
	bool IsProductIDReferenced(int InProductID);
	void ClearProductView(class ULoadingProduct_TA* LoadingProduct, int ViewId);
	void ClearReferencedProducts(int ViewId);
	void SetViewProducts(int ViewId, TArray<struct FProductHashID> HashIDs, unsigned char ThumbnailSize);
	TArray<unsigned long long> GetVisibleProductIDs(int SlotIndex, struct FProductHashID PackHashID, unsigned long bUnlockedOnly);
	TArray<unsigned long long> GetUnlockedProductIDs(int SlotIndex);
	bool ShouldShowProduct(class ULoadout_TA* Loadout, class UProduct_TA* Product, struct FProductHashID PackHashID);
	void CacheNewProducts();
	void HandleProductsSave(class UProductsSave_TA* ProductsSave);
	class UProfile_TA* GetProfile();
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.ProductsSave_TA
// 0x0060 (0x00C8 - 0x0128)
class UProductsSave_TA : public USaveObject_TA
{
public:
	TArray<unsigned long long>                         OnlineProductInstanceIds;                         		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long long>                         NewProductIDs;                                    		// 0x00D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long long>                         UnseenContainerProducts;                          		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 LastUnlockDisplayId;                              		// 0x00F8 (0x0008) [0x0000000000000000]               
	int                                                PreviousKeyCount;                                 		// 0x0100 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                PreviousDecryptorCount;                           		// 0x0104 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bHasUnseenGiftboxes : 1;                          		// 0x0108 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	struct FScriptDelegate                             __NewProductIDs__ChangeNotify;                    		// 0x0110 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductsSave_TA");
		}

		return uClassPointer;
	};

	void __NewProductIDs__ChangeNotifyFunc();
	class USaveObject_TA* Reconcile(class USaveObject_TA* Remote);
	TArray<struct FProductHashID> GetUnseenContainerDrops();
	void HandleOnlineProductsChanged(TArray<class UOnlineProduct_TA*> InOnlineProducts);
	void RemoveContainerDrop(struct FProductHashID HashID);
	void ClearUnseenContainerDrops();
	struct FProductHashID GetHighestRarityDrop();
	bool IsUnseenContainerDrop(unsigned long long InstanceID);
	void AddUnseenContainerDrop(unsigned long long InstanceID);
	bool ProductIsNew(unsigned long long OnlineID);
	void UnlockProduct(int ProductID);
	void LockProduct(int ProductID);
	void ClearNewProducts();
	void OnLoad();
};

// Class TAGame.ICustomizableSlot
// 0x0000 (0x0060 - 0x0060)
class UICustomizableSlot : public UInterface
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ICustomizableSlot");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_Leaderboards_TA
// 0x0048 (0x0098 - 0x00E0)
class UGFxData_Leaderboards_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FLeaderboardData>                    LeaderboardDataSet;                               		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                PlayerLeaderboardValue;                           		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                PlayerLeaderboardDivision;                        		// 0x00AC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	float                                              PlayerLeaderboardMMR;                             		// 0x00B0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     PlayerLeaderboardName;                            		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long                                      bShowGlobalLeaderboards : 1;                      		// 0x00C8 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bWordFilterError : 1;                             		// 0x00C8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	class UOnlineGameLeaderboards_X*                   Leaderboards;                                     		// 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       PendingLeaderboardRequestID;                      		// 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Leaderboards_TA");
		}

		return uClassPointer;
	};

	void ViewProfile(int InRowIndex);
	void HandleSanitizeError(struct FString OriginalPhrase, class UError* Error);
	void HandlePlayerNameSanitized(struct FString Original, struct FString Sanitized);
	void SanitizePlayerNames(TArray<struct FLeaderboardData>& Table);
	void GetLeaderboardFriends(struct FName LeaderboardId);
	void HandlePlayerFriendLeaderboardRecieved(class UOnlineGameLeaderboards_X* LeaderboardsRef, struct FName LeaderboardId, class UError* Error, struct FLeaderboardData& PlayerLeaderboardData);
	void HandlePlayerLeaderboardRecieved(class UOnlineGameLeaderboards_X* LeaderboardsRef, struct FName LeaderboardId, class UError* Error, struct FLeaderboardData& PlayerLeaderboardData);
	void RequestClearPendingAvatarDownloads();
	void HandleLeaderboardReceived(struct FName NewLeaderboardID, TArray<struct FLeaderboardData>& NewLeaderboardData);
	void OnLeaderboardError(struct FString LeaderboardError);
	void OnLeaderboardLoaded();
	void HandleLeaderboardError(class UError* Error);
	void GetLeaderboard(struct FName LeaderboardName);
	void SetShowGlobalLeaderboards(unsigned long bGlobal);
	void InitShowGlobalLeaderboards();
	void GetPlayerLeaderboardValue(struct FName LeaderboardName, struct FScriptDelegate NewDelegate);
	void BeginGetLeaderboard(struct FName LeaderboardName);
	void eventOnShellSet();
	class UOnlineGame_X* GetOnlineGame();
};

// Class TAGame.GFxData_LocalCar_TA
// 0x0028 (0x0098 - 0x00C0)
class UGFxData_LocalCar_TA : public UGFxDataSingleton_X
{
public:
	int                                                Boost;                                            		// 0x0098 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bOnBack : 1;                                      		// 0x009C (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bViewingCarCam : 1;                               		// 0x009C (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bShowItemsDisplay : 1;                            		// 0x009C (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bItemActive : 1;                                  		// 0x009C (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	int                                                TimeTillItem;                                     		// 0x00A0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                MaxTimeTillItem;                                  		// 0x00A4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     ItemName;                                         		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	float                                              ItemTimeRemaining;                                		// 0x00B8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                ItemTargetID;                                     		// 0x00BC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_LocalCar_TA");
		}

		return uClassPointer;
	};

	void SetItemTargetScreenPosition(float ScreenX, float ScreenY, unsigned long bOffScreen);
	void SetOnBack(unsigned long bIsOnBack);
	void UpdateViewingCarCam(class ACamera_X* Camera);
	void HandleCameraStateChanged(class ACamera_X* Camera, class UCameraState_X* CameraState);
	void HandleCameraTargetChanged(class ACamera_TA* Camera, class AActor* Target);
	void HandleCameraChanged(class APlayerController_X* PlayerController);
	void BoostPercentageChanged(int NewPercentage, unsigned long bAnimate);
	void SetBoostPercent(int NewPercentage, unsigned long bAnimateChange);
	void eventOnShellSet();
};

// Class TAGame.ClientXPSave_TA
// 0x0040 (0x00C8 - 0x0108)
class UClientXPSave_TA : public USaveObject_TA
{
public:
	int                                                TotalXP;                                          		// 0x00C8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Level;                                            		// 0x00CC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                CurrentLevelXPThreshold;                          		// 0x00D0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                NextLevelXPThreshold;                             		// 0x00D4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FScriptDelegate                             __EventXPUpdated__Delegate;                       		// 0x00D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventLevelUpdated__Delegate;                    		// 0x00F0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ClientXPSave_TA");
		}

		return uClassPointer;
	};

	class USaveObject_TA* Reconcile(class USaveObject_TA* Remote);
	void StaticGetXPInfo(int XPTotal, int& Out_XPLevel, struct FString& Out_XPTitle, int& Out_XPProgressInCurrentLevel, int& Out_XPRequiredForNextLevel);
	void GiveXPDrop(struct FOnlineXPReward& XPDrop);
	void GetXPInfo(int& Out_XPTotal, int& Out_XPLevel, struct FString& Out_XPTitle, int& Out_XPProgressInCurrentLevel, int& Out_XPRequiredForNextLevel);
	void SetLevelInfo(int InCurrentLevel, int InCurrentLevelXPThreshold, int InNextLevelXPThreshold);
	void SetXPInfo(struct FXPInfo& InXPInfo);
	void SetXPInfoNoNotify(struct FXPInfo& InXPInfo);
	void SetTotalXP(int InTotalXP);
	bool InitLevelInfoNoNotify(int InCurrentLevel, int InCurrentLevelXPThreshold, int InNextLevelXPThreshold, int& OldLevel);
	bool SetTotalXPNoNotify(int InTotalXP, int& OldXP);
	void EventLevelUpdated(class UClientXPSave_TA* XPSave, int NewLevel, int OldLevel);
	void EventXPUpdated(class UClientXPSave_TA* XPSave, int OldXP);
};

// Class TAGame.GFxData_PlayerVanity_TA
// 0x0018 (0x0098 - 0x00B0)
class UGFxData_PlayerVanity_TA : public UGFxDataSingleton_X
{
public:
	class UVanitySetManager_TA*                        VanityMgr;                                        		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxData_PlayerAvatarBorder_TA*              GFxPlayerAvatarBorder;                            		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxData_PlayerBanner_TA*                    GFxPlayerBanner;                                  		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PlayerVanity_TA");
		}

		return uClassPointer;
	};

	void __GFxData_PlayerVanity_TA__InitVanityItems_E31B872D442F19D64C98478308E08982(class UPlayer* P);
	bool __GFxData_PlayerVanity_TA__UpdatePlayerAvatars_223B04394C97E69E4AB69384E9F33CCC(struct FUniqueNetId PID);
	int GetPlayerBorderIndex(struct FUniqueNetId PlayerID);
	void OnPlayerAvatarBordersUpdated(TArray<struct FUniqueNetId> PlayerIDs);
	void UpdatePlayerAvatarBorders(TArray<struct FUniqueNetId> PlayerIDs);
	void InitPlayerAvatarBorder();
	int GetPlayerNameBannerIndex(struct FString PlayerName);
	int GetPlayerBannerIndex(struct FUniqueNetId PlayerID);
	void OnPlayerBannersUpdated(TArray<struct FUniqueNetId> PlayerIDs);
	void UpdatePlayerBanners(TArray<struct FUniqueNetId> PlayerIDs);
	void InitPlayerBanner();
	int GetPlayerNameAvatarIndex(struct FString PlayerName);
	int GetPlayerAvatarIndex(struct FUniqueNetId PlayerID);
	void OnPlayerAvatarsUpdated(TArray<struct FUniqueNetId> PlayerIDs);
	void UpdatePlayerAvatars(TArray<struct FUniqueNetId> PlayerIDs);
	void HandleLoginChanged(class UOnlinePlayerAuthentication_X* Auth);
	void InitVanityItems();
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.GFxData_FirstTimeExperience_TA
// 0x0020 (0x0098 - 0x00B8)
class UGFxData_FirstTimeExperience_TA : public UGFxDataSingleton_X
{
public:
	struct FName                                       CurrentCheckpoint;                                		// 0x0098 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FName                                       CurrentGroup;                                     		// 0x00A0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bActive : 1;                                      		// 0x00A8 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	class UFirstTimeExperienceManager_TA*              FTEManager;                                       		// 0x00B0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_FirstTimeExperience_TA");
		}

		return uClassPointer;
	};

	void HandleFTEChange(class UFirstTimeExperienceManager_TA* InFTEManager, unsigned long bIsActive, struct FName GroupName, struct FName CheckpointName);
	void LoadFTEMatch(struct FString MatchType);
	void StreamLoadLevel(class UClass* InSeqClass);
	void LoadFTELevel(struct FString InType, unsigned long bAutoEntered);
	void LoadFTEMatch_Part2();
	void LoadFTEMatch_Part1();
	bool HasOtherFTEBlockers(struct FName GroupName);
	bool TryStartFTEGroup(struct FName GroupName, unsigned long bIgnoreCompletion);
	void CheckpointTentativelyCompleted(struct FName InCheckpoint);
	void CheckpointCompleted(struct FName InCheckpoint, unsigned long bHasError);
	void HandleManagerCreated(class UFirstTimeExperienceManager_TA* InFTEManager);
	void eventOnShellSet();
};

// Class TAGame.GFxData_LegalText_TA
// 0x0010 (0x0098 - 0x00A8)
class UGFxData_LegalText_TA : public UGFxDataSingleton_X
{
public:
	TArray<unsigned char>                              LegacyLegalPlatforms;                             		// 0x0098 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_LegalText_TA");
		}

		return uClassPointer;
	};

	void __GFxData_LegalText_TA__HandleSaveDataLoaded_211D3B384D1D9016FBC89EAFD3F8C725(class UOnlineStorageSyncManager_TA* _);
	bool __GFxData_LegalText_TA__SyncLegal_493FDBF34E0B22F9F71EE496BF4A65C0(unsigned char P);
	void NotifyPrivacyPolicyUpdated();
	void NotifyEulaUpdated();
	void SyncLegal();
	void HandleSyncSuccess();
	void HandleSaveDataLoaded(class USaveGameManager_TA* Manager, class USaveData_TA* MySaveData, class UError* Error);
	void eventOnShellSet();
};

// Class TAGame.ProfileGameplaySave_TA
// 0x0006 (0x00C8 - 0x00CE)
class UProfileGameplaySave_TA : public USaveObject_TA
{
public:
	unsigned long                                      bMetric : 1;                                      		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bTeamColoredBoostMeter : 1;                       		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bDisableDivisions : 1;                            		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bDisableDivisionsSports : 1;                      		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned char                                      HUDMessageThreshold;                              		// 0x00CC (0x0001) [0x0000000000000000]               
	unsigned char                                      NameplateMode;                                    		// 0x00CD (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProfileGameplaySave_TA");
		}

		return uClassPointer;
	};

	bool GetMetricDefaultValue();
};

// Class TAGame.PersonaSave_TA
// 0x0030 (0x00C8 - 0x00F8)
class UPersonaSave_TA : public USaveObject_TA
{
public:
	TArray<struct FPersonaDataId>                      RecentPlayers;                                    		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned char                                      PresenceState;                                    		// 0x00D8 (0x0001) [0x0000000000000000]               
	struct FScriptDelegate                             __PresenceState__ChangeNotify;                    		// 0x00E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PersonaSave_TA");
		}

		return uClassPointer;
	};

	void __PresenceState__ChangeNotifyFunc();
	void SetRecentPlayers(TArray<struct FPersonaDataId>& Recent);
};

// Class TAGame.__GFxData_LocalPlayer_TA__HandleXPLoaded_635510D64D3380429657339378048A7D
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_LocalPlayer_TA__HandleXPLoaded_635510D64D3380429657339378048A7D : public UObject
{
public:
	class UClientXPSave_TA*                            XPSave;                                           		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_LocalPlayer_TA__HandleXPLoaded_635510D64D3380429657339378048A7D");
		}

		return uClassPointer;
	};

	void __GFxData_LocalPlayer_TA__HandleXPLoaded_635510D64D3380429657339378048A7D(class USaveData_TA* SaveData);
};

// Class TAGame.OnlineStorageSyncManager_TA
// 0x0048 (0x0060 - 0x00A8)
class UOnlineStorageSyncManager_TA : public UObject
{
public:
	class UOnlineStorageConfig_TA*                     Config;                                           		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UEOSOnlineStorageSync_TA*                    EOSOnlineStorageSync;                             		// 0x0068 (0x0008) [0x0000000000000000]               
	unsigned long                                      bDebugSyncManager : 1;                            		// 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	struct FScriptDelegate                             __EventSyncOnlinePlayerStorageStarted__Delegate;  		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSyncSuccess__Delegate;                     		// 0x0090 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineStorageSyncManager_TA");
		}

		return uClassPointer;
	};

	void __OnlineStorageSyncManager_TA__HandlePsyNetLogin_EB3BBF6A492C17A9AAEB4091C6FA29AE(class USaveGameManager_TA* Manager, class USaveData_TA* SaveData, class UError* Error);
	void __OnlineStorageSyncManager_TA__SyncOnlinePlayerStorage_E9A7F32044337C7CA4708B93172CEE4A(class UError* E);
	void OnlineStorageSyncSuccess(class UObject* RemoteObject);
	bool IsOnlinePlayerStorageSyncSuccess();
	void HandleStorageSyncSuccess();
	class UAsyncTask* SyncOnlinePlayerStorage();
	void RetrySyncOnlinePlayerStorage();
	void NotifyOnSyncOnlinePlayerStorageStarted(struct FScriptDelegate Callback);
	void SyncCloudData(class UOnlinePlayer_X* OnlinePlayer);
	void HandlePsyNetLogin(class UPsyNetConnection_X* C);
	void Unload();
	void eventConstruct();
	void EventSyncSuccess(class UOnlineStorageSyncManager_TA* OnlineStorageSyncManager);
	void EventSyncOnlinePlayerStorageStarted(class UOnlineStorageSyncManager_TA* OnlineStorageSyncManager, class UAsyncTask* SyncTask);
};

// Class TAGame.GFxData_MainMenu_TA
// 0x0050 (0x0098 - 0x00E8)
class UGFxData_MainMenu_TA : public UGFxDataSingleton_X
{
public:
	float                                              PreviewCameraRotationScale;                       		// 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       RequestedDLCName;                                 		// 0x009C (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                RequestedSubIdx;                                  		// 0x00A4 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FName                                       QueuedName;                                       		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                QueuedSubIdx;                                     		// 0x00B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FName                                       UISoundState_AudioPreview;                        		// 0x00B4 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       UISoundState_MusicPreview;                        		// 0x00BC (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       UISoundState_CurrentPreview;                      		// 0x00C4 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             ProductLoadedCallback;                            		// 0x00D0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_MainMenu_TA");
		}

		return uClassPointer;
	};

	void HandleSkillDecayed(class UGFxShell_TA* GFxShell, class ULocalPlayer_TA* LocalPlayer, class USkillDecayedEvent_TA* SkillDecayedEvent);
	void MainMenuAdded(class UGFxData_MainMenu_TA* GFxMainMenu);
	void OnEnteredMainMenu();
	void HandleTopMenuChange(struct FName PrevMenu, struct FName NewMenu);
	class UShowroomMetrics_TA* GetShowroomMetrics();
	void SetLockPreviewActor(unsigned long bLock);
	void PopCurrentSoundState();
	void PushCurrentSoundState(struct FName SoundState);
	bool SetPreviewProduct(int SlotIndex, struct FProductHashID HashID, unsigned long bUseBaseLoadout);
	void SetPreviewBaseLoadout();
	void OnRotatePreviewFinished();
	void RotatePreviewCamera(float X, float Y);
	void OnPremiumCarFinished();
	void SetPremiumCarFromBundle(struct FName PackID, int SubIdx);
	void SetPremiumDLCPack(struct FName PackID, int SubIdx);
	class UProfile_TA* GetProfile();
	void eventOnShellSet();
};

// Class TAGame.GFxData_TeamInfo_TA
// 0x0038 (0x0094 - 0x00CC)
class UGFxData_TeamInfo_TA : public UGFxDataRow_X
{
public:
	struct FString                                     TeamName;                                         		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FColor                                      TeamColor;                                        		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Score;                                            		// 0x00AC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class UTexture*                                    TeamLogo;                                         		// 0x00B0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SeriesScore;                                      		// 0x00B8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class ATeam_TA*                                    Team;                                             		// 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                Difficulty;                                       		// 0x00C8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TeamInfo_TA");
		}

		return uClassPointer;
	};

	void UpdateDifficulty();
	void HandleGameScoreUpdated(class ATeam_Soccar_TA* InTeam);
	void HandleScoreUpdated(class ATeam_TA* InTeam);
	void HandleColorsChanged(class ATeam_TA* InTeam);
	void HandleLogoChanged(class ATeam_TA* InTeam);
	void HandleNameChanged(class UTeamNameComponent_TA* InTeamName, struct FString NewName);
	void SetTeam(class ATeam_TA* InTeam);
};

// Class TAGame.GFxData_ContainerDrops_TA
// 0x0038 (0x0098 - 0x00D0)
class UGFxData_ContainerDrops_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FContainerInfo>                      ContainerDropList;                                		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UOnlineProductStoreSet_TA*                   ContainerDropsSet;                                		// 0x00A8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UAsyncTask*                                  GetDropTableTask;                                 		// 0x00B0 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventContainersUpdated__Delegate;               		// 0x00B8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ContainerDrops_TA");
		}

		return uClassPointer;
	};

	bool __GFxData_ContainerDrops_TA__HandleGetContainerDropTableResponse_FD88289D415C7731FF241FBF9DEFDE13(struct FRPCContainerDropTable D);
	int GetBlueprintSeriesID(int BlueprintProductID);
	struct FString GetPossibleContainerDrops(int ProductID);
	TArray<struct FString> GetMatchingProductSeries(int SeriesID);
	void OnContainersUpdated();
	int OnlineProductToHashInt(class UOnlineProduct_TA* OnlineProduct);
	struct FContainerInfo ContainerDropsToHashIDs(struct FRPCContainerDropTable DropTable);
	void HandleGetContainerDropTableResponse(class URPC_MicroTransactions_GetContainerDropTable_TA* RPC);
	class UOnlineProduct_TA* CreateTempOnlineProduct(struct FOnlineProductData Data);
	void GetContentDrops();
	void HandlePsyNetConnected(class UPsyNetConnection_X* C);
	void eventOnRemoved();
	void eventOnShellSet();
	void EventContainersUpdated(class UGFxData_ContainerDrops_TA* ContainerDrops);
};

// Class TAGame.GFxData_MenuStack_TA
// 0x0048 (0x0098 - 0x00E0)
class UGFxData_MenuStack_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FName>                               MenuNames;                                        		// 0x0098 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FName                                       LastButtonTriggered;                              		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventTopMenuChanged__Delegate;                  		// 0x00B0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventMenuButtonTriggered__Delegate;             		// 0x00C8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_MenuStack_TA");
		}

		return uClassPointer;
	};

	void HandleMapLoad(struct FString MapName);
	void ButtonTriggered(struct FName ButtonName);
	struct FName GetTopMenu();
	void PopMenu(struct FName MenuName);
	void PushMenu(struct FName MenuName);
	void eventOnRemoved();
	void eventOnShellSet();
	void EventMenuButtonTriggered(struct FName ButtonPress);
	void EventTopMenuChanged(struct FName PrevMenu, struct FName TopMenu);
};

// Class TAGame.SkillDecayedEvent_TA
// 0x0000 (0x0060 - 0x0060)
class USkillDecayedEvent_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SkillDecayedEvent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.EnteredMainMenu_TA
// 0x0000 (0x0060 - 0x0060)
class UEnteredMainMenu_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EnteredMainMenu_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ShowroomMetrics_TA
// 0x0000 (0x0080 - 0x0080)
class UShowroomMetrics_TA : public UMetricsGroup_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ShowroomMetrics_TA");
		}

		return uClassPointer;
	};

	void PurchaseItemInShowRoom(struct FName ItemName, int ItemIndex);
	void ViewItemInStore(struct FName ItemName, int ItemIndex);
	void ViewItemInShowroom(struct FName ItemName, int ItemIndex, int SubItemIndex);
	void ShowroomExit();
	void ShowroomEnter();
};

// Class TAGame.GFxData_DLC_TA
// 0x0038 (0x0098 - 0x00D0)
class UGFxData_DLC_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FGFxDLCData>                         Packs;                                            		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long                                      bReturningFromStore : 1;                          		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class UMtxConfig_TA*                               MtxConfig;                                        		// 0x00B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UOnlineSubsystem*                            OnlineSub;                                        		// 0x00B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UOnlinePlayerMTX_TA*                         MTX;                                              		// 0x00C0 (0x0008) [0x0000000000000000]               
	unsigned long long                                 TimeWhenClientLostFocus;                          		// 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_DLC_TA");
		}

		return uClassPointer;
	};

	unsigned long long __GFxData_DLC_TA__HandleClaimEntitlements_E1A074D344AA8A41853547A956C48240(class UOnlineProduct_TA* P);
	class UShowroomMetrics_TA* GetShowroomMetrics();
	void OnClaimedEntitlements(TArray<unsigned long long> InstanceID);
	void HandleClaimEntitlements(class UOnlinePlayerMTX_TA* InMTX, TArray<class UOnlineProduct_TA*> NewProducts);
	void HandleEntitlementsError(class UOnlinePlayerMTX_TA* InMTX, class UError* Error);
	void OnExternalUIChange(unsigned long bIsOpening);
	void CheckNewPurchases();
	void OpenStoreForDLC(struct FName Id);
	void HandleUnlockedDLCChanged();
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.GFxData_Map_TA
// 0x00B8 (0x0098 - 0x0150)
class UGFxData_Map_TA : public UGFxDataSingleton_X
{
public:
	struct FGFxMapData                                 RandomMapData;                                    		// 0x0098 (0x0038) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FGFxMapData                                 RandomStandardMapData;                            		// 0x00D0 (0x0038) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FGFxMapData>                         Data;                                             		// 0x0108 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                ActiveMapIndex;                                   		// 0x0118 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	class UTexture2D*                                  LastLoadedMapImage;                               		// 0x0120 (0x0008) [0x0000000000000000]               
	struct FName                                       RandomMapName;                                    		// 0x0128 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       RandomStandardMapName;                            		// 0x0130 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FScriptDelegate                             __EventMapListChanged__Delegate;                  		// 0x0138 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Map_TA");
		}

		return uClassPointer;
	};

	void OnLargeMapImageFailed(struct FName MapName);
	void OnLargeMapImageLoaded(class UTexture2D* Image, struct FName MapName);
	class UGameMode_TA* GetGameModeFromMapDataName(struct FName MapDataName);
	void HandleLargeMapImageLoaded(struct FMapImageLoadResult Result);
	void LoadLargeMapImage(struct FName MapName);
	int GetMapIndex(struct FName MapName);
	struct FGFxMapData CreateMapData(class UMapData_TA* Map);
	void SetMaps(TArray<struct FGFxMapData>& InData);
	void UpdateMapList(int GameModeIndex, unsigned long AddRandomOption);
	int SortFreeplayMaps(struct FGFxMapData A, struct FGFxMapData B);
	void UpdateFreeplayMapList();
	void eventOnShellSet();
	void EventMapListChanged(class UGFxData_Map_TA* Maps);
};

// Class TAGame.GFxData_OnlineMatch_TA
// 0x007C (0x0098 - 0x0114)
class UGFxData_OnlineMatch_TA : public UGFxDataSingleton_X
{
public:
	class ULocalPlayer_TA*                             TAPlayer;                                         		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProfile_TA*                                 Profile;                                          		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     NoRegionsMessage;                                 		// 0x00A8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     NotLoggedInPsynetMessage;                         		// 0x00B8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     BannedMessage;                                    		// 0x00C8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     NotPartyLeaderMsg;                                		// 0x00D8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	int                                                CountdownSeconds;                                 		// 0x00E8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UOnlineGameParty_X*                          OnlineParty;                                      		// 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     OnlineStatusError;                                		// 0x00F8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UGFxData_OnlineMatchStatus_TA*               SearchStatusData;                                 		// 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bSearching : 1;                                   		// 0x0110 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_OnlineMatch_TA");
		}

		return uClassPointer;
	};

	unsigned char GetStatusOwnerValue();
	bool IsStatusOwner();
	void ShowMatchmakingCancelOnPlaylistTimeframeExpired();
	void HandleMatchmakingError(class UOnlineGameMatchmaking_X* InMatchMaking, class UError* Error);
	void ShowMatchmakingCanceledOnPartySizeChangedError();
	void HandleMatchmakingCanceledOnPartySizeChanged(class UOnlineGameMatchmaking_X* InMatchMaking);
	void HandlePartySizeChanged(class UOnlineGameParty_X* Party, int NewSize, int OldSize);
	void HandlePartyChanged(class UOnlineGameParty_X* Party);
	void HandleRegionsSynced(class UGFxData_Regions_TA* RegionsData);
	void SetError(struct FString msg);
	void SetOnlineStatusError(struct FString NewStatusError);
	void UpdateOnlineStatus();
	struct FString GetOnlineStatusError();
	void ClearUpdateOnlineStatusTimer();
	void SetUpdateOnlineStatusTimer();
	class UOnlineGame_TA* GetOnlineGame();
	void OnProfileSet();
	void eventOnRemoved();
	void eventOnShellSet();
	void CancelSearch();
};

// Class TAGame.GFxData_OnlineMatchStatus_TA
// 0x0040 (0x0098 - 0x00D8)
class UGFxData_OnlineMatchStatus_TA : public UGFxDataSingleton_X
{
public:
	unsigned long                                      bSearching : 1;                                   		// 0x0098 (0x0004) [0x0000000040002000] [0x00000001] (CPF_Transient | CPF_EditInlineNotify)
	struct FName                                       SearchState;                                      		// 0x009C (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	struct FString                                     SavedSearchingString;                             		// 0x00A8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned char                                      StatusOwner;                                      		// 0x00B8 (0x0001) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	class UOnlineGameParty_X*                          OnlineParty;                                      		// 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     PartyLeaderSearchingMessage;                      		// 0x00C8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_OnlineMatchStatus_TA");
		}

		return uClassPointer;
	};

	struct FString GetSearchStrings();
	void SaveSearchString(struct FString NewString);
	void SetWarning(struct FString msg);
	void OnCountdownEnded();
	void OnCountdownStarted(int SecondsRemaining);
	void OnClearMessages();
	void OnSearchError(struct FString Message);
	void OnSearchMessage(struct FString Message, unsigned char MessageType);
	void OnFindGameComplete();
	class UOnlineGame_X* GetOnlineGame();
	void HandleCountdownEnded();
	void HandleCountdownStarted();
	void HandlePartyJoinGameError(class UOnlineGameParty_X* Party, struct FString LocalizedErrorString);
	void HandleFindGameWarning(struct FString Message);
	void SetError(struct FString msg);
	void SetStatus(struct FString msg);
	void HandleFindGameComplete(unsigned long bCancelled);
	void HandleFindGameStatusChanged(struct FString NewStatus);
	void SetSearching(unsigned long bNewSearching, unsigned char NewOwner);
	void SetSearchState(struct FName NewState);
	void SetPartyLeaderSearchingMessage();
	void HandlePartySizeChanged(class UOnlineGameParty_X* Party, int NewSize, int OldSize);
	void HandleJoinGameComplete(unsigned long bSuccess, struct FString FailReason);
	void HandlePartySearchStatus(class UOnlineGameParty_X* Party, class UPartyMessage_SearchStatus_X* StatusMessage);
	void SetStatusOwner(unsigned char NewOwner);
	void eventOnShellSet();
};

// Class TAGame.GFxData_Regions_TA
// 0x0038 (0x0098 - 0x00D0)
class UGFxData_Regions_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FGFxRegion>                          SuperRegions;                                     		// 0x0098 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FGFxRegion>                          Regions;                                          		// 0x00A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventRegionsSynced__Delegate;                   		// 0x00B8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Regions_TA");
		}

		return uClassPointer;
	};

	TArray<struct FGFxRegion> SelectRegions(TArray<struct FString> SelectedRegions);
	void NotifyWhenSynced(struct FScriptDelegate Callback);
	void HandleRegionsSynced(class UOnlineGameRegions_X* RegionsObj);
	void eventOnShellSet();
	void EventRegionsSynced(class UGFxData_Regions_TA* RegionsData);
};

// Class TAGame.OnlineGame_TA
// 0x0020 (0x0290 - 0x02B0)
class UOnlineGame_TA : public UOnlineGame_X
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0290 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UOnlineGameTourMatchmaking_TA*               TourMatchmaking;                                  		// 0x0298 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPersonas_TA*                                Personas;                                         		// 0x02A0 (0x0008) [0x0000000000000000]               
	class UClubPersonas_TA*                            ClubPersonas;                                     		// 0x02A8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineGame_TA");
		}

		return uClassPointer;
	};

	void OnMainMenuOpened();
	void OnInit();
};

// Class TAGame.GFxData_Matchmaking_TA
// 0x00CC (0x0114 - 0x01E0)
class UGFxData_Matchmaking_TA : public UGFxData_OnlineMatch_TA
{
public:
	struct FString                                     NoPlaylistSelectedMessage;                        		// 0x0118 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     NoRegionSelectedMessage;                          		// 0x0128 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     PartyTooBigMessage;                               		// 0x0138 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     LeavePenaltyMessage;                              		// 0x0148 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     PartySkillTooDistant;                             		// 0x0158 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     PartyMemberNotOriginalAppOwner;                   		// 0x0168 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     PartyMemberNotLoggedIn;                           		// 0x0178 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	TArray<struct FGFxRegion>                          Regions;                                          		// 0x0188 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                TotalPopulation;                                  		// 0x0198 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      MatchmakingViewTab;                               		// 0x019C (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bRankedPlaylistsEnabled : 1;                      		// 0x01A0 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bMultiSelectEnabled : 1;                          		// 0x01A0 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	int                                                SeasonEndDays;                                    		// 0x01A4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SeasonEndHours;                                   		// 0x01A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SeasonEndMinutes;                                 		// 0x01AC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class UMatchmakingSettingsSave_TA*                 MatchmakingSave;                                  		// 0x01B0 (0x0008) [0x0000000000000000]               
	TArray<struct FMessageUpdate>                      MessageUpdates;                                   		// 0x01B8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	int                                                CurrentMessageUpdateIndex;                        		// 0x01C8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class URankedConfig_X*                             RankedConfig;                                     		// 0x01D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMatchmakingViewFilters_TA*                  TabFilters;                                       		// 0x01D8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Matchmaking_TA");
		}

		return uClassPointer;
	};

	void __GFxData_Matchmaking_TA__OnShellSet_A56EE44D49D31C79ADB4CEA315C89A83(unsigned long _);
	void UpdateSelectedRegions();
	void UpdateSeasonTimeRemaining();
	void HandleDisableCrossPlayChange(class UOnlineGameParty_X* PartyObject);
	unsigned char GetStatusOwnerValue();
	void CancelSearch();
	void CancelNextDisplayMessage();
	void DisplayNextMessage();
	void AddMessageUpdate(int DelayFromStart, struct FString MessageKey);
	void PopulateMessageUpdates();
	TArray<struct FName> GetAccessiblePlaylists();
	void StartMatchmaking(int ForcedPlaylistID);
	bool IsRankedView(unsigned char Tab);
	void SetMatchmakingViewTab(unsigned char InMatchmakingViewTab);
	void SetRegionSelection(int Row, unsigned long bSelected);
	void DeselectAllRegions();
	void HandleRegionsSynced(class UGFxData_Regions_TA* RegionsData);
	void SetPlaylistSelection(int Row, unsigned long bSelected);
	void DeselectAllRankedPlaylists();
	void HandleRankedConfigChanged();
	void InitPlaylists();
	void HandleGetPlaylistPopulations(class UOnlineGamePopulation_X* Population);
	void UpdatePopulation();
	void ToggleMultiSelectMode();
	void SetViewingMatchmaking(unsigned long bViewingMatchmaking);
	int GetMaxTeamSize();
	bool GetNotLoggedInPartyRestrictionError(struct FString& OutError);
	bool GetCompetitivePartyRestrictionError(struct FString& OutError);
	struct FString GetOnlineStatusError();
	void HandleMatchmakingSaveLoaded(class UMatchmakingSettingsSave_TA* InMatchmakingSave);
	void eventOnShellSet();
};

// Class TAGame.MatchmakingViewFilters_TA
// 0x0070 (0x0060 - 0x00D0)
class UMatchmakingViewFilters_TA : public UObject
{
public:
	class UIMatchmakingViewFilter_TA*                  Filters[0x7] ;                                    		// 0x0060 (0x0070) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x38];                              		// 0x0098 (0x0038) FIX WRONG SIZE OF PREVIOUS PROPERTY
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchmakingViewFilters_TA");
		}

		return uClassPointer;
	};

	TArray<struct FName> GetAccessiblePlaylists(unsigned char ViewTab, TArray<struct FName>& SelectedPlaylists);
	void eventConstruct();
};

// Class TAGame.MatchmakingSettingsSave_TA
// 0x002C (0x00C8 - 0x00F4)
class UMatchmakingSettingsSave_TA : public USaveObject_TA
{
public:
	unsigned char                                      MatchmakingViewTab;                               		// 0x00C8 (0x0001) [0x0000000000000000]               
	TArray<struct FName>                               QuickMatchPlaylists;                              		// 0x00D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FString>                             QuickMatchRegions;                                		// 0x00E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long                                      bMultiSelectEnabled : 1;                          		// 0x00F0 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchmakingSettingsSave_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_Playlist_TA
// 0x00A4 (0x0094 - 0x0138)
class UGFxData_Playlist_TA : public UGFxDataRow_X
{
public:
	class UGameSettingPlaylist_X*                      Playlist;                                         		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                Id;                                               		// 0x00A0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     KeyName;                                          		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     FriendlyName;                                     		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Description;                                      		// 0x00C8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                TeamSize;                                         		// 0x00D8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bStandardMatch : 1;                               		// 0x00DC (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bRanked : 1;                                      		// 0x00DC (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bSolo : 1;                                        		// 0x00DC (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bSelected : 1;                                    		// 0x00DC (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	unsigned long                                      bEnabled : 1;                                     		// 0x00DC (0x0004) [0x0000000040000000] [0x00000010] (CPF_EditInlineNotify)
	unsigned long                                      bRestricted : 1;                                  		// 0x00DC (0x0004) [0x0000000040000000] [0x00000020] (CPF_EditInlineNotify)
	unsigned long                                      bNew : 1;                                         		// 0x00DC (0x0004) [0x0000000040000000] [0x00000040] (CPF_EditInlineNotify)
	unsigned long                                      bIsMicroEventPlaylist : 1;                        		// 0x00DC (0x0004) [0x0000000040000000] [0x00000080] (CPF_EditInlineNotify)
	unsigned long                                      bTournament : 1;                                  		// 0x00DC (0x0004) [0x0000000040000000] [0x00000100] (CPF_EditInlineNotify)
	unsigned long                                      bCompletedPlacementMatches : 1;                   		// 0x00DC (0x0004) [0x0000000040000000] [0x00000200] (CPF_EditInlineNotify)
	unsigned long                                      bPlaylistAllowsStayAsParty : 1;                   		// 0x00DC (0x0004) [0x0000000040000000] [0x00000400] (CPF_EditInlineNotify)
	unsigned long                                      bUndersizedPartyWithRankDisparity : 1;            		// 0x00DC (0x0004) [0x0000000040000000] [0x00000800] (CPF_EditInlineNotify)
	unsigned long                                      bIsTimeRestricted : 1;                            		// 0x00DC (0x0004) [0x0000000040000000] [0x00001000] (CPF_EditInlineNotify)
	class UTexture*                                    PlaylistBackgroundTexture;                        		// 0x00E0 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	class UTexture*                                    PlaylistIconActiveTexture;                        		// 0x00E8 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	class UTexture*                                    PlaylistIconInactiveTexture;                      		// 0x00F0 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	unsigned char                                      PlayerCountBucket;                                		// 0x00F8 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SkillTier;                                        		// 0x00FC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SkillDivision;                                    		// 0x0100 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SkillMatchesPlayed;                               		// 0x0104 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SkillPlacementMatchesPlayed;                      		// 0x0108 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	float                                              SkillMMR;                                         		// 0x010C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                PrevSkillTier;                                    		// 0x0110 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                PrevSkillDivision;                                		// 0x0114 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                XPLevelUnlocked;                                  		// 0x0118 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                MaximumRankDisparity;                             		// 0x011C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 StartTime;                                        		// 0x0120 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 EndTime;                                          		// 0x0128 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	class UMicroEventConfig_TA*                        MicroEventConfig;                                 		// 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Playlist_TA");
		}

		return uClassPointer;
	};

	void __GFxData_Playlist_TA__SetPlaylist_7312CC9F451F83E2F0A4A797665FC7CC(class ULocalPlayer* LocalPlayer);
	void __GFxData_Playlist_TA__SetPlaylist_C49EACE94A9482B78B2D14BDA53A4F27(class UOnlineGameParty_X* Party, struct FUniqueNetId MemberId);
	void __GFxData_Playlist_TA__SetPlaylist_B240C3A74994D4AA5C3114AD0B7CC2A0(class UOnlineGameParty_X* Party, struct FUniqueNetId NewLeader);
	void __GFxData_Playlist_TA__SetPlaylist_0DB1B6F445B08BDA9BE091A0B1624FA4(class UOnlineGameParty_X* Party, struct FUniqueNetId MemberId);
	void __GFxData_Playlist_TA__DownloadPlaylistImages_3AFB57DE46A01FC699216487F7C4D1C0(class UTexture2DDynamic* IconTexture);
	void __GFxData_Playlist_TA__DownloadPlaylistImages_9BDA491C464E62F33360BFA80EBB200D(class UTexture2DDynamic* IconTexture);
	void __GFxData_Playlist_TA__DownloadPlaylistImages_1676AD2645ECCE658C65D596CCBF240C(class UTexture2DDynamic* BackgroundTexture);
	void UpdatePlaylistTimeWindow();
	void UpdateUndersizedParty();
	void UpdateSkillData();
	void HandleSkillUpdateOnGameJoin(unsigned long bSuccess, struct FString FailReason);
	void SetPlayerCount(int Count);
	void SetMicroEventImage();
	void HandleMicroEventChanged(class UMicroEventConfig_TA* InMicroEventConfig);
	void DownloadPlaylistImages();
	void SetPlaylist(class UGameSettingPlaylist_X* InPlaylist);
	class UOnlineGameParty_X* GetOnlineGameParty();
	class UOnlineGameSkill_X* GetOnlineGameSkill();
};

// Class TAGame.ViewingMatchmaking_TA
// 0x0000 (0x0060 - 0x0060)
class UViewingMatchmaking_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ViewingMatchmaking_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_MusicPlayer_TA
// 0x0110 (0x0098 - 0x01A8)
class UGFxData_MusicPlayer_TA : public UGFxDataSingleton_X
{
public:
	class UMusicUrlConfig_TA*                          UrlConfig;                                        		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bDebugMusicPlayer : 1;                            		// 0x00A0 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bPlaylistsEnabled : 1;                            		// 0x00A0 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bEnableMusicControls : 1;                         		// 0x00A0 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bPlayerPopupDisplaying : 1;                       		// 0x00A0 (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	unsigned long                                      bActivePlaylistsEnabled : 1;                      		// 0x00A0 (0x0004) [0x0000000040000000] [0x00000010] (CPF_EditInlineNotify)
	unsigned long                                      bTitleTracksActive : 1;                           		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	TArray<struct FGFxMusicPlaylist>                   DefaultPlaylists;                                 		// 0x00A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FGFxMusicPlaylist>                   Playlists;                                        		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     TrackTitle;                                       		// 0x00C8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     TrackArtist;                                      		// 0x00D8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UTexture*                                    TrackIcon;                                        		// 0x00E8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     TrackUrl;                                         		// 0x00F0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	float                                              StartupLogoDisplayDurationMS;                     		// 0x0100 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     CurrentTrackName;                                 		// 0x0108 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                CurrentTrackPlayingID;                            		// 0x0118 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UMusicTrack_TA*                              CurrentTrack;                                     		// 0x0120 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<struct FPlaylistTrack>                      MasterTracklist;                                  		// 0x0128 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UIMusicTracklist_TA*                         ActiveTracklist;                                  		// 0x0138 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0140 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
	class UMusicTracklistFactory_TA*                   TracklistFactory;                                 		// 0x0148 (0x0008) [0x0000000000000000]               
	class UMusicTracklistBuildStep_RemoveTrack_TA*     MainRotationTracklistBuilder;                     		// 0x0150 (0x0008) [0x0000000000000000]               
	class UMusicTheme_TA*                              MusicTheme;                                       		// 0x0158 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMusicPlayerSave_TA*                         MusicSave;                                        		// 0x0160 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGameplayMusicPlayer_TA*                     GameMusicPlayer;                                  		// 0x0168 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStreamerSafeConfig_TA*                      StreamerSafeConfig;                               		// 0x0170 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventTrackFinished__Delegate;                   		// 0x0178 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __CurrentTrackName__ChangeNotify;                 		// 0x0190 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_MusicPlayer_TA");
		}

		return uClassPointer;
	};

	void __GFxData_MusicPlayer_TA__OnShellSet_2F61D0EA46798077511910A802832FB8(class UMusicThemeConfig_TA* InConfig);
	void __GFxData_MusicPlayer_TA__OnShellSet_F6CCF2664EB101E532397DA8C6199A69(class UMusicUrlConfig_TA* InConfig);
	void __GFxData_MusicPlayer_TA__OnShellSet_8A27EB8E4581747E151BAAAEE529EF44(class UMusicTrack_TA* _);
	void __GFxData_MusicPlayer_TA__StreamerSafeConfigChanged_9D885BA74E0F7765680474ABD1A27830();
	struct FPlaylistTrack __GFxData_MusicPlayer_TA__HandleThemeChange_E757D074471D19BF6A990A86A87B0C70(struct FPlaylistTitleTrack X);
	void __GFxData_MusicPlayer_TA__HandleThemeChange_0A2BE1694EA24C86AC893EBE0D2BDA91();
	class UAkSoundCue* __GFxData_MusicPlayer_TA__HandleThemeChange_80BCE25A43F6ADFC61DA7286C25234ED(struct FPlaylistTitleTrack P);
	class UAkSoundCue* __GFxData_MusicPlayer_TA__HandleThemeChange_7CFF706F428C5B148449D9A29E516762(struct FPlaylistTitleTrack P);
	bool __GFxData_MusicPlayer_TA__HandleSaveDataLoaded_05DED9644287E34DDB2CE2ABFAD78FF6(struct FGFxMusicPlaylist P);
	void __GFxData_MusicPlayer_TA__HandleSaveDataLoaded_C9CAB78E42E134FB6B0F10BA06AE77EA(struct FPlaylistState P);
	void __GFxData_MusicPlayer_TA__SetPlaylistSelected_13DB639147E02C2C219820A61EF486D4(class UGFxModal_X* _);
	bool __GFxData_MusicPlayer_TA__SetPlaylistSelected_45CF55954A161039C14ADBAC648840FD(struct FPlaylistTrack Pt);
	TArray<struct FPlaylistTrack> __GFxData_MusicPlayer_TA__BuildMasterTracklist_CD19FF87453B6DF96DA8C7AC77263FF4(struct FGFxMusicPlaylist P);
	bool __GFxData_MusicPlayer_TA__BuildMasterTracklist_CF5BEDB24C9857DA32D332A8A12BA91E(struct FGFxMusicPlaylist P);
	void __CurrentTrackName__ChangeNotifyFunc();
	void UpdateTrackUrl();
	void PopLoadingScreenUIState();
	void PushLoadingScreenUIState();
	void HandleMusicPlayerStateChanged(class UGameplayMusicPlayer_TA* InGameMusicPlayer, unsigned char NewState);
	void GoToUrl();
	void HandlePlaylistsToggled(class UPlayerInput_X* PlayerInput, struct FName ActionName, unsigned long bEnabled);
	TArray<struct FPlaylistTrack> BuildMasterTracklist(TArray<struct FGFxMusicPlaylist>& InGFxPlaylists);
	void ValidateCurrentTrack();
	void SetPlaylistSelected(int Row, unsigned long bSelected);
	class UMusicMetrics_TA* GetMetrics();
	void HandleTrackEnd(int PlayingID);
	void HandleTrackStart(int PlayingID, struct FString FileMarker);
	void PlayKonamiTheme();
	void StopCurrentTrack();
	void OnTogglePlaylistSelection();
	void TogglePlaylistSelection();
	void RebuildActiveTracklist();
	void NextTrack();
	void PlayCreditsTheme();
	void SetPlaylistSelectedByName(struct FName PlaylistName, unsigned long bSelected);
	class UIMusicTracklist_TA* BuildTracklist(TArray<struct FPlaylistTrack>& InTracklist);
	void HandleSaveDataLoaded(class UMusicPlayerSave_TA* InMusicSave);
	void PlayMusicTrack(class UMusicTrack_TA* Track);
	class UMusicTrack_TA* PlaylistTrackToMusicTrack(struct FPlaylistTrack Pt);
	TArray<struct FGFxMusicPlaylist> MergePlaylists(TArray<struct FGFxMusicPlaylist>& OldPlaylists, TArray<struct FGFxMusicPlaylist>& NewPlaylists);
	struct FGFxMusicPlaylist PlaylistToGFxData(class UMusicPlaylist_TA* P);
	void HandleThemeChange(class UMusicTheme_TA* InTheme);
	void RebuildMasterTracklist();
	void StreamerSafeConfigChanged();
	void eventOnRemoved();
	void eventOnShellSet();
	void EventTrackFinished();
};

// Class TAGame.MusicThemeConfig_TA
// 0x0008 (0x0078 - 0x0080)
class UMusicThemeConfig_TA : public UOnlineConfig_X
{
public:
	class UMusicTheme_TA*                              Theme;                                            		// 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MusicThemeConfig_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.MusicTheme_TA
// 0x0060 (0x0060 - 0x00C0)
class UMusicTheme_TA : public UObject
{
public:
	TArray<class UMusicPlaylist_TA*>                   Playlists;                                        		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FPlaylistTitleTrack>                 TitleTracks;                                      		// 0x0070 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UAkSoundCue*                                 NeverPlayInFirstTracklist;                        		// 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FPlaylistTrack                              Credits;                                          		// 0x0088 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FPlaylistTrack                              KonamiCode;                                       		// 0x0098 (0x0010) [0x0000000000000001] (CPF_Edit)    
	class UTexture*                                    DefaultIcon;                                      		// 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FPlaylistTrack>                      AdditionalTracks;                                 		// 0x00B0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MusicTheme_TA");
		}

		return uClassPointer;
	};

	class UMusicTheme_TA* ApplyIcons();
};

// Class TAGame.GameplayMusicPlayer_TA
// 0x0080 (0x0060 - 0x00E0)
class UGameplayMusicPlayer_TA : public UObject
{
public:
	class UMusicPlayerSave_TA*                         MusicSave;                                        		// 0x0060 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AGameEvent_TA*                               CurrentGameEvent;                                 		// 0x0068 (0x0008) [0x0000000000000000]               
	unsigned long                                      bMuted : 1;                                       		// 0x0070 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FName                                       LoadingScreenState;                               		// 0x0074 (0x0008) [0x0000000000000000]               
	struct FName                                       CurrentPlaylist;                                  		// 0x007C (0x0008) [0x0000000000000000]               
	unsigned char                                      MusicPlayerState;                                 		// 0x0084 (0x0001) [0x0000000000000000]               
	struct FName                                       LoadingScreenStateGroup;                          		// 0x0088 (0x0008) [0x0000000000000000]               
	struct FName                                       LoadingScreenState_MusicEnabled;                  		// 0x0090 (0x0008) [0x0000000000000000]               
	struct FName                                       LoadingScreenState_MusicDisabled;                 		// 0x0098 (0x0008) [0x0000000000000000]               
	struct FName                                       LoadingScreenState_None;                          		// 0x00A0 (0x0008) [0x0000000000000000]               
	struct FName                                       GameplayMusicStateGroup;                          		// 0x00A8 (0x0008) [0x0000000000000000]               
	struct FName                                       GameplayMusicState_Enabled;                       		// 0x00B0 (0x0008) [0x0000000000000000]               
	struct FName                                       GameplayMusicState_Disabled;                      		// 0x00B8 (0x0008) [0x0000000000000000]               
	struct FName                                       GameplayMusicState_None;                          		// 0x00C0 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventStateChanged__Delegate;                    		// 0x00C8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameplayMusicPlayer_TA");
		}

		return uClassPointer;
	};

	void HandleEventDestroyed(class AGameEvent_TA* GameEvent);
	void HandleMatchTypeSet(class AGameEvent_TA* GameEvent);
	void HandleLoadingMovieClosed();
	void HandleGameEventChanged();
	void HandlePrimaryPlayerChanged(class UOnlineGameAccount_X* InAccount, struct FUniqueNetId PlayerID);
	void SetLoadingScreenState(struct FName InState);
	struct FName GetLoadingScreenState(unsigned long bIsLoadingMainMenu);
	void UpdateLoadingScreenState(struct FString MapName);
	void UpdateBGM();
	void BroadcastStateChange();
	void SetState(unsigned char InState);
	bool IsMainMenu();
	bool IsTrainingMatch(class UMatchType_TA* MatchType);
	bool IsReplay();
	bool IsActiveForMatchType(class UMatchType_TA* MatchType);
	unsigned char GetPlaylistType(class UGameSettingPlaylist_X* Playlist);
	void SetMuted(unsigned long bInMuted);
	void SetMusicSave(class UMusicPlayerSave_TA* InMusicSave);
	bool IsPlayingMusic();
	void RegisterLoadingScreenCallbacks();
	void eventConstruct();
	void EventStateChanged(class UGameplayMusicPlayer_TA* GameplayMusicPlayer, unsigned char NewState);
};

// Class TAGame.MusicTracklistBuildStep_RemoveTrack_TA
// 0x0018 (0x0060 - 0x0078)
class UMusicTracklistBuildStep_RemoveTrack_TA : public UObject
{
public:
	class UIMusicTracklistBuilder*                     Source;                                           		// 0x0060 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0068 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
	class UAkSoundCue*                                 TrackToRemove;                                    		// 0x0070 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MusicTracklistBuildStep_RemoveTrack_TA");
		}

		return uClassPointer;
	};

	class UMusicTracklist_TA* CreateMusicTracklist(TArray<class UMusicTrack_TA*> Tracks);
};

// Class TAGame.IMusicTracklistBuilder
// 0x0000 (0x0060 - 0x0060)
class UIMusicTracklistBuilder : public UInterface
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IMusicTracklistBuilder");
		}

		return uClassPointer;
	};

	class UMusicTracklist_TA* CreateMusicTracklist(TArray<class UMusicTrack_TA*> Tracks);
};

// Class TAGame.MusicTracklistBuildStep_RemoveStreamerUnsafeTracks_TA
// 0x0018 (0x0060 - 0x0078)
class UMusicTracklistBuildStep_RemoveStreamerUnsafeTracks_TA : public UObject
{
public:
	class UIMusicTracklistBuilder*                     Source;                                           		// 0x0060 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0068 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
	class UStreamerSafeConfig_TA*                      Config;                                           		// 0x0070 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MusicTracklistBuildStep_RemoveStreamerUnsafeTracks_TA");
		}

		return uClassPointer;
	};

	bool __MusicTracklistBuildStep_RemoveStreamerUnsafeTracks_TA__CreateMusicTracklist_C76528CD44DD76BCBA90528ECD6BD70B(class UMusicTrack_TA* Track);
	class UMusicTracklist_TA* CreateMusicTracklist(TArray<class UMusicTrack_TA*> Tracks);
};

// Class TAGame.MusicTracklistBuildStep_ShuffleTracks_TA
// 0x0010 (0x0060 - 0x0070)
class UMusicTracklistBuildStep_ShuffleTracks_TA : public UObject
{
public:
	class UIMusicTracklistBuilder*                     Source;                                           		// 0x0060 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0068 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MusicTracklistBuildStep_ShuffleTracks_TA");
		}

		return uClassPointer;
	};

	class UMusicTracklist_TA* CreateMusicTracklist(TArray<class UMusicTrack_TA*> Tracks);
};

// Class TAGame.MusicTracklistBuildStep_CreateDefault_TA
// 0x0000 (0x0060 - 0x0060)
class UMusicTracklistBuildStep_CreateDefault_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MusicTracklistBuildStep_CreateDefault_TA");
		}

		return uClassPointer;
	};

	class UMusicTracklist_TA* CreateMusicTracklist(TArray<class UMusicTrack_TA*> Tracks);
};

// Class TAGame.MusicTracklistFactory_TA
// 0x0030 (0x0060 - 0x0090)
class UMusicTracklistFactory_TA : public UObject
{
public:
	class UMusicTracklistNull_TA*                      TracklistNull;                                    		// 0x0060 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UIMusicTracklistBuilder*                     TracklistBuilder;                                 		// 0x0068 (0x0010) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      UnknownData00[0x8];                               		// 0x0070 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
	struct FScriptDelegate                             LastTrackAction;                                  		// 0x0078 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MusicTracklistFactory_TA");
		}

		return uClassPointer;
	};

	class UIMusicTracklist_TA* CreateTracklist(TArray<class UMusicTrack_TA*> InTracklist);
};

// Class TAGame.MusicUrlConfig_TA
// 0x0010 (0x0078 - 0x0088)
class UMusicUrlConfig_TA : public UOnlineConfig_X
{
public:
	TArray<struct FMusicConfigTrack>                   Tracks;                                           		// 0x0078 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MusicUrlConfig_TA");
		}

		return uClassPointer;
	};

	struct FString GetTrackUrl(struct FName TrackName);
};

// Class TAGame.MusicPlaylist_TA
// 0x001C (0x0060 - 0x007C)
class UMusicPlaylist_TA : public UObject
{
public:
	TArray<struct FPlaylistTrack>                      Tracks;                                           		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UTexture*                                    Icon;                                             		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bDefaultSelected : 1;                             		// 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MusicPlaylist_TA");
		}

		return uClassPointer;
	};

	struct FString GetTitle();
};

// Class TAGame.ArenaSoundManager_TA
// 0x00BC (0x00A4 - 0x0160)
class UArenaSoundManager_TA : public UActorComponent_X
{
public:
	class UAkSoundCue*                                 DefaultInGameMusicCue;                            		// 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 TrainingRoundEndCue;                              		// 0x00B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 ArenaMusicReplayStopCue;                          		// 0x00B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UArenaSoundSettings_TA*                      Settings;                                         		// 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AArenaSoundPlayer_TA*                        SoundPlayer;                                      		// 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bMatchBegan : 1;                                  		// 0x00D0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class AGameEvent_Soccar_TA*                        SoccarGame;                                       		// 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UArenaReflectionsManager_TA*                 ReflectionsManager;                               		// 0x00E0 (0x0008) [0x0000000000000000]               
	class UAkSoundCue*                                 GoalScoreStinger;                                 		// 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProductAsset_MusicStingers_TA*              ActiveStinger;                                    		// 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UArenaSoundConfig_TA*                        Config;                                           		// 0x00F8 (0x0008) [0x0000000000000000]               
	class UStreamerSafeConfig_TA*                      StreamerSafeConfig;                               		// 0x0100 (0x0008) [0x0000000000000000]               
	class UArenaSoundEvent_TA*                         NextTimedEvent;                                   		// 0x0108 (0x0008) [0x0000000000000000]               
	int                                                TimedEventPlayingID;                              		// 0x0110 (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             __EventReflectionsManagerSet__Delegate;           		// 0x0118 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventActiveStingerUpdated__Delegate;            		// 0x0130 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventAnthemSoundStateUpdated__Delegate;         		// 0x0148 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ArenaSoundManager_TA");
		}

		return uClassPointer;
	};

	void __ArenaSoundManager_TA__StreamerSafeConfigChanged_014055474ECC187E233A8BB77241E6BC();
	void __ArenaSoundManager_TA__RegisterGameEventCallbacks_24ED9C8D44A046B61EFF5DBD9A0DF90B(class AGameEvent_TA* G, class ACar_TA* C);
	void ClearBallExplodeState();
	void HandleBallExploded(class ABall_TA* Ball);
	void HandlePostTimeSkip(class UReplay_TA* Replay);
	bool IsFreeplay();
	bool IsTraining();
	bool IsReplay();
	void HandleStatTickerMessage(class APRI_TA* Receiver, class APRI_TA* Victim, class UStatEvent_TA* StatEvent);
	void HandlePlayerScored(class AGameEvent_Soccar_TA* GameEvent, class APRI_TA* Scorer);
	void UpdateActiveMusicStinger(class APRI_TA* Player);
	void UpdateReverbEnvironments();
	void UpdateSoundScoreStatus();
	void UpdateAnthemSoundState(unsigned long bIsPlaying);
	void UpdateSoundGameMode();
	void UpdateSoundState();
	void HandleMusicPlayerStateChanged(class UGameplayMusicPlayer_TA* InGameMusicPlayer, unsigned char NewState);
	void InitBackgroundMusic();
	void HandleCountdownTimeUpdated(class AGameEvent_TA* InGameEvent, int Seconds);
	void HandleGameTimeUpdated(class AGameEvent_Soccar_TA* InGameEvent);
	void MusicEventEnd();
	bool IsMusicEventActive();
	void StopEventMusic();
	void MusicEventStart();
	void StopInGameMusic();
	void StartInGameMusic();
	void HandleMatchWinnerSet(class AGameEvent_Soccar_TA* InGameEvent);
	void ResetAnthemAudio();
	void StopAllStingers();
	void StopGoalScoredStinger();
	void PlayGoalScoredStinger();
	void PlayGoalScoredSounds();
	void PlayMutableMusicStinger(class UAkSoundCue* Stinger);
	void PlayMusicStinger(class UAkSoundCue* Stinger);
	bool IsSoundtrackOn();
	void HandleMusicStingersSettingChanged();
	bool IsStreamerSafe(class UProductAsset_MusicStingers_TA* MusicStinger);
	bool IsMusicStingersActive();
	void HandleOvertimeUpdated(class AGameEvent_Soccar_TA* InGameEvent);
	void HandleStatEvent(class AGameEvent_Soccar_TA* InGameEvent, class UStatEvent_TA* StatEvent);
	void HandleGameStateChanged(class AGameEvent_TA* InGameEvent);
	void PlaySound(class UAkSoundCue* Sound);
	void HandlePylonSet();
	void HandleConfigChanged();
	void RegisterGameEventCallbacks(class AGameEvent_Soccar_TA* InSoccarGame);
	void StreamerSafeConfigChanged();
	void eventDetached();
	void eventAttached();
	bool ShouldAttach();
	void EventAnthemSoundStateUpdated(unsigned long bSoundState);
	void EventActiveStingerUpdated(class UProductAsset_MusicStingers_TA* Stinger);
	void EventReflectionsManagerSet(class UArenaReflectionsManager_TA* NewReflectionsManager);
};

// Class TAGame.MusicMetrics_TA
// 0x0014 (0x0080 - 0x0094)
class UMusicMetrics_TA : public UMetricsGroup_X
{
public:
	struct FName                                       TrackName;                                        		// 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              TrackStartTime;                                   		// 0x0088 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                TrackSequence;                                    		// 0x008C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              PendingMusicVolume;                               		// 0x0090 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MusicMetrics_TA");
		}

		return uClassPointer;
	};

	float GetMusicVolume();
	void PlaylistSelected(struct FName Playlist, unsigned long bSelected);
	void TrackSkip(struct FName Track, int Sequence, float Duration, float Volume);
	void RecordTrackSkip();
	void TrackEnd(struct FName Track, int Sequence, float Volume);
	void RecordTrackEnd();
	void TrackStart(struct FName Track, int Sequence, float Volume);
	void RecordTrackStart(class UAkSoundCue* Cue);
};

// Class TAGame.MusicTrack_TA
// 0x0028 (0x0060 - 0x0088)
class UMusicTrack_TA : public UObject
{
public:
	class UAkSoundCue*                                 Cue;                                              		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTexture*                                    Icon;                                             		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FScriptDelegate                             __NextTrackAction__Delegate;                      		// 0x0070 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MusicTrack_TA");
		}

		return uClassPointer;
	};

	void NextTrackAction(class UMusicTrack_TA* Track);
};

// Class TAGame.MusicPlayerSave_TA
// 0x0060 (0x00C8 - 0x0128)
class UMusicPlayerSave_TA : public USaveObject_TA
{
public:
	TArray<struct FPlaylistState>                      PlaylistsUpdate22;                                		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned char                                      GameplayMusicSetting;                             		// 0x00D8 (0x0001) [0x0000000000000000]               
	unsigned long                                      bPlayMusicInMenu : 1;                             		// 0x00DC (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bPlayMusicInTraining : 1;                         		// 0x00DC (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bPlayMusicInGame : 1;                             		// 0x00DC (0x0004) [0x0000000000000000] [0x00000004] 
	struct FScriptDelegate                             __bPlayMusicInMenu__ChangeNotify;                 		// 0x00E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bPlayMusicInTraining__ChangeNotify;             		// 0x00F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bPlayMusicInGame__ChangeNotify;                 		// 0x0110 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MusicPlayerSave_TA");
		}

		return uClassPointer;
	};

	void __MusicPlayerSave_TA__GetVersionDelegates_762FBA9545192B3ABD4859B2470F01CF(class UObject* SaveObj);
	void __bPlayMusicInGame__ChangeNotifyFunc();
	void __bPlayMusicInTraining__ChangeNotifyFunc();
	void __bPlayMusicInMenu__ChangeNotifyFunc();
	void GetVersionDelegates(TArray<struct FScriptDelegate>& VersionDelegates);
	bool IsModified();
	TArray<struct FPlaylistState> GetPlaylists();
	void SetSelected(struct FName Playlist, unsigned long bEnabled);
	void OnCreate();
};

// Class TAGame.StreamerSafeConfig_TA
// 0x0048 (0x0078 - 0x00C0)
class UStreamerSafeConfig_TA : public UOnlineConfig_X
{
public:
	TArray<struct FStreamerSafeSoundCue>               StaticDataOverrides;                              		// 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UStreamerSafeAudio_TA*                       DefaultSoundCues;                                 		// 0x0088 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<class UAkSoundCue*>                         OfficialSoundCues;                                		// 0x0090 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long                                      bPlayerSettingEnabled : 1;                        		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	struct FScriptDelegate                             __bPlayerSettingEnabled__ChangeNotify;            		// 0x00A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StreamerSafeConfig_TA");
		}

		return uClassPointer;
	};

	class UAkSoundCue* __StreamerSafeConfig_TA__Apply_9FB1352748F2DFAE24C0428AFFA68C37(struct FStreamerSafeSoundCue Track);
	bool __StreamerSafeConfig_TA__Apply_B92C5B4F46E40077E8499B946EC4283E(struct FStreamerSafeSoundCue Track);
	class UAkSoundCue* __StreamerSafeConfig_TA__Apply_431DB6CE47D1BF33C766EBB565ED06B9(struct FStreamerSafeSoundCue Track);
	bool __StreamerSafeConfig_TA__Apply_16FA70F94A4E9FC1378F6E8AC410393B(struct FStreamerSafeSoundCue Track);
	void __bPlayerSettingEnabled__ChangeNotifyFunc();
	bool IsStreamerSafe(class UAkSoundCue* SoundCue);
	void Apply();
};

// Class TAGame.IMusicTracklist_TA
// 0x0000 (0x0060 - 0x0060)
class UIMusicTracklist_TA : public UInterface
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IMusicTracklist_TA");
		}

		return uClassPointer;
	};

	int Num();
	void NextTrack();
};

// Class TAGame.__GFxData_MusicPlayer_TA__MergePlaylists_ABD3596142C2C6390A0832BCC7DDBF40
// 0x0010 (0x0060 - 0x0070)
class U__GFxData_MusicPlayer_TA__MergePlaylists_ABD3596142C2C6390A0832BCC7DDBF40 : public UObject
{
public:
	TArray<struct FGFxMusicPlaylist>                   NewPlaylists;                                     		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_MusicPlayer_TA__MergePlaylists_ABD3596142C2C6390A0832BCC7DDBF40");
		}

		return uClassPointer;
	};

	bool __GFxData_MusicPlayer_TA__MergePlaylists_ABD3596142C2C6390A0832BCC7DDBF40(struct FGFxMusicPlaylist P);
};

// Class TAGame.__GFxData_MusicPlayer_TA__HandleThemeChange_BC50B48B44295A824F9C32BC7C32C5B9
// 0x0010 (0x0060 - 0x0070)
class U__GFxData_MusicPlayer_TA__HandleThemeChange_BC50B48B44295A824F9C32BC7C32C5B9 : public UObject
{
public:
	class UIMusicTracklistBuilder*                     DefaultBuilder;                                   		// 0x0060 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0068 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_MusicPlayer_TA__HandleThemeChange_BC50B48B44295A824F9C32BC7C32C5B9");
		}

		return uClassPointer;
	};

	void ____GFxData_MusicPlayer_TA__HandleThemeChange_BC50B48B44295A824F9C32BC7C32C5B9____GFxData_MusicPlayer_TA__HandleThemeChange_BC50B48B44295A824F9C32BC7C32C5B9_FF79D48048D1C9CF729CCA86BBB8AB4A();
	void __GFxData_MusicPlayer_TA__HandleThemeChange_BC50B48B44295A824F9C32BC7C32C5B9(class UMusicTrack_TA* _);
};

// Class TAGame.GFxData_Nameplate_TA
// 0x003C (0x0094 - 0x00D0)
class UGFxData_Nameplate_TA : public UGFxDataRow_X
{
public:
	float                                              HideFullNameplateDistance;                        		// 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FString                                     PlayerName;                                       		// 0x00A0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                Team;                                             		// 0x00B0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bHideFullNameplate : 1;                           		// 0x00B4 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bIsDistracted : 1;                                		// 0x00B4 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bLocalPlayer : 1;                                 		// 0x00B4 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bShowShortcut : 1;                                		// 0x00B4 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	class UNameplateComponent_TA*                      NameplateComponent;                               		// 0x00B8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UProfileGameplaySave_TA*                     GameplaySettings;                                 		// 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPersona_TA*                                 Persona;                                          		// 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Nameplate_TA");
		}

		return uClassPointer;
	};

	void __GFxData_Nameplate_TA__HandleProfileSet_9BBCD8B44F511397BB2B4EA56C548A15(class UProfileGameplaySave_TA* Settings);
	void SetShowShortcut(unsigned long bValue);
	void Tick();
	void HandlePersonaUpdated(class UPersona_TA* InPersona);
	void HandlePRIDistracted(class APRI_TA* InPRI);
	void SetPlayerName(class APRI_TA* InPRI);
	class UOnlineGame_X* GetOnlineGame();
	void HandlePlayerNameSet(class UNameplateComponent_TA* InNameplateComponent);
	void SetNameplateComponent(class UNameplateComponent_TA* InNameplateComponent);
	void HandleProfileSet(class ULocalPlayer_TA* InLocalPlayer);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.GFxData_Party_TA
// 0x00A8 (0x0098 - 0x0140)
class UGFxData_Party_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FGFxPartyMember>                     Members;                                          		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                MaxPartySize;                                     		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FName                                       Processing;                                       		// 0x00AC (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	class UOnlineGameParty_X*                          OnlineParty;                                      		// 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPersonas_TA*                                PersonasData;                                     		// 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineClubCache_X*                          Clubs;                                            		// 0x00C8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UVanitySetManager_TA*                        VanityManager;                                    		// 0x00D0 (0x0008) [0x0000000000000000]               
	unsigned char                                      PsyNetPartyStatus;                                		// 0x00D8 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     RegionRestrictedPlayerTrade;                      		// 0x00E0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UGFxModal_X*                                 PendingTradeInviteModal;                          		// 0x00F0 (0x0008) [0x0000000000000000]               
	class UGFxModal_X*                                 PartyErrorModal;                                  		// 0x00F8 (0x0008) [0x0000000000000000]               
	unsigned long                                      bPendingAllowTrade : 1;                           		// 0x0100 (0x0004) [0x0000000000000000] [0x00000001] 
	class UCrossplayConfig_X*                          CrossplayConfig;                                  		// 0x0108 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventTradeNotAllowed__Delegate;                 		// 0x0110 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __AllowTradeRPCComplete__Delegate;                		// 0x0128 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Party_TA");
		}

		return uClassPointer;
	};

	struct FUniqueNetId __GFxData_Party_TA__ActivatePartyUp_B3F4E4F54D1B2C84841705B5361F687F(struct FGFxPartyMember M);
	struct FUniqueNetId __GFxData_Party_TA__ActivatePartyUp_79228F384ED3417923A87BAEECAD883E(class APRI_TA* T);
	struct FUniqueNetId __GFxData_Party_TA__RebuildPartyData_079CF11F47EB60500D83A294DACF9FBA(struct FPartyMember PMember);
	void OnPartyMemberLeftMatch(struct FUniqueNetId PartyMemberID);
	void HandlePlayerTradeInviteError(class UOnlineMessageComponent_X* Component, class UPartyMessage_InviteToTradeError_X* Message);
	void HandleFollowTheLeaderToMainMenu(class UGFxModal_X* Modal);
	void HandleLeaderChange(class UOnlineGameParty_X* PartyObject, struct FUniqueNetId NewLeader);
	void HandleLeaderLeftOnlineGame(class UOnlineGameParty_X* PartyObject);
	void ClearPartyJoinGameDelegates();
	void HandlePartyJoinGameSuccess(class UOnlineGameParty_X* PartyObject);
	void HandlePartyJoinGameError(class UOnlineGameParty_X* PartyObject, struct FString LocalizedString);
	void HandlePartyJoinGameConfirmed(class UGFxModal_X* Modal);
	void HandlePartyJoinGameConfirmation(class UOnlineGameParty_X* PartyObject);
	void HandlePartyError(class UOnlineGameParty_X* PartyObject, class UError* Error);
	void HandleReceivedPartyPersonaInfo(class URPC_GetPersonaInfo_TA* RPC);
	int SortMembersCallback(struct FGFxPartyMember A, struct FGFxPartyMember B);
	void RebuildPartyData();
	void RebuildPartyDataDelayed();
	void OnPartyChanged(class UOnlineGameParty_X* PartyObject);
	bool ProcessInvitationResponse(class UOnlineGameParty_X* Party, struct FScriptDelegate JoinPartyCallback, struct FUniqueLobbyId& PartyID, struct FUniqueNetId& InviterId, class UGFxModal_X*& CreatedModal);
	void OnPlayerInvitedSilent(class UOnlineGameParty_X* Party, struct FScriptDelegate JoinPartyCallback, struct FUniqueLobbyId& PartyID, struct FUniqueNetId& InviterId);
	void JoinAttempt(class UOnlineGameParty_X* Party, struct FScriptDelegate JoinPartyCallback, struct FUniqueLobbyId& PartyID, struct FUniqueNetId& InviterId);
	void OnPlayerInvited(class UOnlineGameParty_X* Party, struct FScriptDelegate JoinPartyCallback, struct FUniqueLobbyId& PartyID, struct FUniqueNetId& InviterId);
	void HandleGetAvatar(struct FUniqueNetId InPlayerId, class UTexture* Avatar, struct FString OnlinePlayerName);
	void SetLeader(int Index);
	void OnPartyMembersPersonaUpdated();
	void OnPlayerTradeEnded();
	void HandleCloseInviteToTrade(class UOnlineGameParty_X* PartyObject, unsigned long bWasCanceled);
	void OnPlayerTradeStarted();
	void HandleAcceptedInviteToTrade(class UOnlineGameParty_X* PartyObject);
	void HandleCancelInviteToTrade(class UGFxModal_X* Modal, struct FUniqueNetId Inviter);
	void HandleAcceptInviteToTrade(class UGFxModal_X* Modal, struct FUniqueNetId Inviter);
	void OnAnotherInviteToTrade(int MemberIdx);
	void HandleAnotherInviteToTrade(class UOnlineGameParty_X* PartyObject, struct FUniqueNetId InMemberId);
	void SetSearchingStatus(unsigned long bSearching, unsigned char StatusOwner);
	void HandleInviteToTrade(class UOnlineGameParty_X* PartyObject, struct FUniqueNetId Inviter, struct FUniqueNetId Recipient);
	bool IsInSameMatch(int PartyMemberIdx);
	void HandleJoinFriend();
	void JoinFriend(int PartyMemberIdx);
	void AlertAllowTradeError(class UError* TradeError, struct FUniqueNetId OtherPlayerID, struct FScriptDelegate OnFail);
	void SendAllowTradeRPC(struct FUniqueNetId MyNetId, struct FUniqueNetId OtherPlayerNetId, struct FScriptDelegate OnSuccess, struct FScriptDelegate OnFail);
	void InvitePlayerToTrade(int Index);
	void HandlePlayerInMatchChanged(class UOnlineGameParty_X* PartyObject, struct FUniqueNetId InMemberId);
	void HandlePlayerIsCurrentlyTrading(class UOnlineGameParty_X* PartyObject, struct FUniqueNetId InMemberId);
	void HandlePlayerTradingChanged(class UOnlineGameParty_X* PartyObject, struct FUniqueNetId InMemberId, unsigned long bIsPlayerTrading);
	void KickPlayer(int Index);
	void ShowInviteUI();
	bool CanSendPartyInviteToUser(struct FUniqueNetId PlayerID);
	void OnConfirmLeaveParty(class UGFxModal_X* Modal);
	void LeaveParty();
	void OnPartyCreatedWithoutInvite();
	void OnConfirmCreatePlatformParty(class UGFxModal_X* Modal);
	void AskCreatePlatformParty();
	void OnPartyCreated(class UOnlineGameParty_X* Party, unsigned long bWasSuccessful);
	void CreateParty();
	bool IsProcessing();
	void HandleProcessingStateChanged(class UOnlineGameParty_X* P);
	void HandleProfileSet(class ULocalPlayer_TA* LocalPlayer);
	void eventOnRemoved();
	unsigned char GetPsyNetPartyStatus();
	bool IsTradePlatformRestricted(struct FUniqueNetId TradeTarget);
	bool ActivatePartyUp();
	bool CanTradeWithPlayer(struct FUniqueNetId MemberId);
	void UpdatePsyNetPartyStatus();
	void HandlePerConChanged(class UPerCon_X* PerCon);
	void HandleConnectionChanged(class UPsyNetConnection_X* Connection);
	void HandlePrimaryPlayerChanged(class UOnlineGameAccount_X* InAccount, struct FUniqueNetId PlayerID);
	void HandlePsyNetConfigChanged(class UPsyNetConfig_X* Config);
	void HandleClubUpdated(class UOnlineClubCache_X* Cache, class UClubDetails_X* ClubDetails);
	void eventOnShellSet();
	void AllowTradeRPCComplete();
	void EventTradeNotAllowed(int LocalPlayerNum, class UError* Error);
};

// Class TAGame.StayAsPartySystem_TA
// 0x0000 (0x0060 - 0x0060)
class UStayAsPartySystem_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StayAsPartySystem_TA");
		}

		return uClassPointer;
	};

	class AStayAsPartyVoter_TA* __StayAsPartySystem_TA__StartStayAsPartyVote_984AAFCE41DA725FBC0D55A90A4ECA12(struct FPartyInfo Party);
	bool IsOneParty(TArray<class APRI_TA*>& PRIs);
	class UGFxData_PRI_TA* GetPRIData(class AGFxHUD_TA* InHUD, class APRI_TA* InPRI);
	void PlayerSentPartyInvites(class APRI_TA* PRI);
	bool DidPlayerSendPartyInvites(class APRI_TA* PRI);
	TArray<class APRI_TA*> FindHumanTeammatesOfID(TArray<class APRI_TA*> PRIs, struct FUniqueNetId PlayerID);
	bool IsLocalPlayerActive(class ULocalPlayer* LP);
	void StayAsPartyLeader_Removed(class UOnlinePlayer_TA* OnlinePlayer, class UStayAsPartyLeader_TA* Leader);
	void StayAsPartyLeader_Added(class UOnlinePlayer_TA* OnlinePlayer, class UStayAsPartyLeader_TA* Leader);
	void SetVoteActive(TArray<class APRI_TA*> PRIs, unsigned long bActive);
	void GFxPlayerDisconnected(class UNetMode_Client* NetMode, class APRI_TA* PRI, class UPlayerRemovedEvent_TA* DisconnectedEvent);
	void GFxLeftParty(class UNetMode_Client* NetMode, class APRI_TA* PRI, class UPartyLeaderChangedEvent_TA* LeaderChanged);
	void GFxPlayerJoinedParty(class UNetMode_Client* NetMode, class ATeam_TA* Team, class APRI_TA* PRI, class UPartyLeaderChangedEvent_TA* LeaderChanged);
	void GFxLeaderActive(class UNetMode_Client* NetMode, class APRI_TA* PRI, class AStayAsPartyVoter_TA* Voter, class AStayAsPartyVoteYes_TA* YesVote);
	void GFxDisableButton(class UGFxData_GameEvent_TA* GFxGame, class AStayAsPartyVoteYes_TA* _);
	void GFxShowStayAsPartyButton(class UGFxData_GameEvent_TA* GFxGame, class UGFxStayAsPartyDisplayButton_TA* DisplayCommand);
	void FormParty(class APRI_TA* LeaderPRI, class UServerFormPartyEvent_TA* FormEvent);
	void MergeEventConfirmFollower(class UMergePartyEvent_TA* MergeEvent, class ATeam_TA* Team, class APRI_TA* ConfirmedFollower);
	void HandleClientConfirmedMergeInvite(class UMergePartyEvent_TA* MergeEvent, class ATeam_TA* Team, class APRI_TA* ConfirmedFollower, class UServerInviteeConfirmedMergeEvent_TA* _);
	void HandleClientConfirmedVoteInvite(class UStayAsPartyVote_TA* Vote, class ATeam_TA* Team, class APRI_TA* ConfirmedFollower, class UServerInviteeConfirmedMergeEvent_TA* _);
	void BroadcastPartyEvent(class APRI_TA* PRI);
	void UnregisterForLeaderChanged(class APRI_TA* PRI);
	void RegisterForLeaderChanged(class APRI_TA* PRI);
	void UnsubscribeToLeaderChanges(class APRI_TA* PRI);
	void ReportLeaderChanges(class APRI_TA* PRI, class UClientStayAsPartyVoteBeginEvent_TA* _);
	void ReplicateVoteYes_Removed(class UStayAsPartyVote_TA* Vote, class APRI_TA* PRI, class AStayAsPartyVoter_TA* Voter, class AStayAsPartyVoteYes_TA* InVoteYes);
	void ReplicateVoteYes_Added(class UNetMode_Server* NetMode, class APRI_TA* PRI, class AStayAsPartyVoteYes_TA* YesVote);
	void ReplicateVoter_Removed(class UNetMode_Server* NetMode, class APRI_TA* PRI, class AStayAsPartyVoter_TA* PartyVoter);
	void ReplicateVoter_Added(class UNetMode_Server* NetMode, class APRI_TA* PRI, class AStayAsPartyVoter_TA* PartyVoter);
	void VoteYes_Removed(class UStayAsPartyVote_TA* Vote, class AStayAsPartyVoter_TA* Voter, class AStayAsPartyVoteYes_TA* InVoteYes);
	void VoteYes_Added(class AStayAsPartyVoter_TA* Voter, class AStayAsPartyVoteYes_TA* InVoteYes);
	void ReplicateInviteeMergeEvent(class UNetMode_Server* NetMode, class APRI_TA* PRI, class UMergePartyEvent_TA* MergeEvent);
	void ProcessVote(class UStayAsPartyVote_TA* Vote, class AStayAsPartyVoter_TA* Voter, class AStayAsPartyVoteYes_TA* PlayerVote);
	void HandlePartyChanged(class UStayAsPartyVote_TA* Vote, class UPartyLeaderChangedEvent_TA* PartyEvent);
	void VoterRemoved(class UStayAsPartyVote_TA* Vote, class AStayAsPartyVoter_TA* Voter);
	void VoterDisconnected(class UNetMode_Server* NetMode, class AStayAsPartyVoter_TA* Voter, class UPlayerRemovedEvent_TA* DisconnectedEvent);
	void AddVoterToVote(class UStayAsPartyVote_TA* Vote, class AStayAsPartyVoter_TA* Voter);
	void NotifyPlayersVoteStarted(class APlayerController_TA* InController, class UServerVoteStartedEvent_TA* _);
	void StartStayAsPartyVote(class UServerStartVoteEvent_TA* InEvent);
	void CreateVoteStartEvent(class UNetMode_Server* NetMode, class ATeam_TA* Team, class UGameEventFinishedState_TA* _);
	void ProcessEndMatch(class UNetMode_Client* NetMode, class ATeam_TA* Team, class UGameEventFinishedState_TA* _);
};

// Class TAGame.GFxModal_Error_TA
// 0x0000 (0x00C8 - 0x00C8)
class UGFxModal_Error_TA : public UGFxModal_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxModal_Error_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__GFxData_Party_TA__OnPlayerInvited_D8C2456F4A660D533FF00D81AAFFFF91
// 0x0078 (0x0060 - 0x00D8)
class U__GFxData_Party_TA__OnPlayerInvited_D8C2456F4A660D533FF00D81AAFFFF91 : public UObject
{
public:
	class UOnlineGameParty_X*                          Party;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
	struct FUniqueLobbyId                              PartyID;                                          		// 0x0068 (0x0010) [0x0000000000000000]               
	struct FUniqueNetId                                InviterId;                                        		// 0x0078 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             JoinPartyCallback;                                		// 0x00C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Party_TA__OnPlayerInvited_D8C2456F4A660D533FF00D81AAFFFF91");
		}

		return uClassPointer;
	};

	void __GFxData_Party_TA__OnPlayerInvited_D8C2456F4A660D533FF00D81AAFFFF91(class UGFxModal_X* _);
};

// Class TAGame.RPC_GetPersonaInfo_TA
// 0x0030 (0x00E8 - 0x0118)
class URPC_GetPersonaInfo_TA : public URPC_X
{
public:
	TArray<struct FUniqueNetId>                        PlayerIDs;                                        		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FPsyNetPersonaData>                  PlayerData;                                       		// 0x00F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FOnlineFriend>                       FriendsData;                                      		// 0x0108 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_GetPersonaInfo_TA");
		}

		return uClassPointer;
	};

	void eventOnSuccess();
	class URPC_GetPersonaInfo_TA* SetPlayerIDs(TArray<struct FUniqueNetId> InPlayerIDs);
};

// Class TAGame.__GFxData_Party_TA__HandlePartyError_FD0DA0DE437E64A9B14F45BCD7BE2244
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Party_TA__HandlePartyError_FD0DA0DE437E64A9B14F45BCD7BE2244 : public UObject
{
public:
	class UError*                                      Error;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Party_TA__HandlePartyError_FD0DA0DE437E64A9B14F45BCD7BE2244");
		}

		return uClassPointer;
	};

	void __GFxData_Party_TA__HandlePartyError_FD0DA0DE437E64A9B14F45BCD7BE2244(class UGFxModal_X* Modal);
};

// Class TAGame.GFxData_ErrorModals_TA
// 0x0030 (0x0098 - 0x00C8)
class UGFxData_ErrorModals_TA : public UGFxDataSingleton_X
{
public:
	class AGameEvent_TA*                               GameEvent;                                        		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FPendingError>                       PendingErrors;                                    		// 0x00A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnErrorModalCreated__Delegate;                  		// 0x00B0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ErrorModals_TA");
		}

		return uClassPointer;
	};

	void __GFxData_ErrorModals_TA__OnShellSet_C2AD68034445E822316A40950E7A639F(struct FName PrevMenu, struct FName TopMenu);
	void __GFxData_ErrorModals_TA__OnShellSet_B97B0A9A48F754A98FD8D29B20071820(class AGameInfo_GFxMenu_TA* GameInfo, unsigned char UIState);
	void __GFxData_ErrorModals_TA__OnShellSet_7CEEBC674BCE16FA39E13AB9F246AAD4(class AGameEvent_TA* _);
	void __GFxData_ErrorModals_TA__OnShellSet_B22324FD4FB44DD3E5A4FEA73B4ED71D(class AGameInfo_X* _);
	void __GFxData_ErrorModals_TA__ShowError_0BBF469043FC2E9F1C750C8BAF44E961(class UGFxModal_X* _);
	void ShowError(unsigned long bForce);
	bool CanShowError();
	void AlertError(class UError* Error, struct FScriptDelegate Callback, class UClass* InModalClass);
	void eventOnShellSet();
	void OnErrorModalCreated(class UGFxModal_X* Modal);
};

// Class TAGame.GFxData_Persona_TA
// 0x0014 (0x0094 - 0x00A8)
class UGFxData_Persona_TA : public UGFxDataRow_X
{
public:
	class UPersona_TA*                                 Persona;                                          		// 0x0098 (0x0008) [0x0000000000000000]               
	class UTexture*                                    PlayerAvatar;                                     		// 0x00A0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Persona_TA");
		}

		return uClassPointer;
	};

	void HandleGetAvatar(struct FUniqueNetId InPlayerId, class UTexture* Avatar, struct FString OnlinePlayerName);
	void UpdatePlayerAvatar();
	void RemoveFromDataStore();
	void SetPersonaProxy(class UPersona_TA* InPersona);
};

// Class TAGame.__GFxData_Party_TA__ProcessInvitationResponse_63DAEF7B4A2610DE4A5E4DA34013B83E
// 0x0028 (0x0060 - 0x0088)
class U__GFxData_Party_TA__ProcessInvitationResponse_63DAEF7B4A2610DE4A5E4DA34013B83E : public UObject
{
public:
	struct FScriptDelegate                             JoinPartyCallback;                                		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FUniqueLobbyId                              PartyID;                                          		// 0x0078 (0x0010) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Party_TA__ProcessInvitationResponse_63DAEF7B4A2610DE4A5E4DA34013B83E");
		}

		return uClassPointer;
	};

	void __GFxData_Party_TA__ProcessInvitationResponse_63DAEF7B4A2610DE4A5E4DA34013B83E(class UGFxModal_X* _);
};

// Class TAGame.__GFxData_Party_TA__HandleAcceptInviteToTrade_7F899FF841F3C1900E53F792805AD47B
// 0x0050 (0x0060 - 0x00B0)
class U__GFxData_Party_TA__HandleAcceptInviteToTrade_7F899FF841F3C1900E53F792805AD47B : public UObject
{
public:
	class UGFxModal_X*                                 Modal;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
	struct FUniqueNetId                                Inviter;                                          		// 0x0068 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Party_TA__HandleAcceptInviteToTrade_7F899FF841F3C1900E53F792805AD47B");
		}

		return uClassPointer;
	};

	void __GFxData_Party_TA__HandleAcceptInviteToTrade_1F5AA479460AAFB9F71F97AE09CBD180();
	void __GFxData_Party_TA__HandleAcceptInviteToTrade_8B896BAE40FBD4EB9C4956B3E6E620A1();
	void __GFxData_Party_TA__HandleAcceptInviteToTrade_B594CF81446FE653C202CCA4C8E3AC9F();
	void __GFxData_Party_TA__HandleAcceptInviteToTrade_7F899FF841F3C1900E53F792805AD47B();
};

// Class TAGame.OnlinePlayerAuthentication_TA
// 0x0010 (0x01D8 - 0x01E8)
class UOnlinePlayerAuthentication_TA : public UOnlinePlayerAuthentication_X
{
public:
	class UFreeToPlayConfig_TA*                        FreeToPlayConfig;                                 		// 0x01D8 (0x0008) [0x0000000000000000]               
	class UTwoFactorAuthentication_TA*                 TwoFactorAuthentication;                          		// 0x01E0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlinePlayerAuthentication_TA");
		}

		return uClassPointer;
	};

	class UError* GetAuthLoginError();
	void HandleFreeToPlayRequirementChanged();
	struct FString GetBuildRegion();
	void OnInit();
};

// Class TAGame.TwoFactorAuthentication_TA
// 0x0040 (0x0060 - 0x00A0)
class UTwoFactorAuthentication_TA : public UObject
{
public:
	class UError*                                      Error;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
	unsigned long long                                 ReauthenticationRetryDelay;                       		// 0x0068 (0x0008) [0x0000000000000000]               
	unsigned long long                                 ReauthenticationRetryTimestamp;                   		// 0x0070 (0x0008) [0x0000000000000000]               
	struct FString                                     TwoFactorAuthenticationRequired_EGS;              		// 0x0078 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventReauthenticationComplete__Delegate;        		// 0x0088 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TwoFactorAuthentication_TA");
		}

		return uClassPointer;
	};

	void __TwoFactorAuthentication_TA__Construct_061835F04C98B230B50DEE8DA1B8D58E(int InLocalPlayerNum, class UError* InError);
	void Reauthenticate(struct FScriptDelegate OnSuccess, struct FScriptDelegate OnFail);
	void HandleTradeError(class UOnlineGameParty_TA* PartyObject, class UError* InError, struct FGuid& InTradeId);
	void CreateErrorModal(class UErrorType* InErrorType);
	void eventConstruct();
	void EventReauthenticationComplete();
};

// Class TAGame.__GFxData_Party_TA__HandleInviteToTrade_24CBC6F54AAEB44078E64ABEAB1E36D8
// 0x0048 (0x0060 - 0x00A8)
class U__GFxData_Party_TA__HandleInviteToTrade_24CBC6F54AAEB44078E64ABEAB1E36D8 : public UObject
{
public:
	struct FUniqueNetId                                Inviter;                                          		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Party_TA__HandleInviteToTrade_24CBC6F54AAEB44078E64ABEAB1E36D8");
		}

		return uClassPointer;
	};

	void __GFxData_Party_TA__HandleInviteToTrade_3B81787C4A147039CF8C44A8E8A304F2(class UGFxModal_X* Modal);
	void __GFxData_Party_TA__HandleInviteToTrade_24CBC6F54AAEB44078E64ABEAB1E36D8(class UGFxModal_X* Modal);
};

// Class TAGame.TradeErrors_TA
// 0x0058 (0x0080 - 0x00D8)
class UTradeErrors_TA : public UErrorList
{
public:
	class UErrorType*                                  AttemptedCurrencyGifting;                         		// 0x0080 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  AttemptedCurrencyExchange;                        		// 0x0088 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  UserTradeBanned;                                  		// 0x0090 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TradeNotAllowed;                                  		// 0x0098 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  OtherPlayerTradeNotAllowed;                       		// 0x00A0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  OtherPlayerBanned;                                		// 0x00A8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TradeMinLevelNotReached;                          		// 0x00B0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TradeMinPlayTimeNotReached;                       		// 0x00B8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TradeDailyLimitReached;                           		// 0x00C0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TradeExceedCurrencyLimit;                         		// 0x00C8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TradePlayerNotInParty;                            		// 0x00D0 (0x0008) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TradeErrors_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__GFxData_Party_TA__SendAllowTradeRPC_D242F7114A13B5E02A21DCB3C0F4E6B2
// 0x0078 (0x0060 - 0x00D8)
class U__GFxData_Party_TA__SendAllowTradeRPC_D242F7114A13B5E02A21DCB3C0F4E6B2 : public UObject
{
public:
	struct FScriptDelegate                             OnSuccess;                                        		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FUniqueNetId                                OtherPlayerNetId;                                 		// 0x0078 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             OnFail;                                           		// 0x00C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Party_TA__SendAllowTradeRPC_D242F7114A13B5E02A21DCB3C0F4E6B2");
		}

		return uClassPointer;
	};

	void __GFxData_Party_TA__SendAllowTradeRPC_D242F7114A13B5E02A21DCB3C0F4E6B2(class URPC_ProductsTradeAllowed_TA* RPC);
};

// Class TAGame.RPC_ProductsTradeAllowed_TA
// 0x0094 (0x00E8 - 0x017C)
class URPC_ProductsTradeAllowed_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FUniqueNetId                                OtherPlayerID;                                    		// 0x0130 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                MaxCurrencyTradeAmount;                           		// 0x0178 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_ProductsTradeAllowed_TA");
		}

		return uClassPointer;
	};

	class URPC_ProductsTradeAllowed_TA* SetOtherPlayerID(struct FUniqueNetId InOtherPlayerID);
	class URPC_ProductsTradeAllowed_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.__GFxData_Party_TA__InvitePlayerToTrade_452FD2194696B490066EEB9DF64BF84C
// 0x0004 (0x0060 - 0x0064)
class U__GFxData_Party_TA__InvitePlayerToTrade_452FD2194696B490066EEB9DF64BF84C : public UObject
{
public:
	int                                                Index;                                            		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Party_TA__InvitePlayerToTrade_452FD2194696B490066EEB9DF64BF84C");
		}

		return uClassPointer;
	};

	void __GFxData_Party_TA__InvitePlayerToTrade_65CB41BA4AD23FB714FFCBB2EDBBF7DF();
	void __GFxData_Party_TA__InvitePlayerToTrade_452FD2194696B490066EEB9DF64BF84C();
};

// Class TAGame.__GFxData_Party_TA__ActivatePartyUp_59ECE39F42C15515122557896C05C4A4
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Party_TA__ActivatePartyUp_59ECE39F42C15515122557896C05C4A4 : public UObject
{
public:
	class AStayAsPartyVoter_TA*                        PartyVoter;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Party_TA__ActivatePartyUp_59ECE39F42C15515122557896C05C4A4");
		}

		return uClassPointer;
	};

	void __GFxData_Party_TA__ActivatePartyUp_59ECE39F42C15515122557896C05C4A4(class UGFxModal_X* _);
};

// Class TAGame.StayAsPartyVoter_TA
// 0x0070 (0x0268 - 0x02D8)
class AStayAsPartyVoter_TA : public AActor
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x0268 (0x0048) [0x0000000000400020] (CPF_Net | CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        Followers;                                        		// 0x02B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class AStayAsPartyVoteYes_TA*                      YesVote;                                          		// 0x02C0 (0x0008) [0x0000000000000000]               
	unsigned long                                      bSentPartyInvites : 1;                            		// 0x02C8 (0x0004) [0x0000000000000000] [0x00000001] 
	class APRI_TA*                                     PRI;                                              		// 0x02D0 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StayAsPartyVoter_TA");
		}

		return uClassPointer;
	};

	bool __StayAsPartyVoter_TA__GetPartyUpError_C6C83E3344CA4B48D6D8229F6512FC3D(class APRI_TA* P);
	bool __StayAsPartyVoter_TA__GetPartyUpError_81EFDFF7483D04A0F4898D837B97E179(class APRI_TA* P);
	bool __StayAsPartyVoter_TA__GetPartyUpError_3D1B761B424CD15C1A076586C9533886(class APRI_TA* P);
	void ServerJoinError(class UError* ReportedError);
	void ReportJoinError(class UError* ReportedError);
	void ServerStayAsPartyVote();
	bool CanPlayerPartyUpServer();
	void VoteYes();
	bool GetPartyUpError(struct FString& Error);
	void RemovePartyFollower(struct FUniqueNetId& OldFollower);
	void AddPartyFollower(struct FUniqueNetId& NewFollower);
	void SetPartyFollowers(TArray<struct FUniqueNetId>& PartyFollowers);
	void Setup(struct FUniqueNetId InPlayerId, TArray<struct FUniqueNetId>& PartyFollowers);
	void eventDestroyed();
	void RefreshORSGroup();
	void eventOnOwnerChanged();
	class AStayAsPartyVoter_TA* SpawnVoter(class AActor* VoterOwner, struct FUniqueNetId& VoterId, TArray<struct FUniqueNetId>& PartyFollowers);
	void eventReplicatedEvent(struct FName VarName);
};

// Class TAGame.GFxData_PlayerRecord_TA
// 0x008C (0x0094 - 0x0120)
class UGFxData_PlayerRecord_TA : public UGFxDataRow_X
{
public:
	struct FString                                     PlayerIDString;                                   		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long                                      bReported : 1;                                    		// 0x00A8 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	struct FString                                     SanitizedPlayerName;                              		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     PlayerName;                                       		// 0x00C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class APRI_TA*                                     PRI;                                              		// 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FUniqueNetId                                PlayerID;                                         		// 0x00D8 (0x0048) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PlayerRecord_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void Report(unsigned char Reason);
	void HandleUniqueIdChanged(class APRI_X* InPRI);
	void HandlePlayerNameSanitized(struct FString Original, struct FString Sanitized);
	void HandlePlayerNameChanged(class APRI_X* InPRI);
	void eventOnRemoved();
	void SetPRI(class APRI_TA* InPRI);
	class UOnlineGame_X* GetOnlineGame();
};

// Class TAGame.MicroEventConfig_TA
// 0x0020 (0x0078 - 0x0098)
class UMicroEventConfig_TA : public UOnlineConfig_X
{
public:
	TArray<class UMicroEvent_TA*>                      MicroEvents;                                      		// 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UIEpochNow*                                  Time;                                             		// 0x0088 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0090 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MicroEventConfig_TA");
		}

		return uClassPointer;
	};

	class UMicroEvent_TA* __MicroEventConfig_TA__GetNextActiveMicroEvent_58D02BC3427C31D1F3A2EC972D89C667(class UMicroEvent_TA* Best, class UMicroEvent_TA* Current);
	bool __MicroEventConfig_TA__GetNextActiveMicroEvent_36B477814B2EE2059C4F19B52E390F65(class UMicroEvent_TA* M);
	bool __MicroEventConfig_TA__GetNextActiveMicroEvent_E43CE33447E37315AB124D87774F8DC7(class UMicroEvent_TA* M);
	bool IsActiveMicroEventPlaylist(int PlaylistId);
	class UMicroEvent_TA* GetNextActiveMicroEvent();
	void Apply();
	void eventConstruct();
};

// Class TAGame.__GFxData_Playlist_TA__SetPlayerCount_EC7C6ED2460029008EC56599CE4A5BA3
// 0x0004 (0x0060 - 0x0064)
class U__GFxData_Playlist_TA__SetPlayerCount_EC7C6ED2460029008EC56599CE4A5BA3 : public UObject
{
public:
	int                                                Count;                                            		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Playlist_TA__SetPlayerCount_EC7C6ED2460029008EC56599CE4A5BA3");
		}

		return uClassPointer;
	};

	bool __GFxData_Playlist_TA__SetPlayerCount_EC7C6ED2460029008EC56599CE4A5BA3(int X);
};

// Class TAGame.MicroEvent_TA
// 0x0018 (0x0060 - 0x0078)
class UMicroEvent_TA : public UObject
{
public:
	int                                                PlaylistId;                                       		// 0x0060 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 StartTime;                                        		// 0x0068 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 EndTime;                                          		// 0x0070 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MicroEvent_TA");
		}

		return uClassPointer;
	};

	bool IsValid();
	bool IsActive(unsigned long long CurrentTime);
};

// Class TAGame.GFxData_PRI_TA
// 0x0174 (0x0094 - 0x0208)
class UGFxData_PRI_TA : public UGFxDataRow_X
{
public:
	struct FString                                     PlayerName;                                       		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     PlayerIDString;                                   		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Platform;                                         		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UTexture*                                    Avatar;                                           		// 0x00C8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Team;                                             		// 0x00D0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Score;                                            		// 0x00D4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Goals;                                            		// 0x00D8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Assists;                                          		// 0x00DC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Saves;                                            		// 0x00E0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Shots;                                            		// 0x00E4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Ping;                                             		// 0x00E8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                BreakoutDamage;                                   		// 0x00EC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bMvp : 1;                                         		// 0x00F0 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bSpeaking : 1;                                    		// 0x00F0 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bMuted : 1;                                       		// 0x00F0 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bReady : 1;                                       		// 0x00F0 (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	unsigned long                                      bBotPlayer : 1;                                   		// 0x00F0 (0x0004) [0x0000000040000000] [0x00000010] (CPF_EditInlineNotify)
	unsigned long                                      bLocalPlayer : 1;                                 		// 0x00F0 (0x0004) [0x0000000040000000] [0x00000020] (CPF_EditInlineNotify)
	unsigned long                                      bDisconnected : 1;                                		// 0x00F0 (0x0004) [0x0000000040000000] [0x00000040] (CPF_EditInlineNotify)
	unsigned long                                      bStayAsPartyActive : 1;                           		// 0x00F0 (0x0004) [0x0000000040000000] [0x00000080] (CPF_EditInlineNotify)
	unsigned long                                      bSpectator : 1;                                   		// 0x00F0 (0x0004) [0x0000000040000000] [0x00000100] (CPF_EditInlineNotify)
	unsigned long                                      bSelected : 1;                                    		// 0x00F0 (0x0004) [0x0000000040000000] [0x00000200] (CPF_EditInlineNotify)
	unsigned long                                      bHighlighted : 1;                                 		// 0x00F0 (0x0004) [0x0000000040000000] [0x00000400] (CPF_EditInlineNotify)
	unsigned long                                      bGameEnded : 1;                                   		// 0x00F0 (0x0004) [0x0000000000002000] [0x00000800] (CPF_Transient)
	unsigned long                                      bOnPodium : 1;                                    		// 0x00F0 (0x0004) [0x0000000040000000] [0x00001000] (CPF_EditInlineNotify)
	struct FString                                     ConnectionStatus;                                 		// 0x00F8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     PartyID;                                          		// 0x0108 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     XPTitle;                                          		// 0x0118 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FColor                                      TitleColor;                                       		// 0x0128 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FColor                                      TitleGlowColor;                                   		// 0x012C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SkillTier;                                        		// 0x0130 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Boost;                                            		// 0x0134 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class APRI_TA*                                     PRI;                                              		// 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FUniqueNetId                                PlayerID;                                         		// 0x0140 (0x0048) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              PodiumSpotlightScreenPosX;                        		// 0x0188 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	float                                              PodiumSpotlightScreenPosY;                        		// 0x018C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     PrimaryTitle;                                     		// 0x0190 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     SecondaryTitle;                                   		// 0x01A0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     PrimaryTitleStat;                                 		// 0x01B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     SecondaryTitleStat;                               		// 0x01C0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                PrimaryStat;                                      		// 0x01D0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SecondaryStat;                                    		// 0x01D4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 ClubID;                                           		// 0x01D8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      WorstConnectionQualityStateBeyondLatency;         		// 0x01E0 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      QuitSeverity;                                     		// 0x01E1 (0x0001) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	int                                                SpectatorShortcut;                                		// 0x01E4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class UGFxData_PlayerBanner_TA*                    GFxPlayerBanner;                                  		// 0x01E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxData_PlayerAvatar_TA*                    GFxPlayerAvatar;                                  		// 0x01F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxData_PlayerAvatarBorder_TA*              GFxPlayerBorder;                                  		// 0x01F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPersona_TA*                                 Persona;                                          		// 0x0200 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PRI_TA");
		}

		return uClassPointer;
	};

	bool IsActivePlayer();
	void HandleQuitSeverityChanged(class APRI_TA* InPRI);
	void HandleSpectatorShortcutChanged(class APRI_TA* InPRI);
	void HandleReplicatedNetStats();
	void HandleClub(class UClubDetails_X* Club);
	void HandleClubID();
	void UpdatePlayerAvatarBorder();
	void UpdatePlayerBanner();
	void UpdateScreenPosition(class UCanvas* MyCanvas, struct FVector WorldPosition, unsigned long bHovered, unsigned long bFocused);
	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void SetPlayerTitle(struct FName TitleId);
	void HandleTitleChanged(class APRI_TA* InPRI);
	void HandleReplacingBotChanged(class APRI_TA* InPRI);
	void InitStatTitle(struct FMemberTitleStat Stat, struct FString TitleLocalizationString, struct FString& StatTitle, int& StatValue, struct FString& StatPostfix);
	void HandleStatTitlesSet(class APRI_TA* InPRI);
	void HandleWonMVP(class APRI_TA* InPRI);
	void HandleSkillTierChanged(class APRI_TA* InPRI);
	void HandlePawnTypeChanged(class APRI_TA* InPRI);
	void HandlePartyLeaderChanged(class APRI_TA* InPRI);
	void SetDisconnected();
	void SetMuted(unsigned long bNewMuted);
	void UpdateMuted();
	void HandleMuteChanged(class APlayerController_TA* PC, struct FUniqueNetId InPlayerId, unsigned long bMute);
	void UpdatePRIData();
	void HandlePlayerTalking(class UOnlineGameVoice_X* SelfRef, struct FUniqueNetId InPlayerId, unsigned long bTalking);
	void HandleReadyChanged(class APRI_TA* InPRI);
	void HandleTeamChanged(class APRI_X* InPRI);
	void UpdatePlayerAvatar();
	void HandleAvatarChange(struct FUniqueNetId InPlayerId);
	void HandleVanityUpdate(unsigned char VanityType);
	void HandlePersonaUpdated(class UPersona_TA* InPersona);
	void SetPersona(class UPersona_TA* InPersona);
	void HandleUniqueIdChanged(class APRI_X* InPRI);
	void HandleReceivedLocalPRI(class APlayerController_X* P);
	void HandlePlayerNameChanged(class APRI_X* InPRI);
	void eventOnRemoved();
	void HandleOwnerChanged(class APRI_TA* InPRI);
	void SetPRI(class APRI_TA* InPRI);
	struct FString GetReservationStatusString(unsigned char Status);
	void SetReservation(struct FReplicatedReservationData Reservation);
	class UOnlineGame_X* GetOnlineGame();
};

// Class TAGame.GFxData_PlayerAvatarBorder_TA
// 0x000C (0x0094 - 0x00A0)
class UGFxData_PlayerAvatarBorder_TA : public UGFxDataRow_X
{
public:
	class UPlayerAvatarBorder_TA*                      PlayerBorder;                                     		// 0x0098 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PlayerAvatarBorder_TA");
		}

		return uClassPointer;
	};

	void EquipColor(int InColorID);
	void EquipProduct(struct FProductHashID HashID);
	struct FUniqueNetId GetPlayerID();
	void SetBorder(class UPlayerAvatarBorder_TA* InBorder);
	class UGFxData_PlayerAvatarBorder_TA* Create(class UGFxShell_X* InShell, class UPlayerAvatarBorder_TA* InBorder, struct FUniqueNetId InPlayerId);
};

// Class TAGame.GFxData_PlayerBanner_TA
// 0x000C (0x0094 - 0x00A0)
class UGFxData_PlayerBanner_TA : public UGFxDataRow_X
{
public:
	class UPlayerBanner_TA*                            PlayerBanner;                                     		// 0x0098 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PlayerBanner_TA");
		}

		return uClassPointer;
	};

	void EquipColor(int InColorID);
	void EquipProduct(struct FProductHashID HashID);
	struct FString GetPlayerName();
	struct FUniqueNetId GetPlayerID();
	void SetBanner(class UPlayerBanner_TA* InBanner);
	class UGFxData_PlayerBanner_TA* Create(class UGFxShell_X* InShell, class UPlayerBanner_TA* InBanner);
	class UGFxData_PlayerBanner_TA* CreateWithPlayerName(class UGFxShell_X* InShell, class UPlayerBanner_TA* InBanner, struct FString InPlayerName);
	class UGFxData_PlayerBanner_TA* CreateWithPlayerID(class UGFxShell_X* InShell, class UPlayerBanner_TA* InBanner, struct FUniqueNetId InPlayerId);
};

// Class TAGame.GFxData_PlayerAvatar_TA
// 0x000C (0x0094 - 0x00A0)
class UGFxData_PlayerAvatar_TA : public UGFxDataRow_X
{
public:
	class UPlayerAvatar_TA*                            PlayerAvatar;                                     		// 0x0098 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PlayerAvatar_TA");
		}

		return uClassPointer;
	};

	void EquipColor(int InColor);
	void EquipProduct(struct FProductHashID HashID);
	void SetAvatar(class UPlayerAvatar_TA* InPlayerAvatar);
	struct FString GetPlayerName();
	struct FUniqueNetId GetPlayerID();
	class UGFxData_PlayerAvatar_TA* GetOrCreate(class UGFxShell_X* InShell, class UPlayerAvatar_TA* InAvatar);
};

// Class TAGame.__GFxData_PRI_TA__HandleOwnerChanged_7888423946EC9FB35CC789A69CA9222C
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_PRI_TA__HandleOwnerChanged_7888423946EC9FB35CC789A69CA9222C : public UObject
{
public:
	class UProfileLoadoutSave_TA*                      LoadoutSave;                                      		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_PRI_TA__HandleOwnerChanged_7888423946EC9FB35CC789A69CA9222C");
		}

		return uClassPointer;
	};

	void __GFxData_PRI_TA__HandleOwnerChanged_7888423946EC9FB35CC789A69CA9222C();
};

// Class TAGame.GFxData_PrivateMatch_TA
// 0x0086 (0x0114 - 0x019A)
class UGFxData_PrivateMatch_TA : public UGFxData_OnlineMatch_TA
{
public:
	TArray<struct FGFxRegion>                          Regions;                                          		// 0x0118 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     ServerName;                                       		// 0x0128 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Password;                                         		// 0x0138 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                SelectedMaxPlayerCount;                           		// 0x0148 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	unsigned long                                      bPublicMatch : 1;                                 		// 0x014C (0x0004) [0x0000000040000001] [0x00000001] (CPF_Edit | CPF_EditInlineNotify)
	int                                                MinServerNameLength;                              		// 0x0150 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FString                                     AlreadySearchingMessage;                          		// 0x0158 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     AlreadySearchingForPublicMessage;                 		// 0x0168 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ServerNameLengthError;                            		// 0x0178 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     DuplicateLanServerMessage;                        		// 0x0188 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	unsigned char                                      SearchStatusOwner;                                		// 0x0198 (0x0001) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      SettingsType;                                     		// 0x0199 (0x0001) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PrivateMatch_TA");
		}

		return uClassPointer;
	};

	unsigned char GetStatusOwnerValue();
	void HandleLanSearchComplete(unsigned long bCancelled);
	void HandleLanResponse(struct FServerResult& HostResponse);
	void UpdateOnlineStatus();
	void StartLanSearch();
	void UpdateCustomMatchSettings();
	void StartSearchWithSettings(struct FCustomMatchSettings& Settings);
	void StartSearch();
	void StartClubSearch();
	void CancelSearch();
	void SetRegionSelection(int Row, unsigned long bSelected);
	struct FString GetPreferredRegion();
	void HandleRegionsSynced(class UGFxData_Regions_TA* RegionsData);
	void SetPublic(unsigned long bValue);
	void SetPassword(struct FString InPassword);
	void SetServerName(struct FString InServerName);
	void SetSelectedMaxPlayerCount(int MaxPlayerCount);
	struct FString GetCustomMatchRegion();
	void SetCustomMatchSettings(struct FCustomMatchSettings& InSettings);
	struct FCustomMatchSettings GetCustomMatchSettings();
	void eventOnShellSet();
};

// Class TAGame.CustomMatchSettingsSave_TA
// 0x0098 (0x00C8 - 0x0160)
class UCustomMatchSettingsSave_TA : public USaveObject_TA
{
public:
	struct FCustomMatchSettings                        Settings;                                         		// 0x00C8 (0x0090) [0x0000000000400000] (CPF_NeedCtorLink)
	class UGameTags_TA*                                GameTags;                                         		// 0x0158 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CustomMatchSettingsSave_TA");
		}

		return uClassPointer;
	};

	struct FCustomMatchSettings GetSettings();
	void OnLoad();
};

// Class TAGame.PrivateMatchSettingsSave_TA
// 0x0010 (0x0160 - 0x0170)
class UPrivateMatchSettingsSave_TA : public UCustomMatchSettingsSave_TA
{
public:
	struct FString                                     Region;                                           		// 0x0160 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PrivateMatchSettingsSave_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_Privileges_TA
// 0x0010 (0x0098 - 0x00A8)
class UGFxData_Privileges_TA : public UGFxDataSingleton_X
{
public:
	unsigned long                                      bCheckingPrivileges : 1;                          		// 0x0098 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	class UOnlineGame_X*                               OnlineGame;                                       		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Privileges_TA");
		}

		return uClassPointer;
	};

	void HandlePrivilegeCheck(class UPrivilegeCheck_X* PrivilegeCheck);
	void AlreadyCheckingPrivileges();
	void PrivilegeCheckFail();
	void PrivilegeCheckSuccess();
	void TryToUseUGC();
	void TryToUsePsyNet();
	void TryToPlayOnline();
	void TryToViewLeaderboards();
	void TryToBrowseInternet();
	void UpdateCheckingPrivileges();
	void HandlePrivilegesCheck(class UOnlineGamePrivileges_X* Privileges);
	void eventOnShellSet();
};

// Class TAGame.__GFxData_Products_TA__LoadProduct_5B34F51F47E2AC461768C4AA8A96918E
// 0x0005 (0x0060 - 0x0065)
class U__GFxData_Products_TA__LoadProduct_5B34F51F47E2AC461768C4AA8A96918E : public UObject
{
public:
	struct FProductHashID                              InHashID;                                         		// 0x0060 (0x0004) [0x0000000000000000]               
	unsigned char                                      ThumbnailSize;                                    		// 0x0064 (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Products_TA__LoadProduct_5B34F51F47E2AC461768C4AA8A96918E");
		}

		return uClassPointer;
	};

	bool __GFxData_Products_TA__LoadProduct_5B34F51F47E2AC461768C4AA8A96918E(class ULoadingProduct_TA* P);
};

// Class TAGame.Wallet_TA
// 0x0088 (0x0060 - 0x00E8)
class UWallet_TA : public UObject
{
public:
	TArray<struct FCurrency>                           Currencies;                                       		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UOnlineProductStoreSet_TA*                   CurrencyProductSet;                               		// 0x0070 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	int                                                RocketBucksCurrencyID;                            		// 0x0078 (0x0004) [0x0000000000000002] (CPF_Const)   
	class USpecialEventConfig_TA*                      SpecialEvent;                                     		// 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FScriptDelegate                             __EventWalletUpdated__Delegate;                   		// 0x0088 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventWalletCurrencyUpdated__Delegate;           		// 0x00A0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventWalletCurrencyDataUpdated__Delegate;       		// 0x00B8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventReceivedCurrencyDrop__Delegate;            		// 0x00D0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Wallet_TA");
		}

		return uClassPointer;
	};

	void __Wallet_TA__SetCurrencyTradeholds_14DAF76649513E6A311BEABE70610478(struct FCurrency C);
	void __Wallet_TA__OnSpecialEventSet_FE21904D4D62AD2D5A267F8905EF0019();
	void __Wallet_TA__OnSpecialEventSet_7553EA3846119254C8BF7F94143DFDDD();
	void GiveCurrencyDrops(TArray<struct FCurrency>& Drops);
	void GiveCurrencyDrop(struct FCurrency& Drop);
	void OnSpecialEventSet();
	void UpdateWalletCurrencies(TArray<struct FCurrency>& InCurrencies);
	void UpdateCurrencyImage(int InCurrencyID, class UTexture* SmallImage, class UTexture* LargeImage);
	void UpdateCurrencyName(int InCurrencyID, struct FString LocalizedName);
	void HandleCurrencyAddedNotification(class UPsyNetService_CurrencyAdded_TA* Service);
	void DecreaseCurrency(int InCurrencyID, int Amount);
	void IncreaseCurrency(int InCurrencyID, int Amount);
	void SetCurrencyTradehold(int InCurrencyID, int InTradehold);
	struct FCurrency GetCurrency(int InCurrencyID);
	void SetCurrencyTradeholds(TArray<struct FCurrency>& InCurrencies);
	void SetCurrencyTotals(TArray<struct FCurrency>& InCurrencies);
	void HandleGetWallet(class URPC_GetWallet_TA* RPC);
	void HandleOnlinePlayerRemoved(class UOnlinePlayer_X* InOnlinePlayer);
	void HandlePerConConnected(class UPsyNetConnection_X* InPsyNetConnection);
	void GetWallet();
	void GetWalletDelayed();
	void Init();
	void EventReceivedCurrencyDrop(class UWallet_TA* Wallet, struct FCurrency& Drop);
	void EventWalletCurrencyDataUpdated(class UWallet_TA* Wallet, int CurrencyID);
	void EventWalletCurrencyUpdated(class UWallet_TA* Wallet, int CurrencyID);
	void EventWalletUpdated(class UWallet_TA* Wallet);
};

// Class TAGame.ProductsHashSave_TA
// 0x0038 (0x00C8 - 0x0100)
class UProductsHashSave_TA : public USaveObject_TA
{
public:
	TArray<struct FProductHashID>                      HashIDs;                                          		// 0x00C8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<unsigned long long>                         InstanceIDs;                                      		// 0x00D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __HashIDs__ChangeNotify;                          		// 0x00E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductsHashSave_TA");
		}

		return uClassPointer;
	};

	struct FProductHashID __ProductsHashSave_TA__OnLoad_02D5D5F64A28DCD3DADFCC821DF21FA5(unsigned long long InstanceID);
	unsigned long long __ProductsHashSave_TA__UpdateInstanceIDs_F224789544577DD2554E308ADB9223CF(struct FProductHashSource P);
	void __HashIDs__ChangeNotifyFunc();
	void UpdateInstanceIDs(struct FProductHashID HashID, class USaveData_TA* SaveData, unsigned long bSaved);
	void OnOnlineProductRemoved(class UOnlineProduct_TA* OnlineProduct, class USaveData_TA* SaveData);
	void OnNewOnlineProduct(class UOnlineProduct_TA* OnlineProduct);
	int NumProducts();
	void SetIsSaved(struct FProductHashID HashID, class USaveData_TA* SaveData, unsigned long bSaved);
	bool GetIsSaved(struct FProductHashID HashID);
	void OnLoad();
};

// Class TAGame.ProductsArchiveSave_TA
// 0x0028 (0x0100 - 0x0128)
class UProductsArchiveSave_TA : public UProductsHashSave_TA
{
public:
	TArray<struct FProductHashID>                      ArchivedHashIDs;                                  		// 0x0100 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventProductArchived__Delegate;                 		// 0x0110 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductsArchiveSave_TA");
		}

		return uClassPointer;
	};

	void __ProductsArchiveSave_TA__GetVersionDelegates_124AC0334FF28C02D4172EBCE75B8B29(class UObject* SaveObj);
	void GetVersionDelegates(TArray<struct FScriptDelegate>& VersionDelegates);
	void SetIsArchived(struct FProductHashID HashID, class USaveData_TA* SaveData, unsigned long bArchived);
	bool GetIsArchived(struct FProductHashID HashID);
	void EventProductArchived(struct FProductHashID HashID);
};

// Class TAGame.ProductsFavoriteSave_TA
// 0x0010 (0x0100 - 0x0110)
class UProductsFavoriteSave_TA : public UProductsHashSave_TA
{
public:
	TArray<int>                                        FavoritedHashes;                                  		// 0x0100 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductsFavoriteSave_TA");
		}

		return uClassPointer;
	};

	void __ProductsFavoriteSave_TA__GetVersionDelegates_9EF4845C4EA1EFD73EA8FABCB00F8EB0(class UObject* SaveObj);
	void GetVersionDelegates(TArray<struct FScriptDelegate>& VersionDelegates);
	bool IsProductFavorited(struct FProductHashID HashID);
	void SetIsFavorited(struct FProductHashID HashID, class USaveData_TA* SaveData, unsigned long bValue);
};

// Class TAGame.GFxData_ProductAttribute_TA
// 0x0018 (0x0098 - 0x00B0)
class UGFxData_ProductAttribute_TA : public UGFxDataSingleton_X
{
public:
	class UClass*                                      AttributeClass;                                   		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UIProductAttributeProvider_TA*               AttributeProvider;                                		// 0x00A0 (0x0010) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      UnknownData00[0x8];                               		// 0x00A8 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_TA");
		}

		return uClassPointer;
	};

	void UpdateAdditionalLoadedData(class UGFxData_Products_TA* GFxData_Products, class ULoadingProduct_TA* ProductData, class UProduct_TA* Product);
	void OnReceivedAttribute(class UProductAttribute_TA* Attribute);
	void Init(class UIProductAttributeProvider_TA* InProvider);
};

// Class TAGame.GFxProductAttributeMap_TA
// 0x0010 (0x0060 - 0x0070)
class UGFxProductAttributeMap_TA : public UObject
{
public:
	TArray<class UClass*>                              GFxClasses;                                       		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxProductAttributeMap_TA");
		}

		return uClassPointer;
	};

	class UClass* MapAttribute(class UClass* AttributeClass);
	TArray<class UClass*> MapAttributes(TArray<class UClass*>& Attributes);
};

// Class TAGame.LoadingProduct_TA
// 0x0058 (0x0060 - 0x00B8)
class ULoadingProduct_TA : public UObject
{
public:
	int                                                ProductID;                                        		// 0x0060 (0x0004) [0x0000000000000000]               
	struct FProductHashID                              HashID;                                           		// 0x0064 (0x0004) [0x0000000000000000]               
	TArray<int>                                        ReferencedViews;                                  		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UOnlineProduct_TA*                           OnlineProduct;                                    		// 0x0078 (0x0008) [0x0000000000000000]               
	unsigned char                                      ThumbnailSize;                                    		// 0x0080 (0x0001) [0x0000000000000000]               
	class UProductThumbnailAsset_TA*                   ThumbnailAsset;                                   		// 0x0088 (0x0008) [0x0000000000000000]               
	class UProductAsset_TA*                            Asset;                                            		// 0x0090 (0x0008) [0x0000000000000000]               
	class UProductThumbnail_TA*                        Thumbnail;                                        		// 0x0098 (0x0008) [0x0000000000000000]               
	unsigned long                                      bUpdateProductData : 1;                           		// 0x00A0 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bIgnoreEquipped : 1;                              		// 0x00A0 (0x0004) [0x0000000000000000] [0x00000002] 
	TArray<class UObject*>                             AdditionalProductReferences;                      		// 0x00A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.LoadingProduct_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__GFxData_Products_TA__SlotContainsNewProducts_03E105894142F9730C8FEA9A8CCADF43
// 0x0004 (0x0060 - 0x0064)
class U__GFxData_Products_TA__SlotContainsNewProducts_03E105894142F9730C8FEA9A8CCADF43 : public UObject
{
public:
	int                                                SlotIndex;                                        		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Products_TA__SlotContainsNewProducts_03E105894142F9730C8FEA9A8CCADF43");
		}

		return uClassPointer;
	};

	bool __GFxData_Products_TA__SlotContainsNewProducts_03E105894142F9730C8FEA9A8CCADF43(class UProduct_TA* P);
};

// Class TAGame.__GFxData_Products_TA__InstanceAttributes_FF702B6F4C8B0245B8097E8E0BDBDB42
// 0x0010 (0x0060 - 0x0070)
class U__GFxData_Products_TA__InstanceAttributes_FF702B6F4C8B0245B8097E8E0BDBDB42 : public UObject
{
public:
	class UIProductAttributeProvider_TA*               AttributeProvider;                                		// 0x0060 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0068 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Products_TA__InstanceAttributes_FF702B6F4C8B0245B8097E8E0BDBDB42");
		}

		return uClassPointer;
	};

	void __GFxData_Products_TA__InstanceAttributes_FF702B6F4C8B0245B8097E8E0BDBDB42(class UGFxData_ProductAttribute_TA* GFxAttribute);
};

// Class TAGame.IProductAttributeProvider_TA
// 0x0000 (0x0060 - 0x0060)
class UIProductAttributeProvider_TA : public UInterface
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IProductAttributeProvider_TA");
		}

		return uClassPointer;
	};

	class UProductAttribute_TA* GetAttribute(class UClass* AttributeClass);
	TArray<class UProductAttribute_TA*> GetAttributes();
};

// Class TAGame.__GFxData_Products_TA__UpdateProductData_B56F908C4D6F4408E9698EBC84ABFB9C
// 0x0010 (0x0060 - 0x0070)
class U__GFxData_Products_TA__UpdateProductData_B56F908C4D6F4408E9698EBC84ABFB9C : public UObject
{
public:
	class ULoadingProduct_TA*                          ProductData;                                      		// 0x0060 (0x0008) [0x0000000000000000]               
	class UProduct_TA*                                 Product;                                          		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Products_TA__UpdateProductData_B56F908C4D6F4408E9698EBC84ABFB9C");
		}

		return uClassPointer;
	};

	bool __GFxData_Products_TA__UpdateProductData_47CFBDF443C05A6882DD65A08C0C47D6(class UProduct_TA* P);
	void __GFxData_Products_TA__UpdateProductData_974CF05647DC755AA4254994EB8EA53F(class UGFxData_ProductAttribute_TA* GFxAttribute);
	bool __GFxData_Products_TA__UpdateProductData_B56F908C4D6F4408E9698EBC84ABFB9C(class UProductAttribute_TA* A);
};

// Class TAGame.ProductAttribute_LevelSettings_TA
// 0x0010 (0x0080 - 0x0090)
class UProductAttribute_LevelSettings_TA : public UProductAttribute_TA
{
public:
	TArray<struct FProductLevelData>                   Levels;                                           		// 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_LevelSettings_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductStat_TA
// 0x0050 (0x0060 - 0x00B0)
class UProductStat_TA : public UObject
{
public:
	struct FString                                     Label;                                            		// 0x0060 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     Description;                                      		// 0x0070 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class APRI_TA*                                     PRI;                                              		// 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                ProductID;                                        		// 0x0088 (0x0004) [0x0000000000002000] (CPF_Transient)
	class ACar_TA*                                     Car;                                              		// 0x0090 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AGameEvent_TA*                               GameEvent;                                        		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AGameEvent_Soccar_TA*                        SoccarGame;                                       		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                Value;                                            		// 0x00A8 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bOnlyMinorUnitsInMetricDistanceStrings : 1;       		// 0x00AC (0x0004) [0x0000000000004002] [0x00000001] (CPF_Const | CPF_Config)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_TA");
		}

		return uClassPointer;
	};

	struct FString GetDistanceString(class APlayerControllerBase_TA* ForPC, int Meters);
	struct FString GetTimeString(int Seconds);
	struct FString GetDisplayValue(class APlayerControllerBase_TA* ForPC, int StatValue);
	struct FString GetDescription();
	struct FString GetLabel();
	void AddStatValue(int Amount);
	void SetCar(class ACar_TA* InCar);
	void SetGameEvent(class AGameEvent_TA* InGameEvent);
	void HandleCarDestroyed(class APawn_X* P);
	void HandleCarRefSet(class APRI_TA* InPRI);
	void HandleGameEventChanged(class APRI_TA* InPRI);
	void ShutDown();
	void OnInit();
	void Init(class APRI_TA* InPRI, int InProductID);
};

// Class TAGame.GFxData_ProductAttribute_Anthem_TA
// 0x0020 (0x00B0 - 0x00D0)
class UGFxData_ProductAttribute_Anthem_TA : public UGFxData_ProductAttribute_TA
{
public:
	struct FString                                     MusicTitle;                                       		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     ArtistTitle;                                      		// 0x00C0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_Anthem_TA");
		}

		return uClassPointer;
	};

	void UpdateAdditionalLoadedData(class UGFxData_Products_TA* GFxData_Products, class ULoadingProduct_TA* ProductData, class UProduct_TA* Product);
};

// Class TAGame.GFxData_ProductAttribute_Blueprint_TA
// 0x001C (0x00B0 - 0x00CC)
class UGFxData_ProductAttribute_Blueprint_TA : public UGFxData_ProductAttribute_TA
{
public:
	class UTexture*                                    ProductThumbnail;                                 		// 0x00B0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	class UTexture*                                    BlueprintThumbnail;                               		// 0x00B8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Cost;                                             		// 0x00C0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bRevealed : 1;                                    		// 0x00C4 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	struct FProductHashID                              PreviewProductHashID;                             		// 0x00C8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_Blueprint_TA");
		}

		return uClassPointer;
	};

	void OnReceivedAttribute(class UProductAttribute_Blueprint_TA* Attribute);
};

// Class TAGame.BlueprintThumbnailLoadResult
// 0x0010 (0x0060 - 0x0070)
class UBlueprintThumbnailLoadResult : public UObject
{
public:
	class UTexture*                                    ProductThumbnail;                                 		// 0x0060 (0x0008) [0x0000000000000000]               
	class UTexture*                                    BlueprintThumbnail;                               		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BlueprintThumbnailLoadResult");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_BlueprintGarage_TA
// 0x0028 (0x0098 - 0x00C0)
class UGFxData_BlueprintGarage_TA : public UGFxDataSingleton_X
{
public:
	class UOnlineProductStoreSet_TA*                   BlueprintGarageSet;                               		// 0x0098 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	TArray<struct FBlueprintPreviewProduct>            BlueprintPreviewProducts;                         		// 0x00A0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UOnlineProduct_TA*                           PendingBlueprintProduct;                          		// 0x00B0 (0x0008) [0x0000000000000000]               
	class USaveData_TA*                                SaveData;                                         		// 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_BlueprintGarage_TA");
		}

		return uClassPointer;
	};

	void __GFxData_BlueprintGarage_TA__OnShellSet_65E44D0849D7C4A2AAB12888608A75F9(struct FString _);
	void __GFxData_BlueprintGarage_TA__OnShellSet_18A894E54F6A8A556BAB71BBD990585F(class USaveGameManager_TA* M, class USaveData_TA* S, class UError* E);
	bool __GFxData_BlueprintGarage_TA__CreatePreviewProduct_C0EDED744BE0954AC19B23814C978CD3(struct FOnlineProductAttribute Attribute);
	void OnForceOpenFTUE();
	void OnBuildFail();
	void OnRevealFail();
	void OnBuildSuccess(struct FProductHashID Product);
	void OnRevealSuccess(struct FProductHashID RevealedBlueprint);
	void HandleBuildFail(class URPC_X* RPC);
	void HandleRevealFail(class URPC_X* RPC);
	void HandleBuildSuccess(class URPC_BuildBlueprint_TA* RPC);
	void HandleRevealSuccess(class URPC_RevealBlueprint_TA* RPC);
	struct FProductHashID CreateProductFromBlueprint(struct FOnlineProductData ProductToAdd, unsigned long long BlueprintToRemove);
	void ReturnPendingBlueprint();
	void StorePendingBlueprint(class UOnlineProduct_TA* Blueprint);
	bool OwnsRequiredProduct(struct FProductHashID BlueprintHashID);
	bool IsAlreadyOwned(struct FProductHashID BlueprintHashID);
	void Build(struct FProductHashID BlueprintHashID);
	void Reveal(struct FProductHashID BlueprintHashID);
	void Preview(struct FProductHashID BlueprintHashID);
	bool PreviewProductSeriesIDChanged(struct FBlueprintPreviewProduct PreviewProduct);
	TArray<struct FProductHashID> GetSimilarHashIDs(class UOnlineProduct_TA* OnlineProduct);
	void CreatePreviewProduct(struct FProductHashID BlueprintHashID, int Index);
	class UOnlineProduct_TA* GetOrCreatePreviewProduct(struct FProductHashID BlueprintHashID);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.MtxConfig_TA
// 0x0050 (0x0078 - 0x00C8)
class UMtxConfig_TA : public UOnlineConfig_X
{
public:
	unsigned long                                      bAllowMicroTransactions : 1;                      		// 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bAllowCurrencyTrading : 1;                        		// 0x0078 (0x0004) [0x0000000000004001] [0x00000002] (CPF_Edit | CPF_Config)
	unsigned long                                      bAllowCurrencyGifting : 1;                        		// 0x0078 (0x0004) [0x0000000000004001] [0x00000004] (CPF_Edit | CPF_Config)
	unsigned long                                      bAllowCurrencyForCurrencyTrades : 1;              		// 0x0078 (0x0004) [0x0000000000004001] [0x00000008] (CPF_Edit | CPF_Config)
	unsigned long                                      bEnablePlatformStartPurchase : 1;                 		// 0x0078 (0x0004) [0x0000000000000001] [0x00000010] (CPF_Edit)
	int                                                MaxCurrencyWalletAmount;                          		// 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                MaxCurrencyDailyAmount;                           		// 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FString                                     FulfillmentRestrictedWalletMessage;               		// 0x0088 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     FulfillmentRestrictedDailyMessage;                		// 0x0098 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     FulfillmentRestrictedTitle;                       		// 0x00A8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     CurrencyDelimeter;                                		// 0x00B8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MtxConfig_TA");
		}

		return uClassPointer;
	};

	bool CreateModalForError(class UGFxShell_TA* Shell, class UError* Error);
	void InitModalForError(class UGFxModal_X* Modal, class UErrorType* Error);
	void InitErrorModalWithBody(class UGFxModal_X* Modal, struct FString BodyString);
	struct FString LocalizeFulfillmentRestrictedMessage(struct FString Message);
};

// Class TAGame.ProductsConfig_TA
// 0x0040 (0x0078 - 0x00B8)
class UProductsConfig_TA : public UOnlineConfig_X
{
public:
	TArray<struct FReplacementProduct>                 ProhibitedProducts;                               		// 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FProductTradeInFilter>               TradeInFilters;                                   		// 0x0088 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FSeriesGroup>                        ItemSeries_AllowTradeIn;                          		// 0x0098 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FSeriesGroup>                        ItemSeries_PreventP2PTrade;                       		// 0x00A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductsConfig_TA");
		}

		return uClassPointer;
	};

	bool __ProductsConfig_TA__Apply_482A250D4A99D25FC654B181636D9B32(struct FReplacementProduct P);
	bool IsPlayerTradeProhibited(int SeriesID, unsigned char ProductQuality);
	struct FProductTradeInFilter GetTradeInFilter(int FilterID);
	bool IsTradeInAllowed(int SeriesID, unsigned char ProductQuality);
	class UOnlineProduct_TA* GetReplacementOnlineProduct(int ProductID);
	bool CanShowForOwningClient(int ProductID);
	bool IsProductIDProhibited(int ProductID);
	void Apply();
};

// Class TAGame.__GFxData_Products_TA__HandleProductThumbnailRendered_E8F78AE54D9479C34C5A2B8F57AD53A8
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Products_TA__HandleProductThumbnailRendered_E8F78AE54D9479C34C5A2B8F57AD53A8 : public UObject
{
public:
	class ULoadingProduct_TA*                          LoadingProduct;                                   		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Products_TA__HandleProductThumbnailRendered_E8F78AE54D9479C34C5A2B8F57AD53A8");
		}

		return uClassPointer;
	};

	void __GFxData_Products_TA__HandleProductThumbnailRendered_E8F78AE54D9479C34C5A2B8F57AD53A8(class UTextureRenderTarget2D* ThumbnailTexture);
};

// Class TAGame.__GFxData_Products_TA__RenderProductThumbnail_AD79C012437833E47962A6A34BB2A016
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Products_TA__RenderProductThumbnail_AD79C012437833E47962A6A34BB2A016 : public UObject
{
public:
	class ULoadingProduct_TA*                          ProductData;                                      		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Products_TA__RenderProductThumbnail_AD79C012437833E47962A6A34BB2A016");
		}

		return uClassPointer;
	};

	void __GFxData_Products_TA__RenderProductThumbnail_AD79C012437833E47962A6A34BB2A016(struct FProductThumbnailResult ThumbnailResult);
};

// Class TAGame.__GFxData_Products_TA__LoadAdditionalProductReferences_69D581544D583FB63501B992890AC2B8
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Products_TA__LoadAdditionalProductReferences_69D581544D583FB63501B992890AC2B8 : public UObject
{
public:
	class ULoadingProduct_TA*                          LoadingProduct;                                   		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Products_TA__LoadAdditionalProductReferences_69D581544D583FB63501B992890AC2B8");
		}

		return uClassPointer;
	};

	void ____GFxData_Products_TA__LoadAdditionalProductReferences_69D581544D583FB63501B992890AC2B8____GFxData_Products_TA__LoadAdditionalProductReferences_90A593BC4E8F86C57FD111984C2D2570_4997D9A74F9C1AC156980F84AF181DE2(struct FAssetLoadResult Result);
	void __GFxData_Products_TA__LoadAdditionalProductReferences_90A593BC4E8F86C57FD111984C2D2570(class UProductAttribute_TA* A);
	void __GFxData_Products_TA__LoadAdditionalProductReferences_13B196D649979DF2A0A86590E043DE92(struct FAssetLoadResult Result);
	void __GFxData_Products_TA__LoadAdditionalProductReferences_69D581544D583FB63501B992890AC2B8(struct FAssetLoadResult AssetResult);
};

// Class TAGame.__GFxData_Products_TA__StartLoadingProduct_1FC57EA645466E7BE0C933A30536B3BC
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Products_TA__StartLoadingProduct_1FC57EA645466E7BE0C933A30536B3BC : public UObject
{
public:
	class ULoadingProduct_TA*                          ProductToLoad;                                    		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Products_TA__StartLoadingProduct_1FC57EA645466E7BE0C933A30536B3BC");
		}

		return uClassPointer;
	};

	void __GFxData_Products_TA__StartLoadingProduct_BCD90919454FA8ADF5192FBC1E096149(struct FAssetLoadResult AssetResult);
	void __GFxData_Products_TA__StartLoadingProduct_1FC57EA645466E7BE0C933A30536B3BC(struct FAssetLoadResult PaintedAssetResult);
};

// Class TAGame.__GFxData_Products_TA__IsThumbnailReferenced_19EB90F44AFC85FE8C86F58AB13EE462
// 0x0011 (0x0060 - 0x0071)
class U__GFxData_Products_TA__IsThumbnailReferenced_19EB90F44AFC85FE8C86F58AB13EE462 : public UObject
{
public:
	class UProductAsset_TA*                            Asset;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
	class UOnlineProduct_TA*                           OnlineProduct;                                    		// 0x0068 (0x0008) [0x0000000000000000]               
	unsigned char                                      ThumbnailSize;                                    		// 0x0070 (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Products_TA__IsThumbnailReferenced_19EB90F44AFC85FE8C86F58AB13EE462");
		}

		return uClassPointer;
	};

	bool __GFxData_Products_TA__IsThumbnailReferenced_19EB90F44AFC85FE8C86F58AB13EE462(class ULoadingProduct_TA* L);
};

// Class TAGame.__GFxProductAttributeMap_TA__MapAttribute_0D327FB64826F1761C5F8DA3BB20B4B3
// 0x0008 (0x0060 - 0x0068)
class U__GFxProductAttributeMap_TA__MapAttribute_0D327FB64826F1761C5F8DA3BB20B4B3 : public UObject
{
public:
	class UClass*                                      AttributeClass;                                   		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxProductAttributeMap_TA__MapAttribute_0D327FB64826F1761C5F8DA3BB20B4B3");
		}

		return uClassPointer;
	};

	bool __GFxProductAttributeMap_TA__MapAttribute_0D327FB64826F1761C5F8DA3BB20B4B3(class UClass* GFxClass);
};

// Class TAGame.GFxData_Replay_TA
// 0x0014 (0x0094 - 0x00A8)
class UGFxData_Replay_TA : public UGFxDataRow_X
{
public:
	struct FString                                     FriendlyMapName;                                  		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Replay_TA");
		}

		return uClassPointer;
	};

	void SetReplay(class UReplay_TA* InReplay);
};

// Class TAGame.GFxData_ReplayManager_TA
// 0x0048 (0x0098 - 0x00E0)
class UGFxData_ReplayManager_TA : public UGFxDataSingleton_X
{
public:
	struct FString                                     ReplaySaveID;                                     		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     ReplaySaveError;                                  		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<class UGFxData_Replay_TA*>                  ReplayData;                                       		// 0x00B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UGFxModal_X*                                 ModalProcessing;                                  		// 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     PendingSaveName;                                  		// 0x00D0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ReplayManager_TA");
		}

		return uClassPointer;
	};

	void PrintReplays();
	void HandleReplayImported(class UReplayManager_TA* Manager, class UReplay_TA* InReplay, class UError* Error);
	void RenameReplay(struct FString Id, struct FString NewReplayName);
	void DeleteReplay(struct FString Id);
	void StartReplayID(struct FString Id);
	int GetReplayIndexFromID(struct FString Id);
	void StartReplayIndex(int Index);
	void OnReplaysLoaded();
	void HandleHeadersLoaded(class UReplayManager_TA* Manager, TArray<struct FReplayHeaderLoadResult> Headers, class UError* Error);
	void MarkReplayEditorOpened();
	void LoadReplays();
	void OnReplayExportFailed();
	void OnReplayExportSuccess();
	void HandleReplayExported(class UReplayManager_TA* Manager, struct FString Id, class UError* Error);
	class AReplayDirector_TA* GetReplayDirector();
	bool CanSaveReplay(class UReplay_TA* Replay);
	void SaveReplay(struct FString SaveName);
	bool ShouldAutoSaveReplay();
};

// Class TAGame.GFxModal_Processing_TA
// 0x0000 (0x00C8 - 0x00C8)
class UGFxModal_Processing_TA : public UGFxModal_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxModal_Processing_TA");
		}

		return uClassPointer;
	};

	class UGFxModal_X* CreateAndBind(class UGFxShell_TA* Shell, class UAsyncTask* Task);
	class UGFxModal_X* CreateAndBindNoCancel(class UGFxShell_TA* Shell, class UAsyncTask* Task);
};

// Class TAGame.GFxData_ReplayViewer_TA
// 0x0088 (0x0098 - 0x0120)
class UGFxData_ReplayViewer_TA : public UGFxDataSingleton_X
{
public:
	int                                                CurrentFrame;                                     		// 0x0098 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FLocalizedCameraMode>                CameraModes;                                      		// 0x00A0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FName                                       DefaultCameraMode;                                		// 0x00B0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FName                                       CameraMode;                                       		// 0x00B8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     FocusActorString;                                 		// 0x00C0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     LastFocusActorString;                             		// 0x00D0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long                                      bHighlightFocusActor : 1;                         		// 0x00E0 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bShowReplayHUD : 1;                               		// 0x00E0 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bShowMatchInfoHUD : 1;                            		// 0x00E0 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bShowPlayerNames : 1;                             		// 0x00E0 (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	unsigned long                                      bPausedForScrub : 1;                              		// 0x00E0 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	unsigned long                                      bChangesMade : 1;                                 		// 0x00E0 (0x0004) [0x0000000040000000] [0x00000020] (CPF_EditInlineNotify)
	float                                              Slomo;                                            		// 0x00E4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	float                                              FOV;                                              		// 0x00E8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                ViewRoll;                                         		// 0x00EC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class UReplay_TA*                                  Replay;                                           		// 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                PendingSkipToFrame;                               		// 0x00F8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class UGFxModal_X*                                 ModalProcessing;                                  		// 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventHudVisibilityUpdated__Delegate;            		// 0x0108 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ReplayViewer_TA");
		}

		return uClassPointer;
	};

	void AddCameraTrackPoint();
	void HandleCameraTargetChanged(class ACamera_TA* InCamera, class AActor* InTarget);
	void HandleReplayExported(class UReplayManager_TA* Manager, struct FString Id, class UError* Error);
	void SaveReplayAndExit();
	void SetPausedForScrub(unsigned long bPaused);
	void OnTimelineScrub();
	void OpenReplayFXMenu();
	void OpenHUDMenu(int KeyCode, int MouseButton);
	void OpenTimelineMenu(int KeyCode, int MouseButton);
	void OpenCameraMenu(int KeyCode, int MouseButton);
	void OpenFocusMenu(int KeyCode, int MouseButton);
	void OpenSpeedMenu(int KeyCode, int MouseButton);
	void RemoveKeyframe(int KeyframeIndex);
	void AddKeyframe(struct FName Type);
	void SetFOV(float InFOV);
	void SetShowPlayerNames(unsigned long bVisible);
	void SetShowMatchInfoHUD(unsigned long bVisible);
	void SetShowReplayHUD(unsigned long bVisible);
	void SetSlomo(float NewSlomo);
	void TimerSkipToFrame();
	void AdvanceTime(float DeltaTime);
	void AdvanceToFrame(int frame);
	void SetCameraMode(struct FName Mode);
	void SetFocusActorString(struct FString InFocusActorString);
	void RefreshDisabledModes();
	void InitCameraModes();
	void UpdateReplayData();
	void SetReplay(class UReplay_TA* InReplay);
	void EventHudVisibilityUpdated();
};

// Class TAGame.CameraTrack_TA
// 0x0058 (0x0060 - 0x00B8)
class UCameraTrack_TA : public UObject
{
public:
	TArray<class UCameraTrackPoint_TA*>                Points;                                           		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FInterpCurveVector                          LocationCurve;                                    		// 0x0070 (0x0018) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FInterpCurveVector                          RotationCurve;                                    		// 0x0088 (0x0018) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           FOVCurve;                                         		// 0x00A0 (0x0018) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraTrack_TA");
		}

		return uClassPointer;
	};

	struct FInterpCurvePointFloat __CameraTrack_TA__RebuildCurves_EAA07AF74D9BD63DF3B059B16F0AC404(class UCameraTrackPoint_TA* P);
	struct FInterpCurvePointVector __CameraTrack_TA__RebuildCurves_F2862836473586060CFADD8D698BC3F0(struct FCameraTrackRotationPoint R);
	struct FInterpCurvePointVector __CameraTrack_TA__RebuildCurves_7E3E645B4D7D37394C544F9B7EB0A74A(class UCameraTrackPoint_TA* P);
	void ResetCurves();
	TArray<struct FCameraTrackRotationPoint> GenerateRotationPoints();
	void RebuildCurves();
	float GetEndTime();
	void GetPOV(float Time, struct FCameraOrientation& OutPOV);
	void RemovePOV(int frame);
	void InsertPoint(class UCameraTrackPoint_TA* Point);
	void RecordPOV(int frame, float Time, struct FCameraOrientation& POV);
};

// Class TAGame.GFxData_SaveData_TA
// 0x0008 (0x0098 - 0x00A0)
class UGFxData_SaveData_TA : public UGFxDataSingleton_X
{
public:
	class UUISavedValues_TA*                           SavedValues;                                      		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_SaveData_TA");
		}

		return uClassPointer;
	};

	void __GFxData_SaveData_TA__OnShellSet_012A296F4DD094892320E7BA4E361753(class UUISavedValues_TA* Values);
	void SaveGlobalValue(struct FName Key, struct FString Value);
	bool HasGlobalValue(struct FName Key);
	struct FString GetGlobalValue(struct FName Key);
	void OnShellSet();
};

// Class TAGame.GFxData_Season_TA
// 0x0040 (0x0098 - 0x00D8)
class UGFxData_Season_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FSeasonTeamRank>                     TeamRankings;                                     		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FSeasonMatch>                        WeekMatches;                                      		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FSeasonWeek>                         Weeks;                                            		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UProfile_TA*                                 Profile;                                          		// 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USeason_TA*                                  Season;                                           		// 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Season_TA");
		}

		return uClassPointer;
	};

	int SortWeekMatch(struct FSeasonMatch A, struct FSeasonMatch B);
	void SetDifficulty(int NewDifficulty);
	void SetBots(struct FString BotID0, struct FString BotName0, struct FString BotID1, struct FString BotName1, struct FString BotID2, struct FString BotName2);
	void LoadWeekMatches(int Week);
	void CalcCurrentWeekRankings();
	void UpdateSeasonWeeks();
	void HandleWeekSimulated(class USeason_TA* InSeason);
	void SetSeason(class USeason_TA* InSeason);
	void RelocalizeTeams();
	void LoadLatestSeason();
	void eventOnShellSet();
};

// Class TAGame.ProductAttribute_CannotBeArchived_TA
// 0x0000 (0x0080 - 0x0080)
class UProductAttribute_CannotBeArchived_TA : public UProductAttribute_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_CannotBeArchived_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_DisplayLabelSlot_TA
// 0x0008 (0x0080 - 0x0088)
class UProductAttribute_DisplayLabelSlot_TA : public UProductAttribute_TA
{
public:
	class UProductSlot_TA*                             DisplayLabelSlot;                                 		// 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_DisplayLabelSlot_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_Trademark_TA
// 0x0001 (0x0080 - 0x0081)
class UProductAttribute_Trademark_TA : public UProductAttribute_TA
{
public:
	unsigned char                                      Glyph;                                            		// 0x0080 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Trademark_TA");
		}

		return uClassPointer;
	};

	struct FString GetGlyph();
};

// Class TAGame.GFxData_SeasonMode_TA
// 0x0058 (0x0098 - 0x00F0)
class UGFxData_SeasonMode_TA : public UGFxDataSingleton_X
{
public:
	TArray<class UProduct_TA*>                         PlayerBots;                                       		// 0x0098 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	int                                                NumSeasons;                                       		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FGFxLogoData>                        Logos;                                            		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FGFxBotData>                         Bots;                                             		// 0x00C0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UProductAsset_Logo_TA*                       TeamLogo;                                         		// 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USeasonSave_TA*                              SeasonSave;                                       		// 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UCarPreviewSet_TA*                           PreviewSet;                                       		// 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bUseSeasonColors : 1;                             		// 0x00E8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	int                                                CurrentTeamSize;                                  		// 0x00EC (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_SeasonMode_TA");
		}

		return uClassPointer;
	};

	bool InMainMenu();
	void DeleteSeason();
	void CreateSeason(int TeamSize, int Difficulty, int NumRegularWeeks, int NumPlayoffsTeams, struct FString TeamName, struct FName TeamLogoAsset, struct FString BotID0, struct FString BotID1, struct FString BotID2);
	void ClearBotPreviewActors();
	void TeamSizeChanged(int TeamSize);
	void SetBot(int BotIndex, struct FString BotID);
	void UpdateColors(class ACarPreviewActor_TA* PreviewActor);
	void RestoreStadiumColors();
	void SetLogo(struct FName LogoAsset);
	struct FString GetBotNameFromID(struct FString Id);
	void BuildBotData();
	void BuildLogoData();
	void HandlePreviewActorsChanged(class UCarPreviewSet_TA* G);
	void HandleSetProfile(class ACarPreviewActor_TA* Car);
	void eventOnShellSet();
};

// Class TAGame.GFxData_ServerBrowser_TA
// 0x0058 (0x0098 - 0x00F0)
class UGFxData_ServerBrowser_TA : public UGFxDataSingleton_X
{
public:
	class ULocalPlayer_TA*                             TAPlayer;                                         		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     ServerName;                                       		// 0x00A0 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Password;                                         		// 0x00B0 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FServerResult>                       Results;                                          		// 0x00C0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UGFxModal_X*                                 ProcessingModal;                                  		// 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     JoiningServerName;                                		// 0x00D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UServerBrowserSettingsSave_TA*               SaveData;                                         		// 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ServerBrowser_TA");
		}

		return uClassPointer;
	};

	void HandleCancelSearch(class UGFxModal_X* Modal);
	void HandleCancelJoin(class UGFxModal_X* Modal);
	void HandleJoinGameComplete(unsigned long bSuccess, struct FString FailReason);
	void JoinServer(struct FString InServerName, struct FServerReservationData Reservation, struct FJoinMatchSettings JoinSettings);
	void HandleLanSearchComplete(unsigned long bCancelled);
	void HandleLanResponse(struct FServerResult& HostResponse);
	void HandleReservation(struct FServerReservationData& Reservation);
	void HandleSearchComplete(TArray<struct FServerResult>& InResults);
	void HandleSearchError(struct FString msg);
	void CancelJoin();
	void CancelSearch();
	void StartLanSearch();
	void StartSearch();
	void SetPassword(struct FString InPassword);
	void SetServerName(struct FString InServerName);
	void JoinServerByNamePassword(struct FString CustomServerName, struct FString CustomServerPassword);
	void HandleSaveDataLoad(class UServerBrowserSettingsSave_TA* InSaveData);
	void eventOnShellSet();
	class UOnlineGame_X* GetOnlineGame();
};

// Class TAGame.ServerBrowserSettingsSave_TA
// 0x0000 (0x0160 - 0x0160)
class UServerBrowserSettingsSave_TA : public UCustomMatchSettingsSave_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ServerBrowserSettingsSave_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_UserSetting_TA
// 0x014C (0x0094 - 0x01E0)
class UGFxData_UserSetting_TA : public UGFxDataRow_X
{
public:
	unsigned char                                      Type;                                             		// 0x0098 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FName                                       Group;                                            		// 0x009C (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FName                                       Id;                                               		// 0x00A4 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     Label;                                            		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Description;                                      		// 0x00C0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Values;                                           		// 0x00D0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FString>                             ValuesArray;                                      		// 0x00E0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     Labels;                                           		// 0x00F0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Value;                                            		// 0x0100 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long                                      bUserSetting : 1;                                 		// 0x0110 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bEnabled : 1;                                     		// 0x0110 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	struct FString                                     DefaultValue;                                     		// 0x0118 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FProfileSliderLimits                        Limits;                                           		// 0x0128 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __OnListValueGet__Delegate;                       		// 0x0138 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnListValueSet__Delegate;                       		// 0x0150 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnBooleanValueGet__Delegate;                    		// 0x0168 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnBooleanValueSet__Delegate;                    		// 0x0180 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnScalarValueGet__Delegate;                     		// 0x0198 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnScalarValueSet__Delegate;                     		// 0x01B0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __GetDefaultValue__Delegate;                      		// 0x01C8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_UserSetting_TA");
		}

		return uClassPointer;
	};

	void Clear();
	void SetScalarValue(struct FString InValue);
	void SetBooleanValue(struct FString InValue, unsigned long bVisualOnly);
	void SetListValue(struct FString InValue);
	void SetValue(struct FString InValue);
	class UGFxData_UserSetting_TA* AddEnumValue(int InValue, struct FString InLabel);
	class UGFxData_UserSetting_TA* AddLocalizedValue(struct FString InValue, struct FString InLabel);
	class UGFxData_UserSetting_TA* AddValue(struct FString InValue, struct FString Key);
	void SetScalarLimits(struct FProfileSliderLimits InLimits);
	void Init(unsigned char InType, struct FName InGroup, struct FName InID, struct FString InDefaultValue, unsigned long bInUserSetting, unsigned long bInEnabled);
	struct FString GetDefaultValue();
	void OnScalarValueSet(class UGFxData_UserSetting_TA* Setting, float InValue);
	float OnScalarValueGet(class UGFxData_UserSetting_TA* Setting);
	void OnBooleanValueSet(class UGFxData_UserSetting_TA* Setting, unsigned long InValue);
	bool OnBooleanValueGet(class UGFxData_UserSetting_TA* Setting);
	void OnListValueSet(class UGFxData_UserSetting_TA* Setting, struct FString InValue);
	struct FString OnListValueGet(class UGFxData_UserSetting_TA* Setting);
};

// Class TAGame.GFxData_Settings_TA
// 0x01E8 (0x0098 - 0x0280)
class UGFxData_Settings_TA : public UGFxDataSingleton_X
{
public:
	class UTAsyncResult__PrivilegeCheck_X*             CrossNetworkTask;                                 		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FProfileSliderLimits                        MouseSensitivityLimits;                           		// 0x00A0 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FProfileSliderLimits                        ControllerDeadzoneLimits;                         		// 0x00AC (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FProfileSliderLimits                        MouseDeadZoneLimits;                              		// 0x00B8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FProfileSliderLimits                        KeyboardAxisBlendLimits;                          		// 0x00C4 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FProfileSliderLimits                        SteeringSensitivityLimits;                        		// 0x00D0 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FProfileSliderLimits                        AirControlSensitivityLimits;                      		// 0x00DC (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FProfileSliderLimits                        DodgeInputThresholdLimits;                        		// 0x00E8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FProfileSliderLimits                        SafeZoneLimits;                                   		// 0x00F4 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FProfileSliderLimits                        UIScaleLimits;                                    		// 0x0100 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FProfileSliderLimits                        NameplateScaleLimits;                             		// 0x010C (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FProfileSliderLimits                        HDRBrightnessScaleLimits;                         		// 0x0118 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FProfileSliderLimits                        HDRPaperWhiteScaleLimits;                         		// 0x0124 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FProfileSliderLimits                        HDRGammaScaleLimits;                              		// 0x0130 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FProfileSliderLimits                        ForceFeedbackScaleLimits;                         		// 0x013C (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FString                                     LoadingString;                                    		// 0x0148 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ShowBindingsModal_ErrorMessage;                   		// 0x0158 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UGFxData_UserSetting_TA*                     CrossplaySetting;                                 		// 0x0168 (0x0008) [0x0000000000000000]               
	TArray<class UGFxData_UserSetting_TA*>             UserSettings;                                     		// 0x0170 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     OldResolution;                                    		// 0x0180 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     OldWindowMode;                                    		// 0x0190 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long                                      OldVSync : 1;                                     		// 0x01A0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bSettingRenderDetail : 1;                         		// 0x01A0 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bSettingCameraPreset : 1;                         		// 0x01A0 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	class UProfile_TA*                                 Profile;                                          		// 0x01A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USaveData_TA*                                SaveData;                                         		// 0x01B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGameViewportClient_X*                       Viewport;                                         		// 0x01B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UUserSettingObserver_TA*                     SettingObserver;                                  		// 0x01C0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class USoundSettingsSave_TA*                       SoundSave;                                        		// 0x01C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USoundSettingsControllerSave_TA*             SoundSaveController;                              		// 0x01D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGameplaySettingsSave_TA*                    GameplaySave;                                     		// 0x01D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProfileGameplaySave_TA*                     ProfileGameplaySave;                              		// 0x01E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UNetworkSave_TA*                             NetworkSave;                                      		// 0x01E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UConnectionQualitySave_TA*                   ConnectionQualitySave;                            		// 0x01F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProfileCameraSave_TA*                       ProfileCameraSave;                                		// 0x01F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProfileGamepadSave_TA*                      GamepadSave;                                      		// 0x0200 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UVideoSettingsSave_TA*                       VideoSave;                                        		// 0x0208 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMusicPlayerSave_TA*                         MusicSave;                                        		// 0x0210 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProfileControlsSave_TA*                     ProfileControlsSave;                              		// 0x0218 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UNotificationSave_TA*                        NotificationSave;                                 		// 0x0220 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UEpicAccountSave_TA*                         EpicAccountSave;                                  		// 0x0228 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxData_UserSetting_TA*                     SteamInputSettings;                               		// 0x0230 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                ControllerCount;                                  		// 0x0238 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FString                                     WarnCrossPlatformTournament;                      		// 0x0240 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     WarnCrossPlatformTournamentAndParty;              		// 0x0250 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     DisableAndLeave;                                  		// 0x0260 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     WarnChangingScheduleRegion;                       		// 0x0270 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Settings_TA");
		}

		return uClassPointer;
	};

	void __GFxData_Settings_TA__InitCameraSettings_118A451A4D7041CB3F21C09AB475804A(class UGFxData_UserSetting_TA* Setting, float Value);
	float __GFxData_Settings_TA__InitCameraSettings_D9B344694EB4472DB6D83683689F4E1B(class UGFxData_UserSetting_TA* _);
	void __GFxData_Settings_TA__InitCameraSettings_72B5E0AB434B0722E609BAAAEEEBF189(class UGFxData_UserSetting_TA* Setting, float Value);
	float __GFxData_Settings_TA__InitCameraSettings_E67B33A741D102DC86D6D8B0D142FAF8(class UGFxData_UserSetting_TA* _);
	void __GFxData_Settings_TA__InitCameraSettings_D9CFBA7849C5929F90DE05954BDBF8FB(class UGFxData_UserSetting_TA* Setting, unsigned long Value);
	bool __GFxData_Settings_TA__InitCameraSettings_8A1CA42C46A793590285A3A653F9811C(class UGFxData_UserSetting_TA* _);
	void __GFxData_Settings_TA__InitNetworkSettings_ED9F152F4A046D829E565AAD08ACCC30(class UGFxData_UserSetting_TA* Setting, struct FString Value);
	struct FString __GFxData_Settings_TA__InitNetworkSettings_D3B3BA3E408CD4D23D046AAC38540313(class UGFxData_UserSetting_TA* Setting);
	void __GFxData_Settings_TA__InitGameplaySettings_C24B477D495D3FB9FC7F669847397277(class UGFxData_UserSetting_TA* _, unsigned long bValue);
	bool __GFxData_Settings_TA__InitGameplaySettings_8A7355B64074D19B00B18C8AF812A27A(class UGFxData_UserSetting_TA* _);
	void __GFxData_Settings_TA__SetTourScheduleRegion_7869FA474D17A0005BFEF7AC3C5F9D0E(class UGFxModal_X* _);
	void __GFxData_Settings_TA__SetDefaults_128AE3CC40B8DA419FC0D5B483A231DC(class UGFxData_UserSetting_TA* Setting);
	void TriggerSettingChangedEvent(struct FName SettingName);
	void InitReplayFXSettings();
	void SetDodgeInputThreshold(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetDodgeInputThreshold(class UGFxData_UserSetting_TA* UserSetting);
	void SetKeyboardAxisBlendTime(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetKeyboardAxisBlendTime(class UGFxData_UserSetting_TA* UserSetting);
	void SetControllerDeadzone(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetControllerDeadzone(class UGFxData_UserSetting_TA* UserSetting);
	void SetMouseSensitivity(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetMouseSensitivity(class UGFxData_UserSetting_TA* UserSetting);
	void SetAirControlSensitivity(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetAirControlSensitivity(class UGFxData_UserSetting_TA* UserSetting);
	void SetSteeringSensitivity(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetSteeringSensitivity(class UGFxData_UserSetting_TA* UserSetting);
	void UpdateForceFeedbackEnabled(class UGFxData_UserSetting_TA* UserSetting);
	void SetForceFeedbackMode(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetForceFeedbackMode(class UGFxData_UserSetting_TA* UserSetting);
	void SetForceFeedbackScale(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetForceFeedbackScale(class UGFxData_UserSetting_TA* UserSetting);
	void SetHoldMouseCameraEnabled(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetHoldMouseCameraEnabled(class UGFxData_UserSetting_TA* UserSetting);
	void SetMouseCameraSwivel(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetMouseCameraSwivel(class UGFxData_UserSetting_TA* UserSetting);
	void ShowBindings();
	void OnControllerRegistrationChanged(int LocalPlayerNum);
	void HandleUnregisteredController(int LocalPlayerNum);
	void HandleRegisteredController(int LocalPlayerNum, int ControllerId);
	void RefreshSteamInputSettings();
	struct FString SteamInputSettings_ControllerSelected(int ControllerId);
	struct FString SteamInputSettings_IgnoreInput();
	struct FString SteamInputSettings_Autodetect();
	int GetControllerIDFromValue(struct FString Value);
	void SetSteamInputSettings(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetSteamInputSettings(class UGFxData_UserSetting_TA* UserSetting);
	void SetAirPitchSafetyEnabled(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetAirPitchSafetyEnabled(class UGFxData_UserSetting_TA* UserSetting);
	void SetBallTrajectoryEnabled(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetBallTrajectoryEnabled(class UGFxData_UserSetting_TA* UserSetting);
	void SetAimAssistEnabled(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetAimAssistEnabled(class UGFxData_UserSetting_TA* UserSetting);
	void SetAimAssistLevelOverride(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetAimAssistLevelOverride(class UGFxData_UserSetting_TA* UserSetting);
	void SetControlPreset(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetControlPreset(class UGFxData_UserSetting_TA* UserSetting);
	void AddToControlPresets(struct FName PresetName, TArray<struct FBindingPreset>& Presets);
	TArray<struct FBindingPreset> GetControlPresets();
	void OnControlPresetChanged();
	void InitControlsSettings();
	bool IsAutoCamSpectator();
	bool IsSpectator();
	void SetDefaults(struct FName Group);
	int CompareSettingDefaultPriority(class UGFxData_UserSetting_TA* A, class UGFxData_UserSetting_TA* B);
	struct FString GetCrossplayDefaultValue();
	void SetCrossPlay(class UGFxData_UserSetting_TA* UserSetting, unsigned long bNewValue);
	void CrossplayPartyValidation(class UGFxData_UserSetting_TA* UserSetting, unsigned long RequestedValue);
	void HandleCrossPlatformEnabledChanged();
	bool GetCrossPlay(class UGFxData_UserSetting_TA* UserSetting);
	void SetNameplateScale(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetNameplateScale(class UGFxData_UserSetting_TA* UserSetting);
	void SetNameplateMode(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetNameplateMode(class UGFxData_UserSetting_TA* UserSetting);
	void SetShowInGameNotifications(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetShowInGameNotifications(class UGFxData_UserSetting_TA* UserSetting);
	void SetCompDivisions(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetCompDivisions(class UGFxData_UserSetting_TA* UserSetting);
	void SetMessageLevel(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetMessageLevel(class UGFxData_UserSetting_TA* UserSetting);
	void SetMetric(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetMetric(class UGFxData_UserSetting_TA* UserSetting);
	void SetBallIndicator(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetBallIndicator(class UGFxData_UserSetting_TA* UserSetting);
	void UpdateEnableSavingValue();
	void HandleSaveDataPostEnableComplete(class USaveGameManager_TA* SaveManager, class USaveData_TA* ForSaveData, class UError* Error);
	void RefreshTourScheduleRegionLabel();
	void HandleFailedSetTourScheduleRegion(class UError* InError);
	void SetTourScheduleRegion(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetTourScheduleRegion(class UGFxData_UserSetting_TA* UserSetting);
	void SetInGameStatNotification(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetInGameStatNotification(class UGFxData_UserSetting_TA* UserSetting);
	void SetEnableSaving(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetEnableSaving(class UGFxData_UserSetting_TA* UserSetting);
	void SetSplitscreenMode(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetSplitscreenMode(class UGFxData_UserSetting_TA* UserSetting);
	void SetEnableFreeplayUnlimitedBoost(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetEnableFreeplayUnlimitedBoost(class UGFxData_UserSetting_TA* UserSetting);
	void SetChatFilter(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetChatFilter(class UGFxData_UserSetting_TA* UserSetting);
	void SetVoiceFilter(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetVoiceFilter(class UGFxData_UserSetting_TA* UserSetting);
	void SetTeamColoredBoostMeter(class UGFxData_UserSetting_TA* UserSetting, unsigned long bValue);
	bool GetTeamColoredBoostMeter(class UGFxData_UserSetting_TA* UserSetting);
	void SetStatGraphLevel(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetStatGraphLevel(class UGFxData_UserSetting_TA* UserSetting);
	void SetConvertPlatformFriends(class UGFxData_UserSetting_TA* UserSetting, unsigned long bValue);
	bool GetConvertPlatformFriends(class UGFxData_UserSetting_TA* UserSetting);
	void InitInterfaceSettings();
	void InitGameplaySettings();
	void SetShowNetQualityIndicators(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetShowNetQualityIndicators(class UGFxData_UserSetting_TA* Setting);
	void SetIncomingBandwidth(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetIncomingBandwidth(class UGFxData_UserSetting_TA* Setting);
	void SetIncomingPacketFrequency(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetIncomingPacketFrequency(class UGFxData_UserSetting_TA* Setting);
	void SetOutgoingPacketFrequency(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetOutgoingPacketFrequency(class UGFxData_UserSetting_TA* Setting);
	void InitNetworkSettings();
	void InitCrossPlaySetting();
	bool GetFocusOnGoals(class UGFxData_UserSetting_TA* UserSetting);
	void SetFocusOnGoals(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetUseReplayCamera(class UGFxData_UserSetting_TA* UserSetting);
	void SetUseReplayCamera(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	float GetAutoCamAerialPrediction(class UGFxData_UserSetting_TA* UserSetting);
	void SetAutoCamAerialPrediction(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetAutoCamPlayerFocusBlendSpeed(class UGFxData_UserSetting_TA* UserSetting);
	void SetAutoCamPlayerFocusBlendSpeed(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetAutoCamAerialDistance(class UGFxData_UserSetting_TA* UserSetting);
	void SetAutoCamAerialDistance(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetAutoCamRotateSpeed(class UGFxData_UserSetting_TA* UserSetting);
	void SetAutoCamRotateSpeed(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetAutoCamMoveSpeedZ(class UGFxData_UserSetting_TA* UserSetting);
	void SetAutoCamMoveSpeedZ(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetAutoCamMoveSpeed(class UGFxData_UserSetting_TA* UserSetting);
	void SetAutoCamMoveSpeed(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetAutoCamZ(class UGFxData_UserSetting_TA* UserSetting);
	void SetAutoCamZ(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetAutoCamDistance(class UGFxData_UserSetting_TA* UserSetting);
	void SetAutoCamDistance(class UGFxData_UserSetting_TA* UserSetting, float Value);
	void SetAutoCamFOV(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetAutoCamFOV(class UGFxData_UserSetting_TA* UserSetting);
	void SetBallcamMode(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetBallcamMode(class UGFxData_UserSetting_TA* UserSetting);
	void SetBallcamIndicator(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetBallcamIndicator(class UGFxData_UserSetting_TA* UserSetting);
	void SetCameraType(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetCameraType(class UGFxData_UserSetting_TA* UserSetting);
	void SetCameraTransitionSpeed(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetCameraTransitionSpeed(class UGFxData_UserSetting_TA* UserSetting);
	void SetCameraSwivelSpeed(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetCameraSwivelSpeed(class UGFxData_UserSetting_TA* UserSetting);
	void SetCameraStiffness(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetCameraStiffness(class UGFxData_UserSetting_TA* UserSetting);
	void SetCameraDistance(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetCameraDistance(class UGFxData_UserSetting_TA* UserSetting);
	void SetCameraAngle(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetCameraAngle(class UGFxData_UserSetting_TA* UserSetting);
	void SetCameraHeight(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetCameraHeight(class UGFxData_UserSetting_TA* UserSetting);
	void SetGreenScreenColor(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetGreenScreenColor(class UGFxData_UserSetting_TA* UserSetting);
	void SetCameraBloomScale(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetCameraBloomScale(class UGFxData_UserSetting_TA* UserSetting);
	struct FString GetImageOverlaySetting(class UGFxData_UserSetting_TA* UserSetting);
	struct FString GetImageFilterSetting(class UGFxData_UserSetting_TA* UserSetting);
	void SetFilterOverlayIntensity(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetFilterOverlayIntensity(class UGFxData_UserSetting_TA* UserSetting);
	void SetImageFilterIntensity(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetImageFilterIntensity(class UGFxData_UserSetting_TA* UserSetting);
	void SetImageOverlaySetting(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	void SetImageFilterSetting(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	void SetReplayTranslucent(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetReplayTranslucent(class UGFxData_UserSetting_TA* UserSetting);
	void SetCameraDOFKernel(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetCameraDOFKernel(class UGFxData_UserSetting_TA* UserSetting);
	void SetCameraDOFMaxNear(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetCameraDOFMaxNear(class UGFxData_UserSetting_TA* UserSetting);
	void SetCameraDOFMaxFar(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetCameraDOFMaxFar(class UGFxData_UserSetting_TA* UserSetting);
	void SetCameraDOFDistance(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetCameraDOF(class UGFxData_UserSetting_TA* UserSetting);
	void SetCameraFOV(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetCameraFOV(class UGFxData_UserSetting_TA* UserSetting);
	void SetCameraShake(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetCameraShake(class UGFxData_UserSetting_TA* UserSetting);
	void SetLockSpectatorBallCam(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetLockSpectatorBallCam(class UGFxData_UserSetting_TA* UserSetting);
	void SetInvertSpectatorPitch(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetInvertSpectatorPitch(class UGFxData_UserSetting_TA* UserSetting);
	void SetInvertSwivelPitch(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetInvertSwivelPitch(class UGFxData_UserSetting_TA* UserSetting);
	void SetCameraSettingsPreset(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	void SaveCameraSettingsPreset(class UGFxData_UserSetting_TA* UserSetting);
	struct FString GetCameraSettingsPreset(class UGFxData_UserSetting_TA* UserSetting);
	void OnCameraOptionChanged();
	void InitCameraSettings();
	void SetPushToTalk(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetPushToTalk(class UGFxData_UserSetting_TA* UserSetting);
	void SetStreamerSafeAudioEnabled(class UGFxData_UserSetting_TA* UserSetting, unsigned long bNewValue);
	bool GetStreamerSafeAudioEnabled(class UGFxData_UserSetting_TA* UserSetting);
	void SetMuteOnFocusLost(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetMuteOnFocusLost(class UGFxData_UserSetting_TA* UserSetting);
	void SetMusicStingersSetting(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetMusicStingersSetting(class UGFxData_UserSetting_TA* UserSetting);
	void SetPlayMusicInGameSetting(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetPlayMusicInGameSetting(class UGFxData_UserSetting_TA* UserSetting);
	void SetPlayMusicInTrainingSetting(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetPlayMusicInTrainingSetting(class UGFxData_UserSetting_TA* UserSetting);
	void SetPlayMusicInMenuSetting(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetPlayMusicInMenuSetting(class UGFxData_UserSetting_TA* UserSetting);
	void SetDynamicRange(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetDynamicRange(class UGFxData_UserSetting_TA* UserSetting);
	void SetOutputType(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetOutputType(class UGFxData_UserSetting_TA* UserSetting);
	void SetControllerSoundMode(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetControllerSoundMode(class UGFxData_UserSetting_TA* UserSetting);
	void SetControllerVolume(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetControllerVolume(class UGFxData_UserSetting_TA* UserSetting);
	void SetVoiceVolume(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetVoiceVolume(class UGFxData_UserSetting_TA* UserSetting);
	void SetCrowdVolume(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetCrowdVolume(class UGFxData_UserSetting_TA* UserSetting);
	void SetAmbientVolume(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetAmbientVolume(class UGFxData_UserSetting_TA* UserSetting);
	void SetGameplayMusicVolume(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetGameplayMusicVolume(class UGFxData_UserSetting_TA* UserSetting);
	void SetMusicVolume(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetMusicVolume(class UGFxData_UserSetting_TA* UserSetting);
	void SetGameVolume(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetGameVolume(class UGFxData_UserSetting_TA* UserSetting);
	void SetMasterVolume(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetMasterVolume(class UGFxData_UserSetting_TA* UserSetting);
	void InitAudioSettings();
	void SetUncappedFramerate(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetUncappedFramerate(class UGFxData_UserSetting_TA* UserSetting);
	void SetUseTranslucentArenaShadersAdvancedOption(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	void SetUseTranslucentArenaShaders(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetUseTranslucentArenaShaders(class UGFxData_UserSetting_TA* UserSetting);
	void SetUIScale(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetUIScale(class UGFxData_UserSetting_TA* UserSetting);
	void SetSafeZone(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetSafeZone(class UGFxData_UserSetting_TA* UserSetting);
	void SetMotionBlur(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetMotionBlur(class UGFxData_UserSetting_TA* UserSetting);
	void SetDynamicShadows(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetDynamicShadows(class UGFxData_UserSetting_TA* UserSetting);
	void SetLensFlares(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetLensFlares(class UGFxData_UserSetting_TA* UserSetting);
	void SetLightShaftsAdvancedOption(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	void SetLightShafts(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetLightShafts(class UGFxData_UserSetting_TA* UserSetting);
	void SetBloom(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetBloom(class UGFxData_UserSetting_TA* UserSetting);
	void SetDepthOfField(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetDepthOfField(class UGFxData_UserSetting_TA* UserSetting);
	void SetAmbientOcclusion(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetAmbientOcclusion(class UGFxData_UserSetting_TA* UserSetting);
	void SetHighQualityShaders(class UGFxData_UserSetting_TA* UserSetting, unsigned long Value);
	bool GetHighQualityShaders(class UGFxData_UserSetting_TA* UserSetting);
	void SetWorldDetail(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetParticleDetail(class UGFxData_UserSetting_TA* UserSetting);
	struct FString GetWorldDetail(class UGFxData_UserSetting_TA* UserSetting);
	void SetParticleDetail(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	void SetTextureDetail(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	void SetRenderDetail(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	void SaveVideoValueString(class UGFxData_UserSetting_TA* UserSetting);
	struct FString GetSavedVideoValueString(class UGFxData_UserSetting_TA* UserSetting);
	void SetRenderQuality(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetRenderQuality(class UGFxData_UserSetting_TA* UserSetting);
	void SetAntiAlias(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetAntiAlias(class UGFxData_UserSetting_TA* UserSetting);
	void OnAdvancedVideoOptionChanged();
	void InitVideoSettings();
	void SetEnableHDRSideBySideVisualizer(class UGFxData_UserSetting_TA* UserSetting, unsigned long bValue);
	bool GetEnableHDRSideBySideVisualizer(class UGFxData_UserSetting_TA* UserSetting);
	void SetHDRGammaScale(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetHDRGammaScale(class UGFxData_UserSetting_TA* UserSetting);
	void SetHDRPaperWhiteScale(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetHDRPaperWhiteScale(class UGFxData_UserSetting_TA* UserSetting);
	void SetHDRBrightnessScale(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetHDRBrightnessScale(class UGFxData_UserSetting_TA* UserSetting);
	void SaveViewportSettings();
	void RevertViewportSettings();
	void SetMSAASampleCountScale(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetMSAASampleCountScale(class UGFxData_UserSetting_TA* UserSetting);
	void SetViewportSettings(struct FString ResolutionValue, struct FString WindowModeValue, unsigned long VSyncValue);
	void ApplyViewportSettings(struct FString ResolutionValue, struct FString WindowModeValue, unsigned long VSyncValue);
	void SetRefreshRate(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetRefreshRate(class UGFxData_UserSetting_TA* UserSetting);
	void SetMaxFPS(class UGFxData_UserSetting_TA* UserSetting, float Value);
	float GetMaxFPS(class UGFxData_UserSetting_TA* UserSetting);
	void SetForceDefaultColors(class UGFxData_UserSetting_TA* UserSetting, unsigned long bValue);
	bool GetForceDefaultColors(class UGFxData_UserSetting_TA* UserSetting);
	void SetEffectIntensity(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetEffectIntensity(class UGFxData_UserSetting_TA* UserSetting);
	void SetColorBlind(class UGFxData_UserSetting_TA* UserSetting, unsigned long bValue);
	bool GetColorBlind(class UGFxData_UserSetting_TA* UserSetting);
	void SetConsoleQualityMode(class UGFxData_UserSetting_TA* UserSetting, struct FString Value);
	struct FString GetConsoleQualityMode(class UGFxData_UserSetting_TA* UserSetting);
	void SetWeatherFX(class UGFxData_UserSetting_TA* UserSetting, unsigned long bValue);
	bool GetWeatherFX(class UGFxData_UserSetting_TA* UserSetting);
	void SetVSync(class UGFxData_UserSetting_TA* UserSetting, unsigned long bValue);
	bool GetVSync(class UGFxData_UserSetting_TA* UserSetting);
	struct FString GetWindowMode(class UGFxData_UserSetting_TA* UserSetting);
	struct FString GetResolution(class UGFxData_UserSetting_TA* UserSetting);
	void InitViewportSettings();
	int SortResolutions(struct FIntPoint A, struct FIntPoint B);
	int GetGreatestCommonDenominator(int X, int Y);
	void SetScalarValue(struct FName Id, float Value);
	void SetBooleanValue(struct FName Id, unsigned long Value);
	void SetListValue(struct FName Id, struct FString Value);
	struct FString EnumToString(int Value);
	struct FString BoolToString(unsigned long Value);
	bool StringToBool(struct FString Value);
	class UGFxData_UserSetting_TA* CreateScalarUserSetting(struct FName Group, struct FName Id, float DefaultValue, struct FScriptDelegate GetFunc, struct FScriptDelegate SetFunc, struct FProfileSliderLimits Limits, unsigned long bUserSetting, unsigned long bEnabled);
	class UGFxData_UserSetting_TA* CreateBooleanUserSetting(struct FName Group, struct FName Id, unsigned long DefaultValue, struct FScriptDelegate GetFunc, struct FScriptDelegate SetFunc, unsigned long bUserSetting, unsigned long bEnabled);
	class UGFxData_UserSetting_TA* CreateListUserSetting(struct FName Group, struct FName Id, struct FString DefaultValue, struct FScriptDelegate GetFunc, struct FScriptDelegate SetFunc, unsigned long bUserSetting, unsigned long bEnabled);
	class UGFxData_UserSetting_TA* GetUserSetting(struct FName Id);
	int GetUserSettingIndex(struct FName Id);
	void LoadUserSettings();
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.AutoTour_TA
// 0x0118 (0x0060 - 0x0178)
class UAutoTour_TA : public UObject
{
public:
	TArray<struct FScheduledTournament>                Schedules;                                        		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FTournamentWeek>                     CycleResults;                                     		// 0x0070 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long long                                 IneligibleScheduleID;                             		// 0x0080 (0x0008) [0x0000000000000000]               
	struct FString                                     RegionID;                                         		// 0x0088 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 CycleID;                                          		// 0x0098 (0x0008) [0x0000000000000000]               
	unsigned long long                                 CycleEndTime;                                     		// 0x00A0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                WeekID;                                           		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 WeekEndTime;                                      		// 0x00B0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FShopCurrencyInfo>                   WeeklyCurrencies;                                 		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<int>                                        MaxTierScores;                                    		// 0x00C8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              DataRefreshTime;                                  		// 0x00D8 (0x0004) [0x0000000000000000]               
	float                                              LastSyncTime;                                     		// 0x00DC (0x0004) [0x0000000000000000]               
	class UAutoTourConfig_TA*                          Config;                                           		// 0x00E0 (0x0008) [0x0000000000000000]               
	class UOnlineGame_X*                               OnlineGame;                                       		// 0x00E8 (0x0008) [0x0000000000000000]               
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourList_TA*                                TourList;                                         		// 0x00F8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FScriptDelegate                             __EventTourCardsChanged__Delegate;                		// 0x0100 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __Schedules__ChangeNotify;                        		// 0x0118 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __CycleResults__ChangeNotify;                     		// 0x0130 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __IneligibleScheduleID__ChangeNotify;             		// 0x0148 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __RegionID__ChangeNotify;                         		// 0x0160 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AutoTour_TA");
		}

		return uClassPointer;
	};

	void __AutoTour_TA__Construct_5E13FBE645AD8CF82EDE99B44DAE047B(class UTourSubscriptions_TA* S, class UError* E);
	void __AutoTour_TA__SetScheduleRegionID_DC96D0C74C4200BE13FA41AE515C98A9(class URPC_TourSetScheduleRegion_TA* RPC);
	void __AutoTour_TA__SyncSchedule_CA95DC104094B13ABA75A485EF2897AC(class URPC_AutoTour_GetSchedule_TA* RPC);
	TArray<class UTourSettings_TA*> __AutoTour_TA__SetSchedules_ADD14C154F8BCDB663A4D7ADABF1AF7C(struct FScheduledTournament S);
	bool __AutoTour_TA__UpdateIneligibleTournament_60CC7C9748F63BD45468A3BA02A3FA8B(class UTourSettings_TA* T);
	void __RegionID__ChangeNotifyFunc();
	void __IneligibleScheduleID__ChangeNotifyFunc();
	void __CycleResults__ChangeNotifyFunc();
	void __Schedules__ChangeNotifyFunc();
	void OnReceivedBracket(unsigned long long InScheduleID, struct FTourBracket& Bracket);
	void UpdateIneligibleTournament();
	void HandleTourEventDeactivated(class UTourEvent_TA* Event, class UError* Error);
	void HandleTourActivated(class UOnlineGameTournaments_TA* Tournament, class UTourEvent_TA* Event);
	void HandleTourFound(class UPsyNetService_AutoTourFound_TA* Service);
	void SetWeeksResults(int InWeekIndex, TArray<struct FTournamentResult>& NewWeeksResults);
	void HandleCycleSynced(class URPC_AutoTour_GetCycleData_TA* RPC);
	void ClearScheduleRefreshTimer();
	void SyncAllTournamentData();
	bool RefreshTournamentData(unsigned long bForce);
	void SetSchedules(TArray<struct FScheduledTournament>& InSchedules);
	void SyncCycleData();
	void SyncSchedule();
	class UAsyncTask* SetScheduleRegionID(struct FString InRegionID);
	void ReceivedPingedRegions(class UOnlineGameRegions_X* RegionsObj);
	void HandleScheduleRegionIDReceived(class URPC_TourGetScheduleRegion_TA* RPC);
	void SyncScheduleRegionID();
	void HandlePsyNetLogin();
	void eventConstruct();
	void EventTourCardsChanged();
};

// Class TAGame.UserSettingObserver_TA
// 0x0010 (0x0070 - 0x0080)
class UUserSettingObserver_TA : public UComponent
{
public:
	class UUserSettingObserverEventCache_TA*           Cache;                                            		// 0x0070 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UUserSettingMetrics_TA*                      Metrics;                                          		// 0x0078 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.UserSettingObserver_TA");
		}

		return uClassPointer;
	};

	void __UserSettingObserver_TA__HandleCacheTimeout_1EEACAE14DDEE76ED0A4ABB71DE85042(struct FSettingEvent E);
	void HandleScalarValueSet(class UGFxData_UserSetting_TA* Setting, float Value);
	void HandleBooleanValueSet(class UGFxData_UserSetting_TA* Setting, unsigned long Value);
	void HandleListValueSet(class UGFxData_UserSetting_TA* Setting, struct FString Value);
	void HandleCacheTimeout(class UUserSettingObserverEventCache_TA* InCache);
	void RecordSetting(class UGFxData_UserSetting_TA* Setting);
	void AddListener(class UGFxData_UserSetting_TA* Setting);
	void AddListeners(TArray<class UGFxData_UserSetting_TA*>& UserSettings);
	void Init();
};

// Class TAGame.SoundSettingsSave_TA
// 0x0148 (0x00C8 - 0x0210)
class USoundSettingsSave_TA : public USaveObject_TA
{
public:
	float                                              MasterVolume;                                     		// 0x00C8 (0x0004) [0x0000000000000000]               
	float                                              SoundVolume;                                      		// 0x00CC (0x0004) [0x0000000000000000]               
	float                                              MusicVolume;                                      		// 0x00D0 (0x0004) [0x0000000000000000]               
	float                                              GameplayMusicVolume;                              		// 0x00D4 (0x0004) [0x0000000000000000]               
	float                                              AmbientVolume;                                    		// 0x00D8 (0x0004) [0x0000000000000000]               
	float                                              CrowdVolume;                                      		// 0x00DC (0x0004) [0x0000000000000000]               
	float                                              VoiceVolume;                                      		// 0x00E0 (0x0004) [0x0000000000000000]               
	unsigned long                                      bMuteOnFocusLost : 1;                             		// 0x00E4 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bStreamerSafeAudioEnabled : 1;                    		// 0x00E4 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned char                                      OutputType;                                       		// 0x00E8 (0x0001) [0x0000000000000000]               
	unsigned char                                      DynamicRangeType;                                 		// 0x00E9 (0x0001) [0x0000000000000000]               
	unsigned char                                      MusicStingersSetting;                             		// 0x00EA (0x0001) [0x0000000000000000]               
	struct FScriptDelegate                             __MasterVolume__ChangeNotify;                     		// 0x00F0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __SoundVolume__ChangeNotify;                      		// 0x0108 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __MusicVolume__ChangeNotify;                      		// 0x0120 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __GameplayMusicVolume__ChangeNotify;              		// 0x0138 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __AmbientVolume__ChangeNotify;                    		// 0x0150 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __CrowdVolume__ChangeNotify;                      		// 0x0168 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __VoiceVolume__ChangeNotify;                      		// 0x0180 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bMuteOnFocusLost__ChangeNotify;                 		// 0x0198 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bStreamerSafeAudioEnabled__ChangeNotify;        		// 0x01B0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OutputType__ChangeNotify;                       		// 0x01C8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __DynamicRangeType__ChangeNotify;                 		// 0x01E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __MusicStingersSetting__ChangeNotify;             		// 0x01F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SoundSettingsSave_TA");
		}

		return uClassPointer;
	};

	void __MusicStingersSetting__ChangeNotifyFunc();
	void __DynamicRangeType__ChangeNotifyFunc();
	void __OutputType__ChangeNotifyFunc();
	void __bStreamerSafeAudioEnabled__ChangeNotifyFunc();
	void __bMuteOnFocusLost__ChangeNotifyFunc();
	void __VoiceVolume__ChangeNotifyFunc();
	void __CrowdVolume__ChangeNotifyFunc();
	void __AmbientVolume__ChangeNotifyFunc();
	void __GameplayMusicVolume__ChangeNotifyFunc();
	void __MusicVolume__ChangeNotifyFunc();
	void __SoundVolume__ChangeNotifyFunc();
	void __MasterVolume__ChangeNotifyFunc();
};

// Class TAGame.SoundSettingsControllerSave_TA
// 0x0038 (0x00C8 - 0x0100)
class USoundSettingsControllerSave_TA : public USaveObject_TA
{
public:
	float                                              Volume;                                           		// 0x00C8 (0x0004) [0x0000000000000000]               
	unsigned char                                      SoundMode;                                        		// 0x00CC (0x0001) [0x0000000000000000]               
	struct FScriptDelegate                             __Volume__ChangeNotify;                           		// 0x00D0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __SoundMode__ChangeNotify;                        		// 0x00E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SoundSettingsControllerSave_TA");
		}

		return uClassPointer;
	};

	void __SoundMode__ChangeNotifyFunc();
	void __Volume__ChangeNotifyFunc();
};

// Class TAGame.NetworkSave_TA
// 0x0038 (0x00C8 - 0x0100)
class UNetworkSave_TA : public USaveObject_TA
{
public:
	unsigned long                                      bEnableCrossPlatform : 1;                         		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bDisableCrossPlay : 1;                            		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned char                                      IncomingPacketFrequency;                          		// 0x00CC (0x0001) [0x0000000000000000]               
	unsigned char                                      OutgoingPacketFrequency;                          		// 0x00CD (0x0001) [0x0000000000000000]               
	unsigned char                                      IncomingBandwidth;                                		// 0x00CE (0x0001) [0x0000000000000000]               
	unsigned char                                      NetworkInputBuffer;                               		// 0x00CF (0x0001) [0x0000000000000000]               
	struct FScriptDelegate                             __bEnableCrossPlatform__ChangeNotify;             		// 0x00D0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __NetworkInputBuffer__ChangeNotify;               		// 0x00E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NetworkSave_TA");
		}

		return uClassPointer;
	};

	void __NetworkInputBuffer__ChangeNotifyFunc();
	void __bEnableCrossPlatform__ChangeNotifyFunc();
	void Deprecated_SetCrossplayDisabled(unsigned long bNewValue);
	bool Deprecated_GetCrossplayDisabled();
	int GetOutgoingPacketFrequencyValue();
	int GetIncomingBandwidthValue();
	int GetIncomingPacketFrequencyValue();
	void ApplySettings();
};

// Class TAGame.ConnectionQualitySave_TA
// 0x001C (0x00C8 - 0x00E4)
class UConnectionQualitySave_TA : public USaveObject_TA
{
public:
	float                                              RollingBadPingTime;                               		// 0x00C8 (0x0004) [0x0000000000000000]               
	float                                              RollingBadJitterTime;                             		// 0x00CC (0x0004) [0x0000000000000000]               
	float                                              RollingBadPacketLossTime;                         		// 0x00D0 (0x0004) [0x0000000000000000]               
	unsigned long long                                 LastNotificationEpochSeconds;                     		// 0x00D8 (0x0008) [0x0000000000000000]               
	unsigned long                                      bShowConnectionQualityIndicators : 1;             		// 0x00E0 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ConnectionQualitySave_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.VideoSettingsSave_TA
// 0x0014 (0x00C8 - 0x00DC)
class UVideoSettingsSave_TA : public USaveObject_TA
{
public:
	unsigned long                                      bVsync : 1;                                       		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bShowWeatherFX : 1;                               		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bShowLightShafts : 1;                             		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bTranslucentArenaShaders : 1;                     		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bShowLensFlares : 1;                              		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bEnableHDRSideBySideVisualizer : 1;               		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bUncappedFramerate : 1;                           		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000040] 
	float                                              HDRBrightnessScale;                               		// 0x00CC (0x0004) [0x0000000000000000]               
	float                                              HDRPaperWhiteScale;                               		// 0x00D0 (0x0004) [0x0000000000000000]               
	float                                              HDRGammaScale;                                    		// 0x00D4 (0x0004) [0x0000000000000000]               
	float                                              CustomFPS;                                        		// 0x00D8 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.VideoSettingsSave_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.NotificationSave_TA
// 0x0030 (0x00C8 - 0x00F8)
class UNotificationSave_TA : public USaveObject_TA
{
public:
	TArray<class UNotification_TA*>                    Notifications;                                    		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long                                      bShowInGameNotifications : 1;                     		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FScriptDelegate                             __bShowInGameNotifications__ChangeNotify;         		// 0x00E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NotificationSave_TA");
		}

		return uClassPointer;
	};

	void __bShowInGameNotifications__ChangeNotifyFunc();
	class USaveObject_TA* Reconcile(class USaveObject_TA* Remote);
	void OnLoad();
	void AddNotification(class UNotification_TA* Notification);
};

// Class TAGame.EpicAccountSave_TA
// 0x0030 (0x00C8 - 0x00F8)
class UEpicAccountSave_TA : public USaveObject_TA
{
public:
	TArray<unsigned char>                              LinkedPlatforms;                                  		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FEpicConvertFriendsSaveData>         ConvertFriendsData;                               		// 0x00D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FString>                             SentEOSFriendInvites;                             		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EpicAccountSave_TA");
		}

		return uClassPointer;
	};

	void __EpicAccountSave_TA__Reconcile_454F60014473D2E5E6A113901D66F3B4(struct FString FriendId);
	void __EpicAccountSave_TA__Reconcile_80713F2F4ABB24E9D2BF7782F94103F5(unsigned char Platform);
	class USaveObject_TA* Reconcile(class USaveObject_TA* Remote);
	void SetLastConvertPlatformFriendsPromptTime();
	void SetConvertPlatformFriends(unsigned long bValue);
	unsigned long long GetLastConvertPlatformFriendsPromptTime();
	bool GetConvertPlatformFriends();
};

// Class TAGame.VideoSettingsSavePC_TA
// 0x0030 (0x00DC - 0x010C)
class UVideoSettingsSavePC_TA : public UVideoSettingsSave_TA
{
public:
	int                                                WindowMode;                                       		// 0x00E0 (0x0004) [0x0000000000000000]               
	TArray<struct FOptionsValue>                       VideoOptions;                                     		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     Resolution;                                       		// 0x00F8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                MaxFPS;                                           		// 0x0108 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.VideoSettingsSavePC_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.VideoSettingsSaveConsole_TA
// 0x0005 (0x00DC - 0x00E1)
class UVideoSettingsSaveConsole_TA : public UVideoSettingsSave_TA
{
public:
	unsigned char                                      VideoQualityMode;                                 		// 0x00E0 (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.VideoSettingsSaveConsole_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqEvent_WeatherToggled_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_WeatherToggled_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_WeatherToggled_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__GFxData_Settings_TA__SetDefaults_221CD16046723BD9D21EA19288F7A453
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Settings_TA__SetDefaults_221CD16046723BD9D21EA19288F7A453 : public UObject
{
public:
	struct FName                                       Group;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Settings_TA__SetDefaults_221CD16046723BD9D21EA19288F7A453");
		}

		return uClassPointer;
	};

	bool __GFxData_Settings_TA__SetDefaults_221CD16046723BD9D21EA19288F7A453(class UGFxData_UserSetting_TA* Setting);
};

// Class TAGame.SeqEvent_UserSettingChanged_TA
// 0x000C (0x017C - 0x0188)
class USeqEvent_UserSettingChanged_TA : public USequenceEvent
{
public:
	struct FName                                       SettingName;                                      		// 0x0180 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_UserSettingChanged_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProfileAimAssistSave_TA
// 0x0070 (0x00C8 - 0x0138)
class UProfileAimAssistSave_TA : public USaveObject_TA
{
public:
	unsigned long                                      bAimAssistEnabled : 1;                            		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bBallTrajectoryEnabled : 1;                       		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned char                                      TipSetting;                                       		// 0x00CC (0x0001) [0x0000000000000000]               
	int                                                AimAssistLevelOverride;                           		// 0x00D0 (0x0004) [0x0000000000000000]               
	int                                                MaxAimAssistLevelOverride;                        		// 0x00D4 (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             __EventBallTrajectoryChanged__Delegate;           		// 0x00D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bAimAssistEnabled__ChangeNotify;                		// 0x00F0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bBallTrajectoryEnabled__ChangeNotify;           		// 0x0108 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __TipSetting__ChangeNotify;                       		// 0x0120 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProfileAimAssistSave_TA");
		}

		return uClassPointer;
	};

	void __TipSetting__ChangeNotifyFunc();
	void __bBallTrajectoryEnabled__ChangeNotifyFunc();
	void __bAimAssistEnabled__ChangeNotifyFunc();
	void SetBallTrajectoryEnabled(unsigned long bEnable);
	void OnBallTrajectoryChanged();
	void SetAimAssistEnabled(unsigned long bEnable);
	void SetAimAssistLevelOverride(int Level);
	void EventBallTrajectoryChanged();
};

// Class TAGame.__GFxData_Settings_TA__CrossplayPartyValidation_D24AA9574761F3030BEFD8B1F682D7C8
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Settings_TA__CrossplayPartyValidation_D24AA9574761F3030BEFD8B1F682D7C8 : public UObject
{
public:
	class UGFxData_UserSetting_TA*                     UserSetting;                                      		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Settings_TA__CrossplayPartyValidation_D24AA9574761F3030BEFD8B1F682D7C8");
		}

		return uClassPointer;
	};

	void __GFxData_Settings_TA__CrossplayPartyValidation_B04BBEAA4677793D882451B233A8B954(class UGFxModal_X* _);
	void __GFxData_Settings_TA__CrossplayPartyValidation_ACC8E4FC4DD946CD05A355A7D752EA3A(class UGFxModal_X* _);
	void __GFxData_Settings_TA__CrossplayPartyValidation_194EBBA7413CD2473CCD5097249C86B2(class UGFxModal_X* _);
	void __GFxData_Settings_TA__CrossplayPartyValidation_D24AA9574761F3030BEFD8B1F682D7C8(class UGFxModal_X* _);
};

// Class TAGame.__GFxData_Settings_TA__SetTourScheduleRegion_CDBA1D9B4732DAA910323FBC3A98E2E7
// 0x0018 (0x0060 - 0x0078)
class U__GFxData_Settings_TA__SetTourScheduleRegion_CDBA1D9B4732DAA910323FBC3A98E2E7 : public UObject
{
public:
	class UAutoTour_TA*                                AutoTour;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
	struct FString                                     Value;                                            		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Settings_TA__SetTourScheduleRegion_CDBA1D9B4732DAA910323FBC3A98E2E7");
		}

		return uClassPointer;
	};

	void __GFxData_Settings_TA__SetTourScheduleRegion_CDBA1D9B4732DAA910323FBC3A98E2E7(class UGFxModal_X* _);
};

// Class TAGame.Mutator_Freeplay_TA
// 0x003C (0x0064 - 0x00A0)
class UMutator_Freeplay_TA : public UMutator_TA
{
public:
	class ACar_TA*                                     CarArchetype;                                     		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<class ATeam_Soccar_TA*>                     TeamArchetypes;                                   		// 0x0070 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class AGameEvent_Soccar_TA*                        SoccarGame;                                       		// 0x0080 (0x0008) [0x0000000000000000]               
	TArray<struct FRumbleItemIndex>                    PlayerRumbleItems;                                		// 0x0088 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              LastResetTime;                                    		// 0x0098 (0x0004) [0x0000000000000000]               
	float                                              ResetCooldown;                                    		// 0x009C (0x0004) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_Freeplay_TA");
		}

		return uClassPointer;
	};

	void __Mutator_Freeplay_TA__Init_FA3E767F4F8E087DA6902EB60F0061A3(class UGoal_TA* G);
	TArray<class AActor*> __Mutator_Freeplay_TA__HandleTeams_19158EF74059BA5110534F9B73ECD491(class ATeam_Soccar_TA* T);
	void HandleBoost(class ACarComponent_Boost_TA* Boost, class UGameplaySettingsSave_TA* Settings);
	void HandleUnlimitedBoostChange(class ACar_TA* Car, class UGameplaySettingsSave_TA* Settings);
	void HandleGameplaySettingsSave(class ACar_TA* Car, class UGameplaySettingsSave_TA* Settings);
	class ASpecialPickup_TA* GetNextRumbleItem(class UGameEvent_Soccar_SubRules_Items_TA* Items, class APlayerController_TA* PC);
	void GiveNextRumbleItem(class ACar_TA* Car);
	void HandleAttachedPickup(class ACar_TA* Car);
	void MutateObject(class UObject* O);
	void HandleTeams(class AGameEvent_Team_TA* _);
	void HandlePlayerResetTraining(class AGameEvent_TA* _);
	void HandleLocalPlayerShell(class UGFxShell_X* Shell);
	void HandleLocalPlayer(class ULocalPlayer_TA* P);
	void SpawnDummyBot();
	bool ShouldStartRound();
	void CheckStartRound();
	void HandleGameStateChanged(class AGameEvent_TA* _);
	void Init(class AGameEvent_TA* GameEvent);
};

// Class TAGame.TAsyncResult__PrivilegeCheck_X
// 0x0050 (0x00D0 - 0x0120)
class UTAsyncResult__PrivilegeCheck_X : public UAsyncTask
{
public:
	class UPrivilegeCheck_X*                           Result;                                           		// 0x00D0 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventResult__Delegate;                          		// 0x00D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventResultComplete__Delegate;                  		// 0x00F0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __ResultDelegate__Delegate;                       		// 0x0108 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TAsyncResult__PrivilegeCheck_X");
		}

		return uClassPointer;
	};

	class UTAsyncResult__PrivilegeCheck_X* CreateResultError(class UError* InError);
	class UTAsyncResult__PrivilegeCheck_X* CreateResult(class UPrivilegeCheck_X* InResult);
	class UTAsyncResult__PrivilegeCheck_X* Copy();
	void eventClearCallbacks();
	class UTAsyncResult__PrivilegeCheck_X* eventSetResultWhen(class UAsyncTask* Other, struct FScriptDelegate GetResultDelegate);
	class UTAsyncResult__PrivilegeCheck_X* eventSetResult(class UPrivilegeCheck_X* InResult, class UError* InError);
	class UTAsyncResult__PrivilegeCheck_X* NotifyOnResultComplete(struct FScriptDelegate Callback);
	class UTAsyncResult__PrivilegeCheck_X* NotifyOnResult(struct FScriptDelegate Callback);
	class UPrivilegeCheck_X* ResultDelegate();
	void EventResultComplete(class UPrivilegeCheck_X* OutResult, class UError* OutError);
	void EventResult(class UPrivilegeCheck_X* OutResult);
};

// Class TAGame.UserSettingMetrics_TA
// 0x0000 (0x0080 - 0x0080)
class UUserSettingMetrics_TA : public UMetricsGroup_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.UserSettingMetrics_TA");
		}

		return uClassPointer;
	};

	void Changed(struct FUniqueNetId PlayerID, struct FName Id, struct FString Value);
};

// Class TAGame.UserSettingObserverEventCache_TA
// 0x0030 (0x0070 - 0x00A0)
class UUserSettingObserverEventCache_TA : public UComponent
{
public:
	float                                              CacheTimeout;                                     		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FSettingEvent>                       Events;                                           		// 0x0078 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventCacheTimeout__Delegate;                    		// 0x0088 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.UserSettingObserverEventCache_TA");
		}

		return uClassPointer;
	};

	void __UserSettingObserverEventCache_TA__RecordSetting_D23DB26047F2AAB08C69F988DA4712A4();
	void Reset();
	void RecordSetting(struct FUniqueNetId PlayerID, struct FName Id, struct FString Value);
	void EventCacheTimeout(class UUserSettingObserverEventCache_TA* Cache);
};

// Class TAGame.__UserSettingObserverEventCache_TA__RecordSetting_AE6DEB284D35D8B3A8FA9D960A9EEB72
// 0x0050 (0x0060 - 0x00B0)
class U__UserSettingObserverEventCache_TA__RecordSetting_AE6DEB284D35D8B3A8FA9D960A9EEB72 : public UObject
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FName                                       Id;                                               		// 0x00A8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__UserSettingObserverEventCache_TA__RecordSetting_AE6DEB284D35D8B3A8FA9D960A9EEB72");
		}

		return uClassPointer;
	};

	bool __UserSettingObserverEventCache_TA__RecordSetting_AE6DEB284D35D8B3A8FA9D960A9EEB72(struct FSettingEvent E);
};

// Class TAGame.GFxData_SplitscreenMatch_TA
// 0x0006 (0x019A - 0x01A0)
class UGFxData_SplitscreenMatch_TA : public UGFxData_PrivateMatch_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_SplitscreenMatch_TA");
		}

		return uClassPointer;
	};

	void StartSearch();
};

// Class TAGame.GFxData_StartMenu_TA
// 0x0040 (0x0098 - 0x00D8)
class UGFxData_StartMenu_TA : public UGFxDataSingleton_X
{
public:
	class UOnlineGame_X*                               OnlineGame;                                       		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FString                                     SigningInText;                                    		// 0x00A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UGFxModal_X*                                 SignInModal;                                      		// 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                ClickedControllerIndex;                           		// 0x00B8 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventTitleScreenClicked__Delegate;              		// 0x00C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_StartMenu_TA");
		}

		return uClassPointer;
	};

	void __GFxData_StartMenu_TA__SyncOnlineData_90729F8641FFF12AC753B38DF2B7ACCC(class USaveGameManager_TA* Manager, class USaveData_TA* SaveData, class UError* Error);
	void PrimaryPlayerSet();
	void HandleSaveDataLoaded(class USaveGameManager_TA* Manager, class USaveData_TA* SaveData, class UError* Error);
	void OnPrimaryPlayerSet(int ControllerIndex);
	class ULocalPlayer_TA* GetPrimaryLocalPlayer();
	void OnContinueWithNoUser(class UGFxModal_X* Modal);
	void OnShowAccountPicker(class UGFxModal_X* Modal);
	void OnLoginCancelled();
	void HandleLoginCancelled();
	void HandlePrimaryPlayerLoginFailed(unsigned char PlayerNum, unsigned char ErrorCode);
	void HandlePrimaryPlayerLoginChange(unsigned char PlayerNum);
	void ClearPrimaryPlayerLoginDelegates(unsigned char PlayerNum);
	void PrimaryPlayerSetup(int ControllerIndex);
	void OnChoosePlayerName();
	void HandleSyncOnlinePlayerStorageStarted(class UOnlineStorageSyncManager_TA* OnlineStorageSyncManager, class UAsyncTask* SyncTask);
	void CreateOnlinePlayerStorageSyncTaskAndModal(class USaveData_TA* SaveData);
	bool SyncOnlineData();
	void ProgressToMainMenu();
	void TitleScreenClicked(int ControllerIndex);
	void OnKonamiCode();
	void eventOnRemoved();
	void eventOnShellSet();
	void EventTitleScreenClicked(class UGFxData_StartMenu_TA* StartMenu);
};

// Class TAGame.__GFxData_StartMenu_TA__HandleSyncOnlinePlayerStorageStarted_080CCBA1417161410FC9A6B1A838B31F
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_StartMenu_TA__HandleSyncOnlinePlayerStorageStarted_080CCBA1417161410FC9A6B1A838B31F : public UObject
{
public:
	class UOnlineStorageSyncManager_TA*                OnlineStorageSyncManager;                         		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_StartMenu_TA__HandleSyncOnlinePlayerStorageStarted_080CCBA1417161410FC9A6B1A838B31F");
		}

		return uClassPointer;
	};

	void __GFxData_StartMenu_TA__HandleSyncOnlinePlayerStorageStarted_080CCBA1417161410FC9A6B1A838B31F();
};

// Class TAGame.GFxData_Stats_TA
// 0x0020 (0x0098 - 0x00B8)
class UGFxData_Stats_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FGFxStatData>                        Events;                                           		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<class UStatEvent_TA*>                       StatEvents;                                       		// 0x00A8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Stats_TA");
		}

		return uClassPointer;
	};

	bool __GFxData_Stats_TA__GetExcludedStats_58D98DF54728E3EF089C478E6808AA31(class UGameMode_TA* M);
	bool __GFxData_Stats_TA__GetExcludedStats_6D2371A948AD7EEAFBEFAA9C08A58B7D(class UGameMode_TA* M);
	void LoadSavedStats();
	void GetExcludedStats(TArray<struct FName>& Excluded);
	void SetupStatData();
	void eventOnShellSet();
};

// Class TAGame.__GFxData_Stats_TA__SetupStatData_B1D693964028D138C119599430C543A2
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Stats_TA__SetupStatData_B1D693964028D138C119599430C543A2 : public UObject
{
public:
	class UStatEvent_TA*                               EventStat;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Stats_TA__SetupStatData_B1D693964028D138C119599430C543A2");
		}

		return uClassPointer;
	};

	bool __GFxData_Stats_TA__SetupStatData_B1D693964028D138C119599430C543A2(struct FName E);
};

// Class TAGame.__GFxData_System_TA__OnShellSet_03DFEEDF442778F6ED4526B118BEE792
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_System_TA__OnShellSet_03DFEEDF442778F6ED4526B118BEE792 : public UObject
{
public:
	class UEngineShare_X*                              EngineShare;                                      		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_System_TA__OnShellSet_03DFEEDF442778F6ED4526B118BEE792");
		}

		return uClassPointer;
	};

	void __GFxData_System_TA__OnShellSet_03DFEEDF442778F6ED4526B118BEE792();
};

// Class TAGame.ExclusiveInteraction_TA
// 0x0010 (0x00D0 - 0x00E0)
class UExclusiveInteraction_TA : public UInteraction
{
public:
	TArray<int>                                        ControllersWithExclusiveInputEnabled;             		// 0x00D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ExclusiveInteraction_TA");
		}

		return uClassPointer;
	};

	bool IsControllerDisabled(int ControllerId);
	bool HandleInputKey(int ControllerId, struct FName Key, unsigned char EventType, float AmountDepressed, unsigned long bGamepad);
	bool HandleInputChar(int ControllerId, struct FString Character);
	bool HandleInputAxis(int ControllerId, struct FName Key, float delta, float DeltaTime, unsigned long bGamepad);
	void EnableExclusiveInput(int ControllerId);
	void DisableExclusiveInput(int ControllerId);
};

// Class TAGame.GFxData_Training_TA
// 0x0058 (0x0098 - 0x00F0)
class UGFxData_Training_TA : public UGFxDataSingleton_X
{
public:
	struct FName                                       TrainingType;                                     		// 0x0098 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                CurrentScore;                                     		// 0x00A0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                CurrentRound;                                     		// 0x00A4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TotalRounds;                                      		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     Difficulty;                                       		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FName                                       SelectedFreeplayMap;                              		// 0x00C0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bPerfectRound : 1;                                		// 0x00C8 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bShowBoostMeter : 1;                              		// 0x00C8 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	TArray<struct FUseAction>                          UseActions;                                       		// 0x00D0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     TutorialTip;                                      		// 0x00E0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Training_TA");
		}

		return uClassPointer;
	};

	void eventOnRemoved();
	void SetCurrentPlaylist(struct FName Playlist);
	void StartTutorialV2(struct FString MapName, unsigned long bAutoEntered);
	bool HasPerfectedTraining(struct FString InType, struct FString InDifficulty);
	bool HasCompletedTraining(struct FString InType, struct FString InDifficulty);
	bool HasCompletedTutorial(unsigned char InType);
	void PlayV2Tutorial(unsigned char Type, unsigned long bAutoEntered);
	void PlayTutorial(unsigned long bAdvanced);
	void PlayFreeplayMap(struct FName Map);
	void PlayTraining(struct FString Type, struct FString TrainingDifficulty);
	void HandleBoostMeterChanged(class AGameEvent_Tutorial_TA* GameEvent);
	struct FString ParseDifficulty(unsigned char InDifficulty);
	void HandleEditorDataChanged(class AGameEvent_TrainingEditor_TA* GameEvent);
	void HandleDifficultyUpdated(class AGameEvent_Tutorial_TA* GameEvent);
	void HandleScoreUpdated(class AGameEvent_Tutorial_TA* GameEvent);
	void SetTrainingEditorGameEvent(class AGameEvent_TrainingEditor_TA* InGameEvent);
	void SetTrainingGameEvent(class AGameEvent_Tutorial_TA* InGameEvent);
	void HandleTutorialTipChanged(class AGameEvent_Tutorial_TA* GameEvent, struct FString NewTip);
	void HandleUseActionsChanged(class AGameEvent_Tutorial_TA* GameEvent);
	void HandleTutorialEnded(class UTutorial_TA* Tutorial);
	void HandleMapPrefsSave(class UMapPrefsSave_TA* Save);
	void eventOnShellSet();
};

// Class TAGame.GameEvent_GameEditor_TA
// 0x0070 (0x0C58 - 0x0CC8)
class AGameEvent_GameEditor_TA : public AGameEvent_Soccar_TA
{
public:
	class UClass*                                      SaveDataClass;                                    		// 0x0C58 (0x0008) [0x0000000000000000]               
	class USaveData_GameEditor_TA*                     SaveData;                                         		// 0x0C60 (0x0008) [0x0000000000000000]               
	int                                                ActiveRoundNumber;                                		// 0x0C68 (0x0004) [0x0000000000000000]               
	TArray<struct FSpawnArchetypeData>                 SpawnableArchetypes;                              		// 0x0C70 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class ADynamicSpawnPointMesh_TA*>           CarSpawnPoints;                                   		// 0x0C80 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class AGameEditor_Pawn_TA*                         EditorPawnArchetype;                              		// 0x0C90 (0x0008) [0x0000000000000000]               
	int                                                MaxRounds;                                        		// 0x0C98 (0x0004) [0x0000000000000000]               
	TArray<struct FActorHistory>                       UndoHistory;                                      		// 0x0CA0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                HistoryPosition;                                  		// 0x0CB0 (0x0004) [0x0000000000000000]               
	int                                                MaxUndoHistory;                                   		// 0x0CB4 (0x0004) [0x0000000000000000]               
	class AFXActor_X*                                  FXActorArchetype;                                 		// 0x0CB8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_X*                                  FXActor;                                          		// 0x0CC0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_GameEditor_TA");
		}

		return uClassPointer;
	};

	void HandleTriggerTouched(class AGameEditor_Trigger_TA* Trigger, class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal);
	void RotateActor(class APlayerController_TA* PC, unsigned long bSnapOrientation);
	void OnPlayerAdded(class AController* NewPlayer);
	void PrevRound();
	void NextRound();
	void DecreaseTime();
	void IncreaseTime();
	void StopEditing(class APlayerController_TA* PC);
	void StartEditing();
	void CycleActor(class APlayerController_TA* PC);
	void ReleaseGrabbedActor(class APlayerController_TA* PC);
	void ReleaseRotateActor(class APlayerController_TA* PC);
	void ToggleRotateActor(class APlayerController_TA* PC);
	void SetSaveData(class USaveData_GameEditor_TA* Data);
	void ToggleGrabActor(class APlayerController_TA* PC);
	void ToggleReleaseActor(class APlayerController_TA* PC);
	void ReleaseActor(class APlayerController_TA* PC);
	void GrabActor(class APlayerController_TA* PC);
	bool CanQueSaveReplay();
	bool ShouldUpdateCrosshair();
	int GetPlayerTeamNumber();
	bool CanAddHistory();
	void ToggleEditorRound();
	void CommitRedoRound();
	void ResetRound();
	void Save();
	void Redo(class APlayerController_TA* PC);
	void Undo(class APlayerController_TA* PC);
	class AActor* FindActorByName(struct FName actorName);
	bool RestoreFromHistory(class APlayerController_TA* PC, unsigned char HistoryType, struct FActorHistory RestoreHistory);
	unsigned char GetOtherHistoryType(unsigned char HistoryType);
	void ClampUndoHistory();
	bool AddToHistoryArray(class UInterface_GameEditor_TA* EditorActor, struct FActorHistory NewHistory);
	bool HistoriesAreEqual(class UInterface_GameEditor_TA* EditorActor, struct FActorHistory H0, struct FActorHistory H1);
	bool AddUndoHistory(class UInterface_GameEditor_TA* EditorActor, unsigned char HistoryEditType, unsigned long bClearRedoHistory);
	bool AddHistory(unsigned char HistoryType, class UInterface_GameEditor_TA* EditorActor, unsigned char HistoryEditType, unsigned long bClearRedoHistory);
	struct FActorHistory MakeHistory(class UInterface_GameEditor_TA* EditorActor, unsigned char HistoryEditType);
	void ClearRedoHistory();
	void ClearAllHistory();
	class AActor* DeserializeAndSpawn(struct FString SerializedData, class UClass* ClassType, unsigned char HistoryType);
	bool DestroyActor(class AActor* A, unsigned char HistoryType);
	bool IsInEditorMode();
	void RemoveAllPointsFromScore(int TeamIndex);
	void RemovePointsFromScore(int PointsToRemove, int TeamIndex);
	struct FName GetDesiredSoundState();
	void DeleteAllExistingActorsBasedOffSpawnList();
	int GetSpawnedActorCount(struct FSpawnArchetypeData ArchetypeData);
	bool RoundContainsASwitch();
	void EnableTriggers(unsigned long bEnable);
	void HideCarSpawnPoints(unsigned long bHide);
	void ResetSpawnLocations();
	void OnSpawnedArchetype(class AActor* SpawnedActor, unsigned char HistoryType);
	void SpawnArchetype(class APlayerController_TA* Controller, int ArchetypeIndex);
	struct FSpawnArchetypeData GetSelectedSpawnArchetype(int Index);
	void IncrementSelectedSpawnArchetypeIndex(int Direction, int& Index);
	void ResetBallsToDefaultPosition();
	void FireBalls();
	void Interact();
	bool ShouldResetBalls();
	void OnVehicleSetup(class ACar_TA* Car);
	void HandleVehicleSetup(class ACar_TA* Car);
	void OnPlayerRestarted(class ACar_TA* PlayerCar);
	void GetSpawnLocationAndRotation(class AController* Player, struct FVector& SpawnLocation, struct FRotator& SpawnRotation);
	bool RestartPlayer(class AController* NewPlayer);
	class AGameEditor_Pawn_TA* SpawnEditorPawn(class AController* NewPlayer, struct FVector SpawnLoc, struct FRotator SpawnRot);
	void SetupInitialPawnOrientation(class APlayerController* NewPlayer);
	bool ChooseTeam(int TeamIndex, class APlayerController_TA* Player);
	void InitFX();
	void eventPostBeginPlay();
};

// Class TAGame.GameEvent_TrainingEditor_TA
// 0x00F8 (0x0CC8 - 0x0DC0)
class AGameEvent_TrainingEditor_TA : public AGameEvent_GameEditor_TA
{
public:
	float                                              MinRoundTime;                                     		// 0x0CC8 (0x0004) [0x0000000000000000]               
	float                                              MaxRoundTime;                                     		// 0x0CCC (0x0004) [0x0000000000000000]               
	unsigned long                                      bNoEditor : 1;                                    		// 0x0CD0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bDisplayedRedoPenaltyMessage : 1;                 		// 0x0CD0 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bUnsavedChanges : 1;                              		// 0x0CD0 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	int                                                PointsScoredThisRound;                            		// 0x0CD4 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxModal_X*                                 ResetModal;                                       		// 0x0CD8 (0x0008) [0x0000000000000000]               
	int                                                ShotAttempt;                                      		// 0x0CE0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                RedoTotal;                                        		// 0x0CE4 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                GoalieScore;                                      		// 0x0CE8 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      PlayTestType;                                     		// 0x0CEC (0x0001) [0x0000000000002000] (CPF_Transient)
	TArray<class AActor*>                              GoalMeshBlockers;                                 		// 0x0CF0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class AActor*                                      GoalMeshBlockerArchetype;                         		// 0x0D00 (0x0008) [0x0000000000000000]               
	class USaveData_GameEditor_Training_TA*            TrainingData;                                     		// 0x0D08 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       PrePlaytestState;                                 		// 0x0D10 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              SaveDelayTime;                                    		// 0x0D18 (0x0004) [0x0000000000000000]               
	float                                              SaveCooldown;                                     		// 0x0D1C (0x0004) [0x0000000000000000]               
	struct FString                                     TrainingFileName;                                 		// 0x0D20 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventRoundTimeChanged__Delegate;                		// 0x0D30 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventRoundChanged__Delegate;                    		// 0x0D48 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventRoundFinished__Delegate;                   		// 0x0D60 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPlaytestStarted__Delegate;                 		// 0x0D78 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventUnsavedChanges__Delegate;                  		// 0x0D90 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSaveResult__Delegate;                      		// 0x0DA8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_TrainingEditor_TA");
		}

		return uClassPointer;
	};

	void OnLoadingMovieClosed();
	void HandlePrimaryPlayerChange(class ULocalPlayer* OldPrimary, class ULocalPlayer* NewPrimary);
	void TagHistoryChanges();
	void MarkAsDirty();
	void ForceTagHistoryChanges();
	void SetTracedCrosshairActor(class APlayerController_TA* PC, class AActor* NewActor);
	void HandleBallWentThruRing(class ABall_GameEditor_TA* Ball);
	bool AllowDynamicCrowd();
	void BroadcastGoMessage();
	bool IsPerfectRound();
	int GetTotalRounds();
	unsigned char GetDifficulty();
	unsigned char GetTrainingType();
	bool DestroyBall(class ABall_TA* Ball);
	void Save();
	void HandleSaveResult(struct FSaveObjectResult Result);
	void SaveInternal();
	void OnTrainingModeLoaded();
	void DuplicateRound(int Index);
	void SetMetaData(struct FString NewName, unsigned char NewType, unsigned char NewDifficulty, TArray<int> NewTags);
	void ReorderRound(int FromIndex, int ToIndex);
	void SetRoundTimeLimit(float NewRoundTime);
	bool HandleNextGame();
	void ResetBalls();
	class UTrainingEditorMetrics_TA* GetTrainingMetrics();
	void Load(struct FString SaveName, class APlayerController_TA* PC);
	class AActor* GetFirstFoundArchetype(struct FName ArchetypeName);
	void DestroyGoalMeshBlockers();
	void UpdateGoalMeshBlocker();
	int GetScore();
	void RemovePointsFromScore(int PointsToRemove, int TeamIndex);
	bool ShowScorerGoalMessage();
	void OnResetRoundCancel(class UGFxModal_X* Modal);
	void OnResetRoundConfirm(class UGFxModal_X* Modal);
	void ShowResetRoundMessage();
	bool ShowPenaltyMessage();
	int GetPlayerTeamNumber();
	int GetBallGoalScoreNumber();
	void RemoveAllPointsFromScore(int TeamIndex);
	bool IncrementRound(unsigned long bLoop);
	int GetStoredArchetypeCount(int RoundNumber, class UClass* ClassType);
	void SetupInitialPawnOrientation(class APlayerController* NewPlayer);
	void LoadRoundData(struct FEditorRoundData Round, class UClass* ClassType);
	void LoadRound(struct FEditorRoundData Round);
	struct FVector AdjustToFloorLocation(struct FVector TraceStart, struct FVector CollsionExtent);
	class AActor* SpawnArchetypeAtAndAdjustToFloor(class AActor* Archetype, struct FVector SpawnLocation, struct FRotator SpawnRotation);
	void SpawnBallAndStartPointAt(struct FVector BallSpawnLocation, struct FRotator BallSpawnRotation, struct FVector StartPointSpawnLocation, struct FRotator StartPointSpawnRotation);
	void SetupDefaultRound();
	void SwitchToRoundNumber(int RoundNumber, unsigned long BackupCurrentRound);
	void SetRoundByNumber(int RoundNumber, struct FEditorRoundData RoundData);
	void DeleteRound(int RoundToDelete);
	struct FEditorRoundData GetCurrentRoundData();
	bool CanPlayTestRound(struct FEditorRoundData Round);
	void RestartPlayTest();
	void EndPlayTest();
	void StartPlayTest(unsigned char InPlayTestType);
	bool CanPlayTestRoundNumber(int RoundNumber);
	void SetUnsavedChanges(unsigned long bInUnsavedChanges);
	void UpdateActiveRoundData();
	void StartNewRound();
	bool IsValidRoundIndex(int ArrayIndex);
	void AddLocalPlayer(class APlayerController_TA* Player);
	struct FName GetMatchTypeName();
	void OnInit();
	void eventDestroyed();
	void eventPostBeginPlay();
	void EventSaveResult(unsigned long bSuccess);
	void EventUnsavedChanges(unsigned long bOutUnsavedChanges);
	void EventPlaytestStarted(class AGameEvent_TrainingEditor_TA* GamEvent);
	void EventRoundFinished(class AGameEvent_TrainingEditor_TA* GamEvent);
	void EventRoundChanged(class AGameEvent_TrainingEditor_TA* GamEvent);
	void EventRoundTimeChanged(class AGameEvent_TrainingEditor_TA* GameEvent);
};

// Class TAGame.GFxData_Vote_TA
// 0x0024 (0x0094 - 0x00B8)
class UGFxData_Vote_TA : public UGFxDataRow_X
{
public:
	unsigned char                                      Subject;                                          		// 0x0098 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      VoteStatus;                                       		// 0x0099 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      LocalVoteStatus;                                  		// 0x009A (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                YesVotes;                                         		// 0x009C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                NoVotes;                                          		// 0x00A0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                RequiredVotes;                                    		// 0x00A4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TimeRemaining;                                    		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class AVoteActor_TA*                               VoteActor;                                        		// 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Vote_TA");
		}

		return uClassPointer;
	};

	void SetVoteStatus(unsigned char Status);
	void ClearVote();
	void VoteNo();
	void VoteYes();
	void HandleDestroyed(class AVoteActor_TA* InVoteActor);
	void HandleFinished(class AVoteActor_TA* InVoteActor);
	void UpdateData(class AVoteActor_TA* InVoteActor);
	void eventOnRemoved();
	void SetVoteActor(class AVoteActor_TA* InVoteActor);
};

// Class TAGame.__GFxEngine_TA__InitOnlineSub_3CF91CA24117ADE2F88796B941BBFFEB
// 0x0008 (0x0060 - 0x0068)
class U__GFxEngine_TA__InitOnlineSub_3CF91CA24117ADE2F88796B941BBFFEB : public UObject
{
public:
	class UOnline_X*                                   OnlineX;                                          		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxEngine_TA__InitOnlineSub_3CF91CA24117ADE2F88796B941BBFFEB");
		}

		return uClassPointer;
	};

	void __GFxEngine_TA__InitOnlineSub_3CF91CA24117ADE2F88796B941BBFFEB();
};

// Class TAGame.LoadingScreen_TA
// 0x00E4 (0x0060 - 0x0144)
class ULoadingScreen_TA : public UObject
{
public:
	TArray<struct FString>                             ProtipMessages;                                   		// 0x0060 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	TArray<struct FString>                             ProtipMessagesQueue;                              		// 0x0070 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     MaximumPlayerCounts;                              		// 0x0080 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UGFxEngine_TA*                               GFxEngineRef;                                     		// 0x0090 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineGame_X*                               OnlineGame;                                       		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FLoadingMovieMapInfo                        LoadingScreenInfo;                                		// 0x00A0 (0x00A0) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long                                      bUnfairTeams : 1;                                 		// 0x0140 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.LoadingScreen_TA");
		}

		return uClassPointer;
	};

	void HandlePreLoadMap(struct FString MapName);
	struct FString GetProtipMessageWithIcons(struct FString ProtipMessage, struct FString OpenDelimiter, struct FString CloseDelimiter, unsigned char InputType);
	unsigned char GetProtipInputType();
	void OnLargeImageMapLoaded(struct FMapImageLoadResult LoadResult);
	void HandleCurrentPlaylistSet(class UOnlineGameAccount_X* InAccount, class UGameSettingPlaylist_X* NewPlaylist);
	void HandlePreLoadReplay(class UReplayManager_TA* ReplayManager, class UReplay_TA* Replay);
	void HandleMaxPlayersChanged(class UOnlineGameJoinGame_X* OnlineGameJoinGame, int MaxPlayers);
	void HandleJoiningGame(class UOnlineGameJoinGame_X* OnlineGameJoinGame);
	void HandleOnlineGameInitialized();
	void HandlePostLoadMap();
	void HandleLoadingUnfairMatch(class APlayerControllerBase_TA* PlayerControllerBase);
	struct FString GetLocalizedMaximumPlayerCounts(int MaxPlayers);
	void HandleMatchSettingsChanged(class AGameEvent_TA* GameEvent, struct FCustomMatchSettings NewMatchSettings);
	void Init(class UGFxEngine_TA* NewGFxEngine);
};

// Class TAGame.GFxData_MultiItemDrops_TA
// 0x0050 (0x0098 - 0x00E8)
class UGFxData_MultiItemDrops_TA : public UGFxDataSingleton_X
{
public:
	class UGFxData_ItemDropGroup_TA*                   ActiveGroup;                                      		// 0x0098 (0x0008) [0x0000000000000000]               
	TArray<class UItemDropGroup_TA*>                   PendingGroups;                                    		// 0x00A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                GroupsRemaining;                                  		// 0x00B0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     DropTableName;                                    		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UWallet_TA*                                  Wallet;                                           		// 0x00C8 (0x0008) [0x0000000000000000]               
	TArray<struct FOnlineXPReward>                     RewardDrops;                                      		// 0x00D0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FName                                       DropGroupType_ALL;                                		// 0x00E0 (0x0008) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_MultiItemDrops_TA");
		}

		return uClassPointer;
	};

	void __GFxData_MultiItemDrops_TA__OnShellSet_D1D68D58470D662A96AA2797C9A2A8A6(class USaveData_TA* _, class UOnlineProduct_TA* __);
	void __GFxData_MultiItemDrops_TA__OnShellSet_EE3C215F4EE8CA9F7F28FD995C7C688B(class UWallet_TA* InWallet);
	void __GFxData_MultiItemDrops_TA__OnShellSet_EB0DB3004DF5110720C308BED20663CF(class UWallet_TA* W, struct FCurrency& Drop);
	void __GFxData_MultiItemDrops_TA__OnShellSet_E283602B4678CF12A2FB04B8CEF3A147(class UShopsManager_TA* InShopsManager);
	void __GFxData_MultiItemDrops_TA__OnShellSet_7CAF0EF74D5E66143FE8C2B651F836B4(class APlayerControllerBase_TA* InController);
	void ForceDisplayUnseenContainerDrops();
	bool IsSlotInGroup(int SlotIndex);
	bool IsProductInGroup(unsigned long long InstanceID);
	TArray<struct FProductHashID> GetUnseenContainerDrops();
	void RemoveContainerDrop(struct FProductHashID HashID);
	void ClearContainerDrops();
	void OnAllItemDropsHandled();
	bool AnyPlayerHasContainerDrops();
	bool AnyPlayerHasUnlocks();
	void PlayerAllDropsHandled();
	class UProfile_TA* GetProfile();
	void EquipNow(struct FProductHashID HashID);
	bool CanEquipNow(struct FProductHashID HashID);
	void AllGroupsShown();
	void ShowedGroup();
	void ShowNextDropType(struct FName InTableName);
	int GetPendingDropCount(struct FName InTableName);
	void HandleGroupSeen(class UItemDropGroup_TA* DropGroup);
	void HandleActiveGroupSeen();
	void RemoveInvalidDrops();
	void ClearDropsByType(struct FName DropType);
	TArray<class UItemDropGroup_TA*> GetDropsByType(struct FName DropType);
	void RemoveDropsOfClassType(class UClass* DropClass);
	void ClearActiveGroup();
	void HandleChallengeRewardCollected(class UChallengeManager_TA* ChallengeManager, class UChallenge_TA* Challenge, struct FOnlineReward& Reward);
	void HandleReceivedXPDrop(class URewardDrop_TA* RewardDrop);
	class UCompleteTaskDropGroup_TA* DropRewardGroup(class UClass* CompleteTaskClass, struct FOnlineReward Reward, struct FString Title, class UTexture* Icon, int XPChange, int PointChange, TArray<struct FCurrency>& Currency);
	void AddProductToGroup(unsigned long long InstanceID, unsigned long long AddedTimestamp, class UItemDropGroup_TA* ItemGroup);
	void AddOnlineProductToGroup(class UItemDropGroup_TA* ItemGroup, struct FOnlineProductData& ProductData);
	void HandleNewOnlineItem(class USaveData_TA* InSaveData, class UOnlineProduct_TA* OnlineProduct);
	void VerifyHashIDs(class UItemDropGroup_TA* InDropGroup);
	void HandleOnlineProductsSynced(class USaveData_TA* Data);
	void HandleSaveDataLoaded(class USaveGameManager_TA* Manager, class USaveData_TA* SaveData, class UError* Error);
	void MakeGroupActive(class UItemDropGroup_TA* InActiveGroup);
	void OnGroupAdded();
	void RequeueActiveGroup();
	class UItemDropGroup_TA* InternalAddGroup(class UItemDropGroup_TA* Group);
	class UItemDropGroup_TA* AddGroup(class UClass* GroupClass, unsigned char DisplayOrder);
	void DropXPGroup();
	void DropItemGroup(TArray<struct FOnlineProductData>& OnlineProducts, TArray<struct FCurrency>& CurrencyDrops);
	struct FCurrency CreateCurrencyDrop(int Id, int Amount);
	void ProcessCurrencyDrop(struct FCurrency& Drop);
	void HandleShopPurchase(TArray<struct FOnlineProductData> PurchasedProducts, TArray<struct FCurrency> PurchasedCurrencies);
	void HandleReceivedCurrencyDrop(class APlayerControllerBase_TA* PC, struct FCurrency Drop);
	void eventOnShellSet();
};

// Class TAGame.GRI_TA
// 0x0018 (0x0690 - 0x06A8)
class AGRI_TA : public AGRI_X
{
public:
	unsigned long                                      bHasTalkers : 1;                                  		// 0x0690 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	struct FString                                     NewDedicatedServerIP;                             		// 0x0698 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GRI_TA");
		}

		return uClassPointer;
	};

	void SetVoiceChatActive(unsigned long bActive);
	void HandleTalkingStatusChange(class UOnlineGameVoice_X* OnlineGameVoice, class APlayerReplicationInfo* PRI, unsigned long bTalking);
	struct FString GetTimeString(int Seconds, unsigned long bCountDown, unsigned long bShowMinutes, float MS, unsigned long bShowMS);
	void eventDestroyed();
	void SetDefaultScriptedColors();
	void eventPostBeginPlay();
};

// Class TAGame.GFxHUD_Spectator_TA
// 0x0040 (0x0510 - 0x0550)
class AGFxHUD_Spectator_TA : public AGFxHUD_TA
{
public:
	class UGFxData_ReplayViewer_TA*                    ViewerData;                                       		// 0x0510 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              ZoomSpeed;                                        		// 0x0518 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ZoomClickTime;                                    		// 0x051C (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AGFxHUD_TA*                                  GameHUD;                                          		// 0x0520 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bZoomIn : 1;                                      		// 0x0528 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bZoomOut : 1;                                     		// 0x0528 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	float                                              ZoomInTime;                                       		// 0x052C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ZoomOutTime;                                      		// 0x0530 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __OpenMenuWithKeycodeDelegate__Delegate;          		// 0x0538 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxHUD_Spectator_TA");
		}

		return uClassPointer;
	};

	struct FString __GFxHUD_Spectator_TA__GetFocusPlayerNames_A9042BB048F58E129922778478CF1ACF(class UGFxData_PRI_TA* Data);
	int __GFxHUD_Spectator_TA__GetFocusPlayerNames_65E541CC4613F99DCFC20FB70CEB83AC(class UGFxData_PRI_TA* L, class UGFxData_PRI_TA* R);
	bool __GFxHUD_Spectator_TA__GetFocusPlayerNames_F43553BC456E6C5ECE5ECC86D8376C8E(class UGFxData_PRI_TA* Data);
	void CycleNameplate();
	void HandleCanVoteForfeitChanged(class AGameEvent_TA* InGameEvent);
	class ACar_TA* GetFocusCar();
	class APRI_TA* GetPRIFromPlayerIDString(struct FString PlayerIDString);
	void HandleViewedPlayerTeamChanged(class APRI_X* InPRI);
	void ViewCycle(int Direction);
	void ViewPrev();
	void ViewNext();
	void GetViewableActors(TArray<struct FString>& Actors, int& CurrentIndex);
	void AddViewableActor(struct FString actorName, TArray<struct FString>& Actors, int& CurrentIndex);
	void ViewFly();
	void ViewAutoCam();
	void ViewDefault();
	void OnViewedPlayerChanged(struct FString PreviousPlayerIDString, class APRI_TA* NewPlayerPRI);
	void ViewPlayer(int Team, int Player);
	void OpenReplayFXMenu();
	void OpenHUDMenu();
	void OpenCameraMenu();
	void CycleCamera();
	void OpenFocusMenu();
	void CycleFocus();
	TArray<struct FString> GetFocusPlayerNames(TArray<class UGFxData_PRI_TA*>& PRIList);
	void OpenMenuWithKeycode(struct FScriptDelegate Callback);
	void OpenMenuWithKeycodeDelegate(int KeyCode, int MouseButton);
	void UpdateHudVisibility();
	void CycleHUD();
	bool ProcessZoomPress(unsigned long bPressed, int DeltaFOV, float& Time);
	void ZoomOut(unsigned long bPressed);
	void ZoomIn(unsigned long bPressed);
	void AdjustZoom(float DeltaFOV);
	void TickZoom(float DeltaTime, unsigned long bZoom, float Speed, float& Time);
	void eventTick(float DeltaTime);
	void SetGameEvent(class AGameEvent_TA* InGameEvent);
	class UGFxData_PRI_TA* CreateGFxPRIData();
	void HandleReservationsUpdated(class AGRI_X* GRI);
	void eventDestroyed();
	void InitGFx();
};

// Class TAGame.GFxNameplatesManager_TA
// 0x0068 (0x0070 - 0x00D8)
class UGFxNameplatesManager_TA : public UComponent
{
public:
	class UGFxMoviePlayer_X*                           MovieArchetype;                                   		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UNameplateMeshComponent_TA*                  NameplateMeshArchetype;                           		// 0x0078 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UGFxShell_X*                                 Shell;                                            		// 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxMoviePlayer_X*                           Movie;                                            		// 0x0088 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bHidden : 1;                                      		// 0x0090 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bShowingShortcuts : 1;                            		// 0x0090 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bDebug : 1;                                       		// 0x0090 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	TArray<class UNameplateComponent_TA*>              ComponentSlots;                                   		// 0x0098 (0x0010) [0x0000000004482008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	TArray<class UNameplateComponent_TA*>              PendingComponents;                                		// 0x00A8 (0x0010) [0x0000000004482008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	TArray<class UGFxData_Nameplate_TA*>               NameplateRows;                                    		// 0x00B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UNameplateMeshComponent_TA*>          Nameplates;                                       		// 0x00C8 (0x0010) [0x0000000004482008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxNameplatesManager_TA");
		}

		return uClassPointer;
	};

	void DrawDebug(class UNameplateMeshComponent_TA* Nameplate);
	void SetShowShortcuts(unsigned long bInShowShortcuts);
	void ToggleShowShortcuts();
	void Tick();
	void UpdateNameplatesVisibility();
	void SetHidden(unsigned long bHide);
	class UNameplateMeshComponent_TA* GetNameplate(class UNameplateComponent_TA* InComponent);
	class UNameplateMeshComponent_TA* SetNameplate(int Index, class UNameplateComponent_TA* InComponent);
	void SetPlayerData(int Index, class UNameplateComponent_TA* InComponent);
	void Update();
	class UGameShare_TA* GetGameShare();
	void QueUpdate();
	void HandleGameStateChanged(class AGameEvent_TA* GameEvent);
	void HandlePRITAChanged(class APRI_TA* P);
	void HandlePRIXChanged(class APRI_X* P);
	void HandleVehicleChanged(class AVehicle_TA* Vehicle);
	void HandleCarChanged(class ACar_TA* Car);
	void UpdatePendingComponents();
	void HandleNameplateRemoved(class UGameShare_TA* G, class UNameplateComponent_TA* InComponent);
	void HandleNameplateAdded(class UGameShare_TA* G, class UNameplateComponent_TA* InComponent);
	void Destroyed();
	void Init(class UGFxShell_X* InShell);
};

// Class TAGame.TourSettings_TA
// 0x0118 (0x0060 - 0x0178)
class UTourSettings_TA : public UObject
{
public:
	unsigned long long                                 Id;                                               		// 0x0060 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 ScheduleID;                                       		// 0x0068 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     Title;                                            		// 0x0070 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     CreatorName;                                      		// 0x0080 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FUniqueNetId                                CreatorPlayerID;                                  		// 0x0090 (0x0048) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long long                                 StartTime;                                        		// 0x00D8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 GenerateBracketTime;                              		// 0x00E0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                MaxBracketSize;                                   		// 0x00E8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TeamsRegistered;                                  		// 0x00EC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                RankMin;                                          		// 0x00F0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                RankMax;                                          		// 0x00F4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     Region;                                           		// 0x00F8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     RegionName;                                       		// 0x0108 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     GameTags;                                         		// 0x0118 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned char                                      GameMode;                                         		// 0x0128 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      TieBreaker;                                       		// 0x0129 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      SeedingType;                                      		// 0x012A (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TeamSize;                                         		// 0x012C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FName>                               DisabledMaps;                                     		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        SeriesRoundLengths;                               		// 0x0140 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                SeriesLength;                                     		// 0x0150 (0x0004) [0x0000000000000000]               
	int                                                FinalSeriesLength;                                		// 0x0154 (0x0004) [0x0000000000000000]               
	unsigned long                                      bPublic : 1;                                      		// 0x0158 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	int                                                MinPlayersPerTeam;                                		// 0x015C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 MatchExpireTimestamp;                             		// 0x0160 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FString>                             Platforms;                                        		// 0x0168 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourSettings_TA");
		}

		return uClassPointer;
	};

	void __TourSettings_TA__Init_10293DBE4AA7A9CDE5CE0AB200935C28(struct FString Original, struct FString Sanitized);
	void __TourSettings_TA__Init_AB2008E64A646DAB488FAD8616293B93(struct FString Original, struct FString Sanitized);
	bool __TourSettings_TA__HandleRegionsSynced_27A155B7446B6916C13AF48A25F3DFFE(struct FGFxRegion R);
	bool IsCrossPlatformPlayEnabled();
	bool IsManualTournament();
	void HandleRegionsSynced(class UGFxData_Regions_TA* RegionsData);
	void UpdateRegion(class UGFxData_Regions_TA* RegionsData);
	void SetTeamsRegistered(int InValue);
	void Init();
};

// Class TAGame.FaceIt_TA
// 0x0130 (0x0060 - 0x0190)
class UFaceIt_TA : public UObject
{
public:
	struct FFaceItMatchInfo                            MatchInfo;                                        		// 0x0060 (0x0038) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FServerReservationData                      ReservationData;                                  		// 0x0098 (0x0080) [0x0000000000400000] (CPF_NeedCtorLink)
	class UAsyncTask*                                  JoinTask;                                         		// 0x0118 (0x0008) [0x0000000000000000]               
	int                                                ConnectionAttempts;                               		// 0x0120 (0x0004) [0x0000000000000000]               
	float                                              FoundNewServerTimeoutSeconds;                     		// 0x0124 (0x0004) [0x0000000000000000]               
	class UFaceItConfig_TA*                            Config;                                           		// 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineGame_TA*                              OnlineGame;                                       		// 0x0130 (0x0008) [0x0000000000000000]               
	class UOnlineGameParty_X*                          OnlineGameParty;                                  		// 0x0138 (0x0008) [0x0000000000000000]               
	class UAsyncTask*                                  PendingFindMatchTask;                             		// 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventJoiningReservation__Delegate;              		// 0x0148 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventAddReservation__Delegate;                  		// 0x0160 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventError__Delegate;                           		// 0x0178 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FaceIt_TA");
		}

		return uClassPointer;
	};

	void __FaceIt_TA__Construct_801D896A455242AFC10A5E8BC499B918(class UPsyNetService_FaceItMatchComplete_TA* Service);
	void __FaceIt_TA__FindMatchForPlayer_A54F9F2D438FE9F16119B1A01DFE36A2();
	void __FaceIt_TA__FindMatchForPlayer_EED3B8FA425D1D132274D88B4D821FFE(class URPC_FaceItFindMatchForPlayer_TA* RPC);
	void __FaceIt_TA__FindMatchForPlayer_CC62F83F4E80951A4F940B9B2B4CABE5(class URPC_X* RPC);
	void __FaceIt_TA__FindMatchForPlayer_43C7FE754246AB58BAF2CC81B07472D0();
	void __FaceIt_TA__FindMatchForPlayer_2C4A32C1439B600F51EFB0BE509B5AEC(class UError* Error);
	void __FaceIt_TA__FindMatchForPlayer_491E20FF468F05C9239573965142EA35(struct FServerReservationData Reservation, struct FFaceItMatchInfo InMatchInfo, unsigned long long Expiration);
	void __FaceIt_TA__JoinReservation_79AE4E2A463D42FEE43FE68FAE24C3FD();
	void __FaceIt_TA__OnFailedJoin_6B1A7E0B472433D0CB8D78A68EBB3A3E(class URPC_FaceItPlayerFailedJoin_TA* RPC);
	void __FaceIt_TA__OnFailedJoin_DB213E474133437A6E2AE1B64BFC47E9(class URPC_X* RPC);
	bool IsInOnlineGame();
	void EndJoinGameAttempts();
	void HandleFailedPlayerFailedJoin(class UError* Error);
	void OnFailedJoin(struct FString FailReason);
	void HandleJoinComplete(unsigned long bSuccess, struct FString FailReason);
	void HandleGameDataSelected(int PlaylistId, int MutatorIndex);
	void HandleGRISpawned(class AGRI_X* GRI);
	void ClearJoinGameAttempt();
	void ClearMatchInfo(int InMatchID);
	void JoinReservation(struct FServerReservationData Data, struct FFaceItMatchInfo InMatchInfo);
	class UErrorType* GetJoinReservationError(struct FFaceItMatchInfo InMatchInfo);
	class UAsyncTask* FindMatchForPlayer();
	void RemoveMatchNotification(int InMatchID);
	void HandleFaceItMatchCancelled(class UPsyNetService_FaceItMatchCancelled_TA* Service);
	void eventConstruct();
	void EventError(class UError* InError);
	void EventAddReservation(struct FServerReservationData InReservationData, struct FFaceItMatchInfo InMatchInfo, unsigned long long Expiration, unsigned long bSuppressNotification);
	void EventJoiningReservation(class UAsyncTask* Task, struct FFaceItMatchInfo& InMatchInfo);
};

// Class TAGame.MutatorGameSettingPreset_TA
// 0x000C (0x0064 - 0x0070)
class UMutatorGameSettingPreset_TA : public UGameSetting_X
{
public:
	class UPresetMutators_X*                           Presets;                                          		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MutatorGameSettingPreset_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__GFxHUD_TA__HandleVoteFinished_36DA1F184C9780A098F737BD8BAE0920
// 0x0008 (0x0060 - 0x0068)
class U__GFxHUD_TA__HandleVoteFinished_36DA1F184C9780A098F737BD8BAE0920 : public UObject
{
public:
	class AVoteActor_TA*                               VoteActor;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxHUD_TA__HandleVoteFinished_36DA1F184C9780A098F737BD8BAE0920");
		}

		return uClassPointer;
	};

	bool __GFxHUD_TA__HandleVoteFinished_36DA1F184C9780A098F737BD8BAE0920(class AVoteActor_TA* OtherVote);
};

// Class TAGame.__GFxHUD_TA__GetVoteBySubject_0737AD0C4D7A944DF73292A4CEF1A420
// 0x0001 (0x0060 - 0x0061)
class U__GFxHUD_TA__GetVoteBySubject_0737AD0C4D7A944DF73292A4CEF1A420 : public UObject
{
public:
	unsigned char                                      VoteSubject;                                      		// 0x0060 (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxHUD_TA__GetVoteBySubject_0737AD0C4D7A944DF73292A4CEF1A420");
		}

		return uClassPointer;
	};

	bool __GFxHUD_TA__GetVoteBySubject_0737AD0C4D7A944DF73292A4CEF1A420(class AVoteActor_TA* OtherVote);
};

// Class TAGame.PickupTimer_TA
// 0x0008 (0x02C0 - 0x02C8)
class APickupTimer_TA : public ACarComponent_TA
{
public:
	int                                                TimeTillItem;                                     		// 0x02C0 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int                                                MaxTimeTillItem;                                  		// 0x02C4 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PickupTimer_TA");
		}

		return uClassPointer;
	};

	void SetMaxTimeTillItem(int NewMaxTime);
	void SetTimeTillItem(int NewTime);
};

// Class TAGame.GFxHUD_Replay_TA
// 0x0020 (0x0550 - 0x0570)
class AGFxHUD_Replay_TA : public AGFxHUD_Spectator_TA
{
public:
	class AGameInfo_Replay_TA*                         Game;                                             		// 0x0550 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              PrevKeyframeBufferTime;                           		// 0x0558 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bUserPaused : 1;                                  		// 0x055C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bPausedForEndOfReplay : 1;                        		// 0x055C (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	TArray<class UProductAsset_TA*>                    ReferencedProducts;                               		// 0x0560 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxHUD_Replay_TA");
		}

		return uClassPointer;
	};

	void eventDestroyed();
	void ReplayPause();
	void ScrubTimeline(float DeltaTime);
	void OpenTimelineMenu();
	void OpenSpeedMenu();
	void PrevKeyframe();
	void NextKeyframe();
	void RemoveKeyframe();
	void AddKeyframe();
	void DrawLogs();
	void DrawHUD();
	void SetGameEvent(class AGameEvent_TA* InGameEvent);
	void HandleGameEventSet(class AGameInfo_Replay_TA* InGame);
	void SetPausedForEndOfReplay(unsigned long bPaused);
	void HandlePostTimeSkip(class UReplay_TA* Replay);
	void HandlePreTimeSkip(class UReplay_TA* Replay);
	void HandlePlaybackStopped(class UReplay_TA* Replay);
	void HandleReplayStarted(class AGameInfo_Replay_TA* InGame);
	void InitGFx();
};

// Class TAGame.GFxHUD_Soccar_TA
// 0x0018 (0x0510 - 0x0528)
class AGFxHUD_Soccar_TA : public AGFxHUD_TA
{
public:
	class AGameEvent_Soccar_TA*                        SoccarGame;                                       		// 0x0510 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxData_ServerPerformanceStats_TA*          GFxServerPerformanceStats;                        		// 0x0518 (0x0008) [0x0000000000000000]               
	class UPreMatchLobby_TA*                           PreMatchLobby;                                    		// 0x0520 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxHUD_Soccar_TA");
		}

		return uClassPointer;
	};

	class APRI_TA* GetSelectedPRI();
	class APRI_TA* GetHoveredPRI();
	void UpdateCarData();
	void HandleReplicatedServerStats();
	void HandleShowIntroScene();
	void HandleTieBreakDecisionChanged();
	void HandleMatchWinnerSet(class AGameEvent_Soccar_TA* G);
	void HandlePlayerRemoved(class AGameEvent_TA* G, class APRI_TA* InPRI);
	void HandlePlayerAdded(class AGameEvent_TA* G, class APRI_TA* InPRI);
	void UpdateReplayData();
	void HandleScoreDataChanged(class AReplayDirector_TA* ReplayDirector);
	void HandleReplayDirectorSet(class AGameEvent_Soccar_TA* G);
	void HandleNextMatchTimeUpdated(class AGameEvent_TA* InGameEvent);
	void HandleWaitTimeUpdated();
	void HandleOvertimeUpdated(class AGameEvent_Soccar_TA* InGameEvent);
	void HandleGameTimeUpdated(class AGameEvent_Soccar_TA* InGameEvent);
	void OnAllTeamsCreated();
	void SetGameEvent(class AGameEvent_TA* InGameEvent);
	void eventDestroyed();
	void Init();
};

// Class TAGame.GFxData_ServerPerformanceStats_TA
// 0x0008 (0x0098 - 0x00A0)
class UGFxData_ServerPerformanceStats_TA : public UGFxDataSingleton_X
{
public:
	unsigned char                                      ServerPerformanceStatus;                          		// 0x0098 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bReportedServer : 1;                              		// 0x009C (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ServerPerformanceStats_TA");
		}

		return uClassPointer;
	};

	void ReportServer();
	void UpdateServerPerformanceStatus(unsigned char Status);
};

// Class TAGame.PreMatchLobby_TA
// 0x0038 (0x0060 - 0x0098)
class UPreMatchLobby_TA : public UObject
{
public:
	class ACar_TA*                                     SelectedFocus;                                    		// 0x0060 (0x0008) [0x0000000000000000]               
	class ACar_TA*                                     HighlightedFocus;                                 		// 0x0068 (0x0008) [0x0000000000000000]               
	struct FVector                                     LastHighlightLocation;                            		// 0x0070 (0x000C) [0x0000000000000000]               
	struct FScriptDelegate                             __EventSelectedFocusChanged__Delegate;            		// 0x0080 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PreMatchLobby_TA");
		}

		return uClassPointer;
	};

	class ACar_TA* GetSelectedFocus();
	class ACar_TA* GetHighlightedFocus();
	class ACar_TA* GetOwnerCar();
	class ULocalPlayer_TA* GetLocalPlayer();
	void HandleMouseHover(class ULocalPlayer_TA* LocalPlayer, class AActor* SelectedActor);
	class ACar_TA* GetClosestCarToLocation(struct FVector Location);
	void SelectHighlightFocusHorizontal(int Direction);
	void SelectHighlightFocusVertical(int Direction);
	void ToggleSelectedFocusFromHighlight();
	bool OnLeftMouseSelection(unsigned char InEventType, class ULocalPlayer_TA* LocalPlayer, class AActor* Selection);
	void SetHighlighted(class ACar_TA* Target);
	void SetSelected(class ACar_TA* Target);
	void HandleCarRemoved(class AGameEvent_TA* GameEvent, class ACar_TA* Car);
	void HandleReceivedController(class UPlayer* PlayerRef);
	void eventConstruct();
	void EventSelectedFocusChanged(class UPreMatchLobby_TA* PreMatchLobby);
};

// Class TAGame.GFxHUD_Season_TA
// 0x0000 (0x0528 - 0x0528)
class AGFxHUD_Season_TA : public AGFxHUD_Soccar_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxHUD_Season_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxHUD_Training_TA
// 0x0008 (0x0528 - 0x0530)
class AGFxHUD_Training_TA : public AGFxHUD_Soccar_TA
{
public:
	class UGFxData_Training_TA*                        TrainingData;                                     		// 0x0528 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxHUD_Training_TA");
		}

		return uClassPointer;
	};

	void SetGameEvent(class AGameEvent_TA* InGameEvent);
};

// Class TAGame.GFxModal_FriendJoin_TA
// 0x0030 (0x00C8 - 0x00F8)
class UGFxModal_FriendJoin_TA : public UGFxModal_X
{
public:
	struct FString                                     ConnectingTitleString;                            		// 0x00C8 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ConnectingBodyString;                             		// 0x00D8 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     JoiningGameFailedString;                          		// 0x00E8 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxModal_FriendJoin_TA");
		}

		return uClassPointer;
	};

	void HandlePasswordRequired();
	void HandleGameInviteComplete(unsigned long bSuccess, struct FString FailReason);
	void SetGFxObject(class UGFxObject* Obj);
	void Close();
	class UOnlineGame_X* GetOnlineGame();
};

// Class TAGame.__GFxModal_Processing_TA__CreateAndBind_50C04046467D64A6008789B9C32ECDB3
// 0x0008 (0x0060 - 0x0068)
class U__GFxModal_Processing_TA__CreateAndBind_50C04046467D64A6008789B9C32ECDB3 : public UObject
{
public:
	class UAsyncTask*                                  Task;                                             		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxModal_Processing_TA__CreateAndBind_50C04046467D64A6008789B9C32ECDB3");
		}

		return uClassPointer;
	};

	void __GFxModal_Processing_TA__CreateAndBind_50C04046467D64A6008789B9C32ECDB3(class UGFxModal_X* M);
};

// Class TAGame.__GFxModal_Processing_TA__CreateAndBindNoCancel_A7A1142B49800DD852767E86EDA1A05E
// 0x0008 (0x0060 - 0x0068)
class U__GFxModal_Processing_TA__CreateAndBindNoCancel_A7A1142B49800DD852767E86EDA1A05E : public UObject
{
public:
	class UGFxModal_X*                                 Modal;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxModal_Processing_TA__CreateAndBindNoCancel_A7A1142B49800DD852767E86EDA1A05E");
		}

		return uClassPointer;
	};

	void __GFxModal_Processing_TA__CreateAndBindNoCancel_A7A1142B49800DD852767E86EDA1A05E();
};

// Class TAGame.GFxModal_RankedReconnect_TA
// 0x0028 (0x00C8 - 0x00F0)
class UGFxModal_RankedReconnect_TA : public UGFxModal_X
{
public:
	struct FString                                     ConnectingTitleString;                            		// 0x00C8 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ConnectingBodyString;                             		// 0x00D8 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UFindServerTask_X*                           Task;                                             		// 0x00E8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxModal_RankedReconnect_TA");
		}

		return uClassPointer;
	};

	void HandleTaskError(class UError* Error);
	void HandleJoin(unsigned long bSuccess, struct FString FailReason);
	void StartJoin(struct FServerReservationData Reservation);
	void StartReconnect(struct FServerReservationData Reservation);
	void SetGFxObject(class UGFxObject* Obj);
	void Close();
	class UOnlineGame_X* GetOnlineGame();
};

// Class TAGame.GFxModal_TextInput_TA
// 0x0018 (0x00C8 - 0x00E0)
class UGFxModal_TextInput_TA : public UGFxModal_X
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x00C8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxModal_TextInput_TA");
		}

		return uClassPointer;
	};

	void HandleInputComplete(struct FString InputText, unsigned long bCanceled);
	void SetData(class UGFxObject* Data);
	class UGFxModal_TextInput_TA* SetTextInputData(struct FScriptDelegate InCallback, unsigned long bDisplayAsPassword, struct FString DefaultText, int MaxLength);
};

// Class TAGame.GFxModal_Tutorial_TA
// 0x0000 (0x00C8 - 0x00C8)
class UGFxModal_Tutorial_TA : public UGFxModal_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxModal_Tutorial_TA");
		}

		return uClassPointer;
	};

	void HandleButtonClicked(int Index);
};

// Class TAGame.GFxData_Features_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_Features_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Features_TA");
		}

		return uClassPointer;
	};

	void eventOnShellSet();
};

// Class TAGame.GFxData_WebBrowser_TA
// 0x0028 (0x0098 - 0x00C0)
class UGFxData_WebBrowser_TA : public UGFxDataSingleton_X
{
public:
	struct FString                                     ActiveURL;                                        		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     ActivePageTitle;                                  		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UUrlConfig_X*                                UrlConfig;                                        		// 0x00B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_WebBrowser_TA");
		}

		return uClassPointer;
	};

	void __GFxData_WebBrowser_TA__OnShellSet_DA4A16AE41F09EDBB9ADF5AFAEE8AA3F(struct FString _);
	void HandleSwitchingMap();
	void HandleBrowserLoaded(struct FString PageTitle, struct FString URL, unsigned long long LoadTimeInSeconds);
	void HandleBrowserClosed();
	void HandleBrowserOpened(struct FString InURL);
	void CloseBrowser();
	void OpenBrowserToURL(struct FString URL, int BrowserWidth, int BrowserHeight);
	void eventOnShellSet();
};

// Class TAGame.GFxData_SeasonReward_TA
// 0x0020 (0x0098 - 0x00B8)
class UGFxData_SeasonReward_TA : public UGFxDataSingleton_X
{
public:
	int                                                Level;                                            		// 0x0098 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Wins;                                             		// 0x009C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                WinsRequired;                                     		// 0x00A0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bCanProgress : 1;                                 		// 0x00A4 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	class URankedConfig_X*                             RankedConfig;                                     		// 0x00A8 (0x0008) [0x0000000000000000]               
	class UOnlineGameSkill_X*                          Skill;                                            		// 0x00B0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_SeasonReward_TA");
		}

		return uClassPointer;
	};

	void UpdateData();
	void HandleRewardUpdateOnGameJoin(unsigned long bSuccess, struct FString FailReason);
	void HandleSkillObjectInjected();
};

// Class TAGame.GFxData_ProductsSave_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_ProductsSave_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductsSave_TA");
		}

		return uClassPointer;
	};

	void ClearUnseenGiftboxes();
	void eventOnShellSet();
};

// Class TAGame.GFxData_ESportConfig_TA
// 0x0008 (0x0098 - 0x00A0)
class UGFxData_ESportConfig_TA : public UGFxDataSingleton_X
{
public:
	class UESportConfig_TA*                            ESportEvents;                                     		// 0x0098 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ESportConfig_TA");
		}

		return uClassPointer;
	};

	void DownloadImage(struct FString URL);
	void HandleConfigChanged();
};

// Class TAGame.GFxData_LastChanceBan_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_LastChanceBan_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_LastChanceBan_TA");
		}

		return uClassPointer;
	};

	void __GFxData_LastChanceBan_TA__DismissLastChanceModal_476DEA0944421B52FCA7FEABAFBFDF41(class UBanSave_TA* BanSave);
	void OnShowLastChanceModal();
	void DismissLastChanceModal();
	void HandleLastChance(class UBanSave_TA* InBanSave, class UGFxData_LastChanceBan_TA* InGFxLastChance, class UPrimaryAuthLoggedIn_TA* InLoggedIn);
	void eventOnShellSet();
};

// Class TAGame.ChampionshipTrophy_TA
// 0x0010 (0x0060 - 0x0070)
class UChampionshipTrophy_TA : public UObject
{
public:
	class AScreenDisplayActor_TA*                      ChampionshipTrophyArchetype;                      		// 0x0060 (0x0008) [0x0000000000000000]               
	class UAkSoundCue*                                 ChampionshipTrophySound;                          		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ChampionshipTrophy_TA");
		}

		return uClassPointer;
	};

	void Spawn(class AActor* Owner);
};

// Class TAGame.RankedReconnectSave_TA
// 0x0088 (0x00C8 - 0x0150)
class URankedReconnectSave_TA : public USaveObject_TA
{
public:
	struct FServerReservationData                      Reservation;                                      		// 0x00C8 (0x0080) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 EpochTime;                                        		// 0x0148 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RankedReconnectSave_TA");
		}

		return uClassPointer;
	};

	class USaveObject_TA* Reconcile(class USaveObject_TA* Remote);
	void ClearRankedReconnect();
	bool RankedReconnectAvailable();
	void SetRankedReconnect(int InPlaylistID, struct FActiveServerData& Server);
};

// Class TAGame.GFxModal_Cinematic_TA
// 0x0000 (0x00C8 - 0x00C8)
class UGFxModal_Cinematic_TA : public UGFxModal_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxModal_Cinematic_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_EpicLogin_TA
// 0x0030 (0x0098 - 0x00C8)
class UGFxData_EpicLogin_TA : public UGFxDataSingleton_X
{
public:
	class UEpicAccountSave_TA*                         EpicAccountSave;                                  		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     EpicDisplayName;                                  		// 0x00A0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     AccountLinkURL;                                   		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UEpicConfig_X*                               EpicConfig;                                       		// 0x00C0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_EpicLogin_TA");
		}

		return uClassPointer;
	};

	void __GFxData_EpicLogin_TA__OnShellSet_AC15FC8D434676EC839FDCB10C407287(class UEpicAccountSave_TA* EpicAccountSaveData);
	bool __GFxData_EpicLogin_TA__HandleConfigChanged_4F86D84C4E0EA79F22D2FC910BD0AB07(class ULocalizedAccountLinkURL* A);
	void __GFxData_EpicLogin_TA__RequestAccountAuthorization_B0B0BEAF462FCBB3CA6CFBBBEBCC8407(struct FString _, struct FString __, class UError* Error);
	void LostConnection();
	void ReceivedAccountAuthorization(unsigned long bSuccess);
	void RequestAccountAuthorization();
	void OnCompletedLinkingFlow();
	void OnLoadedEpicAccountSaveData(unsigned long bPlatformLinked);
	void HandleSaveSyncSuccess(class UOnlineStorageSyncManager_TA* OnlineStorageSyncManager);
	void HandleSaveLoaded(class USaveGameManager_TA* Manager, class USaveData_TA* SaveData, class UError* Error);
	void ParentalConsentVerification();
	void ShowParentalConsentScreen();
	void ShowChoosePrimaryScreen();
	void ShowEpicAccountLinkScreen();
	void AccountPortalCompletedAttemptReLogin();
	void LaunchAccountPortalURL();
	void RequestPinGrantCode();
	void PinGrantRequestFailed(struct FString Error);
	void OnSkippedChoosePrimaryScreen();
	void OnSkippedEpicAccountLinkScreen();
	void CheckForLoginErrors();
	void HandleLoggedIn();
	void HandleLoginError(class UEpicLogin_X* EpicLogin, class UErrorType* Error);
	void HandleConfigChanged();
	void eventOnShellSet();
};

// Class TAGame.__GFxShell_TA__SetInputActionEnabled_DFF9A56A4F27DF4ABC24EEBC9D80DC94
// 0x000C (0x0060 - 0x006C)
class U__GFxShell_TA__SetInputActionEnabled_DFF9A56A4F27DF4ABC24EEBC9D80DC94 : public UObject
{
public:
	struct FName                                       ActionName;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
	unsigned long                                      bEnabled : 1;                                     		// 0x0068 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxShell_TA__SetInputActionEnabled_DFF9A56A4F27DF4ABC24EEBC9D80DC94");
		}

		return uClassPointer;
	};

	void __GFxShell_TA__SetInputActionEnabled_597BFB8B4BF8D89C2C2E18BE36990817();
	void __GFxShell_TA__SetInputActionEnabled_DFF9A56A4F27DF4ABC24EEBC9D80DC94(class UPlayer* P);
};

// Class TAGame.__GFxShell_TA__ShowRankedReconnectModal_D13EA8DC4CB6A9E1B3E98592016B70F5
// 0x0080 (0x0060 - 0x00E0)
class U__GFxShell_TA__ShowRankedReconnectModal_D13EA8DC4CB6A9E1B3E98592016B70F5 : public UObject
{
public:
	struct FServerReservationData                      Reservation;                                      		// 0x0060 (0x0080) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxShell_TA__ShowRankedReconnectModal_D13EA8DC4CB6A9E1B3E98592016B70F5");
		}

		return uClassPointer;
	};

	void __GFxShell_TA__ShowRankedReconnectModal_D13EA8DC4CB6A9E1B3E98592016B70F5(class UGFxModal_X* _);
};

// Class TAGame.GFxModal_Ban_TA
// 0x0000 (0x00C8 - 0x00C8)
class UGFxModal_Ban_TA : public UGFxModal_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxModal_Ban_TA");
		}

		return uClassPointer;
	};

	class UGFxModal_Ban_TA* SetCitations(TArray<struct FString> Citations);
};

// Class TAGame.GoalVolume_TA
// 0x000C (0x02A4 - 0x02B0)
class AGoalVolume_TA : public AVolume
{
public:
	class UGoal_TA*                                    Goal;                                             		// 0x02A8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GoalVolume_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.LightBarComponent_TA
// 0x002F (0x009D - 0x00CC)
class ULightBarComponent_TA : public UActorComponent
{
public:
	class ATeam_TA*                                    Team;                                             		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bStrobeActive : 1;                                		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bRandStrobeColor : 1;                             		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	int                                                StrobeCount;                                      		// 0x00AC (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                MaxStrobeCount;                                   		// 0x00B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              StrobeTime;                                       		// 0x00B4 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<struct FColor>                              StrobeColorList;                                  		// 0x00B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                StrobeColorIndex;                                 		// 0x00C8 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.LightBarComponent_TA");
		}

		return uClassPointer;
	};

	void HandleBoostAmountChanged(class ACarComponent_Boost_TA* Boost);
	void HandleTeamChanged(class APRI_X* PRI);
	void Strobe_MVP(class ATeam_TA* InTeam);
	void Strobe_GoalScored(int ScoredOnTeam);
	void StrobeColor();
	void StartStrobeColor(float Duration, float InStrobeCount, unsigned long bRandColor);
	void ResetColor();
	void SetColor(struct FColor NewColor);
};

// Class TAGame.LightEnvironment_TA
// 0x0004 (0x018C - 0x0190)
class ULightEnvironment_TA : public UParticleLightEnvironmentComponent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.LightEnvironment_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__Loadout_TA__ValidateForcedProducts_2093170446AD44367261218023DD7CA6
// 0x000C (0x0060 - 0x006C)
class U__Loadout_TA__ValidateForcedProducts_2093170446AD44367261218023DD7CA6 : public UObject
{
public:
	class UProductAttribute_TeamForcedProduct_TA*      TeamForcedProducts;                               		// 0x0060 (0x0008) [0x0000000000000000]               
	int                                                TeamIndex;                                        		// 0x0068 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__Loadout_TA__ValidateForcedProducts_2093170446AD44367261218023DD7CA6");
		}

		return uClassPointer;
	};

	int __Loadout_TA__ValidateForcedProducts_2093170446AD44367261218023DD7CA6(int PID);
};

// Class TAGame.IForcedProduct
// 0x0000 (0x0060 - 0x0060)
class UIForcedProduct : public UInterface
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IForcedProduct");
		}

		return uClassPointer;
	};

	int GetForcedProductID();
};

// Class TAGame.__Loadout_TA__ApplyCompatibleAttributeProducts_C92195794CE27BD72F4A2BB5088D7D58
// 0x0004 (0x0060 - 0x0064)
class U__Loadout_TA__ApplyCompatibleAttributeProducts_C92195794CE27BD72F4A2BB5088D7D58 : public UObject
{
public:
	int                                                EquippedBodyID;                                   		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__Loadout_TA__ApplyCompatibleAttributeProducts_C92195794CE27BD72F4A2BB5088D7D58");
		}

		return uClassPointer;
	};

	bool __Loadout_TA__ApplyCompatibleAttributeProducts_C92195794CE27BD72F4A2BB5088D7D58(class UProduct_TA* B);
};

// Class TAGame.LoadoutRenderer_TA
// 0x0030 (0x0060 - 0x0090)
class ULoadoutRenderer_TA : public UObject
{
public:
	class UThumbnailRenderer_TA*                       ThumbnailRenderer;                                		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UProductLoader_TA*                           Loader;                                           		// 0x0068 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class ATeam_TA*                                    TeamArchetype;                                    		// 0x0070 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventLoadoutRendered__Delegate;                 		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.LoadoutRenderer_TA");
		}

		return uClassPointer;
	};

	void HandleAllProductsLoaded(class UProductLoader_TA* InLoader);
	void RenderLoadout(struct FClientLoadoutData Loadout, class ATeam_TA* InTeamArchetype, struct FScriptDelegate Callback);
	void EventLoadoutRendered(class ULoadoutRenderer_TA* Renderer, class UTexture2D* Tex);
};

// Class TAGame.Mutator_Ball_TA
// 0x0064 (0x0064 - 0x00C8)
class UMutator_Ball_TA : public UMutator_TA
{
public:
	class AGameEvent_Soccar_TA*                        SoccarGame;                                       		// 0x0068 (0x0008) [0x0000000000000000]               
	float                                              BallScale;                                        		// 0x0070 (0x0004) [0x0000000000000000]               
	float                                              BallBounciness;                                   		// 0x0074 (0x0004) [0x0000000000000000]               
	float                                              BallCarBounciness;                                		// 0x0078 (0x0004) [0x0000000000000000]               
	int                                                TotalGameBalls;                                   		// 0x007C (0x0004) [0x0000000000000000]               
	class ABall_TA*                                    BallArchetype;                                    		// 0x0080 (0x0008) [0x0000000000000000]               
	float                                              BallGravityScale;                                 		// 0x0088 (0x0004) [0x0000000000000000]               
	float                                              BallSloMoDuration;                                		// 0x008C (0x0004) [0x0000000000000000]               
	float                                              BallSloMoDilation;                                		// 0x0090 (0x0004) [0x0000000000000000]               
	float                                              BallSloMoCooldown;                                		// 0x0094 (0x0004) [0x0000000000000000]               
	float                                              BallSloMoRadius;                                  		// 0x0098 (0x0004) [0x0000000000000000]               
	float                                              BallSloMoDiffSpeed;                               		// 0x009C (0x0004) [0x0000000000000000]               
	float                                              BallMaxLinearSpeedScale;                          		// 0x00A0 (0x0004) [0x0000000000000000]               
	float                                              BallMaxAngularSpeed;                              		// 0x00A4 (0x0004) [0x0000000000000000]               
	struct FVector                                     BallMagnusCoefficient;                            		// 0x00A8 (0x000C) [0x0000000000000000]               
	class UPhysicalMaterial*                           PhysMatOverride;                                  		// 0x00B8 (0x0008) [0x0000000000000000]               
	float                                              BallLiftImpulse;                                  		// 0x00C0 (0x0004) [0x0000000000000000]               
	float                                              BallLiftDelay;                                    		// 0x00C4 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_Ball_TA");
		}

		return uClassPointer;
	};

	class UBallSlomoComponent_TA* GetSlomoComponent(class ABall_TA* Ball);
	void MutateObject(class UObject* O);
	void ApplyBallLift();
	void HandleGameStateChanged(class AGameEvent_TA* _);
	void Init(class AGameEvent_TA* GameEvent);
};

// Class TAGame.BallSlomoComponent_TA
// 0x001C (0x00A4 - 0x00C0)
class UBallSlomoComponent_TA : public UActorComponent_X
{
public:
	float                                              BallSloMoRadius;                                  		// 0x00A8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              BallSloMoDuration;                                		// 0x00AC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              BallSloMoDilation;                                		// 0x00B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              BallSloMoCooldown;                                		// 0x00B4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              BallSloMoNext;                                    		// 0x00B8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              BallSloMoDiffSpeed;                               		// 0x00BC (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BallSlomoComponent_TA");
		}

		return uClassPointer;
	};

	void RestoreTimeDilation();
	void eventTick(float DeltaTime);
};

// Class TAGame.Mutator_Booster_TA
// 0x0018 (0x0064 - 0x007C)
class UMutator_Booster_TA : public UMutator_TA
{
public:
	unsigned long                                      bNoBooster : 1;                                   		// 0x0068 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bUnlimitedBoost : 1;                              		// 0x0068 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bBoostRechargeGroundOnly : 1;                     		// 0x0068 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	unsigned long                                      bOverrideStartBoost : 1;                          		// 0x0068 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	float                                              BoostStrength;                                    		// 0x006C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BoostRechargeRate;                                		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BoostRechargeDelay;                               		// 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BoostStartAmount;                                 		// 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_Booster_TA");
		}

		return uClassPointer;
	};

	void MutateObject(class UObject* O);
};

// Class TAGame.Mutator_Car_TA
// 0x0010 (0x0064 - 0x0074)
class UMutator_Car_TA : public UMutator_TA
{
public:
	float                                              CarScale;                                         		// 0x0068 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              JumpScale;                                        		// 0x006C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CarMaxLinearSpeedScale;                           		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_Car_TA");
		}

		return uClassPointer;
	};

	void MutateObject(class UObject* O);
};

// Class TAGame.Mutator_Demolish_TA
// 0x0006 (0x0064 - 0x006A)
class UMutator_Demolish_TA : public UMutator_TA
{
public:
	unsigned char                                      DemolishTarget;                                   		// 0x0068 (0x0001) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      DemolishSpeed;                                    		// 0x0069 (0x0001) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_Demolish_TA");
		}

		return uClassPointer;
	};

	void MutateObject(class UObject* O);
};

// Class TAGame.Mutator_GameSpeed_TA
// 0x0008 (0x0064 - 0x006C)
class UMutator_GameSpeed_TA : public UMutator_TA
{
public:
	float                                              GameSpeed;                                        		// 0x0068 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_GameSpeed_TA");
		}

		return uClassPointer;
	};

	void MutateObject(class UObject* O);
	void Init(class AGameEvent_TA* GameEvent);
};

// Class TAGame.Mutator_Gravity_TA
// 0x0008 (0x0064 - 0x006C)
class UMutator_Gravity_TA : public UMutator_TA
{
public:
	float                                              Gravity;                                          		// 0x0068 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_Gravity_TA");
		}

		return uClassPointer;
	};

	void Init(class AGameEvent_TA* GameEvent);
};

// Class TAGame.Mutator_Handicap_TA
// 0x0008 (0x0064 - 0x006C)
class UMutator_Handicap_TA : public UMutator_TA
{
public:
	int                                                AutoBalanceDifference;                            		// 0x0068 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_Handicap_TA");
		}

		return uClassPointer;
	};

	void Init(class AGameEvent_TA* GameEvent);
};

// Class TAGame.Mutator_Match_TA
// 0x0034 (0x0064 - 0x0098)
class UMutator_Match_TA : public UMutator_TA
{
public:
	int                                                MatchGames;                                       		// 0x0068 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                GameTime;                                         		// 0x006C (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                FinishTime;                                       		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                GameScore;                                        		// 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UGameEvent_Soccar_SubRules_TA*               SubRules;                                         		// 0x0078 (0x0008) [0x0000000000000000]               
	unsigned long                                      bUnlimitedTime : 1;                               		// 0x0080 (0x0004) [0x0000000000000000] [0x00000001] 
	class UOvertimeSettings_TA*                        OvertimeComponent;                                		// 0x0088 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMaxTimeComponent_TA*                        MaxTimeComponent;                                 		// 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_Match_TA");
		}

		return uClassPointer;
	};

	void Init(class AGameEvent_TA* GameEvent);
};

// Class TAGame.OvertimeSettings_TA
// 0x0008 (0x0060 - 0x0068)
class UOvertimeSettings_TA : public UObject
{
public:
	unsigned char                                      TieBreaker;                                       		// 0x0060 (0x0001) [0x0000000000000001] (CPF_Edit)    
	int                                                OvertimeGameTime;                                 		// 0x0064 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OvertimeSettings_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.MaxTimeComponent_TA
// 0x0008 (0x0060 - 0x0068)
class UMaxTimeComponent_TA : public UObject
{
public:
	int                                                WarningTimeSeconds;                               		// 0x0060 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                TimeLimitSeconds;                                 		// 0x0064 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MaxTimeComponent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.Mutator_RespawnTime_TA
// 0x0010 (0x0064 - 0x0074)
class UMutator_RespawnTime_TA : public UMutator_TA
{
public:
	int                                                RespawnTime;                                      		// 0x0068 (0x0004) [0x0000000000000000]               
	unsigned long                                      bDisableGoalDelay : 1;                            		// 0x006C (0x0004) [0x0000000000000000] [0x00000001] 
	float                                              BallRespawnTime;                                  		// 0x0070 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_RespawnTime_TA");
		}

		return uClassPointer;
	};

	void Mutate(class UMutator_RespawnTime_TA* Mutator, class UPlayerSpawnFeature_TA* Feature);
	void Init(class AGameEvent_TA* GameEvent);
};

// Class TAGame.PlayerSpawnFeature_TA
// 0x0010 (0x0060 - 0x0070)
class UPlayerSpawnFeature_TA : public UObject
{
public:
	int                                                RespawnDelaySeconds;                              		// 0x0060 (0x0004) [0x0000000000000000]               
	class AGameEvent_TA*                               GameEvent;                                        		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerSpawnFeature_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.NameplateRenderTarget_TA
// 0x0008 (0x01B0 - 0x01B8)
class UNameplateRenderTarget_TA : public UScriptedTexture
{
public:
	class UGFxMoviePlayer_X*                           NameplatesMovie;                                  		// 0x01B0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NameplateRenderTarget_TA");
		}

		return uClassPointer;
	};

	void Render(class UCanvas* C);
};

// Class TAGame.OnlineGameTourMatchmaking_TA
// 0x0078 (0x0118 - 0x0190)
class UOnlineGameTourMatchmaking_TA : public UOnlineGameMatchmakingBase_X
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0118 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourConfig_TA*                              Config;                                           		// 0x0120 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FString                                     FoundServerString;                                		// 0x0128 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     StartSearchFailString;                            		// 0x0138 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UTourEvent_TA*                               TourEvent;                                        		// 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UError*                                      Error;                                            		// 0x0150 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bPlayerReadyForNextMatch : 1;                     		// 0x0158 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned char                                      JoinServerAttemptCounter;                         		// 0x015C (0x0001) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventError__Delegate;                           		// 0x0160 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventFailedToJoinGame__Delegate;                		// 0x0178 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineGameTourMatchmaking_TA");
		}

		return uClassPointer;
	};

	void StartMatchmaking();
	void HandleError(class UError* InError);
	void HandleMatchmakingStartSuccess();
	void HandleStartSearch(class UAsyncTask* Task);
	void OnReceiveGameServer(struct FServerReservationData Reservation);
	void OnFailedToJoinGame(struct FString FailReason);
	void SetError(class UError* InError);
	void CreateMatchmakingUI(class UGFxEngine_X* GFxEngine, class UGFxShell_X* Shell);
	void OnFindGameWarning(struct FString FailReason);
	void OnExit();
	void Cancel();
	void StartSearch();
	void HandleTourEventDeactivated(class UTourEvent_TA* InTourEvent, class UError* InError);
	void Deactivate();
	void HandleGameDataSelected(int PlaylistId, int MutatorIndex);
	void StartDelayedSearch();
	void HandleNextMatchReady(class UTourEventMatch_TA* TourEventMatch, struct FTourMatch& Match);
	void HandleStartTimeElapsed(class UTourEvent_TA* InTourEvent);
	void HandleTourActivated(class UOnlineGameTournaments_TA* InTournaments, class UTourEvent_TA* InTourEvent);
	void PlayerIsReadyForNextMatch();
	void OnNewGame();
	void EventFailedToJoinGame();
	void EventError(class UOnlineGameTourMatchmaking_TA* TourMatchmaking, class UError* InError);
};

// Class TAGame.LocalPlayerSkillSync_TA
// 0x0018 (0x0060 - 0x0078)
class ULocalPlayerSkillSync_TA : public UObject
{
public:
	class UOnlineGame_X*                               OnlineGame;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
	class UOnlineGameSkill_X*                          OnlineSkill;                                      		// 0x0068 (0x0008) [0x0000000000000000]               
	class UPsyNet_X*                                   PsyNet;                                           		// 0x0070 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.LocalPlayerSkillSync_TA");
		}

		return uClassPointer;
	};

	void SyncOnlinePlayerSkill(class UOnlinePlayer_X* Player);
	void SyncSkillsDelayed(float Delay);
	void SyncSkills();
	void HandlePsyNetConnection();
	void eventConstruct();
};

// Class TAGame.LegalText_TA
// 0x0020 (0x0060 - 0x0080)
class ULegalText_TA : public UObject
{
public:
	int                                                LegalHash;                                        		// 0x0060 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventLegalTextUpdated__Delegate;                		// 0x0068 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.LegalText_TA");
		}

		return uClassPointer;
	};

	void Accept();
	bool RequiresAcceptance();
	void InitLegal(class UOnlineLegalText_X* LegalText);
	class UUISavedValues_TA* GetUISave();
	void EventLegalTextUpdated();
};

// Class TAGame.Eula_TA
// 0x0008 (0x0080 - 0x0088)
class UEula_TA : public ULegalText_TA
{
public:
	class UEulaConfig_TA*                              EulaConfig;                                       		// 0x0080 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Eula_TA");
		}

		return uClassPointer;
	};

	void __Eula_TA__Construct_AAC3B4BF48145E4CB7D77F83C77CEBB7(class UOnlineGame_X* OnlineGame);
	void Accept();
	bool RequiresAcceptance();
	class UEulaSave_TA* GetEulaSave();
	void eventConstruct();
};

// Class TAGame.PrivacyPolicy_TA
// 0x0000 (0x0080 - 0x0080)
class UPrivacyPolicy_TA : public ULegalText_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PrivacyPolicy_TA");
		}

		return uClassPointer;
	};

	void __PrivacyPolicy_TA__Construct_5E96D5D04CBC8D2DF10C29B720EDE935(class UOnlineGame_X* OnlineGame);
	void Accept();
	bool RequiresAcceptance();
	class UPrivacyPolicySave_TA* GetPrivacySave();
	void eventConstruct();
};

// Class TAGame.PartyClubSync_TA
// 0x0028 (0x0060 - 0x0088)
class UPartyClubSync_TA : public UObject
{
public:
	class UOnlineGameParty_X*                          Party;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
	class UOnlineClubProvider_X*                       Clubs;                                            		// 0x0068 (0x0008) [0x0000000000000000]               
	class UPsyNet_X*                                   PsyNet;                                           		// 0x0070 (0x0008) [0x0000000000000000]               
	TArray<struct FUniqueNetId>                        PlayerIDs;                                        		// 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PartyClubSync_TA");
		}

		return uClassPointer;
	};

	bool __PartyClubSync_TA__GetPartyMemberIDs_909FFC4E49E4CA248FEDFCBF291546DD(struct FUniqueNetId Id);
	struct FUniqueNetId __PartyClubSync_TA__GetPartyMemberIDs_8FE503B54F897B1C4635B78645E9BB06(struct FPartyMember P);
	void ClearNonPartyClubData();
	void SyncPlayerClub(struct FUniqueNetId PlayerID);
	void HandlePartyClubChanged(class UOnlineMessageComponent_X* M, class UPartyMessage_ClubChanged_TA* Message);
	void HandleClubChanged(class UOnlineClubManager_X* M, unsigned long long ClubID);
	void HandlePartyChanged(class UOnlineGameParty_X* P);
	TArray<struct FUniqueNetId> GetPartyMemberIDs();
	void HandlePsyNetLogout();
	void HandlePsyNetLogin();
	void eventConstruct();
};

// Class TAGame.ClubNotificationsSync_TA
// 0x0000 (0x0060 - 0x0060)
class UClubNotificationsSync_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ClubNotificationsSync_TA");
		}

		return uClassPointer;
	};

	void HandleClubChanged(class UPsyNetClientService_X* Service);
	void HandleClubUpdated(class UPsyNetService_ClubsUpdate_TA* Update);
	void eventConstruct();
};

// Class TAGame.ChallengeDefaultManager_TA
// 0x0068 (0x0060 - 0x00C8)
class UChallengeDefaultManager_TA : public UObject
{
public:
	TArray<class UChallengeDefault_TA*>                DefaultChallenges;                                		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UChallengeFolder_TA*>                 Folders;                                          		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventChallengeAdded__Delegate;                  		// 0x0080 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventChallengesSynced__Delegate;                		// 0x0098 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventChallengesPushed__Delegate;                		// 0x00B0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ChallengeDefaultManager_TA");
		}

		return uClassPointer;
	};

	bool __ChallengeDefaultManager_TA__HandleChallengesPushed_69A6ADC944E557B7A6F73ABF99AE3314(int C);
	int __ChallengeDefaultManager_TA__HandleChallengesPushed_659C10B644C25892CFA83E849124192E(class UChallengeDefault_TA* C);
	void __ChallengeDefaultManager_TA__AddDefaultChallenges_ADFF537E4434449D60FB09A21F6FCF14(class UChallengeFolder_TA* F);
	void __ChallengeDefaultManager_TA__Cheat_SetFolders_A5AB9AEE4F4D0CC92F8F018079C0A8AD(class UChallengeFolder_TA* F);
	void Cheat_SetFolders(TArray<class UChallengeFolder_TA*>& InFolders);
	TArray<class UChallengeFolder_TA*> GetSubFolders(struct FString CodeName);
	class UChallengeFolder_TA* FindFolder(struct FString& FindCodeName);
	int FindChallengeIndex(int Id);
	void RemoveDefaultChallenges();
	void RemoveDefaultChallenge(int Id);
	void AddDefaultChallenge(class UChallengeDefault_TA* ChallengeDefault);
	void AddDefaultChallenges(TArray<class UChallengeDefault_TA*>& InChallenges, TArray<class UChallengeFolder_TA*>& InFolders);
	void HandleChallengesPushed(class UPsyNetService_ChallengeDefault_TA* Message);
	void HandleChallengesSynced(class URPC_GetChallengeDefault_TA* RPC);
	void ResyncChallenges();
	void HandlePsyNetLogin();
	void eventConstruct();
	void EventChallengesPushed(TArray<int> NewChallengeIDs, TArray<int> RemovedChallengeIDs);
	void EventChallengesSynced(class UChallengeDefaultManager_TA* Manager);
	void EventChallengeAdded(class UChallengeDefaultManager_TA* Manager, class UChallengeDefault_TA* ChallengeDefault);
};

// Class TAGame.RocketPass_TA
// 0x0118 (0x0060 - 0x0178)
class URocketPass_TA : public UObject
{
public:
	TArray<struct FRocketPassRewardData>               FreeRewards;                                      		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FRocketPassRewardData>               PremiumRewards;                                   		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FRocketPassRewardData>               PrestigeRewards;                                  		// 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                TierCap;                                          		// 0x0090 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bIsPassActive : 1;                                		// 0x0094 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bOwnsPremium : 1;                                 		// 0x0094 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bPrestigeItemsDirtied : 1;                        		// 0x0094 (0x0004) [0x0000000000000000] [0x00000004] 
	float                                              XPMultiplier;                                     		// 0x0098 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TierLevel;                                        		// 0x009C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SecondsRemaining;                                 		// 0x00A0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class URocketPassBundleContainer_TA*               Bundles;                                          		// 0x00A8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UAsyncTask*                                  SyncAllInfoTask;                                  		// 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UAsyncTask*                                  PendingPlayerInfoTask;                            		// 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UAsyncTask*                                  PendingRewardsTask;                               		// 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UAsyncTask*                                  PendingPrestigeRewardsTask;                       		// 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UAsyncTask*                                  PurchasePremiumTask;                              		// 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UAsyncTask*                                  PurchaseTiersTask;                                		// 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                CodeRedemptionPurchasableID;                      		// 0x00E0 (0x0004) [0x0000000000000002] (CPF_Const)   
	class URocketPassConfig_TA*                        RocketPassConfig;                                 		// 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineGame_X*                               OnlineGame;                                       		// 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWallet_TA*                                  Wallet;                                           		// 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventError__Delegate;                           		// 0x0100 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventRocketPassInfoChanged__Delegate;           		// 0x0118 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __FreeRewards__ChangeNotify;                      		// 0x0130 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __PremiumRewards__ChangeNotify;                   		// 0x0148 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __PrestigeRewards__ChangeNotify;                  		// 0x0160 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RocketPass_TA");
		}

		return uClassPointer;
	};

	void __RocketPass_TA__BeginState_1A4191DB46E1DC6AA66ABD91286DADC3(class UWallet_TA* InWallet);
	void __RocketPass_TA__RequestPlayerInfo_84A950DB49AC1917D1315A9CF09C14FE();
	void __RocketPass_TA__RequestRewards_D904DC2842079F54FF194EA3C225D4A1();
	void __RocketPass_TA__RequestPrestigeRewards_D1D8B65445C916CA1BE5B7AEFFBC74BC();
	void __RocketPass_TA__PurchasePremium_227CC30A4E2D4A70C7D63F950FB3D0F0();
	void __RocketPass_TA__PurchasePremium_60784D8549523A835D4119A478A3F215(class URPC_X* RPC);
	void __RocketPass_TA__PurchaseTiers_8AC8DAA84CCC4F9E83D0E6BB5FEBFCEF();
	void __RocketPass_TA__PurchaseTiers_DA56F76F40871BD6FB8F35BB394FD460(class URPC_X* RPC);
	bool __RocketPass_TA__HandlePurchaseTiers_2ED961B34973E1D2B9DBB2AA46205730(struct FRocketPassUnlock Unlock);
	void __RocketPass_TA__CheckForPremiumProduct_CF6EDA844E6511DB1F5586B8BC81D15D(class UPlayer* P);
	bool __RocketPass_TA__GetPremiumProduct_5026CC0C48D9B5FA397ADAB77ADF550F(class UOnlineProduct_TA* Op);
	void __PrestigeRewards__ChangeNotifyFunc();
	void __PremiumRewards__ChangeNotifyFunc();
	void __FreeRewards__ChangeNotifyFunc();
	class UOnlineProduct_TA* GetPremiumProduct(TArray<class UOnlineProduct_TA*>& OnlineProducts);
	void HandleRedeemedOnlineProducts(class USaveData_TA* Data, TArray<class UOnlineProduct_TA*>& RedeemedOnlineProducts);
	void CheckForPremiumProduct();
	bool HasFreeRewards();
	bool HasPlayerInfo();
	TArray<class UAsyncTask*> RetrieveMissingData();
	void HandleReceivedRewardDrop(class URewardDrop_XPMultiplier_TA* InXPMultiplier);
	void AddPrestigeUnlock(struct FRocketPassUnlock Unlock);
	void GiveUnlocks(TArray<struct FRocketPassUnlock>& Unlocks);
	void HandlePurchaseTiers(class URPC_RocketPassPurchaseTiers_TA* RPC);
	class UAsyncTask* PurchaseTiers(int PurchasableID, TArray<unsigned long long>& KeyInstanceIDs);
	void HandlePurchasePremium(class URPC_RocketPassPurchasePremium_TA* RPC);
	class UAsyncTask* PurchasePremium(int PurchasableID, TArray<unsigned long long>& KeyInstanceIDs);
	void HandleGetPrestigeRewards(class URPC_RocketPassGetPlayerPrestigeRewards_TA* RPC);
	class UAsyncTask* RequestPrestigeRewards();
	void HandleGetRewards(class URPC_RocketPassGetRewardContent_TA* RPC);
	class UAsyncTask* RequestRewards();
	void ForceSetRocketPassInfo(struct FRocketPassInfo Info, struct FRocketPassStore Store);
	void SetRocketPassInfo(struct FRocketPassInfo Info);
	void HandleGetPlayerInfo(class URPC_RocketPassGetPlayerInfo_TA* RPC);
	class UAsyncTask* RequestPlayerInfo();
	void UpdateSecondsRemaining();
	void RequestAllInfo();
	void UpdateState();
	void HandleEventConfigChanged();
	void HandlePsyNetLogout();
	void HandlePsyNetLogin();
	void eventConstruct();
	void EventRocketPassInfoChanged(class URocketPass_TA* RocketPass);
	void EventError(class UError* InError);
};

// Class TAGame.EnvironmentZone_TA
// 0x0000 (0x0060 - 0x0060)
class UEnvironmentZone_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EnvironmentZone_TA");
		}

		return uClassPointer;
	};

	int GetEnvironmentZone();
};

// Class TAGame.ClubPersonas_TA
// 0x0028 (0x0060 - 0x0088)
class UClubPersonas_TA : public UObject
{
public:
	class UOnlineClubCache_X*                          ClubCache;                                        		// 0x0060 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UOnlineGameWordFilter_X*                     WordFilter;                                       		// 0x0068 (0x0008) [0x0000000000000000]               
	TArray<class UPersonaClubData*>                    PersonaClubs;                                     		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UActionQueue_X*                              ActionQueue;                                      		// 0x0080 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ClubPersonas_TA");
		}

		return uClassPointer;
	};

	void ClubTagWithNameSanitized(class UPersonaClubData* PClub, struct FString ClubTag, struct FString Sanitized);
	void RefreshPersona(class UPersona_TA* Persona);
	void QueueRefresh(class UPersona_TA* Persona);
	void HandlePersonaAdded(class UPersonas_TA* Personas, class UPersona_TA* Persona);
	void HandleClubUpdated(class UOnlineClubCache_X* Cache, class UClubDetails_X* ClubDetails);
	void eventConstruct();
};

// Class TAGame.OnlineGameTourServer_TA
// 0x0200 (0x0098 - 0x0298)
class UOnlineGameTourServer_TA : public UOnline_X
{
public:
	struct FTourServerSettings                         TourSettings;                                     		// 0x0098 (0x00E8) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FTourServerSettings                         ReservationsTourSettings;                         		// 0x0180 (0x00E8) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UMapSet_TA*                                  MapSet;                                           		// 0x0268 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UTourGameUpdateDispatcher_TA*                GameUpdateDispatcher;                             		// 0x0270 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UTourServerInfo_TA*                          TourServerInfo;                                   		// 0x0278 (0x0008) [0x0000000000000000]               
	TArray<unsigned long long>                         TeamIDs;                                          		// 0x0280 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UTourServerConfig_TA*                        TournamentServerConfig;                           		// 0x0290 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineGameTourServer_TA");
		}

		return uClassPointer;
	};

	void __OnlineGameTourServer_TA__OnInit_FE0489714BA20522BF90B88E14A34C69(class UIReservationConnection_X* Connection, class UObject* Message);
	void __OnlineGameTourServer_TA__HandleGamePlaylistSet_99101DAD468D879C514A61A24DD7237D(class URPC_X* RPC);
	void __OnlineGameTourServer_TA__HandleGamePlaylistSet_0F1BD4114A83BD91811BBF9496FEF4F6(class URPC_TourGetMatchReservations_TA* RPC);
	unsigned long long __OnlineGameTourServer_TA__InitTourSettings_7807DCF647ACC82CC9A0309D43D6397C(struct FTourTeam T);
	bool __OnlineGameTourServer_TA__AllPlayersInGame_AF09F1F0497AB953FF050EA2B7386E7A(struct FTourTeam T);
	bool __OnlineGameTourServer_TA__AllPlayersInGame_6F5D33CA4C951D3690788EB4F96755F2(struct FTourPlayer P);
	bool __OnlineGameTourServer_TA__HasMinPlayersPerTeam_34D084824F9DCC9AF416E69F70B2F9E0(struct FTourTeam T);
	bool __OnlineGameTourServer_TA__HasMinPlayersPerTeam_6FB34A794EC86BBA8F04D68D4DEA0F31(struct FTourPlayer P);
	void __OnlineGameTourServer_TA__InitGameEventTeamScoresWhenInitialized_A47630344A13DF886FC9A7B9516BF028(class ATeam_Soccar_TA* T);
	void __OnlineGameTourServer_TA__InitGameEventTeamScoresWhenInitialized_C5779C8E4AB4E45AA09ECDAFBE2F77A3(struct FTourTeam T);
	class UObject* CreateClientReservationMessage(class UReservationBeacon_X* Beacon, struct FServerReservationData& Reservation, struct FUniqueNetId& PlayerID);
	void HandleJoinFaceItReservation(class UPsyNetService_JoinExternalMatch_X* Notification);
	void HandleCreateFaceItReservation(class UPsyNetService_CreateExternalMatch_X* Notification);
	void SetTeamDifficultiesByTeamID(unsigned long long TeamID, int DifficultyValue);
	int GetTeamScore(int TeamIndex);
	void InitGameEventTeamScoresWhenInitialized(class AGameEvent_Soccar_TA* InGameEvent);
	void InitGameEventTeamScores(class AGameEvent_Soccar_TA* InGameEvent);
	bool IsBotOnlyTeam(class ATeam_TA* Team);
	int GetTeamIndexFromTeamID(unsigned long long TeamID);
	void InitMatchSeriesScores(class UMatchSeries_TA* MatchSeries);
	void HandleActiveGameUpdated();
	void HandleError(class UError* Error);
	void HandleGameEventInitialized(class AGameEvent_Soccar_TA* InGameEvent);
	bool IsMatchCancelled();
	void GoToNextTourMap();
	void AllowPlayerLogin(struct FString Options, struct FUniqueNetId PlayerID, struct FString& ErrorMessage);
	bool AllowSplitscreenJoin(struct FUniqueNetId PrimaryPlayerId, struct FUniqueNetId PlayerID, struct FString PlayerName, struct FString& Error);
	int GetNumAllowedSpectators();
	int GetTeamNum(struct FUniqueNetId& PlayerID);
	bool IsPlayerRegistered(struct FUniqueNetId PlayerID);
	bool AllPlayersRegistered(TArray<struct FReservationPlayerData>& Players);
	bool CanAcceptReservations(class UAddReservationMessagePublic_X* Message);
	TArray<class UMapData_TA*> FilterMapData(int GameMode, TArray<struct FName>& FilterMaps);
	void UpdatePlayerTeam(class APlayerReplicationInfo* PRI, class AGameEvent_Team_TA* GameEventTeam);
	bool HasMinPlayersPerTeam();
	bool AllPlayersInGame();
	bool IsBotTeam(unsigned long long TeamID);
	void UpdatePlayerReservations();
	struct FCustomMatchSettings CreateMatchSettings(struct FTourServerSettings InSettings, class UTourServerInfo_TA* InTourServerInfo, class UTourServerConfig_TA* InTournamentServerConfig);
	void EnsureDifferentTeamColors(struct FTourServerSettings& Settings);
	void InitTourSettings(unsigned long bUpdateReservations, struct FTourServerSettings& NewSettings);
	void HandleTourMigrationMessage(class UTourMatchInfoMessage_TA* Message);
	void HandleJoinTournamentReservation(class UPsyNetService_JoinTournament_X* Notification);
	void HandleCreateTournamentReservation(class UPsyNetService_CreateTournament_X* Notification);
	void HandleGamePlaylistSet(class UOnlineGameDedicatedServer_X* DedicatedServer);
	bool IsPlaylistName(struct FName PlaylistName);
	bool IsTournamentPendingOrSet();
	bool IsTournamentSet();
	bool IsTournamentPlaylist(int PlaylistId);
	bool HasTournamentPlaylist();
	void ClearSettings();
	void OnInit();
};

// Class TAGame.BinaryUploader_TA
// 0x0018 (0x0060 - 0x0078)
class UBinaryUploader_TA : public UObject
{
public:
	TArray<unsigned char>                              Data;                                             		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UStringMap*                                  Headers;                                          		// 0x0070 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BinaryUploader_TA");
		}

		return uClassPointer;
	};

	void Upload(struct FString URL);
	void SetHeader(struct FString Key, struct FString Value);
};

// Class TAGame.__OnlineGameDedicatedServer_TA__InitFlatbufferUpload_2086A8CF4DAE1DE694052BBA5CEC24CF
// 0x0010 (0x0060 - 0x0070)
class U__OnlineGameDedicatedServer_TA__InitFlatbufferUpload_2086A8CF4DAE1DE694052BBA5CEC24CF : public UObject
{
public:
	class URPC_GetUploadUrls_TA*                       RPC;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
	class ARLBot_SessionRecorder_TA*                   Session;                                          		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineGameDedicatedServer_TA__InitFlatbufferUpload_2086A8CF4DAE1DE694052BBA5CEC24CF");
		}

		return uClassPointer;
	};

	void __OnlineGameDedicatedServer_TA__InitFlatbufferUpload_2086A8CF4DAE1DE694052BBA5CEC24CF(class URPC_X* _);
};

// Class TAGame.RPC_GetUploadUrls_TA
// 0x0078 (0x00E8 - 0x0160)
class URPC_GetUploadUrls_TA : public URPC_X
{
public:
	class UGetUploadUrlsMatch_TA*                      Match;                                            		// 0x00E8 (0x0008) [0x0000000000000000]               
	struct FString                                     ReplayContentType;                                		// 0x00F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     LogContentType;                                   		// 0x0100 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     FlatbufferContentType;                            		// 0x0110 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     UploadReplayUrl;                                  		// 0x0120 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     UploadLogUrl;                                     		// 0x0130 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     UploadFlatbufferUrl;                              		// 0x0140 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FKeyValuePair>                       FlatBufferMetaData;                               		// 0x0150 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_GetUploadUrls_TA");
		}

		return uClassPointer;
	};

	class URPC_GetUploadUrls_TA* SetSaveFlatbuffer(struct FString ContentType);
	class URPC_GetUploadUrls_TA* SetSaveLog(struct FString ContentType);
	class URPC_GetUploadUrls_TA* SetSaveReplay(struct FString ContentType);
	class URPC_GetUploadUrls_TA* SetMatch(class UMatchData_X* InMatch);
};

// Class TAGame.__OnlineGameDedicatedServer_TA__InitReplayUpload_12CE1A2D42388C26F7C927B3484A3C57
// 0x0010 (0x0060 - 0x0070)
class U__OnlineGameDedicatedServer_TA__InitReplayUpload_12CE1A2D42388C26F7C927B3484A3C57 : public UObject
{
public:
	class URPC_GetUploadUrls_TA*                       RPC;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
	class UBinaryUploader_TA*                          Uploader;                                         		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineGameDedicatedServer_TA__InitReplayUpload_12CE1A2D42388C26F7C927B3484A3C57");
		}

		return uClassPointer;
	};

	void __OnlineGameDedicatedServer_TA__InitReplayUpload_12CE1A2D42388C26F7C927B3484A3C57(class URPC_X* _);
};

// Class TAGame.__OnlineGameDedicatedServer_TA__InitMatchLogUpload_A0614BBE44B925421091EEAA222FD3F9
// 0x0010 (0x0060 - 0x0070)
class U__OnlineGameDedicatedServer_TA__InitMatchLogUpload_A0614BBE44B925421091EEAA222FD3F9 : public UObject
{
public:
	class UMatchLog_X*                                 Log;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
	class URPC_GetUploadUrls_TA*                       RPC;                                              		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineGameDedicatedServer_TA__InitMatchLogUpload_A0614BBE44B925421091EEAA222FD3F9");
		}

		return uClassPointer;
	};

	void __OnlineGameDedicatedServer_TA__InitMatchLogUpload_A0614BBE44B925421091EEAA222FD3F9(class URPC_X* _);
};

// Class TAGame.MapsConfig_TA
// 0x0010 (0x0078 - 0x0088)
class UMapsConfig_TA : public UOnlineConfig_X
{
public:
	TArray<struct FOnlineMapSet>                       OnlineMapSets;                                    		// 0x0078 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MapsConfig_TA");
		}

		return uClassPointer;
	};

	class UMapData_TA* __MapsConfig_TA__Apply_5BC2C5174D34506F345C79856ADE35C4(struct FOnlineMapData M);
	bool GetMapFrequencyForSet(struct FName MapName, struct FName SetName, float& Frequency);
	class UMapSet_TA* GetMapSetByName(struct FName SetName);
	void Apply();
};

// Class TAGame.ProductAssetCache_TA
// 0x0038 (0x0070 - 0x00A8)
class UProductAssetCache_TA : public UComponent
{
public:
	unsigned long                                      bDebug : 1;                                       		// 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	TArray<int>                                        NewProductIDs;                                    		// 0x0078 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<int>                                        LoadedProductIDs;                                 		// 0x0088 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UProductAsset_TA*>                    Assets;                                           		// 0x0098 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAssetCache_TA");
		}

		return uClassPointer;
	};

	struct FString GetDebugName();
	void HandleProductLoaded(struct FAssetLoadResult Result);
	void FinishedAddingProducts();
	void AddProducts(TArray<int> InProductIDs);
	void Clear();
};

// Class TAGame.OnlineGameJoinGame_TA
// 0x0008 (0x0470 - 0x0478)
class UOnlineGameJoinGame_TA : public UOnlineGameJoinGame_X
{
public:
	class UProductAssetCache_TA*                       AssetCache;                                       		// 0x0470 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineGameJoinGame_TA");
		}

		return uClassPointer;
	};

	TArray<int> GetLoadout(struct FUniqueNetId PlayerID);
	class UAddReservationMessage_X* AddLoadoutsToMessage(class UAddReservationMessage_X* Message);
	void ClearAssetCache();
	void HandlePreLoadMap(struct FString MapName);
	void OnInit();
};

// Class TAGame.OnlineGameLanServer_TA
// 0x0010 (0x0260 - 0x0270)
class UOnlineGameLanServer_TA : public UOnlineGameLanServer_X
{
public:
	TArray<class UObject*>                             AllRelevantProducts;                              		// 0x0260 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineGameLanServer_TA");
		}

		return uClassPointer;
	};

	void HandleGameEventEnded(class AGameEvent_Soccar_TA* GameEvent);
	void StartMatch();
	class AGameEvent_TA* GetCurrentGameEvent();
	struct FName GetRandomStandardMapName(int GameMode);
	struct FName GetRandomMapName(int GameMode);
	void GoToNextMap();
	void LoadAllRelevantProducts();
	void OnInit();
};

// Class TAGame.PartyMessage_Loadout_TA
// 0x00B8 (0x00A8 - 0x0160)
class UPartyMessage_Loadout_TA : public UPartyMessage_X
{
public:
	struct FPartyMemberLoadout                         MemberLoadout;                                    		// 0x00A8 (0x00B8) [0x0000000000480000] (CPF_Component | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PartyMessage_Loadout_TA");
		}

		return uClassPointer;
	};

	class UPartyMessage_Loadout_TA* SetLoadout(struct FPartyMemberLoadout& InMemberLoadout);
};

// Class TAGame.PartyMessage_ProfileChange_TA
// 0x0058 (0x00A8 - 0x0100)
class UPartyMessage_ProfileChange_TA : public UPartyMessage_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00A8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FOnlineProductData>                  ProfileProducts;                                  		// 0x00F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PartyMessage_ProfileChange_TA");
		}

		return uClassPointer;
	};

	class UPartyMessage_ProfileChange_TA* SetProfileProducts(TArray<struct FOnlineProductData>& InProfileProducts);
	class UPartyMessage_ProfileChange_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.PartyMessage_Rejoined_TA
// 0x0000 (0x00A8 - 0x00A8)
class UPartyMessage_Rejoined_TA : public UPartyMessage_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PartyMessage_Rejoined_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PartyMessage_Chat_TA
// 0x0010 (0x00A8 - 0x00B8)
class UPartyMessage_Chat_TA : public UPartyMessage_X
{
public:
	struct FString                                     Text;                                             		// 0x00A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PartyMessage_Chat_TA");
		}

		return uClassPointer;
	};

	class UPartyMessage_Chat_TA* SetSender(struct FUniqueNetId InSender);
	class UPartyMessage_Chat_TA* SetText(struct FString InText);
};

// Class TAGame.__OnlineGameParty_TA__HandleProfileSet_7075AD4A4ED866707AFD98942A1FB7D1
// 0x0008 (0x0060 - 0x0068)
class U__OnlineGameParty_TA__HandleProfileSet_7075AD4A4ED866707AFD98942A1FB7D1 : public UObject
{
public:
	class ULocalPlayer_TA*                             P;                                                		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineGameParty_TA__HandleProfileSet_7075AD4A4ED866707AFD98942A1FB7D1");
		}

		return uClassPointer;
	};

	void __OnlineGameParty_TA__HandleProfileSet_77874B7743B91096224062B056BEA31F(class USaveData_TA* _);
	void __OnlineGameParty_TA__HandleProfileSet_7075AD4A4ED866707AFD98942A1FB7D1();
};

// Class TAGame.RPC_ProductsTradePlayer_TA
// 0x00E0 (0x00E8 - 0x01C8)
class URPC_ProductsTradePlayer_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FUniqueNetId                                OtherPlayerID;                                    		// 0x0130 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FGuid                                       TradeId;                                          		// 0x0178 (0x0010) [0x0000000000000000]               
	TArray<unsigned long long>                         InstancesToGive;                                  		// 0x0188 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long long>                         InstancesToGet;                                   		// 0x0198 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FCurrency>                           CurrenciesToGive;                                 		// 0x01A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FCurrency>                           CurrenciesToGet;                                  		// 0x01B8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_ProductsTradePlayer_TA");
		}

		return uClassPointer;
	};

	class URPC_ProductsTradePlayer_TA* SetRemoteCurrencies(TArray<struct FCurrency>& InCurrencies);
	class URPC_ProductsTradePlayer_TA* SetLocalCurrencies(TArray<struct FCurrency>& InCurrencies);
	class URPC_ProductsTradePlayer_TA* SetRemoteProducts(TArray<unsigned long long>& InProducts);
	class URPC_ProductsTradePlayer_TA* SetLocalProducts(TArray<unsigned long long>& InProducts);
	class URPC_ProductsTradePlayer_TA* SetTradeId(struct FGuid InTradeId);
	class URPC_ProductsTradePlayer_TA* SetRemotePlayerID(struct FUniqueNetId InPlayerId);
	class URPC_ProductsTradePlayer_TA* SetLocalPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.__OnlineGameParty_TA__RestoreArchivedAndFavoritedPendingProductOffers_E522656347A7FFB39864BC923A0BA5B3
// 0x0018 (0x0060 - 0x0078)
class U__OnlineGameParty_TA__RestoreArchivedAndFavoritedPendingProductOffers_E522656347A7FFB39864BC923A0BA5B3 : public UObject
{
public:
	class UProductsFavoriteSave_TA*                    ProductsFavoriteSave;                             		// 0x0060 (0x0008) [0x0000000000000000]               
	class USaveData_TA*                                SaveData;                                         		// 0x0068 (0x0008) [0x0000000000000000]               
	class UProductsArchiveSave_TA*                     ArchiveSave;                                      		// 0x0070 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineGameParty_TA__RestoreArchivedAndFavoritedPendingProductOffers_E522656347A7FFB39864BC923A0BA5B3");
		}

		return uClassPointer;
	};

	void __OnlineGameParty_TA__RestoreArchivedAndFavoritedPendingProductOffers_0FD33F4A4606C48542AF2093AA9BA797(struct FProductHashID P);
	void __OnlineGameParty_TA__RestoreArchivedAndFavoritedPendingProductOffers_E522656347A7FFB39864BC923A0BA5B3(struct FProductHashID P);
};

// Class TAGame.__OnlineGameParty_TA__SendTradeToBackEnd_47E1E95241725E6B9C4FED9E2EF8826B
// 0x0010 (0x0060 - 0x0070)
class U__OnlineGameParty_TA__SendTradeToBackEnd_47E1E95241725E6B9C4FED9E2EF8826B : public UObject
{
public:
	TArray<unsigned long long>                         LocalProductOffers;                               		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineGameParty_TA__SendTradeToBackEnd_47E1E95241725E6B9C4FED9E2EF8826B");
		}

		return uClassPointer;
	};

	void __OnlineGameParty_TA__SendTradeToBackEnd_47E1E95241725E6B9C4FED9E2EF8826B(class ULocalPlayer_TA* P);
};

// Class TAGame.RPC_ProductsLoadoutGet_TA
// 0x0088 (0x00E8 - 0x0170)
class URPC_ProductsLoadoutGet_TA : public URPC_X
{
public:
	TArray<struct FInstanceToSlotRow>                  InstanceToSlotTable;                              		// 0x00E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FUniqueNetId                                PlayerID;                                         		// 0x00F8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long long>                         Loadout;                                          		// 0x0140 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FOnlineProductData>                  ProductData;                                      		// 0x0150 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UOnlineProduct_TA*>                   Products;                                         		// 0x0160 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_ProductsLoadoutGet_TA");
		}

		return uClassPointer;
	};

	void GetAllProductData(TArray<struct FOnlineProductData>& OutProductData);
	void GetProducts(int TeamIndex, TArray<class UOnlineProduct_TA*>& InLoadout);
	void eventOnSuccess();
	class URPC_ProductsLoadoutGet_TA* AddLoadout(int TeamIndex, TArray<unsigned long long>& InLoadout);
	class URPC_ProductsLoadoutGet_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.PartyMessage_TradeCurrencyUpdate_TA
// 0x00A8 (0x00A8 - 0x0150)
class UPartyMessage_TradeCurrencyUpdate_TA : public UPartyMessage_X
{
public:
	struct FUniqueNetId                                TradingMemberId;                                  		// 0x00A8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FCurrency                                   CurrencyData;                                     		// 0x00F0 (0x0060) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PartyMessage_TradeCurrencyUpdate_TA");
		}

		return uClassPointer;
	};

	class UPartyMessage_TradeCurrencyUpdate_TA* SetCurrencyData(struct FCurrency InCurrencyData);
	class UPartyMessage_TradeCurrencyUpdate_TA* SetTradingMemberId(struct FUniqueNetId InTradingMemberId);
};

// Class TAGame.__OnlineGameParty_TA__IsProductValidAfterVerify_F34370414FF03EB0648FA7A835A7A097
// 0x0038 (0x0060 - 0x0098)
class U__OnlineGameParty_TA__IsProductValidAfterVerify_F34370414FF03EB0648FA7A835A7A097 : public UObject
{
public:
	struct FOnlineProductData                          OPD;                                              		// 0x0060 (0x0038) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineGameParty_TA__IsProductValidAfterVerify_F34370414FF03EB0648FA7A835A7A097");
		}

		return uClassPointer;
	};

	bool __OnlineGameParty_TA__IsProductValidAfterVerify_F34370414FF03EB0648FA7A835A7A097(unsigned long long RP);
};

// Class TAGame.PartyMessage_TradeProductUpdate_TA
// 0x0084 (0x00A8 - 0x012C)
class UPartyMessage_TradeProductUpdate_TA : public UPartyMessage_X
{
public:
	struct FUniqueNetId                                TradingMemberId;                                  		// 0x00A8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FOnlineProductData                          ProductData;                                      		// 0x00F0 (0x0038) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long                                      bAddProduct : 1;                                  		// 0x0128 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PartyMessage_TradeProductUpdate_TA");
		}

		return uClassPointer;
	};

	class UPartyMessage_TradeProductUpdate_TA* SetAddProduct(unsigned long InAddProduct);
	class UPartyMessage_TradeProductUpdate_TA* SetProductData(struct FOnlineProductData InProductData);
	class UPartyMessage_TradeProductUpdate_TA* SetTradingMemberId(struct FUniqueNetId InTradingMemberId);
};

// Class TAGame.GFxData_TradeLobby_TA
// 0x00B0 (0x0098 - 0x0148)
class UGFxData_TradeLobby_TA : public UGFxDataSingleton_X
{
public:
	unsigned long                                      bLocalPlayerReadyToLock : 1;                      		// 0x0098 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bRemotePlayerReadyToLock : 1;                     		// 0x0098 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bLocalPlayerReadyToTrade : 1;                     		// 0x0098 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bRemotePlayerReadyToTrade : 1;                    		// 0x0098 (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	unsigned long                                      bTradeLocked : 1;                                 		// 0x0098 (0x0004) [0x0000000040000000] [0x00000010] (CPF_EditInlineNotify)
	unsigned long                                      bIsProcessingTrade : 1;                           		// 0x0098 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	unsigned long                                      bVerifyingTrade : 1;                              		// 0x0098 (0x0004) [0x0000000000000000] [0x00000040] 
	int                                                LockCountdownSecondsRemaining;                    		// 0x009C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class UCurrencyProductSet_TA*                      LocalCurrencyProducts;                            		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UCurrencyProductSet_TA*                      RemoteCurrencyProducts;                           		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWallet_TA*                                  PlayerWallet;                                     		// 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineGameParty_TA*                         OnlineParty;                                      		// 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProfile_TA*                                 Profile;                                          		// 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProductTransactions_TA*                     ProductTransactions;                              		// 0x00C8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UOnlineProductStoreSet_TA*                   RemoteProductSet;                                 		// 0x00D0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UGFxModal_X*                                 ModalProcessing;                                  		// 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FGuid                                       TradeId;                                          		// 0x00E0 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FUniqueNetId                                TradingPlayerID;                                  		// 0x00F0 (0x0048) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UMtxConfig_TA*                               MtxConfig;                                        		// 0x0138 (0x0008) [0x0000000000000000]               
	class UGFxData_PartyMemberProfile_TA*              PartyMemberProfile;                               		// 0x0140 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TradeLobby_TA");
		}

		return uClassPointer;
	};

	void __GFxData_TradeLobby_TA__OnShellSet_7354F08A46D574AA22381DA688927A86(class UWallet_TA* InWallet);
	unsigned long long __GFxData_TradeLobby_TA__IsValidTrade_9FA614064A675EE5754E74BAD75E15E9(class UOnlineProduct_TA* Op);
	int __GFxData_TradeLobby_TA__GetLocalProductOfferings_80C41F284AEE599C516B44A9FADB5EAA(class UOnlineProduct_TA* Offering);
	int __GFxData_TradeLobby_TA__GetRemoteProductOfferings_07F468694363027872BF028C3E775F0C(class UOnlineProduct_TA* Offering);
	struct FProductHashID RocketBucksHashID();
	struct FProductHashID GetHashIDFromCurrencyID(int CurrencyID);
	bool IsAttemptingCurrencyExchange();
	bool IsAttemptingCurrencyGifting();
	struct FString GetRemotePlayerName();
	TArray<class UOnlineProduct_TA*> GetProductOfferings(class UOnlineProductStoreSet_TA* OfferingSet);
	TArray<class UOnlineProduct_TA*> GetKeyOfferings(class UOnlineProductStoreSet_TA* OfferingSet);
	bool IsNotKeyProduct(class UOnlineProduct_TA* OnlineProduct);
	bool IsKeyProduct(class UOnlineProduct_TA* OnlineProduct);
	int GetRemoteKeyOfferingCount();
	int GetLocalKeyOfferingCount();
	struct FString GetRemoteProductOfferings();
	struct FString GetLocalProductOfferings();
	void OnTradePlayerComplete();
	void HandleTradePlayerComplete(class UOnlineGameParty_TA* PartyObject, class URPC_ProductsTradePlayerStatus_TA* RPC);
	void RefreshProducts();
	void HandleTradePlayerError(class UOnlineGameParty_TA* PartyObject, class UError* Error, struct FGuid& InTradeId);
	void SendTradeToBackEnd();
	bool TradeCompareAttributes(TArray<class UProductAttribute_TA*>& Left, TArray<class UProductAttribute_TA*>& Right);
	bool TradeCompare(class UOnlineProduct_TA* A, class UOnlineProduct_TA* B);
	bool VerifyRemoteOffering(class UOnlineProduct_TA* OnlineProduct);
	void HandleVerifyTradeTimeOut(class UOnlineGameParty_X* PartyObject);
	bool ConfigAllowsTrade();
	bool IsValidTrade(TArray<class UOnlineProduct_TA*>& InRemoteProducts);
	void HandleVerifyTrade(class UOnlineGameParty_X* PartyObject, TArray<class UOnlineProduct_TA*> Products);
	bool IsProcessingTrade();
	void ExecuteTrade(class UOnlineGameParty_X* PartyObject);
	void HandleRemotePlayerReadyToTrade(class UOnlineGameParty_X* PartyObject);
	void ReadyToConfirmTrade();
	void ResetTradeConfirmationLockout();
	void HandleTradeLockCountdownProgressed();
	void HandleTradeLockChanged();
	void HandleRemotePlayerNotReadyToLock(class UOnlineGameParty_X* PartyObject);
	void HandleRemotePlayerReadyToLock(class UOnlineGameParty_X* PartyObject);
	void UnlockTrade();
	void ReadyToLockTrade(unsigned long bReady);
	void UpdateOfferings(unsigned long bLocal);
	void RemoveRemoteOffering(unsigned long long InInstancedID);
	void RemoveLocalOffering(struct FProductHashID HashID);
	void AddRemoteOffering(class UOnlineProduct_TA* InOnlineProduct);
	void HandleTradeCurrencyUpdate(class UOnlineGameParty_TA* PartyObject, struct FCurrency CurrencyData);
	void HandleTradeProductUpdate(class UOnlineGameParty_TA* PartyObject, struct FOnlineProductData ProductData, unsigned long bAddProduct);
	void UpdateTradeQuantity(struct FProductHashID HashID, unsigned long bAddProduct, TArray<class UOnlineProduct_TA*>& PrevTransactionProducts, TArray<struct FCurrency>& TransactionCurrencies);
	void SetTransactionQuantity(struct FProductHashID HashID, int Quantity);
	void CloseTradingWindow(unsigned long bWasCanceled, unsigned long bNoReceivedProducts);
	void CancelTrading();
	void HandleCloseInviteToTrade(class UOnlineGameParty_X* PartyObject, unsigned long bWasCanceled);
	void CloseTradeLobby();
	void HandleAcceptedInviteToTrade(class UOnlineGameParty_X* PartyObject);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.__OnlineGameParty_TA__HandleCrossplayEnabledChanged_876C6EB94724FEF800DECF911F0ACB63
// 0x0008 (0x0060 - 0x0068)
class U__OnlineGameParty_TA__HandleCrossplayEnabledChanged_876C6EB94724FEF800DECF911F0ACB63 : public UObject
{
public:
	class UAccountSettingsComponent_TA*                AccountSettings;                                  		// 0x0060 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineGameParty_TA__HandleCrossplayEnabledChanged_876C6EB94724FEF800DECF911F0ACB63");
		}

		return uClassPointer;
	};

	void __OnlineGameParty_TA__HandleCrossplayEnabledChanged_876C6EB94724FEF800DECF911F0ACB63();
};

// Class TAGame.__OnlineGameParty_TA__GetProfileProducts_4517BEF344CFEACA82AE2888DE2019DB
// 0x0014 (0x0060 - 0x0074)
class U__OnlineGameParty_TA__GetProfileProducts_4517BEF344CFEACA82AE2888DE2019DB : public UObject
{
public:
	TArray<struct FOnlineProductData>                  ProfileProductData;                               		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                SlotIndex;                                        		// 0x0070 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineGameParty_TA__GetProfileProducts_4517BEF344CFEACA82AE2888DE2019DB");
		}

		return uClassPointer;
	};

	void __OnlineGameParty_TA__GetProfileProducts_4517BEF344CFEACA82AE2888DE2019DB(class UProductAttribute_TA* P);
};

// Class TAGame.__OnlineGameParty_TA__IsPrimaryMemberForPlayer_28A4413B43978F8DC26B91A7C8A14B9F
// 0x0048 (0x0060 - 0x00A8)
class U__OnlineGameParty_TA__IsPrimaryMemberForPlayer_28A4413B43978F8DC26B91A7C8A14B9F : public UObject
{
public:
	struct FUniqueNetId                                UserId;                                           		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineGameParty_TA__IsPrimaryMemberForPlayer_28A4413B43978F8DC26B91A7C8A14B9F");
		}

		return uClassPointer;
	};

	bool __OnlineGameParty_TA__IsPrimaryMemberForPlayer_28A4413B43978F8DC26B91A7C8A14B9F(struct FPartyMember P);
};

// Class TAGame.__OnlineGameParty_TA__AddPlayerPartyServiceLobbyMessage_12067376421D85701D0284989D91553E
// 0x0010 (0x0060 - 0x0070)
class U__OnlineGameParty_TA__AddPlayerPartyServiceLobbyMessage_12067376421D85701D0284989D91553E : public UObject
{
public:
	struct FString                                     Message;                                          		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineGameParty_TA__AddPlayerPartyServiceLobbyMessage_12067376421D85701D0284989D91553E");
		}

		return uClassPointer;
	};

	void __OnlineGameParty_TA__AddPlayerPartyServiceLobbyMessage_12067376421D85701D0284989D91553E(class UPersona_TA* P);
};

// Class TAGame.OnlineGamePlaylists_TA
// 0x0000 (0x0100 - 0x0100)
class UOnlineGamePlaylists_TA : public UOnlineGamePlaylists_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineGamePlaylists_TA");
		}

		return uClassPointer;
	};

	void AddPlaylist(class UPlaylistSettings_TA* PlaylistSettings);
};

// Class TAGame.OnlineGameRegions_TA
// 0x0008 (0x0130 - 0x0138)
class UOnlineGameRegions_TA : public UOnlineGameRegions_X
{
public:
	class URegionPingCache_TA*                         RegionPingCache;                                  		// 0x0130 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineGameRegions_TA");
		}

		return uClassPointer;
	};

	void OnInit();
};

// Class TAGame.RegionPingCache_TA
// 0x0018 (0x0060 - 0x0078)
class URegionPingCache_TA : public UObject
{
public:
	TArray<struct FCachedRegionPing>                   CachedRegionPings;                                		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UOnlineGameRegions_TA*                       OnlineGameRegionsRef;                             		// 0x0070 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RegionPingCache_TA");
		}

		return uClassPointer;
	};

	struct FString GetSaveFileName();
	void HandleRegionsPinged(class UOnlineGameRegions_X* RegionsObj);
	void HandleImportFinished(class ULocalCache_X* Cache, class URegionPingCache_TA* CacheObject, class UError* Error);
	void Init(class UOnlineGameRegions_TA* OnlineGameRegions);
};

// Class TAGame.OnlineGameReservations_TA
// 0x0010 (0x01B0 - 0x01C0)
class UOnlineGameReservations_TA : public UOnlineGameReservations_X
{
public:
	TArray<struct FReservationLoadout>                 Loadouts;                                         		// 0x01B0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineGameReservations_TA");
		}

		return uClassPointer;
	};

	void __OnlineGameReservations_TA__OnInit_1064BB6B48EAFEF41142F8BCA3305DFA(class AGameEvent_TA* _);
	bool __OnlineGameReservations_TA__AddLoadout_B4EB13154FAA2562AA8F1BB7F9108FA1(int Id);
	int __OnlineGameReservations_TA__AddLoadout_8741A7744351499A9D066BB13805FDE6(int Id);
	class UServerToServerMessage_X* GetMatchInfoMessage();
	bool ShouldCheckPlatformRestrictions(class UAddReservationMessagePublic_X* Message);
	bool CanAcceptReservations(class UAddReservationMessagePublic_X* Message);
	TArray<int> GetPrecacheProductIDs();
	class UReservationsReadyMessage_X* CreateReadyMessage();
	void ClearReservations();
	void RemoveReservationIndex(int Index);
	void AddLoadout(struct FUniqueNetId PlayerID, TArray<int> ProductIDs);
	TArray<struct FReservationData> AddPlayersFromReservationMessage(class UAddReservationMessage_X* ReservationMessage, class UIReservationConnection_X* Connection);
	class UObject* CreateClientReservationMessage(struct FServerReservationData& Reservation, struct FUniqueNetId& PlayerID);
	void HandleGameEventStarted();
	void OnInit();
};

// Class TAGame.TourMatchInfoMessage_TA
// 0x0120 (0x0068 - 0x0188)
class UTourMatchInfoMessage_TA : public UServerToServerMessage_X
{
public:
	struct FTourServerSettings                         TourSettings;                                     		// 0x0068 (0x00E8) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                Playlist;                                         		// 0x0150 (0x0004) [0x0000000000000000]               
	struct FString                                     ReservationID;                                    		// 0x0158 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     JoinName;                                         		// 0x0168 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     JoinPassword;                                     		// 0x0178 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourMatchInfoMessage_TA");
		}

		return uClassPointer;
	};

	struct FPsyNetBeaconReservation GetReservation();
};

// Class TAGame.OnlineGameSkill_TA
// 0x0000 (0x00F0 - 0x00F0)
class UOnlineGameSkill_TA : public UOnlineGameSkill_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineGameSkill_TA");
		}

		return uClassPointer;
	};

	void ClientSetSkill(struct FUpdatedPlayerSkillRating Rating, int Playlist);
	class APlayerController_TA* GetPlayerController(struct FUniqueNetId PlayerID);
	void ReplicatePlayerSkillRating(struct FUniqueNetId PlayerID, int Playlist);
	void ReplicateSkillUpdate(class UMatchData_X* MatchData);
	void HandleSkillsUpdateFailed(class URPC_X* RPCObject);
	void HandleSkillsUpdated(class URPC_UpdateSkills_X* RPCObject);
};

// Class TAGame.ChallengeManager_TA
// 0x0110 (0x0060 - 0x0170)
class UChallengeManager_TA : public UObject
{
public:
	TArray<class UChallenge_TA*>                       Challenges;                                       		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        ChallengeProgressSyncIDs;                         		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        ClearNewInfoChallengeIDQueue;                     		// 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UChallenge_TA*>                       RemovedChallenges;                                		// 0x0090 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        PendingNewChallengeIDs;                           		// 0x00A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        PendingRemovedChallengeIDs;                       		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     NewChallengesTitle;                               		// 0x00C0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     NewChallengesDesc;                                		// 0x00D0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ExpiredChallengesTitle;                           		// 0x00E0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ExpiredChallengesDesc;                            		// 0x00F0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     MixedChallengesDesc;                              		// 0x0100 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventChallengeAdded__Delegate;                  		// 0x0110 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventChallengeCompleted__Delegate;              		// 0x0128 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventChallengeRewardCollected__Delegate;        		// 0x0140 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventChallengeProgressChanged__Delegate;        		// 0x0158 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ChallengeManager_TA");
		}

		return uClassPointer;
	};

	void __ChallengeManager_TA__Construct_D2E7243B42145B85AA82D2AD697FC1C3(class UChallengeDefault_TA* C);
	void __ChallengeManager_TA__Construct_238660FB40E9DE313B0824BF8C1D7DA6(class UChallengeDefaultManager_TA* _, class UChallengeDefault_TA* C);
	void __ChallengeManager_TA__HandleChallengesReceived_78A104CA41B97AF500E6BCBA236F9E2C(struct FChallengeProgress P);
	void __ChallengeManager_TA__HandleChallengeProgressPushed_6E4B7E76497F5E3B8BFB06A294D64084(struct FChallengeProgress P);
	bool __ChallengeManager_TA__BroadcastChallengeChanges_3B99A4FD40DE06F6FC657CBE4C9EDD16(class UChallenge_TA* C);
	bool __ChallengeManager_TA__BroadcastChallengeChanges_7BE6DE5A47BCD469FAE454B15D9BAEA3(class UChallenge_TA* C);
	bool __ChallengeManager_TA__BroadcastChallengeChanges_90E9308F44FAABEF5D97C8ADC8AB0E69(class UChallenge_TA* C);
	bool __ChallengeManager_TA__BroadcastChallengeChanges_262C9C59465EF50D875E6A8DD795A612(class UChallenge_TA* C);
	bool __ChallengeManager_TA__BroadcastChallengeChanges_F39CCAEF418FD374EC975CA2135DF13D(class UChallenge_TA* C);
	bool __ChallengeManager_TA__BroadcastChallengeChanges_D5CC78F440DE90BB1B46BB9E4A7720B6(class UChallenge_TA* C);
	void __ChallengeManager_TA__RemoveChallenges_067622DA40B8AAB6BF10A3823786F84C(class UChallenge_TA* C);
	void __ChallengeManager_TA__HandlePreLoadMap_24229AC64A416E5D876FE7A3F4F0DE81(class UChallenge_TA* C);
	class ULocalPlayer_TA* GetLocalPlayer();
	class APlayerControllerBase_TA* GetPC();
	class UChallenge_TA* FindChallenge(int Id);
	void CollectChallengeReward(int ChallengeID, struct FOnlineReward& Reward);
	int FindChallengeIndex(int Id);
	void HandlePreLoadMap(struct FString MapName);
	void HandleTrainingCompleted(class AGameEvent_Training_TA* Training);
	void HandleTutorialCompleted(class UTutorial_TA* Tutorial);
	void TriggerChallengeCompleteNotification(class UChallenge_TA* Challenge);
	void NotifyChallengeCompleted(class UChallenge_TA* Challenge);
	void OnChallengeComplete(class UChallenge_TA* Challenge);
	void NotifyChallengeAvailable(class UChallenge_TA* Challenge);
	void SetChallengeProgress(struct FChallengeProgress& Progress);
	void RemoveChallenges();
	void RemoveChallenge(int Id);
	class UChallenge_TA* AddChallenge(class UChallengeDefault_TA* ChallengeDefault);
	void ClearPendingNewInfoChallenges();
	void ClearNewInfoDelayed(int ChallengeID);
	void BroadcastChallengeChanges();
	void HandleChallengesPushed(TArray<int> NewChallengeIDs, TArray<int> RemovedChallengeIDs);
	void HandleChallengeProgressPushed(class UPsyNetService_ChallengeProgress_TA* Message);
	void HandleChallengesReceived(class URPC_GetChallengeProgress_TA* RPC);
	void SyncPendingChallengeProgress();
	void eventConstruct();
	void EventChallengeProgressChanged(class UChallengeManager_TA* Manager);
	void EventChallengeRewardCollected(class UChallengeManager_TA* Manager, class UChallenge_TA* Challenge, struct FOnlineReward& Reward);
	void EventChallengeCompleted(class UChallengeManager_TA* Manager, class UChallenge_TA* Challenge);
	void EventChallengeAdded(class UChallengeManager_TA* Manager, class UChallenge_TA* Challenge);
};

// Class TAGame.StatusTriggerManager_TA
// 0x0020 (0x0060 - 0x0080)
class UStatusTriggerManager_TA : public UObject
{
public:
	TArray<class UStatusObserver_X*>                   Observers;                                        		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UTriggerCondition_TA*>                Conditions;                                       		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatusTriggerManager_TA");
		}

		return uClassPointer;
	};

	void __StatusTriggerManager_TA__Init_9071B14F467CA5F31814A38D0FACA76A(class UStatusObserver_X* O);
	class UStatusObserver_X* __StatusTriggerManager_TA__Init_6C8E4AE84E0A6309043482A3532449D8(class UClass* Ob);
	void DebugPrint();
	void CheckModifiedCondition(class UTriggerCondition_TA* InCondition);
	void RemoveTriggers(class UTriggerCondition_TA* InCondition);
	void RemoveTriggerCondition(class UTriggerCondition_TA* InCondition);
	void RegisterTriggers(class UTriggerCondition_TA* InCondition, TArray<class UStatusTrigger_X*> InTriggers);
	void AddTriggerCondition(class UTriggerCondition_TA* InCondition);
	void Init(class ULocalPlayer_TA* LP);
};

// Class TAGame.AntiAddiction_TA
// 0x0004 (0x0060 - 0x0064)
class UAntiAddiction_TA : public UObject
{
public:
	int                                                Hours;                                            		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AntiAddiction_TA");
		}

		return uClassPointer;
	};

	void HandleHourReached();
	void HandleCountry(struct FString Country);
	void eventConstruct();
};

// Class TAGame.CrumbTrails_TA
// 0x0058 (0x0060 - 0x00B8)
class UCrumbTrails_TA : public UObject
{
public:
	TArray<struct FCrumbTrailData>                     CrumbTrails;                                      		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UCrumbTrailRedefinition_TA*                  CrumbRedefine;                                    		// 0x0070 (0x0008) [0x0000000000000000]               
	class UCrumbTrailSave_TA*                          CrumbSave;                                        		// 0x0078 (0x0008) [0x0000000000000000]               
	unsigned long                                      bTrailSetup : 1;                                  		// 0x0080 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	struct FScriptDelegate                             __EventActiveTrailsChanged__Delegate;             		// 0x0088 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventActiveTrailCompleted__Delegate;            		// 0x00A0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CrumbTrails_TA");
		}

		return uClassPointer;
	};

	void DebugPrintActiveCrumbs();
	void DebugPrintAll();
	void HandleTrailComplete(int Index);
	void GetCrumbs(struct FName CrumbTrailName, TArray<struct FName>& OutCrumbs);
	void GetActiveCrumbs(TArray<struct FName>& OutCrumbs);
	void ActivateTrailByName(struct FName TrailName);
	bool CanActivateTrailByIndex(int Index);
	bool CanActivateTrail(struct FName TrailName);
	bool ActivateTrail(int Index);
	void SetupCompletionCondition(int Index);
	void SetupActivationCondition(int Index);
	void SetupTrails();
	void HandleSaveAdded(class UCrumbTrailSave_TA* InCrumbSave);
	void HandleRedefinitionChange();
	class UCrumbTrailMetrics_TA* GetMetrics();
	void Init(class ULocalPlayer_TA* LP);
	void EventActiveTrailCompleted(struct FName CrumbTrail);
	void EventActiveTrailsChanged(class UCrumbTrails_TA* CrumbTrailMgr);
};

// Class TAGame.OnlinePlayerMTX_TA
// 0x0038 (0x0060 - 0x0098)
class UOnlinePlayerMTX_TA : public UObject
{
public:
	unsigned long                                      bEntitlementsDirty : 1;                           		// 0x0060 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bClaimingEntitlements : 1;                        		// 0x0060 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bMtxCodeExpired : 1;                              		// 0x0060 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bAllowEntitlements : 1;                           		// 0x0060 (0x0004) [0x0000000000004002] [0x00000008] (CPF_Const | CPF_Config)
	struct FScriptDelegate                             __EventClaimedEntitlements__Delegate;             		// 0x0068 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventEntitlementsError__Delegate;               		// 0x0080 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlinePlayerMTX_TA");
		}

		return uClassPointer;
	};

	void HandleClaimFail(class URPC_MicroTransactions_ClaimEntitlements_TA* RPC);
	void HandleClaimSuccess(class URPC_MicroTransactions_ClaimEntitlements_TA* RPC);
	void HandleMtxCode(unsigned long bSuccess, struct FString Code);
	void ConditionalClaimEntitlements();
	void ClaimEntitlements();
	void HandlePsyNetDisconnected(class UPsyNetConnection_X* C);
	void HandlePsyNetConnected(class UPsyNetConnection_X* C);
	void eventConstruct();
	void EventEntitlementsError(class UOnlinePlayerMTX_TA* MTX, class UError* Error);
	void EventClaimedEntitlements(class UOnlinePlayerMTX_TA* MTX, TArray<class UOnlineProduct_TA*> Products);
};

// Class TAGame.PlayerProgressionManager_TA
// 0x0000 (0x0060 - 0x0060)
class UPlayerProgressionManager_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerProgressionManager_TA");
		}

		return uClassPointer;
	};

	void Init(class APlayerController* PlayerCon);
};

// Class TAGame.OnlinePlayerFriends_TA
// 0x0018 (0x0318 - 0x0330)
class UOnlinePlayerFriends_TA : public UOnlinePlayerFriends_X
{
public:
	struct FScriptDelegate                             __EventPsyNetRecentPlayers__Delegate;             		// 0x0318 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlinePlayerFriends_TA");
		}

		return uClassPointer;
	};

	void TryCombiningFriendsList(struct FOnlineFriend& PlatformPresence, struct FOnlineFriend& PreviousPlatformPresence, struct FOnlineFriend& EpicPresence, struct FOnlineFriend& PreviousEpicPresence);
	void HandleEpicPresenceChanged(struct FUniqueNetId EpicAccountId);
	void HandlePlatformPresenceChange(struct FUniqueNetId PlatformAccountID);
	void DownloadRecentPlayerDetails(struct FScriptDelegate Callback, TArray<struct FUniqueNetId>& RecentPlayerIds);
	void EventPsyNetRecentPlayers(TArray<struct FOnlineFriend>& RecentPlayerData);
};

// Class TAGame.__OnlinePlayerFriends_TA__DownloadRecentPlayerDetails_3AF8CD2743AA32893869C895DFCD9731
// 0x0018 (0x0060 - 0x0078)
class U__OnlinePlayerFriends_TA__DownloadRecentPlayerDetails_3AF8CD2743AA32893869C895DFCD9731 : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlinePlayerFriends_TA__DownloadRecentPlayerDetails_3AF8CD2743AA32893869C895DFCD9731");
		}

		return uClassPointer;
	};

	void __OnlinePlayerFriends_TA__DownloadRecentPlayerDetails_3AF8CD2743AA32893869C895DFCD9731(class URPC_GetPersonaInfo_TA* R);
};

// Class TAGame.__OnlineProduct_TA__SortOnlineProductsByQuality_4B36D2E24BC87CFD3C9B9595ED0772DF
// 0x0004 (0x0060 - 0x0064)
class U__OnlineProduct_TA__SortOnlineProductsByQuality_4B36D2E24BC87CFD3C9B9595ED0772DF : public UObject
{
public:
	int                                                I;                                                		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineProduct_TA__SortOnlineProductsByQuality_4B36D2E24BC87CFD3C9B9595ED0772DF");
		}

		return uClassPointer;
	};

	bool __OnlineProduct_TA__SortOnlineProductsByQuality_4B36D2E24BC87CFD3C9B9595ED0772DF(class UOnlineProduct_TA* P);
};

// Class TAGame.__OnlineProduct_TA__RemoveAttributes_E53A3E0D4C14366D50BF7A823560C8AE
// 0x0008 (0x0060 - 0x0068)
class U__OnlineProduct_TA__RemoveAttributes_E53A3E0D4C14366D50BF7A823560C8AE : public UObject
{
public:
	class UClass*                                      AttributeClass;                                   		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineProduct_TA__RemoveAttributes_E53A3E0D4C14366D50BF7A823560C8AE");
		}

		return uClassPointer;
	};

	bool __OnlineProduct_TA__RemoveAttributes_E53A3E0D4C14366D50BF7A823560C8AE(class UProductAttribute_TA* A);
};

// Class TAGame.__PlayerControllerBase_TA__InitFromProfile_EC896B2E412491AA04CFCD91ACEB6CE3
// 0x0008 (0x0060 - 0x0068)
class U__PlayerControllerBase_TA__InitFromProfile_EC896B2E412491AA04CFCD91ACEB6CE3 : public UObject
{
public:
	class UProfile_TA*                                 Profile;                                          		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__PlayerControllerBase_TA__InitFromProfile_EC896B2E412491AA04CFCD91ACEB6CE3");
		}

		return uClassPointer;
	};

	void __PlayerControllerBase_TA__InitFromProfile_EC896B2E412491AA04CFCD91ACEB6CE3(class UGFxShell_X* Shell);
};

// Class TAGame.SpectatorVolume_TA
// 0x0004 (0x02A4 - 0x02A8)
class ASpectatorVolume_TA : public AVolume
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpectatorVolume_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.AudioSpectatorMixComponent_TA
// 0x0084 (0x00A4 - 0x0128)
class UAudioSpectatorMixComponent_TA : public UActorComponent_X
{
public:
	struct FName                                       SpectatorCameraModeStateGroup;                    		// 0x00A8 (0x0008) [0x0000000000000000]               
	struct FName                                       SpectatorCameraMode_Fly;                          		// 0x00B0 (0x0008) [0x0000000000000000]               
	struct FName                                       SpectatorCameraMode_Director_Base;                		// 0x00B8 (0x0008) [0x0000000000000000]               
	struct FName                                       SpectatorCameraMode_Director_Countdown;           		// 0x00C0 (0x0008) [0x0000000000000000]               
	struct FName                                       SpectatorCameraMode_None;                         		// 0x00C8 (0x0008) [0x0000000000000000]               
	struct FName                                       CurrentGameState;                                 		// 0x00D0 (0x0008) [0x0000000000000000]               
	struct FName                                       CurrentCameraState;                               		// 0x00D8 (0x0008) [0x0000000000000000]               
	struct FName                                       ActorCameraFocusRTPC;                             		// 0x00E0 (0x0008) [0x0000000000000000]               
	struct FName                                       ActorInViewRTPC;                                  		// 0x00E8 (0x0008) [0x0000000000000000]               
	struct FName                                       ReplayCarFocusRTPC;                               		// 0x00F0 (0x0008) [0x0000000000000000]               
	struct FName                                       ReplayCameraViewFocusRTPC;                        		// 0x00F8 (0x0008) [0x0000000000000000]               
	struct FName                                       IsLocalRPTC;                                      		// 0x0100 (0x0008) [0x0000000000000000]               
	class ACar_TA*                                     TargetCar;                                        		// 0x0108 (0x0008) [0x0000000000000000]               
	unsigned long                                      bShouldFocusCar : 1;                              		// 0x0110 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bShouldFocusCameraView : 1;                       		// 0x0110 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bShouldFocusCarBeLocal : 1;                       		// 0x0110 (0x0004) [0x0000000000000000] [0x00000004] 
	class ACamera_Replay_TA*                           ReplayCamera;                                     		// 0x0118 (0x0008) [0x0000000000000000]               
	class AGameEvent_Soccar_TA*                        GameEvent;                                        		// 0x0120 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AudioSpectatorMixComponent_TA");
		}

		return uClassPointer;
	};

	void __AudioSpectatorMixComponent_TA__ClearIsLocalRTPCs_D555425440E3A653714007B2FFACF553(class ACar_TA* C);
	void __AudioSpectatorMixComponent_TA__ClearInCameraViewRTPCs_6A4C0437497E593B1F0EEE9B3AB41D0C(class ACar_TA* C);
	void SetAkState(struct FName InState);
	void ClearInCameraViewRTPCs();
	void ClearIsLocalRTPCs();
	void UpdateInCameraViewRTPCs();
	void ClearReplayCarFocusRTPCs();
	void SetReplayCarFocusRTPC(class ACar_TA* InCar);
	void UpdateCarIsLocal(class ACar_TA* InCar);
	void HandleCameraProxyChanged(class UCameraState_Replay_TA* NewCameraState, class UCameraState_X* NewCameraProxyState);
	void HandleTargetChanged(class ACamera_TA* InCamera, class AActor* NewTarget);
	void HandleCameraModeChanged();
	void HandleGameStateChanged(class AGameEvent_TA* NewGameState);
	void HandleGameEventSet(class AGameEvent_Soccar_TA* InGameEvent);
	void eventTick(float DeltaTime);
	void eventDetached();
	void eventAttached();
};

// Class TAGame.AudioFieldSideComponent_TA
// 0x0024 (0x00A4 - 0x00C8)
class UAudioFieldSideComponent_TA : public UActorComponent_X
{
public:
	struct FName                                       FieldSideRTPC;                                    		// 0x00A8 (0x0008) [0x0000000000000000]               
	float                                              OneOverFieldLength;                               		// 0x00B0 (0x0004) [0x0000000000000000]               
	class AGameEvent_Soccar_TA*                        GameEvent;                                        		// 0x00B8 (0x0008) [0x0000000000000000]               
	class UArenaReflectionsManager_TA*                 ArenaReflectionsManager;                          		// 0x00C0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AudioFieldSideComponent_TA");
		}

		return uClassPointer;
	};

	void HandleGameEventSet(class AGameEvent_Soccar_TA* NewGameEvent);
	void HandleReflectionsManagerSet(class UArenaReflectionsManager_TA* NewReflectionsManager);
	void UpdateFieldSideParams();
	void UpdateCanTick();
	void eventTick(float DeltaTime);
	void eventDetached();
	void eventAttached();
};

// Class TAGame.PlayerInputSequence_TA
// 0x0048 (0x00D0 - 0x0118)
class UPlayerInputSequence_TA : public UInteraction
{
public:
	TArray<struct FName>                               Sequence;                                         		// 0x00D0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     ConsoleCommand;                                   		// 0x00E0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              Timeout;                                          		// 0x00F0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bOrderMatters : 1;                                		// 0x00F4 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bCheat : 1;                                       		// 0x00F4 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bRemoveOnComplete : 1;                            		// 0x00F4 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	unsigned long                                      bRemoveAfterSplashScreen : 1;                     		// 0x00F4 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	unsigned long                                      bCaptureInput : 1;                                		// 0x00F4 (0x0004) [0x0000000000000001] [0x00000010] (CPF_Edit)
	unsigned long                                      bConfirm : 1;                                     		// 0x00F4 (0x0004) [0x0000000000000001] [0x00000020] (CPF_Edit)
	unsigned long                                      bPrimaryPlayerOnly : 1;                           		// 0x00F4 (0x0004) [0x0000000000000001] [0x00000040] (CPF_Edit)
	struct FString                                     Message;                                          		// 0x00F8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FName>                               CurrentSequence;                                  		// 0x0108 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerInputSequence_TA");
		}

		return uClassPointer;
	};

	void OnCommandConfirmed(class UGFxModal_X* Modal);
	void RemoveSequence();
	void OnSequenceCompleted();
	void ResetSequence();
	bool HandleFinalInputKey(int ControllerId, struct FName Key, unsigned char EventType, float AmountDepressed, unsigned long bGamepad);
	bool HandleInputKey(int ControllerId, struct FName Key, unsigned char EventType, float AmountDepressed, unsigned long bGamepad);
	void SwapIndexes(struct FName A, struct FName B);
	void Initialize();
	bool ShouldInstance(class APlayerController* ForPC);
};

// Class TAGame.EOSEvent_Presence_TA
// 0x0010 (0x0068 - 0x0078)
class UEOSEvent_Presence_TA : public UEOSMetricEvent_X
{
public:
	struct FString                                     PlayerLocation;                                   		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EOSEvent_Presence_TA");
		}

		return uClassPointer;
	};

	class UEOSEvent_Presence_TA* SetPresence(struct FString InLocation);
};

// Class TAGame.PlayerInput_Menu_TA
// 0x0010 (0x04C8 - 0x04D8)
class UPlayerInput_Menu_TA : public UPlayerInput_TA
{
public:
	TArray<struct FName>                               AllowedActions;                                   		// 0x04C8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerInput_Menu_TA");
		}

		return uClassPointer;
	};

	void RemoveAllActionsBut(TArray<struct FName>& KeepActions, TArray<struct FPlayerBinding>& OutBindings);
	void OnActiveBindingsChanged();
};

// Class TAGame.PlayerController_Replay_TA
// 0x0010 (0x0968 - 0x0978)
class APlayerController_Replay_TA : public APlayerControllerBase_TA
{
public:
	class AHUD*                                        SplitscreenHUDArchetype;                          		// 0x0968 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AGameEvent_TA*                               GameEvent;                                        		// 0x0970 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerController_Replay_TA");
		}

		return uClassPointer;
	};

	void PrintDebugInfo(class UDebugDrawer* Drawer);
	void eventDestroyed();
	void eventReceivedPlayer();
};

// Class TAGame.AudioParamsSuperSonicReplayComponent_TA
// 0x000C (0x00A4 - 0x00B0)
class UAudioParamsSuperSonicReplayComponent_TA : public UActorComponent_X
{
public:
	class ACar_TA*                                     ReplayFocus;                                      		// 0x00A8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AudioParamsSuperSonicReplayComponent_TA");
		}

		return uClassPointer;
	};

	void __AudioParamsSuperSonicReplayComponent_TA__Attached_E07A83114F47D07D872D30832B4B9515(class ACamera_TA* C, class AActor* T);
	void __AudioParamsSuperSonicReplayComponent_TA__Attached_3A58631B45538DEAEA698094E7280F7E(class ACamera_X* C, class UCameraState_X* CS);
	void __AudioParamsSuperSonicReplayComponent_TA__Attached_F3AC66544CF5476B139034A02D114FC4(class APlayerController_X* _);
	void HandleSuperSonicChanged(class ACar_TA* Car);
	void UpdateReplayCameraLocalView(class ACamera_Replay_TA* Camera);
	void eventAttached();
};

// Class TAGame.AudioParamsSuperSonicComponent_TA
// 0x0004 (0x00A4 - 0x00A8)
class UAudioParamsSuperSonicComponent_TA : public UActorComponent_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AudioParamsSuperSonicComponent_TA");
		}

		return uClassPointer;
	};

	void __AudioParamsSuperSonicComponent_TA__Construct_D46AE2AD4CB221024302BCA0BFDCDEFE(class APlayerController_X* _);
	void SetSuperSonic(unsigned long bSuperSonic);
	void HandleDemolished(class ACar_TA* Victim, struct FDemolishData Data);
	void HandlePawnChange(class APlayerController_X* PC, class ACar_TA* OldPawn, class ACar_TA* NewPawn);
	void HandleSuperSonicChanged(class ACar_TA* Car);
	void UpdateNumLocalPlayers(class UGameViewportClient_TA* GVC, int LocalPlayerCount);
	void eventConstruct();
};

// Class TAGame.CameraState_DirectorProxy_TA
// 0x00CC (0x00B4 - 0x0180)
class UCameraState_DirectorProxy_TA : public UCameraState_Replay_TA
{
public:
	class AGameEvent_Soccar_TA*                        GameEvent;                                        		// 0x00B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UGameObserver_TA*                            GameObserver;                                     		// 0x00C0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	float                                              MinimumStateTime;                                 		// 0x00C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           DistToBallWeight;                                 		// 0x00D0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           PlayersInViewWeight;                              		// 0x00E8 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           ViewPitchWeight;                                  		// 0x0100 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              GoalInViewWeight;                                 		// 0x0118 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CanSeeNewViewContinuity;                          		// 0x011C (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           SimilarOrientationContinuity;                     		// 0x0120 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           SimilarCarVelocityContinuity;                     		// 0x0138 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FVector                                     FieldForward;                                     		// 0x0150 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     FieldSide;                                        		// 0x015C (0x000C) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bActive : 1;                                      		// 0x0168 (0x0004) [0x0000000000000000] [0x00000001] 
	class UCameraState_Director_TA*                    Director;                                         		// 0x0170 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProfileCameraSave_TA*                       CameraSave;                                       		// 0x0178 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_DirectorProxy_TA");
		}

		return uClassPointer;
	};

	void __CameraState_DirectorProxy_TA__Init_EEA4EDA44E794FB4066639AE8E3FB487(class UProfileCameraSave_TA* SO);
	class AActor* GetFocusActor();
	float GetCarContinuityRating(struct FVector ViewStart, struct FRotator ViewRotation, float FOV, struct FVector CarVelocity, struct FVector OtherCarVelocity);
	float GetContinuityRating(struct FVector ViewStart, struct FRotator ViewRotation, float FOV);
	float GetViewRating(struct FVector ViewStart, struct FRotator ViewRotation, float FOV);
	float GetAspectRatio();
	bool AllowSwivel();
	bool ShouldKeepExecuting();
	float GetActiveTime();
	void Init(class ACamera_X* InCamera);
	void OnSetGameObserver();
	void EndCameraState();
	void BeginCameraState();
};

// Class TAGame.CameraState_DirectorPlayerView_TA
// 0x00D4 (0x0180 - 0x0254)
class UCameraState_DirectorPlayerView_TA : public UCameraState_DirectorProxy_TA
{
public:
	class UCameraState_CarRef_TA*                      BallCameraState;                                  		// 0x0180 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              MinimumHit;                                       		// 0x0188 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinimumHitSeparation;                             		// 0x018C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              StaleDistance;                                    		// 0x0190 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinimumTimeToBall;                                		// 0x0194 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CarChangeTimePadding;                             		// 0x0198 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FViewTargetTransitionParams                 CarChangeBlendParams;                             		// 0x019C (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           CarChangeBlendTimeForDistance;                    		// 0x01B0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              MinBlendContinuity;                               		// 0x01C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxBlendDistance;                                 		// 0x01CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaintainCurrentDistance;                          		// 0x01D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaintainCurrentHitBias;                           		// 0x01D4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaintainBallScorability;                          		// 0x01D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaintainBallScorabilityViewRating;                		// 0x01DC (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           ContinuityBias;                                   		// 0x01E0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              MinimumViewRating;                                		// 0x01F8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AttackerBias;                                     		// 0x01FC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AttackingGoalDistance;                            		// 0x0200 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BadFocusDistance;                                 		// 0x0204 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BadFocusViewRating;                               		// 0x0208 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BadFocusViewRatingDuration;                       		// 0x020C (0x0004) [0x0000000000000001] (CPF_Edit)    
	class ACar_TA*                                     FocusCar;                                         		// 0x0210 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              LastCarChangeTime;                                		// 0x0218 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bIsRelevant : 1;                                  		// 0x021C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bBlending : 1;                                    		// 0x021C (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bExceptionallyBadFocus : 1;                       		// 0x021C (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	unsigned long                                      bBadViewRating : 1;                               		// 0x021C (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	float                                              BlendTime;                                        		// 0x0220 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FCameraOrientation                          SnapshotPOV;                                      		// 0x0224 (0x002C) [0x0000000000002000] (CPF_Transient)
	float                                              BadViewRatingStart;                               		// 0x0250 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_DirectorPlayerView_TA");
		}

		return uClassPointer;
	};

	bool IsCarAttacking(class ACar_TA* Car);
	void HandleFocusCarDemolished(class ACar_TA* Victim, struct FDemolishData Data);
	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	bool ShouldKeepExecuting();
	bool ShouldExecute();
	float TimeSinceChange();
	bool CanConsiderCar(struct FCarData Data);
	void FindFocusCar();
	void SetFocusCar(class ACar_TA* InCar);
	void EndCameraState();
	void BeginCameraState();
	void Init(class ACamera_X* InCamera);
};

// Class TAGame.AudioSlomoReplayComponent_TA
// 0x003C (0x00A4 - 0x00E0)
class UAudioSlomoReplayComponent_TA : public UActorComponent_X
{
public:
	struct FName                                       ReplayPlaybackSpeedStateGroup;                    		// 0x00A8 (0x0008) [0x0000000000000000]               
	struct FName                                       ReplayPlaybackSpeed;                              		// 0x00B0 (0x0008) [0x0000000000000000]               
	struct FName                                       ReplayPlaybackSpeed01;                            		// 0x00B8 (0x0008) [0x0000000000000000]               
	struct FName                                       ReplayPlaybackSpeed02;                            		// 0x00C0 (0x0008) [0x0000000000000000]               
	struct FName                                       ReplayPlaybackSpeed03;                            		// 0x00C8 (0x0008) [0x0000000000000000]               
	struct FName                                       ReplayPlaybackSpeed04;                            		// 0x00D0 (0x0008) [0x0000000000000000]               
	struct FName                                       ReplayPlaybackSpeed_05;                           		// 0x00D8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AudioSlomoReplayComponent_TA");
		}

		return uClassPointer;
	};

	void HandleSlomoChanged();
	void eventDetached();
	void eventAttached();
};

// Class TAGame.PlatformMetrics_TA
// 0x0004 (0x0080 - 0x0084)
class UPlatformMetrics_TA : public UMetricsGroup_X
{
public:
	unsigned long                                      bDroveWithGP : 1;                                 		// 0x0080 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bDroveWithKBM : 1;                                		// 0x0080 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlatformMetrics_TA");
		}

		return uClassPointer;
	};

	void DriveWithKBM();
	void DriveWithGP();
	void RecordDriveInput(class UPlayerInput_TA* PlayerInput);
	void RecordInput(class UPlayerInput_TA* PlayerInput);
};

// Class TAGame.GameMusicComponent_TA
// 0x0000 (0x0070 - 0x0070)
class UGameMusicComponent_TA : public UComponent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameMusicComponent_TA");
		}

		return uClassPointer;
	};

	void Tick(float DeltaTime);
	void ShutDown();
	void Init();
};

// Class TAGame.ProductMetrics_TA
// 0x0000 (0x0080 - 0x0080)
class UProductMetrics_TA : public UMetricsGroup_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductMetrics_TA");
		}

		return uClassPointer;
	};

	bool __ProductMetrics_TA__GetLoadoutMetricsData_62D03B07441E2358FAAAAFA0D69349FC(struct FProductMetricsData P);
	struct FOnlineProductAttribute __ProductMetrics_TA__GetLoadoutMetricsData_2B8CCC1C4C873AA2FA9D55BBC13673B2(class UProductAttribute_TA* Attribute);
	TArray<struct FProductMetricsData> GetLoadoutMetricsData(class ULoadout_TA* Loadout);
	struct FPaintMetricsData GetPaintMetricsData(struct FLoadoutTeamPaint Paint);
	void PlayWithLoadout(struct FUniqueNetId PlayerID, unsigned long bPrimaryPlayer, int Team, TArray<struct FProductMetricsData> Products, struct FPaintMetricsData Paint);
	void RecordLoadout(class ULocalPlayer* Player, int Team, class ULoadout_TA* Loadout);
	void RecordLoadoutSet(class ULocalPlayer* Player, class UProfile_TA* Profile);
};

// Class TAGame.__PlayerController_TA__ClientNotifyServerShutdown_D1FE02A245E6F95C1C22D89E81405016
// 0x0068 (0x0060 - 0x00C8)
class U__PlayerController_TA__ClientNotifyServerShutdown_D1FE02A245E6F95C1C22D89E81405016 : public UObject
{
public:
	class UOnlineGame_TA*                              OnlineGame;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
	struct FServerConnectionInfo                       ConnectionInfo;                                   		// 0x0068 (0x0040) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FJoinMatchSettings                          Settings;                                         		// 0x00A8 (0x0020) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__PlayerController_TA__ClientNotifyServerShutdown_D1FE02A245E6F95C1C22D89E81405016");
		}

		return uClassPointer;
	};

	void __PlayerController_TA__ClientNotifyServerShutdown_D1FE02A245E6F95C1C22D89E81405016();
};

// Class TAGame.PlayerReportComponent_TA
// 0x0023 (0x009D - 0x00C0)
class UPlayerReportComponent_TA : public UActorComponent
{
public:
	TArray<struct FUniqueNetId>                        ReportablePlayers;                                		// 0x00A0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FReportedPlayerInfo>                 ReportedPlayers;                                  		// 0x00B0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerReportComponent_TA");
		}

		return uClassPointer;
	};

	void HandleDestroyed(class AGameEvent_TA* InGameEvent);
	void AddReportedPlayer(struct FReportedPlayerInfo& ReportedPlayer);
	void HandlePlayerAdded(class AGameEvent_TA* InGameEvent, class APRI_TA* PRI);
	void eventConstruct();
};

// Class TAGame.Interface_GameEditor_TA
// 0x0000 (0x0060 - 0x0060)
class UInterface_GameEditor_TA : public UInterface
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Interface_GameEditor_TA");
		}

		return uClassPointer;
	};

	void EditingEnd();
	void EditingBegin();
	void NotifyOnSelectionChange(struct FScriptDelegate Callback);
	bool SerializedDataIsEqual(struct FString S0, struct FString S1);
	void Deserialize(class UJsonObject* Data);
	struct FString Serialize();
	struct FVector CollisionExtent();
	struct FVector GetCameraPositionOffset();
	struct FVector GetGrabRotationOffset(struct FRotator CurrentRotation);
	void ModfiyBlendedRotation(struct FRotator ControllerRot, struct FRotator DeltaRot, struct FRotator& out_Rotation);
	struct FRotator GetDesiredRotation();
	struct FVector EditorGetLocation();
	bool EditorSetLocation(struct FVector NewLocation);
	bool EditorMoveToLocation(struct FVector NewLocation);
	bool CanEdit();
	struct FRotator EditorGetRotation();
	void EditorSetRotation(struct FRotator NewRotation);
	void EditorSetRotationFromInput(float Forward, float Strafe);
	void EventSelectionChange(class UInterface_GameEditor_TA* Object, unsigned long bSelected);
};

// Class TAGame.Ball_GameEditor_TA
// 0x00D8 (0x0A28 - 0x0B00)
class ABall_GameEditor_TA : public ABall_TA
{
public:
	struct FVector                                     StartLocation;                                    		// 0x0A28 (0x000C) [0x0000000000000000]               
	struct FRotator                                    StartRotation;                                    		// 0x0A34 (0x000C) [0x0000000000000000]               
	float                                              VelocityStartSpeed;                               		// 0x0A40 (0x0004) [0x0000000000000000]               
	struct FRotator                                    VelocityStartRotation;                            		// 0x0A44 (0x000C) [0x0000000000000000]               
	float                                              BallResetTime;                                    		// 0x0A50 (0x0004) [0x0000000000000000]               
	float                                              FirstHitTime;                                     		// 0x0A54 (0x0004) [0x0000000000000000]               
	struct FVector                                     CameraPositionOffset;                             		// 0x0A58 (0x000C) [0x0000000000000000]               
	class AFXActor_X*                                  EditingFXActorArchetype;                          		// 0x0A68 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_X*                                  EditingFXActor;                                   		// 0x0A70 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bUpdateTrajectory : 1;                            		// 0x0A78 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FVector                                     ToLocation;                                       		// 0x0A7C (0x000C) [0x0000000000000000]               
	struct FScriptDelegate                             __EventBallWentThruRing__Delegate;                		// 0x0A88 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventVelocityStartSpeedChanged__Delegate;       		// 0x0AA0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventFire__Delegate;                            		// 0x0AB8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventReset__Delegate;                           		// 0x0AD0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSelectionChange__Delegate;                 		// 0x0AE8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Ball_GameEditor_TA");
		}

		return uClassPointer;
	};

	void EditingEnd();
	void EditingBegin();
	void NotifyOnSelectionChange(struct FScriptDelegate Callback);
	struct FVector GetCameraPositionOffset();
	struct FVector CollisionExtent();
	void ModfiyBlendedRotation(struct FRotator ControllerRot, struct FRotator DeltaRot, struct FRotator& out_Rotation);
	bool CanEdit();
	struct FRotator EditorGetRotation();
	struct FVector EditorGetLocation();
	bool SerializedDataIsEqual(struct FString S0, struct FString S1);
	void Deserialize(class UJsonObject* Data);
	struct FString Serialize();
	struct FVector GetGrabRotationOffset(struct FRotator CurrentRotation);
	void eventTick(float DeltaTime);
	struct FRotator GetDesiredRotation();
	void EditorSetRotationFromInput(float Forward, float Strafe);
	void EditorSetRotation(struct FRotator NewRotation);
	bool EditorSetLocation(struct FVector NewLocation);
	bool EditorMoveToLocation(struct FVector Loc);
	void WentThruRing();
	void OnWentThruRing();
	void NotifyIfWentThruRing();
	bool IsRoundActive();
	void OnCarTouch(class ACar_TA* HitCar, unsigned char HitType);
	void OnHitWorld(struct FVector HitLoc, struct FVector HitNormal, class UPhysicalMaterial* PhysMat);
	void eventReset();
	void Fire();
	struct FVector GetBallFireVelocity();
	void AddVelocityStartSpeed(float Amount);
	void AddVelocityStartRotation(struct FRotator Amount, float MaxDegrees);
	void RecordCarHit(class ACar_TA* HitCar, struct FVector HitLocation, struct FVector HitNormal, unsigned char HitType);
	bool ShouldDrawTrajectory();
	struct FVector GetTrajectoryStartVelocity();
	struct FRotator GetTrajectoryStartRotation();
	struct FVector GetTrajectoryStartLocation();
	bool CanEverShowTrajectory();
	void InitFX();
	void eventPostBeginPlay();
	void EventSelectionChange(class UInterface_GameEditor_TA* Object, unsigned long bSelected);
	void EventReset(class ABall_GameEditor_TA* Ball);
	void EventFire(class ABall_GameEditor_TA* Ball);
	void EventVelocityStartSpeedChanged(class ABall_GameEditor_TA* Ball);
	void EventBallWentThruRing(class ABall_GameEditor_TA* Ball);
};

// Class TAGame.GameEditor_Actor_TA
// 0x0048 (0x0268 - 0x02B0)
class AGameEditor_Actor_TA : public AActor
{
public:
	class UPrimitiveComponent*                         Mesh;                                             		// 0x0268 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FVector                                     RotateCameraOffset;                               		// 0x0270 (0x000C) [0x0000000000000000]               
	float                                              MaxRotatePitch;                                   		// 0x027C (0x0004) [0x0000000000000000]               
	float                                              MaxInputRotatePitch;                              		// 0x0280 (0x0004) [0x0000000000000000]               
	unsigned long                                      bModifiyPitchOnEditorSetRotation : 1;             		// 0x0284 (0x0004) [0x0000000000000000] [0x00000001] 
	class AFXActor_X*                                  FXActorArchetype;                                 		// 0x0288 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_X*                                  FXActor;                                          		// 0x0290 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventSelectionChange__Delegate;                 		// 0x0298 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEditor_Actor_TA");
		}

		return uClassPointer;
	};

	void EditingEnd();
	void EditingBegin();
	void NotifyOnSelectionChange(struct FScriptDelegate Callback);
	struct FVector EditorGetLocation();
	struct FRotator EditorGetRotation();
	bool CanEdit();
	bool SerializedDataIsEqual(struct FString S0, struct FString S1);
	void Deserialize(class UJsonObject* Data);
	struct FString Serialize();
	struct FVector GetCameraPositionOffset();
	struct FVector CollisionExtent();
	void ModfiyBlendedRotation(struct FRotator ControllerRot, struct FRotator DeltaRot, struct FRotator& out_Rotation);
	struct FVector GetGrabRotationOffset(struct FRotator CurrentRotation);
	struct FRotator GetDesiredRotation();
	void ReInitPhysics();
	void ReInitPhysicsDelayed();
	bool EditorSetLocation(struct FVector NewLocation);
	bool EditorMoveToLocation(struct FVector NewLocation);
	void AddToRotation(struct FRotator Rot, float MaxDegrees);
	void EditorSetRotationFromInput(float Forward, float Strafe);
	void EditorSetRotation(struct FRotator NewRotation);
	void InitFX();
	void eventPostBeginPlay();
	void EventSelectionChange(class UInterface_GameEditor_TA* Object, unsigned long bSelected);
};

// Class TAGame.GameEditor_Trigger_TA
// 0x0020 (0x02B0 - 0x02D0)
class AGameEditor_Trigger_TA : public AGameEditor_Actor_TA
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x02B0 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FScriptDelegate                             __OnTriggerTouched__Delegate;                     		// 0x02B8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEditor_Trigger_TA");
		}

		return uClassPointer;
	};

	void eventTouch(class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal);
	void EnableTrigger(unsigned long bEnable);
	void OnTriggerTouched(class AGameEditor_Trigger_TA* Trigger, class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal);
};

// Class TAGame.GameEditor_Ring_TA
// 0x0030 (0x02D0 - 0x0300)
class AGameEditor_Ring_TA : public AGameEditor_Trigger_TA
{
public:
	TArray<struct FActorTouchRecordData>               ActorTouchRecords;                                		// 0x02D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              MaxRadius;                                        		// 0x02E0 (0x0004) [0x0000000000000000]               
	unsigned char                                      DetectionType;                                    		// 0x02E4 (0x0001) [0x0000000000000000]               
	struct FScriptDelegate                             __OnRingScored__Delegate;                         		// 0x02E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEditor_Ring_TA");
		}

		return uClassPointer;
	};

	void ModfiyBlendedRotation(struct FRotator ControllerRot, struct FRotator DeltaRot, struct FRotator& out_Rotation);
	void EnableTrigger(unsigned long bEnable);
	struct FRotator GetDesiredRotation();
	void Tick(float DeltaTime);
	struct FVector GetTouchDirection(class AActor* A);
	void OnActorWentThruRing(int RecordIndex);
	bool ActorWentThruRing(struct FActorTouchRecordData TouchRecord);
	void eventUnTouch(class AActor* Other);
	bool AddToBallTouchRecords(struct FActorTouchRecordData NewTouchRecord);
	void eventTouch(class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal);
	bool IsTouchableActor(class AActor* A);
	void eventPostBeginPlay();
	void OnRingScored(class AGameEditor_Ring_TA* Ring, class AActor* Other);
};

// Class TAGame.ClientStayAsPartyVoteBeginEvent_TA
// 0x0000 (0x0060 - 0x0060)
class UClientStayAsPartyVoteBeginEvent_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ClientStayAsPartyVoteBeginEvent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.TourEventMatch_TA
// 0x0170 (0x0060 - 0x01D0)
class UTourEventMatch_TA : public UObject
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourConfig_TA*                              Config;                                           		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UOnlineGameTourMatchmaking_TA*               TourMatchmaking;                                  		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPsyNet_X*                                   PsyNet;                                           		// 0x0078 (0x0008) [0x0000000000000000]               
	struct FUniqueNetId                                PlayerID;                                         		// 0x0080 (0x0048) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long long                                 TournamentID;                                     		// 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long long                                 TeamID;                                           		// 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FTourMatch                                  DependentMatch;                                   		// 0x00D8 (0x0030) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FTourMatch                                  NextMatch;                                        		// 0x0108 (0x0030) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                PrevMatchID;                                      		// 0x0138 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UError*                                      Error;                                            		// 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UAsyncTask*                                  GetMatchTask;                                     		// 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     ReceivedByeTitle;                                 		// 0x0150 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ReceivedByeBody;                                  		// 0x0160 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventDependentMatchUpdated__Delegate;           		// 0x0170 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventNextMatchReady__Delegate;                  		// 0x0188 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventError__Delegate;                           		// 0x01A0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventCurrentMatchUpdated__Delegate;             		// 0x01B8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourEventMatch_TA");
		}

		return uClassPointer;
	};

	void __TourEventMatch_TA__Init_EA6DED11432B6336D3526AAA92C08C1F(class UPsyNetClientService_X* S);
	void HandleByePushed(class UPsyNetService_TourReceivedBye_TA* Service);
	void UpdateDependentMatch(struct FTourMatch& Match);
	void UpdateNextMatch(struct FTourMatch& Match);
	bool IsNextMatch(struct FTourMatch& Match);
	bool IsMatchOutOfDate(struct FTourMatch& Match);
	void OnMatchReceived(struct FTourMatch Match);
	void HandleMatchPushed(class UPsyNetService_TourMatchFound_TA* Service);
	bool OnTerminalError(class UError* InError);
	void HandleGetMatchError(class UError* InError);
	void SendRequestDelayed();
	void SendRequest();
	void NotifyOnError(struct FScriptDelegate Callback);
	void NotifyOnDependentMatchUpdated(struct FScriptDelegate Callback);
	bool IsWaitingForMatchResults();
	bool HasNextMatch();
	void NotifyOnMatchReady(struct FScriptDelegate Callback);
	bool IsFirstRound();
	bool IsFinalRound();
	void StartNextRound();
	void Deactivate();
	void Init(struct FUniqueNetId InPlayerId, unsigned long long InTournamentID, unsigned long long InTeamID);
	void EventCurrentMatchUpdated(struct FTourMatch& Match);
	void EventError(class UTourEventMatch_TA* TourEventMatch, class UError* InError);
	void EventNextMatchReady(class UTourEventMatch_TA* TourEventMatch, struct FTourMatch& Match);
	void EventDependentMatchUpdated(class UTourEventMatch_TA* TourEventMatch, struct FTourMatch& Match);
};

// Class TAGame.MatchCompleteMetrics_TA
// 0x0010 (0x0080 - 0x0090)
class UMatchCompleteMetrics_TA : public UMetricsGroup_X
{
public:
	TArray<struct FMatchCompleteHistory>               History;                                          		// 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchCompleteMetrics_TA");
		}

		return uClassPointer;
	};

	void RewardsReceived(struct FString MatchGUID, struct FUniqueNetId PlayerID, float LatencyFromMatchComplete);
	void RecordRewardsReceived(struct FString MatchGUID, struct FUniqueNetId PlayerID);
	void RecordMatchComplete(struct FString MatchGUID, struct FUniqueNetId PlayerID);
	int GetHistoryIndex(struct FString MatchGUID);
};

// Class TAGame.__PlayerController_TA__HandleProfileGamepadSave_0FC2208D418DC1485D83099572BD8AE0
// 0x0008 (0x0060 - 0x0068)
class U__PlayerController_TA__HandleProfileGamepadSave_0FC2208D418DC1485D83099572BD8AE0 : public UObject
{
public:
	class UProfileGamepadSave_TA*                      GamepadSave;                                      		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__PlayerController_TA__HandleProfileGamepadSave_0FC2208D418DC1485D83099572BD8AE0");
		}

		return uClassPointer;
	};

	void __PlayerController_TA__HandleProfileGamepadSave_0FC2208D418DC1485D83099572BD8AE0(class APRI_TA* InPRI);
};

// Class TAGame.__PlayerController_TA__InitNetworkSave_05AEEDDF45B15288F6F0E496C5849AEF
// 0x0008 (0x0060 - 0x0068)
class U__PlayerController_TA__InitNetworkSave_05AEEDDF45B15288F6F0E496C5849AEF : public UObject
{
public:
	class UNetworkSave_TA*                             NetworkSave;                                      		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__PlayerController_TA__InitNetworkSave_05AEEDDF45B15288F6F0E496C5849AEF");
		}

		return uClassPointer;
	};

	void __PlayerController_TA__InitNetworkSave_05AEEDDF45B15288F6F0E496C5849AEF();
};

// Class TAGame.AudioMixStateComponent_TA
// 0x009C (0x00A4 - 0x0140)
class UAudioMixStateComponent_TA : public UActorComponent_X
{
public:
	struct FName                                       CameraBallFocusStateGroup;                        		// 0x00A8 (0x0008) [0x0000000000000000]               
	struct FName                                       CameraBallFocus_On;                               		// 0x00B0 (0x0008) [0x0000000000000000]               
	struct FName                                       CameraBallFocus_Off;                              		// 0x00B8 (0x0008) [0x0000000000000000]               
	struct FName                                       GameState;                                        		// 0x00C0 (0x0008) [0x0000000000000000]               
	struct FName                                       PlayerCountStateGroup;                            		// 0x00C8 (0x0008) [0x0000000000000000]               
	struct FName                                       PlayerCount_4s;                                   		// 0x00D0 (0x0008) [0x0000000000000000]               
	struct FName                                       PlayerCount_3s;                                   		// 0x00D8 (0x0008) [0x0000000000000000]               
	struct FName                                       PlayerCount_2s;                                   		// 0x00E0 (0x0008) [0x0000000000000000]               
	struct FName                                       PlayerCount_1s;                                   		// 0x00E8 (0x0008) [0x0000000000000000]               
	struct FName                                       PlayerCount_None;                                 		// 0x00F0 (0x0008) [0x0000000000000000]               
	struct FName                                       MajorityFarStateGroup;                            		// 0x00F8 (0x0008) [0x0000000000000000]               
	struct FName                                       MajorityFar_True;                                 		// 0x0100 (0x0008) [0x0000000000000000]               
	struct FName                                       MajorityFar_None;                                 		// 0x0108 (0x0008) [0x0000000000000000]               
	struct FName                                       MajorityFarRTPC;                                  		// 0x0110 (0x0008) [0x0000000000000000]               
	struct FName                                       IsTeamRTPC;                                       		// 0x0118 (0x0008) [0x0000000000000000]               
	struct FName                                       FocusCarRTPC;                                     		// 0x0120 (0x0008) [0x0000000000000000]               
	struct FName                                       LiveReplay_InCameraViewRTPC;                      		// 0x0128 (0x0008) [0x0000000000000000]               
	int                                                NumLocalPlayers;                                  		// 0x0130 (0x0004) [0x0000000000000000]               
	unsigned long                                      bPlayerUsingBallCam : 1;                          		// 0x0134 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bIsActiveState : 1;                               		// 0x0134 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bSpectating : 1;                                  		// 0x0134 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bIsMajorityFar : 1;                               		// 0x0134 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bInLiveReplay : 1;                                		// 0x0134 (0x0004) [0x0000000000000000] [0x00000010] 
	float                                              MajorityFarMinDistanceSq;                         		// 0x0138 (0x0004) [0x0000000000000000]               
	float                                              BallListenerOffset;                               		// 0x013C (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AudioMixStateComponent_TA");
		}

		return uClassPointer;
	};

	void SetPlayerCountState(int PlayerCount);
	void UpdateNumLocalPlayers(class UGameViewportClient_TA* GVC, int LocalPlayerCount);
	void BallCamToggle();
	bool IsActiveState(struct FName InGameState);
	void HandlePlayerCountChanged(class AGameEvent_TA* GameEvent, class APRI_TA* PRI);
	bool IsNotSpectator(class APRI_TA* InPRI);
	void HandlePawnTypeChanged(class APRI_TA* InPRI);
	void HandleFocusCarChanged(class AActor* NewFocusCar);
	void HandleGameEventSet(class APRI_TA* NewPRI);
	void HandlePersistentCameraSet(class APRI_TA* PRI);
	void HandleStateChanged(class AGameEvent_TA* GameEvent);
	void HandleBallCamToggle(class ACameraSettingsActor_TA* Cam);
	void HandleCarSet(class APRI_TA* InPRI);
	void HandlePawnChange(class APlayerController_X* InPC, class APawn* OldPawn, class APawn* NewPawn);
	void ClearInCameraViewRTPCs();
	void UpdateInCameraViewRTPCs();
	void ClearFocusCarRTPCs();
	void ClearMajorityFarRTPCs();
	void UpdateMajorityFarRTPCs();
	void SetMajorityFar(unsigned long bSet);
	float GetProportionalCarDistance(class ACar_TA* InCar);
	void UpdateMajorityFar();
	void UpdateIsTeamRTPCs();
	void UpdateBallListenerPosition();
	void eventTick(float DeltaTime);
	void UpdateTickEnabled();
	void eventDetached();
	void eventAttached();
};

// Class TAGame.ControllerEventInfo_TA
// 0x0010 (0x0268 - 0x0278)
class AControllerEventInfo_TA : public AActor
{
public:
	class APlayerController_TA*                        PC;                                               		// 0x0268 (0x0008) [0x0000000000000000]               
	class AGameEvent_TA*                               GameEvent;                                        		// 0x0270 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ControllerEventInfo_TA");
		}

		return uClassPointer;
	};

	bool PlayerCanRestart();
	void HandleGameEventChanged(class APRI_TA* PRI);
	void HandleReceivedPRI(class APlayerController_X* InPC);
	void eventOnOwnerChanged();
};

// Class TAGame.PlayerInput_Game_TA
// 0x0000 (0x04C8 - 0x04C8)
class UPlayerInput_Game_TA : public UPlayerInput_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerInput_Game_TA");
		}

		return uClassPointer;
	};

	void OnActiveBindingsChanged();
};

// Class TAGame.PlayerBindingUtils_TA
// 0x0000 (0x0060 - 0x0060)
class UPlayerBindingUtils_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerBindingUtils_TA");
		}

		return uClassPointer;
	};

	void SetBindingsToPresetBindings(TArray<struct FPlayerBinding>& PlayerBindings, TArray<struct FPlayerBinding>& PresetBindings, TArray<struct FPlayerBinding>& DefaultBindings);
	void MergeLegacyBindings(TArray<struct FPlayerBinding>& PlayerBindings, TArray<struct FPlayerBinding>& LegacyBindings, TArray<struct FPlayerBinding>& DefaultBindings);
	bool BindingsIdentical(TArray<struct FPlayerBinding>& Left, TArray<struct FPlayerBinding>& Right);
	void CheckForNewBindings(TArray<struct FPlayerBinding> DefaultBindings, TArray<struct FPlayerBinding>& Bindings);
	TArray<struct FPlayerBinding> MergeUserBindings(TArray<struct FPlayerBinding>& DefaultBindings, TArray<struct FPlayerBinding>& UserBindings);
	void RemoveDefaultBindings(TArray<struct FPlayerBinding>& DefaultBindings, TArray<struct FPlayerBinding>& Bindings);
	void RemoveDuplicateBindingIndexes(TArray<int>& Indexes, TArray<struct FPlayerBinding>& Bindings);
	TArray<int> FindDuplicateBindingIndexes(TArray<struct FPlayerBinding>& Bindings);
	void SetDefaultRemappable(struct FName Action, TArray<struct FPlayerBinding>& DefaultBindings, TArray<struct FPlayerBinding>& Bindings);
	void SetDefaultPressType(struct FName Action, TArray<struct FPlayerBinding>& DefaultBindings, TArray<struct FPlayerBinding>& Bindings);
	void RemoveBinding(struct FName Action, TArray<struct FPlayerBinding>& Bindings);
	void ResetBinding(struct FName Action, TArray<struct FPlayerBinding>& DefaultBindings, TArray<struct FPlayerBinding>& Bindings);
};

// Class TAGame.PlayerInput_Replay_TA
// 0x0000 (0x04C8 - 0x04C8)
class UPlayerInput_Replay_TA : public UPlayerInput_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerInput_Replay_TA");
		}

		return uClassPointer;
	};

	void OnActiveBindingsChanged();
};

// Class TAGame.PlayerInput_Spectator_TA
// 0x0000 (0x04C8 - 0x04C8)
class UPlayerInput_Spectator_TA : public UPlayerInput_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerInput_Spectator_TA");
		}

		return uClassPointer;
	};

	void OnActiveBindingsChanged();
};

// Class TAGame.SeqEvent_InputSequence_TA
// 0x000C (0x017C - 0x0188)
class USeqEvent_InputSequence_TA : public USequenceEvent
{
public:
	struct FName                                       SequenceName;                                     		// 0x0180 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_InputSequence_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PointInSpace_TA
// 0x0010 (0x0268 - 0x0278)
class APointInSpace_TA : public AActor
{
public:
	class USpriteComponent*                            Sprite;                                           		// 0x0268 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UArrowComponent*                             Arrow;                                            		// 0x0270 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PointInSpace_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.CameraSettingsActorCopy_TA
// 0x0000 (0x02D8 - 0x02D8)
class ACameraSettingsActorCopy_TA : public ACameraSettingsActor_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraSettingsActorCopy_TA");
		}

		return uClassPointer;
	};

	void eventTick(float DeltaTime);
};

// Class TAGame.OnlineGamePlayerTitles_TA
// 0x0050 (0x0098 - 0x00E8)
class UOnlineGamePlayerTitles_TA : public UOnline_X
{
public:
	float                                              PlayerTitleCacheTime;                             		// 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FCachedPlayerData>                   PlayerCache;                                      		// 0x00A0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPlayerTitleConfig_X*                        TitleConfig;                                      		// 0x00B0 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventPlayerTitleUpdated__Delegate;              		// 0x00B8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPlayerTitlesChanged__Delegate;             		// 0x00D0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineGamePlayerTitles_TA");
		}

		return uClassPointer;
	};

	int GetIndex(struct FUniqueNetId& PlayerID);
	void HandleOnlineProductsSynced(class USaveData_TA* SaveData);
	void HandleSaveDataLoaded(class USaveGameManager_TA* Manager, class USaveData_TA* SaveData, class UError* Error);
	TArray<struct FPlayerTitleData> GetPlayerTitleData(struct FUniqueNetId PlayerID);
	struct FPlayerTitleData GetTitleData(struct FName TitleId);
	TArray<struct FName> GetPlayerTitles(struct FUniqueNetId PlayerID);
	void HandlePlayerTitlesRPC(class URPC_GetPlayerTitles_X* RPC);
	void SyncPlayerTitles(struct FUniqueNetId PlayerID, struct FScriptDelegate Callback);
	void HandlePlayerPsyNetLogin(class UOnlinePlayer_X* Player);
	void HandleTitlesChanged();
	void OnInit();
	void EventPlayerTitlesChanged(class UOnlineGamePlayerTitles_TA* Titles);
	void EventPlayerTitleUpdated(class UOnlineGamePlayerTitles_TA* Titles, struct FUniqueNetId PlayerID);
};

// Class TAGame.GFxData_PartyInvite_TA
// 0x0068 (0x0098 - 0x0100)
class UGFxData_PartyInvite_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FInviteDatabind>                     Invites;                                          		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FInviteTarget>                       PendingInvites;                                   		// 0x00A8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        SilentSentInvites;                                		// 0x00B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UParties_X*                                  PsyNetParty;                                      		// 0x00C8 (0x0008) [0x0000000000000000]               
	class UOnlineGameParty_X*                          OnlineGameParty;                                  		// 0x00D0 (0x0008) [0x0000000000000000]               
	class UCrossplayConfig_X*                          CrossplayConfig;                                  		// 0x00D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPersonas_TA*                                PersonasData;                                     		// 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __SendPartyInvitation__Delegate;                  		// 0x00E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PartyInvite_TA");
		}

		return uClassPointer;
	};

	struct FString __GFxData_PartyInvite_TA__InviteToPartyInternal_E6168B854879474B3E39A4ACAABB4BD6(struct FPartyMember M);
	bool __GFxData_PartyInvite_TA__InviteToPartyInternal_2A1E12F948BBB9B2B3F056A35CCCBDA3(struct FPartyMember Member);
	bool __GFxData_PartyInvite_TA__HandlePartyChanged_C478B7FB437C5CD083AE47A675146ED3(class UPartyInviteNotification_TA* N);
	bool __GFxData_PartyInvite_TA__HandlePartyChanged_7D4D911341EFAEDDF9958D9111D7F544(struct FInviteDatabind I);
	void HandleBlockStatusChanged(class UPersona_TA* Persona);
	void ShowPlatformInviteUI();
	bool CanShowPlatformInviteUI();
	void HandlePartyChanged(class UOnlineGameParty_X* Party);
	void HandlePlayerInvitePending(struct FUniqueLobbyId InLobby, struct FUniqueNetId InFromUser, struct FString InFromName);
	void OnInvited();
	void SetUserInvitedResponse(int InviteIndex, unsigned long bAccepted);
	void HandlePartyInviteNotificationResponse(struct FUniqueNetId InPlayerId, unsigned long bAccepted);
	void OnPartyCreatedFromInvite();
	void OnJoinLobbyComplete(unsigned long bWasSuccessful, struct FString Error, struct FActiveLobbyInfo& LobbyInfo, struct FUniqueLobbyId& LobbyId);
	void OnPartyCreated(class UOnlineGameParty_X* OnlineParty, unsigned long bWasSuccessful);
	void ShowPartyInviteError(struct FString ErrorMessage);
	void OnPartyInviteComplete(unsigned long bSucceeded, struct FUniqueNetId InviteeID, struct FString Error);
	void InviteToPartyInternal(struct FUniqueNetId ToPlayer, struct FScriptDelegate InviteHandler);
	void InviteToParty(struct FUniqueNetId PlayerID);
	void InviteToPartySilent(struct FUniqueNetId PlayerID);
	void ShowInviteUI();
	void eventOnRemoved();
	void eventOnShellSet();
	void SendPartyInvitation(struct FUniqueNetId ToPlayer);
};

// Class TAGame.MergePartyEvent_TA
// 0x0068 (0x0060 - 0x00C8)
class UMergePartyEvent_TA : public UObject
{
public:
	struct FUniqueNetId                                LeaderID;                                         		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        InviteeIDs;                                       		// 0x00A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        ConfirmedInvitees;                                		// 0x00B8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MergePartyEvent_TA");
		}

		return uClassPointer;
	};

	struct FString ToTestString();
	bool PlayerIsFollower(struct FUniqueNetId& PlayerID);
	bool FromReplicatedData(struct FMergePartyReplicatedData& InputData);
	void ToReplicatedData(struct FMergePartyReplicatedData& OutputData);
	bool AllInviteesConfirmed();
	void AddInviteeConfirmation(class APRI_TA* PRI);
	bool RemoveInvitee(struct FUniqueNetId& PlayerID);
	void AddInvitees(TArray<struct FUniqueNetId>& Ids);
	void AddInvitee(struct FUniqueNetId& Id);
	class UMergePartyEvent_TA* Copy();
};

// Class TAGame.ServerInviteeConfirmedMergeEvent_TA
// 0x0000 (0x0060 - 0x0060)
class UServerInviteeConfirmedMergeEvent_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ServerInviteeConfirmedMergeEvent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.StayAsPartyLeader_TA
// 0x0048 (0x0060 - 0x00A8)
class UStayAsPartyLeader_TA : public UObject
{
public:
	struct FUniqueNetId                                LeaderID;                                         		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StayAsPartyLeader_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.BotReplacement_TA
// 0x0008 (0x0060 - 0x0068)
class UBotReplacement_TA : public UObject
{
public:
	class APRI_TA*                                     ReplacingBotPRI;                                  		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BotReplacement_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.StayAsPartyVoteYes_TA
// 0x0008 (0x0268 - 0x0270)
class AStayAsPartyVoteYes_TA : public AActor
{
public:
	class AStayAsPartyVoter_TA*                        Voter;                                            		// 0x0268 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StayAsPartyVoteYes_TA");
		}

		return uClassPointer;
	};

	void eventDestroyed();
	void eventOnOwnerChanged();
	void eventReplicatedEvent(struct FName VarName);
};

// Class TAGame.ProductAsset_AntennaPack_TA
// 0x0000 (0x00F8 - 0x00F8)
class UProductAsset_AntennaPack_TA : public UProductAsset_Pack_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_AntennaPack_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__ProductAsset_Attachment_TA__ModifyThumbnailScene_D27C23644C5F2664181CB79694F783D7
// 0x0008 (0x0060 - 0x0068)
class U__ProductAsset_Attachment_TA__ModifyThumbnailScene_D27C23644C5F2664181CB79694F783D7 : public UObject
{
public:
	class USkeletalMeshComponent*                      AttachSKC;                                        		// 0x0060 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ProductAsset_Attachment_TA__ModifyThumbnailScene_D27C23644C5F2664181CB79694F783D7");
		}

		return uClassPointer;
	};

	void __ProductAsset_Attachment_TA__ModifyThumbnailScene_D27C23644C5F2664181CB79694F783D7(class UAttachmentBehavior_TA* X);
};

// Class TAGame.IDefaultProduct
// 0x0000 (0x0060 - 0x0060)
class UIDefaultProduct : public UInterface
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IDefaultProduct");
		}

		return uClassPointer;
	};

	int GetDefaultProductID();
};

// Class TAGame.PaintedFXSelector_TA
// 0x0000 (0x0060 - 0x0060)
class UPaintedFXSelector_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PaintedFXSelector_TA");
		}

		return uClassPointer;
	};

	bool __PaintedFXSelector_TA__PickFXActor_3BBA988E4F340459313F3A977277CC57(class UProductAttribute_TA* X);
	class AFXActor_X* GetFXActorForPRI(class APRI_TA* PRI, int SlotIndex, class AFXActor_X* PaintedFXActor, class AFXActor_X* FXActor);
	class AFXActor_X* GetFXActorForMesh(class UCarMeshComponentBase_TA* CarMesh, int SlotIndex, class AFXActor_X* PaintedFXActor, class AFXActor_X* FXActor);
	class AFXActor_X* PickFXActor(class AFXActor_X* PaintedFXActor, class AFXActor_X* FXActor, TArray<class UProductAttribute_TA*>& Attributes);
};

// Class TAGame.ProductAsset_CountryFlags_TA
// 0x0000 (0x00F8 - 0x00F8)
class UProductAsset_CountryFlags_TA : public UProductAsset_Pack_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_CountryFlags_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__ProductAsset_Skin_TA__GetSkinBodySettings_96011C3945979CE8988259B5371C255C
// 0x0004 (0x0060 - 0x0064)
class U__ProductAsset_Skin_TA__GetSkinBodySettings_96011C3945979CE8988259B5371C255C : public UObject
{
public:
	int                                                ForBodyID;                                        		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ProductAsset_Skin_TA__GetSkinBodySettings_96011C3945979CE8988259B5371C255C");
		}

		return uClassPointer;
	};

	bool __ProductAsset_Skin_TA__GetSkinBodySettings_96011C3945979CE8988259B5371C255C(struct FSkinBodySettings Setting);
};

// Class TAGame.__ProductAsset_Skin_TA__GetSkinParameters_FD6F472742429993C213E7BA77D09313
// 0x0004 (0x0060 - 0x0064)
class U__ProductAsset_Skin_TA__GetSkinParameters_FD6F472742429993C213E7BA77D09313 : public UObject
{
public:
	int                                                ForBodyID;                                        		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ProductAsset_Skin_TA__GetSkinParameters_FD6F472742429993C213E7BA77D09313");
		}

		return uClassPointer;
	};

	bool __ProductAsset_Skin_TA__GetSkinParameters_FD6F472742429993C213E7BA77D09313(struct FSkinBodySettings Setting);
};

// Class TAGame.__ProductAsset_Skin_TA__AttemptApplyChassisOverride_45F403754EC9C924DCCC3A8DE752C7EB
// 0x0004 (0x0060 - 0x0064)
class U__ProductAsset_Skin_TA__AttemptApplyChassisOverride_45F403754EC9C924DCCC3A8DE752C7EB : public UObject
{
public:
	int                                                ForBodyID;                                        		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ProductAsset_Skin_TA__AttemptApplyChassisOverride_45F403754EC9C924DCCC3A8DE752C7EB");
		}

		return uClassPointer;
	};

	bool __ProductAsset_Skin_TA__AttemptApplyChassisOverride_45F403754EC9C924DCCC3A8DE752C7EB(struct FBodyChassisOverride Override);
};

// Class TAGame.ProductOverride_SpecificMaterials_TA
// 0x0010 (0x0060 - 0x0070)
class UProductOverride_SpecificMaterials_TA : public UProductOverride_TA
{
public:
	TArray<struct FMaterialAndMaterialOverride>        MaterialOverrides;                                		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductOverride_SpecificMaterials_TA");
		}

		return uClassPointer;
	};

	void ApplyToObject(class UObject* Target);
};

// Class TAGame.ProductAsset_UnderGlow_TA
// 0x0000 (0x0110 - 0x0110)
class UProductAsset_UnderGlow_TA : public UProductAsset_Attachment_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_UnderGlow_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductStat_BoostTime_TA
// 0x0010 (0x00B0 - 0x00C0)
class UProductStat_BoostTime_TA : public UProductStat_TA
{
public:
	class ACarComponent_Boost_TA*                      BoostComponent;                                   		// 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              BoostStartTime;                                   		// 0x00B8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LeftoverTime;                                     		// 0x00BC (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_BoostTime_TA");
		}

		return uClassPointer;
	};

	struct FString GetDisplayValue(class APlayerControllerBase_TA* ForPC, int StatValue);
	void FinalizeTime();
	void HandleActivationChanged(class ACarComponent_TA* InComponent);
	void HandleBoostAdded(class ACarComponent_Boost_TA* InBoost);
	void SetCar(class ACar_TA* InCar);
};

// Class TAGame.ProductStat_SoccarEventBase_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_SoccarEventBase_TA : public UProductStat_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_SoccarEventBase_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
	void HandleStatEvent(class APRI_TA* InPRI, class UStatEvent_TA* StatEvent, int Count);
	void ShutDown();
	void OnInit();
};

// Class TAGame.ProductStat_Demolishes_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_Demolishes_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_Demolishes_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.ProductStat_DistanceDriven_TA
// 0x000C (0x00B0 - 0x00BC)
class UProductStat_DistanceDriven_TA : public UProductStat_TA
{
public:
	struct FVector                                     OldLocation;                                      		// 0x00B0 (0x000C) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_DistanceDriven_TA");
		}

		return uClassPointer;
	};

	struct FString GetDisplayValue(class APlayerControllerBase_TA* ForPC, int StatValue);
	void UpdateDistance();
	void SetCar(class ACar_TA* InCar);
};

// Class TAGame.ProductStat_GamesPlayed_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_GamesPlayed_TA : public UProductStat_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_GamesPlayed_TA");
		}

		return uClassPointer;
	};

	void OnInit();
};

// Class TAGame.ProductStat_Goals_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_Goals_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_Goals_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.ProductStat_Saves_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_Saves_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_Saves_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.ProductStat_TimePlayed_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_TimePlayed_TA : public UProductStat_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_TimePlayed_TA");
		}

		return uClassPointer;
	};

	struct FString GetDisplayValue(class APlayerControllerBase_TA* ForPC, int StatValue);
	void UpdateTime();
	void SetCar(class ACar_TA* InCar);
};

// Class TAGame.ProductStat_Wins_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_Wins_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_Wins_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.PlayerVanitySave_TA
// 0x0040 (0x00C8 - 0x0108)
class UPlayerVanitySave_TA : public USaveObject_TA
{
public:
	unsigned long long                                 InstanceID;                                       		// 0x00C8 (0x0008) [0x0000000000000000]               
	int                                                ProductID;                                        		// 0x00D0 (0x0004) [0x0000000000000000]               
	int                                                SelectedColorValue;                               		// 0x00D4 (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             __EventVanityChanged__Delegate;                   		// 0x00D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __SelectedColorValue__ChangeNotify;               		// 0x00F0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerVanitySave_TA");
		}

		return uClassPointer;
	};

	void __SelectedColorValue__ChangeNotifyFunc();
	TArray<class UProductAttribute_TA*> GetAttributes();
	void SetSelectedColorValue(int InColor);
	void SetProductInstance(unsigned long long InInstanceId, int InProductID);
	void GetDuplicateReplacementProduct(class USaveData_TA*& SaveData);
	void Validate(class UProfile_TA* ForProfile);
	void EventVanityChanged(unsigned long long InInstanceId);
	class UProductSlot_TA* GetPlayerSlot();
	int GetDefaultProductID();
};

// Class TAGame.PlayerBannerSave_TA
// 0x0000 (0x0108 - 0x0108)
class UPlayerBannerSave_TA : public UPlayerVanitySave_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerBannerSave_TA");
		}

		return uClassPointer;
	};

	class UProductSlot_TA* GetPlayerSlot();
	int GetDefaultProductID();
};

// Class TAGame.TournamentSettingsSave_TA
// 0x00B0 (0x00C8 - 0x0178)
class UTournamentSettingsSave_TA : public USaveObject_TA
{
public:
	struct FTourCreateSettings                         TourCreateSettings;                               		// 0x00C8 (0x0038) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FTourSearchSettings                         TourSearchSettings;                               		// 0x0100 (0x0060) [0x0000000000400000] (CPF_NeedCtorLink)
	class UGameTags_TA*                                GameTags;                                         		// 0x0160 (0x0008) [0x0000000000000000]               
	struct FString                                     CheckInTeamName;                                  		// 0x0168 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TournamentSettingsSave_TA");
		}

		return uClassPointer;
	};

	void SetTourCreateSettings(struct FCustomMatchSettings& MatchSettings);
	struct FCustomMatchSettings GetTourCreateSettings();
	void OnLoad();
};

// Class TAGame.ExhibitionMatchSettingsSave_TA
// 0x0000 (0x0160 - 0x0160)
class UExhibitionMatchSettingsSave_TA : public UCustomMatchSettingsSave_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ExhibitionMatchSettingsSave_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PlayerAvatarBorderSave_TA
// 0x0000 (0x0108 - 0x0108)
class UPlayerAvatarBorderSave_TA : public UPlayerVanitySave_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerAvatarBorderSave_TA");
		}

		return uClassPointer;
	};

	class UProductSlot_TA* GetPlayerSlot();
	int GetDefaultProductID();
};

// Class TAGame.FirstTimeExperienceSave_TA
// 0x0028 (0x00C8 - 0x00F0)
class UFirstTimeExperienceSave_TA : public USaveObject_TA
{
public:
	TArray<struct FCompletedFTEInfo>                   CompletedFTEs;                                    		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned char                                      Versioning;                                       		// 0x00D8 (0x0001) [0x0000000000000000]               
	unsigned char                                      LegacyGroupType;                                  		// 0x00D9 (0x0001) [0x0000000000000000]               
	struct FName                                       ActiveGroup;                                      		// 0x00DC (0x0008) [0x0000000000000000]               
	struct FName                                       ActiveCheckpoint;                                 		// 0x00E4 (0x0008) [0x0000000000000000]               
	unsigned long                                      bTentativelyComplete : 1;                         		// 0x00EC (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FirstTimeExperienceSave_TA");
		}

		return uClassPointer;
	};

	void DebugPrint();
	int GetGroupVersion(struct FName GroupName);
	void SetActiveCheckpoint(struct FName InCheckpoint);
	void SetActiveGroup(struct FName GroupName, struct FName FirstCheckpoint, int InVersion);
	bool HasCompletedGroup(struct FName GroupName);
	bool HasCompletedCheckpoint(struct FName GroupName, struct FName CheckpointName);
	void CompleteCheckpoint(struct FName GroupName, struct FName CheckpointName);
	void MovingToCheckpoint(struct FName NewCheckpoint);
	void ClearActiveFTE();
	void CompleteGroup(struct FName GroupName, int InVersion);
	int GetGroupIndex(struct FName GroupName);
	bool ShouldForceSave();
};

// Class TAGame.CrumbTrailSave_TA
// 0x0020 (0x00C8 - 0x00E8)
class UCrumbTrailSave_TA : public USaveObject_TA
{
public:
	TArray<struct FName>                               CompletedTrails;                                  		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FName>                               ActiveTrails;                                     		// 0x00D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CrumbTrailSave_TA");
		}

		return uClassPointer;
	};

	void DebugPrint();
	void SetTrailActive(struct FName InPathName, unsigned long bRepeatable);
	bool IsTrailActive(struct FName InPathName);
	bool IsTrailCompleted(struct FName InPathName);
	void CompleteTrail(struct FName InPathName);
	bool ShouldForceSave();
};

// Class TAGame.GameTags_TA
// 0x0028 (0x0060 - 0x0088)
class UGameTags_TA : public UObject
{
public:
	TArray<struct FKeyValuePair>                       Tags;                                             		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __Tags__ChangeNotify;                             		// 0x0070 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameTags_TA");
		}

		return uClassPointer;
	};

	void __Tags__ChangeNotifyFunc();
	void ConvertToGameTags(class UObject* InOuter, TArray<class UGameTags_TA*>& GameTags, TArray<struct FKeyValuePair>& Pairs);
	void RemoveValue(struct FString Value);
	struct FString CreateGameTagsStr();
	void SetValue(struct FString Key, struct FString Value);
	struct FString GetValue(struct FString Key);
	void ResetTags();
	void InitTags(struct FString AllTags);
};

// Class TAGame.__Profile_TA__ValidateLoadoutsWithProduct_36609B3D4FC4A27AE4D1D2B8EC35B4E0
// 0x0008 (0x0060 - 0x0068)
class U__Profile_TA__ValidateLoadoutsWithProduct_36609B3D4FC4A27AE4D1D2B8EC35B4E0 : public UObject
{
public:
	unsigned long long                                 OnlineID;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__Profile_TA__ValidateLoadoutsWithProduct_36609B3D4FC4A27AE4D1D2B8EC35B4E0");
		}

		return uClassPointer;
	};

	bool __Profile_TA__ValidateLoadoutsWithProduct_36609B3D4FC4A27AE4D1D2B8EC35B4E0(class ULoadoutSet_TA* L);
};

// Class TAGame.ProfileVersions_TA
// 0x0000 (0x0060 - 0x0060)
class UProfileVersions_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProfileVersions_TA");
		}

		return uClassPointer;
	};

	struct FCustomMatchTeamSettings ConvertTeamColorSettings(struct FCustomMatchTeamSettings Settings);
	struct FCustomMatchSettings ConvertClubColorSettings(struct FCustomMatchSettings Settings);
	void ClubColors2(class UProfile_TA* Profile);
	void ClearSeasons(class UProfile_TA* Profile);
	void ClearTutorial(class UProfile_TA* Profile);
	void SparseBindingsArrays(class UProfile_TA* Profile);
	void GamepadSettings(class UProfile_TA* Profile);
	void LoadoutData(class UProfile_TA* Profile);
	bool GetEnableHorizontalSplitscreenForSaveDataMigration(class UProfile_TA* Profile);
	void QuickChatSettings(class UProfile_TA* Profile);
	void CameraSettings(class UProfile_TA* Profile);
	void HandleAimAssist(class UProfile_TA* Profile);
	void HandlePCBindings(class UProfile_TA* Profile);
	void HandleControlSettings(class UProfile_TA* Profile);
	void HandleStatsMigration(class UProfile_TA* Profile);
	void HandleBannerSettings(class UProfile_TA* Profile);
	void ResetAccountSelectNNX(class UProfile_TA* Profile);
	void GameplaySettings(class UProfile_TA* Profile);
	void MusicPlaylistSelector(class UProfile_TA* Profile);
	void PaintFinishInLoadouts(class UProfile_TA* Profile);
	void ChatGamepadBindingConsoleOnly(class UProfile_TA* Profile);
	void CarColors2(class UProfile_TA* Profile);
	void CarColors(class UProfile_TA* Profile);
	void TeamLoadouts(class UProfile_TA* Profile);
	void ChatSettings(class UProfile_TA* Profile);
	void CustomMatchSettings(class UProfile_TA* Profile);
	void DingoChatFix(class UProfile_TA* Profile);
	void ChatRebind(class UProfile_TA* Profile);
	void SaveReplayInput(class UProfile_TA* Profile);
	void LoadoutPlayerTitle(class UProfile_TA* Profile);
	void Update(class UProfile_TA* Profile, struct FScriptDelegate VersionChangedCallback, int VersionMax);
};

// Class TAGame.VehiclePartSkeletalMeshComponent_TA
// 0x0000 (0x07B0 - 0x07B0)
class UVehiclePartSkeletalMeshComponent_TA : public USkeletalMeshComponent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.VehiclePartSkeletalMeshComponent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__ReplayManager_TA__PlayReplayFile_D6E6C1CD4D3EFF567429B38E7DD89F06
// 0x0020 (0x0060 - 0x0080)
class U__ReplayManager_TA__PlayReplayFile_D6E6C1CD4D3EFF567429B38E7DD89F06 : public UObject
{
public:
	struct FString                                     Map;                                              		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     URL;                                              		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ReplayManager_TA__PlayReplayFile_D6E6C1CD4D3EFF567429B38E7DD89F06");
		}

		return uClassPointer;
	};

	void __ReplayManager_TA__PlayReplayFile_D6E6C1CD4D3EFF567429B38E7DD89F06(class UReplayManager_TA* _, class UReplay_TA* Replay, class UError* Error);
};

// Class TAGame.RPC_ProductsPlayerClear_TA
// 0x0048 (0x00E8 - 0x0130)
class URPC_ProductsPlayerClear_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_ProductsPlayerClear_TA");
		}

		return uClassPointer;
	};

	class URPC_ProductsPlayerClear_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_ProductsPlayerGet_TA
// 0x0088 (0x00E8 - 0x0170)
class URPC_ProductsPlayerGet_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FOnlineProductData>                  ProductData;                                      		// 0x0130 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FOnlineProductData>                  ExpiredProducts;                                  		// 0x0140 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UOnlineProduct_TA*>                   Products;                                         		// 0x0150 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UOnlineProduct_TA*>                   ExpiredOnlineProducts;                            		// 0x0160 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_ProductsPlayerGet_TA");
		}

		return uClassPointer;
	};

	void eventOnSuccess();
	class URPC_ProductsPlayerGet_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_ReportPlayer_TA
// 0x0020 (0x00E8 - 0x0108)
class URPC_ReportPlayer_TA : public URPC_X
{
public:
	TArray<struct FReportedPlayerInfo>                 Reports;                                          		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     GameID;                                           		// 0x00F8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_ReportPlayer_TA");
		}

		return uClassPointer;
	};

	class URPC_ReportPlayer_TA* SetGameID(struct FString InGameID);
	class URPC_ReportPlayer_TA* SetReports(TArray<struct FReportedPlayerInfo> InReports);
};

// Class TAGame.OnlineProductExpirationHelper_TA
// 0x0038 (0x0060 - 0x0098)
class UOnlineProductExpirationHelper_TA : public UObject
{
public:
	TArray<class UOnlineProduct_TA*>                   ExpirationProducts;                               		// 0x0060 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UOnlineProduct_TA*>                   ExpiredProducts;                                  		// 0x0070 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UOnlineProduct_TA*>                   ExpiredProductNotificationQueue;                  		// 0x0080 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UOnlineProductStoreSet_TA*                   ExpiredProductsSet;                               		// 0x0090 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineProductExpirationHelper_TA");
		}

		return uClassPointer;
	};

	void HandleAcceptNotification(class UProductExpirationNotification_TA* Notification);
	void ExpireProduct(class UOnlineProduct_TA* InProduct);
	void HandleNotificationSaveAdded(class UNotificationSave_TA* NotificationSave);
	void CheckForExpiredProducts();
	void FindNextExpirationTime();
	void RemoveProduct(class UOnlineProduct_TA* InProduct);
	void AddExpirationProduct(class UOnlineProduct_TA* InProduct);
	void CheckProductForExpiration(class UOnlineProduct_TA* InProduct);
	void ClearExpirationProducts();
	void eventConstruct();
};

// Class TAGame.ProductTransactions_TA
// 0x0010 (0x0070 - 0x0080)
class UProductTransactions_TA : public UComponent
{
public:
	class UOnlineProductStoreSet_TA*                   InventoryProductSet;                              		// 0x0070 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UOnlineProductStoreSet_TA*                   TransactionProductSet;                            		// 0x0078 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductTransactions_TA");
		}

		return uClassPointer;
	};

	unsigned long long __ProductTransactions_TA__GetEquippedProducts_12BA56D04DCC020593A123ADF2DB839E(class UOnlineProduct_TA* EquippedProduct);
	unsigned long long __ProductTransactions_TA__GetUnequippedProducts_142B99004A8418D80295D28EABEFB2A4(class UOnlineProduct_TA* EquippedProduct);
	TArray<class UOnlineProduct_TA*> GetTransactionProducts();
	TArray<unsigned long long> GetAllTransactionIDs();
	void ResetTransactionProducts();
	void Remove(class UOnlineProduct_TA* Product);
	void AddOnlineProduct(class UOnlineProduct_TA* OnlineProduct);
	void ClearOnlineProducts();
	void Unload();
	TArray<class UOnlineProduct_TA*> GetUnequippedProducts(TArray<class UOnlineProduct_TA*>& OnlineProductSet, TArray<class UOnlineProduct_TA*>& AllEquippedProducts);
	TArray<class UOnlineProduct_TA*> GetEquippedProducts(TArray<class UOnlineProduct_TA*>& OnlineProductSet, TArray<class UOnlineProduct_TA*>& AllEquippedProducts);
	void RemoveQuantity(struct FProductHashID HashID, int Quantity, TArray<class UOnlineProduct_TA*> AllEquippedProducts);
	void AddQuantity(struct FProductHashID HashID, int Quantity, TArray<class UOnlineProduct_TA*> AllEquippedProducts);
	bool SetTransactionQuantity(struct FProductHashID HashID, int Quantity, TArray<class UOnlineProduct_TA*> AllEquippedProducts);
	void SetOnlineProducts(TArray<class UOnlineProduct_TA*>& InOnlineProducts);
	void Init();
};

// Class TAGame.SaveDataVersions_TA
// 0x0008 (0x0060 - 0x0068)
class USaveDataVersions_TA : public UObject
{
public:
	int                                                KeyProductID;                                     		// 0x0060 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                DecryptorProductID;                               		// 0x0064 (0x0004) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SaveDataVersions_TA");
		}

		return uClassPointer;
	};

	unsigned long long __SaveDataVersions_TA__UpdateNewOnlineProductsRemoved_045AE6F0495537A6492990A11E2197F8(int Id);
	void RemoveKeyProducts(class USaveData_TA* SaveData);
	void UpdateCrossplayFlip(class USaveData_TA* SaveData);
	void UpdateFavoriteHashIDs(class USaveData_TA* SaveData);
	void ResetNetworkSettings(class USaveData_TA* SaveData);
	void UpdateLevelThresholds(class USaveData_TA* SaveData);
	void UpdateConsoleLensFlares(class USaveData_TA* SaveData);
	void UpdateMatchesPlayed(class USaveData_TA* SaveData);
	void UpdateFreeplayMap(class USaveData_TA* SaveData);
	void UpdateCustomMatchSettings(class USaveData_TA* SaveData);
	void UpdateGameplaySettings(class USaveData_TA* SaveData);
	void UpdateVideoSettings(class USaveData_TA* SaveData);
	void UpdateSaveSingleSeason(class USaveData_TA* SaveData);
	void UpdateSeasons(class USaveData_TA* SaveData);
	void UpdateTournamentSettings(class USaveData_TA* SaveData);
	void UpdateClientXP(class USaveData_TA* SaveData);
	void UpdateMatchmakingSettings(class USaveData_TA* SaveData);
	void UpdatePlaylistSkillData(class USaveData_TA* SaveData);
	void UpdateProductSettings(class USaveData_TA* SaveData);
	void UpdateBlogTileSave(class USaveData_TA* SaveData);
	void UpdateTutorial(class USaveData_TA* SaveData);
	void UpdateAchievements(class USaveData_TA* SaveData);
	void UpdateNetwork(class USaveData_TA* SaveData);
	void HandleMapPrefs(class USaveData_TA* SaveData);
	void UISavedValues(class USaveData_TA* SaveData);
	void UpdateSoundSettings(class USaveData_TA* SaveData);
	void UpdateInvisitek(class USaveData_TA* SaveData);
	void UpdateNewOnlineProductsRemoved(class USaveData_TA* SaveData);
	void UpdateLightShafts(class USaveData_TA* SaveData);
	void Update(class USaveData_TA* SaveData, struct FScriptDelegate VersionChangedCallback, int VersionMax);
};

// Class TAGame.PsyNetService_RewardDropReceived_TA
// 0x0070 (0x0090 - 0x0100)
class UPsyNetService_RewardDropReceived_TA : public UPsyNetClientService_X
{
public:
	struct FRocketPassInfo                             RocketPassInfo;                                   		// 0x0090 (0x000C) [0x0000000000000000]               
	TArray<struct FOnlineProductData>                  ProductData;                                      		// 0x00A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FOnlineXPReward>                     RewardDrops;                                      		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FOnlineReward>                       ChallengeRewards;                                 		// 0x00C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FOnlineReward>                       AchievementRewards;                               		// 0x00D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FCurrency>                           CurrencyDrops;                                    		// 0x00E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     MatchGUID;                                        		// 0x00F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_RewardDropReceived_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.EngineAudioUnlocker_TA
// 0x0000 (0x0060 - 0x0060)
class UEngineAudioUnlocker_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EngineAudioUnlocker_TA");
		}

		return uClassPointer;
	};

	int __EngineAudioUnlocker_TA__FixupUnlockedEngineAudio_CFDB4BCF420D829F1BA1C98C08DC1205(class UProduct_TA* P);
	int __EngineAudioUnlocker_TA__FixupUnlockedEngineAudio_F93CA3EC4273F75912BC7D951B6387BD(class UProduct_TA* P);
	class UProduct_TA* __EngineAudioUnlocker_TA__FixupUnlockedEngineAudio_07FB875C40B04EC7B3EE18B7A0BE290B(struct FBodyToEngineAudioPair Pair);
	bool __EngineAudioUnlocker_TA__FixupUnlockedEngineAudio_FF6E7EAB4AA0EC2265AF92AE71194409(class UProduct_TA* Product);
	bool __EngineAudioUnlocker_TA__FixupUnlockedEngineAudio_BEC9BD0D43511DD096CEC0B2B2EF4659(class UProduct_TA* Product);
	bool __EngineAudioUnlocker_TA__FixupUnlockedEngineAudio_66ABAB9B42F1A9B2BCD26C8EC42F9B4C(class UProduct_TA* Product);
	int __EngineAudioUnlocker_TA__FixupUnlockedEngineAudio_1B28974B4A4B46F4460B89A318516C08(class UOnlineProduct_TA* Product);
	void FixupUnlockedEngineAudio(class USaveData_TA* SaveData);
};

// Class TAGame.__SaveData_TA__HandleOnlineProductsReceived_AB4E56184CC56F4FE1A66BA628FFA137
// 0x0008 (0x0060 - 0x0068)
class U__SaveData_TA__HandleOnlineProductsReceived_AB4E56184CC56F4FE1A66BA628FFA137 : public UObject
{
public:
	class UProductsSave_TA*                            ProductsSave;                                     		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__SaveData_TA__HandleOnlineProductsReceived_AB4E56184CC56F4FE1A66BA628FFA137");
		}

		return uClassPointer;
	};

	void __SaveData_TA__HandleOnlineProductsReceived_AB4E56184CC56F4FE1A66BA628FFA137();
};

// Class TAGame.__SaveData_TA__GetOnlineProductQuantity_CCCA096F4032FCA24EDC79BE16C2C889
// 0x0020 (0x0060 - 0x0080)
class U__SaveData_TA__GetOnlineProductQuantity_CCCA096F4032FCA24EDC79BE16C2C889 : public UObject
{
public:
	TArray<unsigned long long>                         EquippedOnlineProducts;                           		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FProfileProduct>                     EquippedProfileProducts;                          		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__SaveData_TA__GetOnlineProductQuantity_CCCA096F4032FCA24EDC79BE16C2C889");
		}

		return uClassPointer;
	};

	bool __SaveData_TA__GetOnlineProductQuantity_234C15594A3F2F8EB4A2779B27DF7EB4(class UOnlineProduct_TA* Op);
	bool __SaveData_TA__GetOnlineProductQuantity_CCCA096F4032FCA24EDC79BE16C2C889(class UOnlineProduct_TA* Op);
};

// Class TAGame.RewardDrop_TA
// 0x0008 (0x0060 - 0x0068)
class URewardDrop_TA : public UObject
{
public:
	struct FName                                       RewardName;                                       		// 0x0060 (0x0008) [0x0000000040000002] (CPF_Const | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RewardDrop_TA");
		}

		return uClassPointer;
	};

	struct FOnlineXPReward OnlineXPReward();
};

// Class TAGame.RewardDrop_XP_TA
// 0x0098 (0x0068 - 0x0100)
class URewardDrop_XP_TA : public URewardDrop_TA
{
public:
	float                                              Total;                                            		// 0x0068 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Base;                                             		// 0x006C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                BaseLevel;                                        		// 0x0070 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Level;                                            		// 0x0074 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FGFxLevelThreshold>                  LevelThresholds;                                  		// 0x0078 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FOnlineXPModifier>                   Modifiers;                                        		// 0x0088 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FName>                               PremiumModifierNames;                             		// 0x0098 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	TArray<struct FName>                               PenaltyModifierNames;                             		// 0x00A8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	TArray<struct FName>                               PromoModifierNames;                               		// 0x00B8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FName                                       WeeklyCapReached;                                 		// 0x00C8 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FString                                     RewardModifiers_SectionName;                      		// 0x00D0 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FString                                     RewardModifiers_PackageName;                      		// 0x00E0 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FName                                       WeeklyCap;                                        		// 0x00F0 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       RestXP;                                           		// 0x00F8 (0x0008) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RewardDrop_XP_TA");
		}

		return uClassPointer;
	};

	struct FGFxLevelThreshold __RewardDrop_XP_TA__CreateInstance_F976E5A140CBD6E6F90F5F9C4F5F40A8(int XP);
	int __RewardDrop_XP_TA__OnlineXPReward_E57FD6C140C45FECCC86B3B2006B69B3(struct FGFxLevelThreshold XP);
	struct FOnlineXPReward OnlineXPReward();
	struct FString LocalizeModifier(class URewardDrop_XP_TA* RewardDrop, struct FOnlineXPModifier Modifier);
	class URewardDrop_TA* CreateInstance(struct FOnlineXPReward& XPDrop);
};

// Class TAGame.__SaveData_TA__FilterEquippedOnlineProducts_92F4C3DE477A5DCB5991FBB67050FE8E
// 0x0010 (0x0060 - 0x0070)
class U__SaveData_TA__FilterEquippedOnlineProducts_92F4C3DE477A5DCB5991FBB67050FE8E : public UObject
{
public:
	TArray<unsigned long long>                         EquippedInstanceIDs;                              		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__SaveData_TA__FilterEquippedOnlineProducts_92F4C3DE477A5DCB5991FBB67050FE8E");
		}

		return uClassPointer;
	};

	bool __SaveData_TA__FilterEquippedOnlineProducts_92F4C3DE477A5DCB5991FBB67050FE8E(class UOnlineProduct_TA* Op);
};

// Class TAGame.PlaylistSkillDataSave_TA
// 0x0010 (0x00C8 - 0x00D8)
class UPlaylistSkillDataSave_TA : public USaveObject_TA
{
public:
	TArray<struct FPlaylistSkillData>                  SkillData;                                        		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlaylistSkillDataSave_TA");
		}

		return uClassPointer;
	};

	bool CompareMatchesPlayed(struct FPlaylistSkillData LocalSkill, TArray<struct FPlaylistSkillData>& RemoteSkillData);
	class USaveObject_TA* Reconcile(class USaveObject_TA* Remote);
};

// Class TAGame.ContentSave_TA
// 0x0018 (0x00C8 - 0x00E0)
class UContentSave_TA : public USaveObject_TA
{
public:
	class UContentConfig_TA*                           Config;                                           		// 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<struct FContentPair>                        ContentMap2;                                      		// 0x00D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ContentSave_TA");
		}

		return uClassPointer;
	};

	void HandleConfigChange();
	void OnLoad();
};

// Class TAGame.PlayerLegacyStatusSave_TA
// 0x0030 (0x00C8 - 0x00F8)
class UPlayerLegacyStatusSave_TA : public USaveObject_TA
{
public:
	unsigned char                                      LegacyStatus;                                     		// 0x00C8 (0x0001) [0x0000000000000000]               
	unsigned long                                      bOnlineSet : 1;                                   		// 0x00CC (0x0004) [0x0000000000000000] [0x00000001] 
	TArray<struct FOnlineProductData>                  OnlineProducts;                                   		// 0x00D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bOnlineSet__ChangeNotify;                       		// 0x00E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerLegacyStatusSave_TA");
		}

		return uClassPointer;
	};

	void __bOnlineSet__ChangeNotifyFunc();
};

// Class TAGame.BanSave_TA
// 0x0020 (0x00C8 - 0x00E8)
class UBanSave_TA : public USaveObject_TA
{
public:
	unsigned long                                      bViewedLastChanceModal : 1;                       		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FScriptDelegate                             __bViewedLastChanceModal__ChangeNotify;           		// 0x00D0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BanSave_TA");
		}

		return uClassPointer;
	};

	void __bViewedLastChanceModal__ChangeNotifyFunc();
};

// Class TAGame.EulaSave_TA
// 0x0010 (0x00C8 - 0x00D8)
class UEulaSave_TA : public USaveObject_TA
{
public:
	TArray<struct FEulaVersion>                        AcceptedEulas;                                    		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EulaSave_TA");
		}

		return uClassPointer;
	};

	void Accepted(int TextHash);
	bool RequiresAcceptance(int TextHash);
};

// Class TAGame.PrivacyPolicySave_TA
// 0x0010 (0x00C8 - 0x00D8)
class UPrivacyPolicySave_TA : public USaveObject_TA
{
public:
	TArray<struct FLegalTextVersion>                   AcceptedPrivatePolicies;                          		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PrivacyPolicySave_TA");
		}

		return uClassPointer;
	};

	void Accepted(int InTextHash);
	bool RequiresAcceptance(int TextHash);
};

// Class TAGame.RPC_SchematicResourcesGet_TA
// 0x004C (0x00E8 - 0x0134)
class URPC_SchematicResourcesGet_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                TotalSchematicResources;                          		// 0x0130 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_SchematicResourcesGet_TA");
		}

		return uClassPointer;
	};

	class URPC_SchematicResourcesGet_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RewardDrop_XPMultiplier_TA
// 0x0004 (0x0068 - 0x006C)
class URewardDrop_XPMultiplier_TA : public URewardDrop_TA
{
public:
	float                                              Total;                                            		// 0x0068 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RewardDrop_XPMultiplier_TA");
		}

		return uClassPointer;
	};

	class URewardDrop_XPMultiplier_TA* CreateInstance(struct FOnlineXPReward& XPMultiplier);
};

// Class TAGame.RPC_XPRequest_TA
// 0x0068 (0x00E8 - 0x0150)
class URPC_XPRequest_TA : public URPC_X
{
public:
	struct FXPInfo                                     XPInfoResponse;                                   		// 0x00E8 (0x0020) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FUniqueNetId                                PlayerID;                                         		// 0x0108 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_XPRequest_TA");
		}

		return uClassPointer;
	};

	class URPC_XPRequest_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.__SaveData_TA__ValidateLoadoutsWithProduct_44D0CABE4EF9EE27FA29A6BE2E2D8F69
// 0x0008 (0x0060 - 0x0068)
class U__SaveData_TA__ValidateLoadoutsWithProduct_44D0CABE4EF9EE27FA29A6BE2E2D8F69 : public UObject
{
public:
	unsigned long long                                 OnlineID;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__SaveData_TA__ValidateLoadoutsWithProduct_44D0CABE4EF9EE27FA29A6BE2E2D8F69");
		}

		return uClassPointer;
	};

	void __SaveData_TA__ValidateLoadoutsWithProduct_44D0CABE4EF9EE27FA29A6BE2E2D8F69(class UProfile_TA* P);
};

// Class TAGame.OnlineStorageConfig_TA
// 0x0028 (0x0078 - 0x00A0)
class UOnlineStorageConfig_TA : public UOnlineConfig_X
{
public:
	TArray<class UClass*>                              DisabledClasses;                                  		// 0x0078 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FString                                     OnlineStorageFileName;                            		// 0x0088 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 MinSecondsBetweenCloudUploads;                    		// 0x0098 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineStorageConfig_TA");
		}

		return uClassPointer;
	};

	struct FString GetOnlineStorageFileName();
};

// Class TAGame.__ProductTransactions_TA__GetUnequippedProducts_824E913A46505965A1DBDA9CA1334655
// 0x0010 (0x0060 - 0x0070)
class U__ProductTransactions_TA__GetUnequippedProducts_824E913A46505965A1DBDA9CA1334655 : public UObject
{
public:
	TArray<unsigned long long>                         AllEquippedInstanceIDs;                           		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ProductTransactions_TA__GetUnequippedProducts_824E913A46505965A1DBDA9CA1334655");
		}

		return uClassPointer;
	};

	bool __ProductTransactions_TA__GetUnequippedProducts_824E913A46505965A1DBDA9CA1334655(class UOnlineProduct_TA* OnlineProduct);
};

// Class TAGame.__ProductTransactions_TA__GetEquippedProducts_0532DE7C4AF3660AFEDD919502F0E3E1
// 0x0010 (0x0060 - 0x0070)
class U__ProductTransactions_TA__GetEquippedProducts_0532DE7C4AF3660AFEDD919502F0E3E1 : public UObject
{
public:
	TArray<unsigned long long>                         AllEquippedInstanceIDs;                           		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ProductTransactions_TA__GetEquippedProducts_0532DE7C4AF3660AFEDD919502F0E3E1");
		}

		return uClassPointer;
	};

	bool __ProductTransactions_TA__GetEquippedProducts_0532DE7C4AF3660AFEDD919502F0E3E1(class UOnlineProduct_TA* OnlineProductEquipped);
};

// Class TAGame.Scout_TA
// 0x0000 (0x05B0 - 0x05B0)
class AScout_TA : public AScout
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Scout_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ScreenDisplayActor_TA
// 0x0064 (0x02C8 - 0x032C)
class AScreenDisplayActor_TA : public ADynamicSMActor_Spawnable
{
public:
	class APlayerControllerBase_TA*                    PC;                                               		// 0x02C8 (0x0008) [0x0000000000000000]               
	struct FVector                                     StartLocationOffset;                              		// 0x02D0 (0x000C) [0x0000000000000000]               
	struct FVector                                     LocationOffset;                                   		// 0x02DC (0x000C) [0x0000000000000000]               
	struct FRotator                                    CurrentRotation;                                  		// 0x02E8 (0x000C) [0x0000000000000000]               
	float                                              RotationSpeed;                                    		// 0x02F4 (0x0004) [0x0000000000000000]               
	float                                              StartRotationOffset;                              		// 0x02F8 (0x0004) [0x0000000000000000]               
	float                                              BlendInSpeed;                                     		// 0x02FC (0x0004) [0x0000000000000000]               
	float                                              BlendInAmount;                                    		// 0x0300 (0x0004) [0x0000000000000000]               
	float                                              CameraShakeDuration;                              		// 0x0304 (0x0004) [0x0000000000000000]               
	float                                              CameraShakeAmplitude;                             		// 0x0308 (0x0004) [0x0000000000000000]               
	float                                              CameraShakeFrequency;                             		// 0x030C (0x0004) [0x0000000000000000]               
	class UParticleSystem*                             ParticleFX;                                       		// 0x0310 (0x0008) [0x0000000000000000]               
	class UParticleSystemComponent*                    ParticleComponent;                                		// 0x0318 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FVector                                     FXOffset;                                         		// 0x0320 (0x000C) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ScreenDisplayActor_TA");
		}

		return uClassPointer;
	};

	void SpawnFX();
	void PlayBlendInCameraShake();
	void OnOffsetBlendedIn();
	void Tick(float DeltaTime);
	void Init();
};

// Class TAGame.ScriptedTextureComponent_TA
// 0x0034 (0x00A4 - 0x00D8)
class UScriptedTextureComponent_TA : public UActorComponent_X
{
public:
	struct FVector                                     Resolution;                                       		// 0x00A8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              Height;                                           		// 0x00B4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bFaceCamera : 1;                                  		// 0x00B8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class UStaticMeshComponent*                        Mesh;                                             		// 0x00C0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UScriptedTexture*                            TextureTarget;                                    		// 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APlayerController*                           Viewer;                                           		// 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ScriptedTextureComponent_TA");
		}

		return uClassPointer;
	};

	void FaceViewer();
	void eventTick(float DeltaTime);
	void eventDetached();
	void eventAttached();
};

// Class TAGame.SeqAct_AddGameBall_TA
// 0x0038 (0x0160 - 0x0198)
class USeqAct_AddGameBall_TA : public USequenceAction
{
public:
	class ABall_TA*                                    SpawnedBall;                                      		// 0x0160 (0x0008) [0x0000000000000000]               
	class AActor*                                      Instigator;                                       		// 0x0168 (0x0008) [0x0000000000000000]               
	class AActor*                                      SpawnTransform;                                   		// 0x0170 (0x0008) [0x0000000000000000]               
	class AActor*                                      PlacedBall;                                       		// 0x0178 (0x0008) [0x0000000000000000]               
	unsigned long                                      bWake : 1;                                        		// 0x0180 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	struct FString                                     BallArchetype;                                    		// 0x0188 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_AddGameBall_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_ApplyCarProducts_TA
// 0x0048 (0x0160 - 0x01A8)
class USeqAct_ApplyCarProducts_TA : public USequenceAction
{
public:
	TArray<class UProductAsset_TA*>                    Assets;                                           		// 0x0160 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FLinearColor                                TeamColor;                                        		// 0x0170 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                AccentColor;                                      		// 0x0180 (0x0010) [0x0000000000000001] (CPF_Edit)    
	class UProductAsset_PaintFinish_TA*                TeamFinish;                                       		// 0x0190 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UProductAsset_PaintFinish_TA*                CustomFinish;                                     		// 0x0198 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class ACarPreviewActor_TA*                         CarPreviewActor;                                  		// 0x01A0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_ApplyCarProducts_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_ControlCarMovement_TA
// 0x0008 (0x0160 - 0x0168)
class USeqAct_ControlCarMovement_TA : public USequenceAction
{
public:
	class AActor*                                      Instigator;                                       		// 0x0160 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_ControlCarMovement_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_DisplayMessage_TA
// 0x0050 (0x0160 - 0x01B0)
class USeqAct_DisplayMessage_TA : public USequenceAction
{
public:
	class AActor*                                      Instigator;                                       		// 0x0160 (0x0008) [0x0000000000000000]               
	struct FString                                     Title;                                            		// 0x0168 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     Body;                                             		// 0x0178 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long                                      bShowButtonOne : 1;                               		// 0x0188 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bShowButtonTwo : 1;                               		// 0x0188 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	struct FString                                     ButtonOneTitle;                                   		// 0x0190 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     ButtonTwoTitle;                                   		// 0x01A0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_DisplayMessage_TA");
		}

		return uClassPointer;
	};

	void HandleButtonTwoClick(class UGFxModal_X* Modal);
	void HandleButtonOneClick(class UGFxModal_X* Modal);
	void DisplayMessage(class APlayerController_TA* PC);
	void eventActivated();
};

// Class TAGame.SeqAct_DriveSpline_TA
// 0x0028 (0x0178 - 0x01A0)
class USeqAct_DriveSpline_TA : public USeqAct_Latent
{
public:
	float                                              ForwardOffset;                                    		// 0x0178 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class ASplineActor*                                Spline;                                           		// 0x0180 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              Throttle;                                         		// 0x0188 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bDebug : 1;                                       		// 0x018C (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	TArray<struct FCarSplineData>                      Cars;                                             		// 0x0190 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_DriveSpline_TA");
		}

		return uClassPointer;
	};

	float GetSteer(class ACar_TA* Car, struct FVector Destination);
	struct FCarSplineData DriveSpline(struct FCarSplineData CarData, float DeltaTime);
	bool eventUpdate(float DeltaTime);
	void eventActivated();
};

// Class TAGame.SeqAct_EndTutorial_TA
// 0x0008 (0x0160 - 0x0168)
class USeqAct_EndTutorial_TA : public USequenceAction
{
public:
	class AActor*                                      Instigator;                                       		// 0x0160 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_EndTutorial_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_ExplodeGameBall_TA
// 0x0000 (0x0160 - 0x0160)
class USeqAct_ExplodeGameBall_TA : public USequenceAction
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_ExplodeGameBall_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_GetDetailMode_TA
// 0x0000 (0x0160 - 0x0160)
class USeqAct_GetDetailMode_TA : public USequenceAction
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_GetDetailMode_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_GetSaveData_TA
// 0x0008 (0x0160 - 0x0168)
class USeqAct_GetSaveData_TA : public USequenceAction
{
public:
	class USaveData_TA*                                SaveData;                                         		// 0x0160 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_GetSaveData_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_GetTutorialType_TA
// 0x0000 (0x0160 - 0x0160)
class USeqAct_GetTutorialType_TA : public USequenceAction
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_GetTutorialType_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_GetWeatherEnabled_TA
// 0x0004 (0x0160 - 0x0164)
class USeqAct_GetWeatherEnabled_TA : public USequenceAction
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x0160 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_GetWeatherEnabled_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_GiveBoost_TA
// 0x000C (0x0160 - 0x016C)
class USeqAct_GiveBoost_TA : public USequenceAction
{
public:
	class AActor*                                      Instigator;                                       		// 0x0160 (0x0008) [0x0000000000000000]               
	float                                              BoostAmount;                                      		// 0x0168 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_GiveBoost_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_IsActionPressed_TA
// 0x0010 (0x0160 - 0x0170)
class USeqAct_IsActionPressed_TA : public USequenceAction
{
public:
	class AActor*                                      Instigator;                                       		// 0x0160 (0x0008) [0x0000000000000000]               
	struct FName                                       ActionName;                                       		// 0x0168 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_IsActionPressed_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_IsHumanPlayer_TA
// 0x0010 (0x0160 - 0x0170)
class USeqAct_IsHumanPlayer_TA : public USequenceAction
{
public:
	class AActor*                                      Instigator;                                       		// 0x0160 (0x0008) [0x0000000000000000]               
	class AActor*                                      Target;                                           		// 0x0168 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_IsHumanPlayer_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_NotifyEventOnTutorial_TA
// 0x0018 (0x0160 - 0x0178)
class USeqAct_NotifyEventOnTutorial_TA : public USequenceAction
{
public:
	struct FString                                     EventName;                                        		// 0x0160 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class AActor*                                      Instigator;                                       		// 0x0170 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_NotifyEventOnTutorial_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_ScreenFade
// 0x0014 (0x0160 - 0x0174)
class USeqAct_ScreenFade : public USequenceAction
{
public:
	class AActor*                                      Instigator;                                       		// 0x0160 (0x0008) [0x0000000000000000]               
	struct FColor                                      FadeColor;                                        		// 0x0168 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FadeTime;                                         		// 0x016C (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bFadeAudio : 1;                                   		// 0x0170 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_ScreenFade");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_ScreenFade_TA
// 0x0014 (0x0160 - 0x0174)
class USeqAct_ScreenFade_TA : public USequenceAction
{
public:
	class AActor*                                      Instigator;                                       		// 0x0160 (0x0008) [0x0000000000000000]               
	struct FColor                                      FadeColor;                                        		// 0x0168 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FadeTime;                                         		// 0x016C (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bFadeAudio : 1;                                   		// 0x0170 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_ScreenFade_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_SetBallCamTarget_TA
// 0x0014 (0x0160 - 0x0174)
class USeqAct_SetBallCamTarget_TA : public USequenceAction
{
public:
	class AActor*                                      Target;                                           		// 0x0160 (0x0008) [0x0000000000000000]               
	class APlayerController_TA*                        Instigator;                                       		// 0x0168 (0x0008) [0x0000000000000000]               
	unsigned long                                      bForceBallCamTarget : 1;                          		// 0x0170 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetBallCamTarget_TA");
		}

		return uClassPointer;
	};

	void SetBallCamTarget(unsigned long bEnable);
	void eventActivated();
};

// Class TAGame.SeqAct_SetBallMaterial_TA
// 0x0014 (0x0160 - 0x0174)
class USeqAct_SetBallMaterial_TA : public USequenceAction
{
public:
	class ABall_TA*                                    Ball;                                             		// 0x0160 (0x0008) [0x0000000000000000]               
	class UMaterialInterface*                          Material;                                         		// 0x0168 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                MaterialID;                                       		// 0x0170 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetBallMaterial_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_SetCarTransform_TA
// 0x0010 (0x0160 - 0x0170)
class USeqAct_SetCarTransform_TA : public USequenceAction
{
public:
	class AActor*                                      Instigator;                                       		// 0x0160 (0x0008) [0x0000000000000000]               
	class AActor*                                      Transform;                                        		// 0x0168 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetCarTransform_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.__SeqAct_SetLoadout_TA__ApplyNewChangesToProductAssets_07EAEC0A48E3C93455028A8815A0CFC7
// 0x001C (0x0060 - 0x007C)
class U__SeqAct_SetLoadout_TA__ApplyNewChangesToProductAssets_07EAEC0A48E3C93455028A8815A0CFC7 : public UObject
{
public:
	class UCarMeshComponent_TA*                        Mesh;                                             		// 0x0060 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UProductPaint_TA*                            Paint;                                            		// 0x0068 (0x0008) [0x0000000000000000]               
	class UAssetAttribute_TeamEdition_TA*              TeamEdition;                                      		// 0x0070 (0x0008) [0x0000000000000000]               
	int                                                TeamID;                                           		// 0x0078 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__SeqAct_SetLoadout_TA__ApplyNewChangesToProductAssets_07EAEC0A48E3C93455028A8815A0CFC7");
		}

		return uClassPointer;
	};

	void __SeqAct_SetLoadout_TA__ApplyNewChangesToProductAssets_272BA24F4CEA1FDC1DB4CE89BEF06E8C(struct FAttachment A);
	void __SeqAct_SetLoadout_TA__ApplyNewChangesToProductAssets_0297BA574B0107510455AFBB9C17E1E6(struct FWheelFX T);
	void __SeqAct_SetLoadout_TA__ApplyNewChangesToProductAssets_77634C26471DC4178B63CEB0FE03104D(struct FFXAttachment A);
	void __SeqAct_SetLoadout_TA__ApplyNewChangesToProductAssets_17528DA5497F090108EE069C606E4F38(struct FProductAttachment A);
	void __SeqAct_SetLoadout_TA__ApplyNewChangesToProductAssets_07EAEC0A48E3C93455028A8815A0CFC7(class UAntennaComponent_TA* A);
};

// Class TAGame.SeqAct_SetMatInstParam_Vector
// 0x001C (0x0160 - 0x017C)
class USeqAct_SetMatInstParam_Vector : public USequenceAction
{
public:
	struct FName                                       ParamName;                                        		// 0x0160 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AMaterialInstanceActor*                      MatInstActor;                                     		// 0x0168 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     VectorValue;                                      		// 0x0170 (0x000C) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetMatInstParam_Vector");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_SetStadiumTeamColors_TA
// 0x0020 (0x0160 - 0x0180)
class USeqAct_SetStadiumTeamColors_TA : public USequenceAction
{
public:
	TArray<struct FLinearColor>                        BlueColors;                                       		// 0x0160 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FLinearColor>                        OrangeColors;                                     		// 0x0170 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetStadiumTeamColors_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_SetTutorialGameEvent_TA
// 0x0010 (0x0160 - 0x0170)
class USeqAct_SetTutorialGameEvent_TA : public USequenceAction
{
public:
	struct FString                                     TutorialType;                                     		// 0x0160 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetTutorialGameEvent_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_SetVehicleInput_TA
// 0x0020 (0x0160 - 0x0180)
class USeqAct_SetVehicleInput_TA : public USequenceAction
{
public:
	struct FVehicleInputs                              Input;                                            		// 0x0160 (0x0020) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetVehicleInput_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_SpawnBot_TA
// 0x001C (0x0160 - 0x017C)
class USeqAct_SpawnBot_TA : public USequenceAction
{
public:
	class ACar_TA*                                     SpawnedBot;                                       		// 0x0160 (0x0008) [0x0000000000000000]               
	class AActor*                                      SpawnTransform;                                   		// 0x0168 (0x0008) [0x0000000000000000]               
	float                                              SkillLevel;                                       		// 0x0170 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bDisableAllLogic : 1;                             		// 0x0174 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bCollideWithBall : 1;                             		// 0x0174 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bCollideWithVehicle : 1;                          		// 0x0174 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	int                                                TeamIndex;                                        		// 0x0178 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SpawnBot_TA");
		}

		return uClassPointer;
	};

	void ChooseTeam(class AAIController_TA* AIC);
	void eventActivated();
};

// Class TAGame.SeqAct_SpawnCarColors_TA
// 0x0074 (0x0160 - 0x01D4)
class USeqAct_SpawnCarColors_TA : public USequenceAction
{
public:
	struct FSpawnCarColorSet                           AccentColors;                                     		// 0x0160 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                AccentTeamColor;                                  		// 0x0170 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FSpawnCarColorSet                           BlueTeamColors;                                   		// 0x0180 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FSpawnCarColorSet                           OrangeTeamColors;                                 		// 0x0190 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                TeamAccentColor;                                  		// 0x01A0 (0x0010) [0x0000000000000001] (CPF_Edit)    
	class UProductAsset_Body_TA*                       Body;                                             		// 0x01B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UProductAsset_Skin_TA*                       Skin;                                             		// 0x01B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                CarYaw;                                           		// 0x01C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CarOffsetX;                                       		// 0x01C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CarOffsetY;                                       		// 0x01C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SetOffsetY;                                       		// 0x01CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BaseOffsetY;                                      		// 0x01D0 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SpawnCarColors_TA");
		}

		return uClassPointer;
	};

	class ACarPreviewActor_TA* SpawnCar(struct FLinearColor TeamColor, struct FLinearColor AccentColor, float OffsetX, float OffsetY);
	struct FLinearColor GetRGBFromColorSet(struct FLinearColor Hue, struct FLinearColor SV);
	void SpawnTeamCars(class UCarColorSet_TA* TeamColorSet, struct FLinearColor AccentColor);
	void SpawnAccentCars(class UCarColorSet_TA* AccentColorSet, struct FLinearColor TeamColor);
	class UProductAsset_Body_TA* GetOctaneBody();
	void eventActivated();
};

// Class TAGame.SeqAct_StartTutorial_TA
// 0x0018 (0x0160 - 0x0178)
class USeqAct_StartTutorial_TA : public USequenceAction
{
public:
	class AActor*                                      Instigator;                                       		// 0x0160 (0x0008) [0x0000000000000000]               
	struct FString                                     TutorialName;                                     		// 0x0168 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_StartTutorial_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_UpdateAd_TA
// 0x0008 (0x0160 - 0x0168)
class USeqAct_UpdateAd_TA : public USequenceAction
{
public:
	class AStaticMeshActor*                            MeshActor;                                        		// 0x0160 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_UpdateAd_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SkyLightVolume_TA
// 0x000E (0x02A4 - 0x02B2)
class ASkyLightVolume_TA : public AVolume
{
public:
	class USkyLightVolumeComponent_TA*                 SkyLight;                                         		// 0x02A8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	unsigned char                                      UpperPaintTeam;                                   		// 0x02B0 (0x0001) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      LowerPaintTeam;                                   		// 0x02B1 (0x0001) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SkyLightVolume_TA");
		}

		return uClassPointer;
	};

	void HandleTeamColorsChanged(class ATeam_TA* Team);
	void HandleAllTeamsCreated(class AGameEvent_Team_TA* TeamGameEvent);
	void HandleGameEventAdded(class AGameEvent_Team_TA* TeamGameEvent);
	void SetTeamColorListeners();
	void eventPostBeginPlay();
};

// Class TAGame.SeqEvent_TutorialStarted_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_TutorialStarted_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_TutorialStarted_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.Tutorial_Boost_TA
// 0x0000 (0x0248 - 0x0248)
class UTutorial_Boost_TA : public UTutorial_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Tutorial_Boost_TA");
		}

		return uClassPointer;
	};

	void OnActionNameToDetectReleased();
};

// Class TAGame.Tutorial_Dodge_TA
// 0x000C (0x0248 - 0x0254)
class UTutorial_Dodge_TA : public UTutorial_TA
{
public:
	unsigned long                                      bDidDodge : 1;                                    		// 0x0248 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bBallHitGoal : 1;                                 		// 0x0248 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bCheckFailOnLand : 1;                             		// 0x0248 (0x0004) [0x0000000000000000] [0x00000004] 
	int                                                Dodges;                                           		// 0x024C (0x0004) [0x0000000000000000]               
	int                                                MaxDodges;                                        		// 0x0250 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Tutorial_Dodge_TA");
		}

		return uClassPointer;
	};

	void CheckBallHitGoal();
	void HandleHitGoal(class ABall_TA* Ball, class UGoal_TA* Goal);
	void HandleCarTouch(class ABall_TA* Ball, class ACar_TA* HitCar, unsigned char HitType);
	void HandleCarLanded(class ACar_TA* Car);
	void OnDodged();
	void HandleDodgeActivationChanged(class ACarComponent_TA* CarComponent);
	void HandleVehicleSetup(class AGameEvent_Tutorial_TA* InGameEvent, class ACar_TA* Car);
};

// Class TAGame.Tutorial_HandBrake_TA
// 0x0018 (0x0248 - 0x0260)
class UTutorial_HandBrake_TA : public UTutorial_TA
{
public:
	unsigned long                                      bCheckHandbrakeDir : 1;                           		// 0x0248 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bTriggerTouched : 1;                              		// 0x0248 (0x0004) [0x0000000000000000] [0x00000002] 
	struct FVector                                     HandbrakeStartDir;                                		// 0x024C (0x000C) [0x0000000000000000]               
	float                                              MinHandbrakeDotAngleForStart;                     		// 0x0258 (0x0004) [0x0000000000000000]               
	float                                              MinHandbrakeDotAngleForComplete;                  		// 0x025C (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Tutorial_HandBrake_TA");
		}

		return uClassPointer;
	};

	bool HasGoodStartRotation();
	void OnActionNameToDetectReleased();
	void OnActionNameToDetectPressed();
	void CheckActionNameToDetect();
	void NotifyEventOnTutorial(struct FString EventName);
};

// Class TAGame.__VoteActor_TA__GetVotes_A9C16FEB4C45085A9D1CCCA08259AD3F
// 0x0008 (0x0060 - 0x0068)
class U__VoteActor_TA__GetVotes_A9C16FEB4C45085A9D1CCCA08259AD3F : public UObject
{
public:
	unsigned char                                      VoteStatus;                                       		// 0x0060 (0x0001) [0x0000000000000000]               
	unsigned long                                      bExcludeIdleBannedPlayers : 1;                    		// 0x0064 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__VoteActor_TA__GetVotes_A9C16FEB4C45085A9D1CCCA08259AD3F");
		}

		return uClassPointer;
	};

	bool __VoteActor_TA__GetVotes_A9C16FEB4C45085A9D1CCCA08259AD3F(struct FVoter V);
};

// Class TAGame.__MapSet_TA__GetMap_66BAB6404255E5BC18AA119114984827
// 0x0008 (0x0060 - 0x0068)
class U__MapSet_TA__GetMap_66BAB6404255E5BC18AA119114984827 : public UObject
{
public:
	struct FName                                       MapName;                                          		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__MapSet_TA__GetMap_66BAB6404255E5BC18AA119114984827");
		}

		return uClassPointer;
	};

	bool __MapSet_TA__GetMap_66BAB6404255E5BC18AA119114984827(class UMapData_TA* M);
};

// Class TAGame.SplineLoftActorSpawnable_TA
// 0x0000 (0x0338 - 0x0338)
class ASplineLoftActorSpawnable_TA : public ASplineLoftActorMovable
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SplineLoftActorSpawnable_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__GameObserver_TA__GetCarDataForPRI_4545FDFE4977577E455EC199B0D1FE3A
// 0x0008 (0x0060 - 0x0068)
class U__GameObserver_TA__GetCarDataForPRI_4545FDFE4977577E455EC199B0D1FE3A : public UObject
{
public:
	class APRI_TA*                                     PRI;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameObserver_TA__GetCarDataForPRI_4545FDFE4977577E455EC199B0D1FE3A");
		}

		return uClassPointer;
	};

	bool __GameObserver_TA__GetCarDataForPRI_4545FDFE4977577E455EC199B0D1FE3A(struct FCarData C);
};

// Class TAGame.GFxData_ItemDropGroup_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_ItemDropGroup_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ItemDropGroup_TA");
		}

		return uClassPointer;
	};

	bool IsValid();
	unsigned char GetDisplayOrder();
};

// Class TAGame.InputBufferUtil_TA
// 0x0000 (0x0060 - 0x0060)
class UInputBufferUtil_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.InputBufferUtil_TA");
		}

		return uClassPointer;
	};

	TArray<struct FClientFrameData> MergeFrames(TArray<struct FClientFrameData>& ArrayA, TArray<struct FClientFrameData>& ArrayB);
};

// Class TAGame.ClientJitterBuffer_STS_TA
// 0x0008 (0x007C - 0x0084)
class UClientJitterBuffer_STS_TA : public UClientJitterBuffer_TA
{
public:
	float                                              PrevBufferTime;                                   		// 0x0080 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ClientJitterBuffer_STS_TA");
		}

		return uClassPointer;
	};

	void ReceivedPacket();
};

// Class TAGame.GFxData_Notification_TA
// 0x0004 (0x0094 - 0x0098)
class UGFxData_Notification_TA : public UGFxDataRow_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Notification_TA");
		}

		return uClassPointer;
	};

	class UNotification_TA* GetNotification();
	void SetShown(unsigned long bValue);
	void ClickDeny();
	void ClickAccept();
	void DismissNotification();
	void ClearPopUp();
	void HandleRemoveNotification(class UNotification_TA* Notification);
	void SetNotification(class UNotification_TA* Notification);
};

// Class TAGame.GFxData_GenericNotification_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_GenericNotification_TA : public UGFxData_Notification_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_GenericNotification_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_ClubMember_TA
// 0x0094 (0x0094 - 0x0128)
class UGFxData_ClubMember_TA : public UGFxDataRow_X
{
public:
	unsigned long long                                 ClubID;                                           		// 0x0098 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FUniqueNetId                                MemberId;                                         		// 0x00A0 (0x0048) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     MemberName;                                       		// 0x00E8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UTexture*                                    Avatar;                                           		// 0x00F8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     UnsanitizedName;                                  		// 0x0100 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UOnlineSubsystem*                            OnlineSubsytem;                                   		// 0x0110 (0x0008) [0x0000000000000000]               
	class UOnlineGameWordFilter_X*                     WordFilter;                                       		// 0x0118 (0x0008) [0x0000000000000000]               
	class UOnlineGame_X*                               OnlineGame;                                       		// 0x0120 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ClubMember_TA");
		}

		return uClassPointer;
	};

	void HandleGetAvatar(struct FUniqueNetId InPlayerId, class UTexture* InAvatar, struct FString OnlinePlayerName);
	void UpdateAvatar();
	void HandleSanitizedName(struct FString Original, struct FString Sanitized);
	void UpdateName();
	void SetMember(unsigned long long InClubID, struct FUniqueNetId InID, struct FString InName);
};

// Class TAGame.GFxData_ClubInvite_TA
// 0x0028 (0x0128 - 0x0150)
class UGFxData_ClubInvite_TA : public UGFxData_ClubMember_TA
{
public:
	struct FString                                     ClubName;                                         		// 0x0128 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     ClubTag;                                          		// 0x0138 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UClubInvite_X*                               Invite;                                           		// 0x0148 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ClubInvite_TA");
		}

		return uClassPointer;
	};

	void HandleSanitizedClubTag(struct FString Original, struct FString Sanitized);
	void HandleSanitizedClubName(struct FString Original, struct FString Sanitized);
	void SetInvite(class UClubInvite_X* InInvite);
};

// Class TAGame.ChallengeNotification_TA
// 0x0014 (0x0110 - 0x0124)
class UChallengeNotification_TA : public UNotification_TA
{
public:
	class UTexture*                                    Icon;                                             		// 0x0110 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	class UTexture*                                    NotifyImage;                                      		// 0x0118 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	int                                                ChallengeID;                                      		// 0x0120 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ChallengeNotification_TA");
		}

		return uClassPointer;
	};

	void RemoveNotification();
	void HandleIconChanged(class UChallengeDefault_TA* Challenge);
	class UChallengeNotification_TA* SetChallenge(class UChallengeDefault_TA* Challenge);
};

// Class TAGame.ListenObject_TA
// 0x0020 (0x0060 - 0x0080)
class UListenObject_TA : public UObject
{
public:
	int                                                Id;                                               		// 0x0060 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FScriptDelegate                             __EventRemoved__Delegate;                         		// 0x0068 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ListenObject_TA");
		}

		return uClassPointer;
	};

	void Remove();
	void HandleChallengeObjectRemoved(class UListenObject_TA* inObj);
	void ListenForRemove(class UListenObject_TA* inObj);
	void Init(class UListenObject_TA* inObj);
	void EventRemoved(class UListenObject_TA* Obj);
};

// Class TAGame.ChallengeDefault_TA
// 0x0158 (0x0080 - 0x01D8)
class UChallengeDefault_TA : public UListenObject_TA
{
public:
	struct FString                                     Title;                                            		// 0x0080 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Description;                                      		// 0x0090 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                GroupId;                                          		// 0x00A0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Points;                                           		// 0x00A4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bIsAchievement : 1;                               		// 0x00A8 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bIsRepeatable : 1;                                		// 0x00A8 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bIsPremium : 1;                                   		// 0x00A8 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bAutoClaimRewards : 1;                            		// 0x00A8 (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	int                                                XPUnlockLevel;                                    		// 0x00AC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                RepeatLimit;                                      		// 0x00B0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     IconURL;                                          		// 0x00B8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     BackgroundURL;                                    		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UChallengeReward_TA*                         Rewards;                                          		// 0x00D8 (0x0008) [0x0000000000000000]               
	TArray<class UChallengeRequirement_TA*>            Requirements;                                     		// 0x00E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     NotifyAvailableTitle;                             		// 0x00F0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     NotifyAvailableDescription;                       		// 0x0100 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     NotifyAvailableImageURL;                          		// 0x0110 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     NotifyCompleteTitle;                              		// 0x0120 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     NotifyCompleteDescription;                        		// 0x0130 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     NotifyCompleteImageURL;                           		// 0x0140 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UTexture*                                    Icon;                                             		// 0x0150 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	class UTexture*                                    Background;                                       		// 0x0158 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	class UTexture*                                    NotifyAvailableImage;                             		// 0x0160 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	class UTexture*                                    NotifyCompleteImage;                              		// 0x0168 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                BackgroundColor;                                  		// 0x0170 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FScriptDelegate                             __EventIconChanged__Delegate;                     		// 0x0178 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventBackgroundChanged__Delegate;               		// 0x0190 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventNotifyAvailableImageChanged__Delegate;     		// 0x01A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventNotifyCompleteImageChanged__Delegate;      		// 0x01C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ChallengeDefault_TA");
		}

		return uClassPointer;
	};

	void __ChallengeDefault_TA__Setup_D54006964CD22918FF037289ABE2B1B1(class UChallengeRequirement_TA* R);
	void HandleImageDownloaded(struct FString URL, class UTexture2DDynamic* Texture);
	void RequestImage(struct FString ImageURL);
	void RequestImages();
	void Setup();
	void EventNotifyCompleteImageChanged(class UChallengeDefault_TA* Challenge);
	void EventNotifyAvailableImageChanged(class UChallengeDefault_TA* Challenge);
	void EventBackgroundChanged(class UChallengeDefault_TA* Challenge);
	void EventIconChanged(class UChallengeDefault_TA* Challenge);
};

// Class TAGame.ProductAttribute_UserColorable_TA
// 0x0010 (0x0080 - 0x0090)
class UProductAttribute_UserColorable_TA : public UProductAttribute_TA
{
public:
	struct FLinearColor                                DefaultColor;                                     		// 0x0080 (0x0010) [0x0000000000000003] (CPF_Edit | CPF_Const)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_UserColorable_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__PlayerVanity_TA__EquipProduct_3EB0588542F0F36A8F9CF08ED881726C
// 0x0018 (0x0060 - 0x0078)
class U__PlayerVanity_TA__EquipProduct_3EB0588542F0F36A8F9CF08ED881726C : public UObject
{
public:
	struct FProductHashSource                          ProductSource;                                    		// 0x0060 (0x0018) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__PlayerVanity_TA__EquipProduct_3EB0588542F0F36A8F9CF08ED881726C");
		}

		return uClassPointer;
	};

	void __PlayerVanity_TA__EquipProduct_3EB0588542F0F36A8F9CF08ED881726C(struct FAssetLoadResult Result);
};

// Class TAGame.ProductOverride_SkeletalMesh_TA
// 0x0008 (0x0060 - 0x0068)
class UProductOverride_SkeletalMesh_TA : public UProductOverride_TA
{
public:
	class USkeletalMesh*                               Mesh;                                             		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductOverride_SkeletalMesh_TA");
		}

		return uClassPointer;
	};

	void ApplyToObject(class UObject* Target);
};

// Class TAGame.ProductOverride_StaticMesh_TA
// 0x0008 (0x0060 - 0x0068)
class UProductOverride_StaticMesh_TA : public UProductOverride_TA
{
public:
	class UStaticMesh*                                 Mesh;                                             		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductOverride_StaticMesh_TA");
		}

		return uClassPointer;
	};

	void ApplyToObject(class UObject* Target);
};

// Class TAGame.ProductOverride_Materials_TA
// 0x0010 (0x0060 - 0x0070)
class UProductOverride_Materials_TA : public UProductOverride_TA
{
public:
	TArray<class UMaterialInterface*>                  Materials;                                        		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductOverride_Materials_TA");
		}

		return uClassPointer;
	};

	void ApplyToObject(class UObject* Target);
};

// Class TAGame.__ProductAttribute_Painted_TA__ApplyToSetParameter_09D731A5429E2E91D5C7D5B7EF6C5A9D
// 0x0020 (0x0060 - 0x0080)
class U__ProductAttribute_Painted_TA__ApplyToSetParameter_09D731A5429E2E91D5C7D5B7EF6C5A9D : public UObject
{
public:
	class UISetParameter*                              Target;                                           		// 0x0060 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0068 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
	class UProductAttribute_PaintSettings_TA*          PaintSettings;                                    		// 0x0070 (0x0008) [0x0000000000000000]               
	class UProductPaint_TA*                            Paint;                                            		// 0x0078 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ProductAttribute_Painted_TA__ApplyToSetParameter_09D731A5429E2E91D5C7D5B7EF6C5A9D");
		}

		return uClassPointer;
	};

	void __ProductAttribute_Painted_TA__ApplyToSetParameter_09D731A5429E2E91D5C7D5B7EF6C5A9D(struct FPaintAttributeParameter PaintParam);
};

// Class TAGame.__ProductAttribute_Painted_TA__ApplyPaintOverridesToObject_6EF7415B401EDD93741A4AB8AAE428F8
// 0x0010 (0x0060 - 0x0070)
class U__ProductAttribute_Painted_TA__ApplyPaintOverridesToObject_6EF7415B401EDD93741A4AB8AAE428F8 : public UObject
{
public:
	class UProductPaint_TA*                            Paint;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
	class UObject*                                     Target;                                           		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ProductAttribute_Painted_TA__ApplyPaintOverridesToObject_6EF7415B401EDD93741A4AB8AAE428F8");
		}

		return uClassPointer;
	};

	void __ProductAttribute_Painted_TA__ApplyPaintOverridesToObject_F78B09754BEAE757D258258EAABDA28E(class UProductOverride_TA* PaintOverride);
	bool __ProductAttribute_Painted_TA__ApplyPaintOverridesToObject_6EF7415B401EDD93741A4AB8AAE428F8(struct FPaintWithOverride O);
};

// Class TAGame.ProductAsset_ESportsTeam_TA
// 0x0010 (0x00F8 - 0x0108)
class UProductAsset_ESportsTeam_TA : public UProductAsset_TA
{
public:
	struct FName                                       TeamName;                                         		// 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTexture*                                    TeamLogo;                                         		// 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_ESportsTeam_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__ProductOverride_TA__ApplyOverrides_3C1EBB754218F52D2B19F1AF0D9060C2
// 0x0008 (0x0060 - 0x0068)
class U__ProductOverride_TA__ApplyOverrides_3C1EBB754218F52D2B19F1AF0D9060C2 : public UObject
{
public:
	class UObject*                                     Target;                                           		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ProductOverride_TA__ApplyOverrides_3C1EBB754218F52D2B19F1AF0D9060C2");
		}

		return uClassPointer;
	};

	void __ProductOverride_TA__ApplyOverrides_3C1EBB754218F52D2B19F1AF0D9060C2(class UProductOverride_TA* O);
};

// Class TAGame.__ProductOverride_MaterialParameter_TA__ApplyOverrideToMesh_973BA8F44B7BE999020853A1E00ECF89
// 0x0008 (0x0060 - 0x0068)
class U__ProductOverride_MaterialParameter_TA__ApplyOverrideToMesh_973BA8F44B7BE999020853A1E00ECF89 : public UObject
{
public:
	class UMaterialInstanceConstant*                   MIC;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ProductOverride_MaterialParameter_TA__ApplyOverrideToMesh_973BA8F44B7BE999020853A1E00ECF89");
		}

		return uClassPointer;
	};

	void __ProductOverride_MaterialParameter_TA__ApplyOverrideToMesh_AA57C6BA49AE9AF496A0BDBFF2BEAE5C(struct FVectorParameterValue Param);
	void __ProductOverride_MaterialParameter_TA__ApplyOverrideToMesh_06A7C7D14166FA707BA80896EC558EB5(struct FTextureParameterValue Param);
	void __ProductOverride_MaterialParameter_TA__ApplyOverrideToMesh_B21AABE64CE45F290298E298296B1A36(struct FScalarParameterValue Param);
	void __ProductOverride_MaterialParameter_TA__ApplyOverrideToMesh_973BA8F44B7BE999020853A1E00ECF89(struct FFontParameterValue Param);
};

// Class TAGame.CinematicsCar_TA
// 0x0000 (0x0B20 - 0x0B20)
class ACinematicsCar_TA : public ACar_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CinematicsCar_TA");
		}

		return uClassPointer;
	};

	void HandleMatineeAssetLoaded(class UProductLoader_TA* Loader, class UProductAsset_TA* Asset);
	void SetupLoadout(class ASkeletalMeshActorMAT_Products_TA* SkelMeshActor);
};

// Class TAGame.__PerfStatGraph_TA__UpdateGraphRanges_C4EBBCAE47EEDB5734A59FA8A3A4398F
// 0x0004 (0x0060 - 0x0064)
class U__PerfStatGraph_TA__UpdateGraphRanges_C4EBBCAE47EEDB5734A59FA8A3A4398F : public UObject
{
public:
	float                                              TargetMS;                                         		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__PerfStatGraph_TA__UpdateGraphRanges_C4EBBCAE47EEDB5734A59FA8A3A4398F");
		}

		return uClassPointer;
	};

	void __PerfStatGraph_TA__UpdateGraphRanges_C4EBBCAE47EEDB5734A59FA8A3A4398F(class USampleHistory_TA* History);
};

// Class TAGame.__VanityQuery_TA__CompleteRequests_A99A3A21462C70B0ECAE8BB3773F6B85
// 0x0004 (0x0060 - 0x0064)
class U__VanityQuery_TA__CompleteRequests_A99A3A21462C70B0ECAE8BB3773F6B85 : public UObject
{
public:
	int                                                I;                                                		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__VanityQuery_TA__CompleteRequests_A99A3A21462C70B0ECAE8BB3773F6B85");
		}

		return uClassPointer;
	};

	bool __VanityQuery_TA__CompleteRequests_A99A3A21462C70B0ECAE8BB3773F6B85(struct FUniqueNetId PID);
};

// Class TAGame.RPC_PsyNetGetVanities_TA
// 0x0040 (0x00E8 - 0x0128)
class URPC_PsyNetGetVanities_TA : public URPC_X
{
public:
	TArray<int>                                        VanityTypes;                                      		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        PlayerIDs;                                        		// 0x00F8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FVanityProductInfo>                  VanityLoadouts;                                   		// 0x0108 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FVanityProductData>                  VanityProducts;                                   		// 0x0118 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_PsyNetGetVanities_TA");
		}

		return uClassPointer;
	};

	void eventOnSuccess();
	class URPC_PsyNetGetVanities_TA* AddVanityType(int InType);
	class URPC_PsyNetGetVanities_TA* AddPlayerIDs(TArray<struct FUniqueNetId> InPlayerIDs);
	class URPC_PsyNetGetVanities_TA* AddPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.__VanitySetManager_TA__RequestsBorders_C5F0125341BFB4FA869F1F895EDE3D21
// 0x0048 (0x0060 - 0x00A8)
class U__VanitySetManager_TA__RequestsBorders_C5F0125341BFB4FA869F1F895EDE3D21 : public UObject
{
public:
	struct FUniqueNetId                                EmptyID;                                          		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__VanitySetManager_TA__RequestsBorders_C5F0125341BFB4FA869F1F895EDE3D21");
		}

		return uClassPointer;
	};

	bool __VanitySetManager_TA__RequestsBorders_C5F0125341BFB4FA869F1F895EDE3D21(struct FUniqueNetId P);
};

// Class TAGame.__VanitySetManager_TA__RequestBanners_7D9AEC4A41E2AD2D2AD6EFAD471E6335
// 0x0048 (0x0060 - 0x00A8)
class U__VanitySetManager_TA__RequestBanners_7D9AEC4A41E2AD2D2AD6EFAD471E6335 : public UObject
{
public:
	struct FUniqueNetId                                EmptyID;                                          		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__VanitySetManager_TA__RequestBanners_7D9AEC4A41E2AD2D2AD6EFAD471E6335");
		}

		return uClassPointer;
	};

	bool __VanitySetManager_TA__RequestBanners_7D9AEC4A41E2AD2D2AD6EFAD471E6335(struct FUniqueNetId P);
};

// Class TAGame.__VanitySetManager_TA__RequestAvatars_1C51EFB34F2C77B828BA02B0F551E6CB
// 0x0048 (0x0060 - 0x00A8)
class U__VanitySetManager_TA__RequestAvatars_1C51EFB34F2C77B828BA02B0F551E6CB : public UObject
{
public:
	struct FUniqueNetId                                EmptyID;                                          		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__VanitySetManager_TA__RequestAvatars_1C51EFB34F2C77B828BA02B0F551E6CB");
		}

		return uClassPointer;
	};

	bool __VanitySetManager_TA__RequestAvatars_1C51EFB34F2C77B828BA02B0F551E6CB(struct FUniqueNetId P);
};

// Class TAGame.TourSettingsCache_TA
// 0x0010 (0x0060 - 0x0070)
class UTourSettingsCache_TA : public UObject
{
public:
	TArray<class UTourList_TA*>                        TourLists;                                        		// 0x0060 (0x0010) [0x0000000004480008] (CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourSettingsCache_TA");
		}

		return uClassPointer;
	};

	class UTourSettings_TA* StaticFind(unsigned long long TourID);
	class UTourSettings_TA* Find(unsigned long long TourID);
	void Remove(class UTourList_TA* List);
	void Add(class UTourList_TA* List);
};

// Class TAGame.TourSubscriptions_TA
// 0x0130 (0x0060 - 0x0190)
class UTourSubscriptions_TA : public UObject
{
public:
	class UTourList_TA*                                TourList;                                         		// 0x0060 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UGFxTourList_TA*                             GFxTourList;                                      		// 0x0068 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	TArray<unsigned long long>                         Created;                                          		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long long>                         AdminOf;                                          		// 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long long>                         RegisteredTo;                                     		// 0x0090 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UTourCheckInWindowWatcher_TA*                WindowWatcher;                                    		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class URPC_X*                                      GetSubscriptionsRPC;                              		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bSynced : 1;                                      		// 0x00B0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class UError*                                      SyncError;                                        		// 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long long                                 LastEarlyLeaveTournamentID;                       		// 0x00C0 (0x0008) [0x0000000000000000]               
	unsigned long long                                 LastSpectatedTourID;                              		// 0x00C8 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventSubscriptionsSynced__Delegate;             		// 0x00D0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventUnsubscribe__Delegate;                     		// 0x00E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSubscribe__Delegate;                       		// 0x0100 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTourCancelled__Delegate;                   		// 0x0118 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTournamentSwapped__Delegate;               		// 0x0130 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __Created__ChangeNotify;                          		// 0x0148 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __AdminOf__ChangeNotify;                          		// 0x0160 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __RegisteredTo__ChangeNotify;                     		// 0x0178 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourSubscriptions_TA");
		}

		return uClassPointer;
	};

	void __TourSubscriptions_TA__Unsubscribe_194A0CC540FD7C34B960A082B9E57EF0(class URPC_TourUnsubscribe_TA* RPC);
	void __RegisteredTo__ChangeNotifyFunc();
	void __AdminOf__ChangeNotifyFunc();
	void __Created__ChangeNotifyFunc();
	void SetEarlyLeaveTournament(unsigned long long TourID);
	void SetSpectatedTournament(unsigned long long TourID);
	bool IsSubscribed(unsigned long long TournamentID);
	bool IsRegistered(unsigned long long TournamentID);
	bool IsAdmin(unsigned long long TournamentID);
	void Cancel(unsigned long long TournamentID);
	void SwapOutActiveTournament(class UTourSettings_TA* NewTourSettings, struct FTourTeam Team);
	void HandleKickedFromTournament(class UPsyNetService_TourKicked_TA* Service);
	void HandleUnsubscribe(unsigned long long TournamentID);
	class UAsyncTask* Unsubscribe(struct FUniqueNetId PlayerID, unsigned long long TournamentID, unsigned long bUnsubscribeAnyRegisteredTournament);
	TArray<class UTourSettings_TA*> Select(TArray<unsigned long long> TourIDs);
	class UTourSettings_TA* GetTournament(unsigned long long TourID);
	void HandleTourActivated(class UOnlineGameTournaments_TA* Tournament, class UTourEvent_TA* TourEvent);
	void HandleCheckInWindowChange(class UTourCheckInWindowWatcher_TA* Watcher, class UTourSettings_TA* Tournament);
	void UpdateNextCheckInWindow();
	void HandleTourRegistered(class UTourSettings_TA* Tournament);
	void HandleTourCreated(class UTourSettings_TA* Tournament);
	void NotifyWhenSynced(struct FScriptDelegate Callback);
	void HandleCrossPlatformChanged();
	void AddNewTourResult(struct FTourResult NewResult);
	void HandleSubscriptionsSynced(class URPC_TourGetSubscriptions_TA* RPC);
	void InitGFxTourList(class UGFxEngine_X* GFxEngine, class UGFxShell_X* Shell);
	void SyncTournaments();
	void HandleTournamentCompleted(class UTourSubscriptions_TA* TourSubscription, class UPrimaryAuthLoggedIn_TA* PrimaryAuthLoggedIn, class UEnteredMainMenu_TA* _);
	void Init(class UOnlineGameTournaments_TA* Tournament);
	void EventTournamentSwapped(unsigned long long OldTournamentID, unsigned long long NewTournamentID);
	void EventTourCancelled(unsigned long long TournamentID);
	void EventSubscribe(class UTourSubscriptions_TA* Subscriptions, unsigned long long TournamentID);
	void EventUnsubscribe(class UTourSubscriptions_TA* Subscriptions, unsigned long long TournamentID);
	void EventSubscriptionsSynced(class UTourSubscriptions_TA* Subscriptions, class UError* Error);
};

// Class TAGame.StreamerSafeAudio_TA
// 0x0010 (0x0060 - 0x0070)
class UStreamerSafeAudio_TA : public UObject
{
public:
	TArray<class UAkSoundCue*>                         StreamerSafeCues;                                 		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StreamerSafeAudio_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.TriggerClump_TA
// 0x0010 (0x0060 - 0x0070)
class UTriggerClump_TA : public UObject
{
public:
	TArray<class UStatusTrigger_X*>                    Triggers;                                         		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TriggerClump_TA");
		}

		return uClassPointer;
	};

	void DebugPrint();
};

// Class TAGame.FirstTimeExperienceMetrics_TA
// 0x0000 (0x0080 - 0x0080)
class UFirstTimeExperienceMetrics_TA : public UMetricsGroup_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FirstTimeExperienceMetrics_TA");
		}

		return uClassPointer;
	};

	void ActiveCheckpointCompletion(struct FName Group, struct FName Checkpoint, unsigned long bGroupCompleted);
	void InitFromRedefinition(struct FName Group, struct FName Checkpoint, unsigned long bIsActive);
	void InitFromLoadedSave(struct FName Group, struct FName Checkpoint, unsigned long bIsActive);
};

// Class TAGame.__FirstTimeExperienceManager_TA__DebugSetCheckpoint_71944A144379FF45FB0DED868A31C980
// 0x0008 (0x0060 - 0x0068)
class U__FirstTimeExperienceManager_TA__DebugSetCheckpoint_71944A144379FF45FB0DED868A31C980 : public UObject
{
public:
	struct FName                                       GroupName;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__FirstTimeExperienceManager_TA__DebugSetCheckpoint_71944A144379FF45FB0DED868A31C980");
		}

		return uClassPointer;
	};

	bool __FirstTimeExperienceManager_TA__DebugSetCheckpoint_71944A144379FF45FB0DED868A31C980(struct FFTEGroup P);
};

// Class TAGame.StatusTrigger_FTEGroupComplete_TA
// 0x0008 (0x0080 - 0x0088)
class UStatusTrigger_FTEGroupComplete_TA : public UStatusTrigger_X
{
public:
	struct FName                                       ConditionalValue;                                 		// 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatusTrigger_FTEGroupComplete_TA");
		}

		return uClassPointer;
	};

	void DebugPrint();
	void HandleChange(struct FName CompletedGroup);
};

// Class TAGame.RPC_Challenge_FTEGroupComplete_TA
// 0x0050 (0x00E8 - 0x0138)
class URPC_Challenge_FTEGroupComplete_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FName                                       GroupName;                                        		// 0x0130 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_Challenge_FTEGroupComplete_TA");
		}

		return uClassPointer;
	};

	class URPC_Challenge_FTEGroupComplete_TA* SetGroupName(struct FName InGroupName);
	class URPC_Challenge_FTEGroupComplete_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_Challenge_FTECheckpointComplete_TA
// 0x0058 (0x00E8 - 0x0140)
class URPC_Challenge_FTECheckpointComplete_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FName                                       GroupName;                                        		// 0x0130 (0x0008) [0x0000000000000000]               
	struct FName                                       CheckpointName;                                   		// 0x0138 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_Challenge_FTECheckpointComplete_TA");
		}

		return uClassPointer;
	};

	class URPC_Challenge_FTECheckpointComplete_TA* SetCheckpointName(struct FName InCheckpointName);
	class URPC_Challenge_FTECheckpointComplete_TA* SetGroupName(struct FName InGroupName);
	class URPC_Challenge_FTECheckpointComplete_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.__FirstTimeExperienceManager_TA__SetupTrigger_A4FEAA4B48D55B7907C75D81FE3E49D1
// 0x0050 (0x0060 - 0x00B0)
class U__FirstTimeExperienceManager_TA__SetupTrigger_A4FEAA4B48D55B7907C75D81FE3E49D1 : public UObject
{
public:
	class UTriggerCondition_TA*                        Condition;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
	struct FFTEGroup                                   Group;                                            		// 0x0068 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__FirstTimeExperienceManager_TA__SetupTrigger_A4FEAA4B48D55B7907C75D81FE3E49D1");
		}

		return uClassPointer;
	};

	void __FirstTimeExperienceManager_TA__SetupTrigger_0D53154D4C2CB01A7917E983C270B7E7(class UTriggerCondition_TA* _);
	void __FirstTimeExperienceManager_TA__SetupTrigger_A4FEAA4B48D55B7907C75D81FE3E49D1(class UTriggerClump_TA* C);
};

// Class TAGame.TriggerCondition_TA
// 0x0048 (0x0060 - 0x00A8)
class UTriggerCondition_TA : public UObject
{
public:
	TArray<class UTriggerClump_TA*>                    Clumps;                                           		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             Callback;                                         		// 0x0070 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long                                      bRepeatable : 1;                                  		// 0x0088 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FScriptDelegate                             __OnTriggersMet__Delegate;                        		// 0x0090 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TriggerCondition_TA");
		}

		return uClassPointer;
	};

	bool __TriggerCondition_TA__HasTriggerConditionBeenMet_BF52FDC345DF7E426F41E284042DF087(class UTriggerClump_TA* G);
	bool __TriggerCondition_TA__HasTriggerConditionBeenMet_E7906B3B471CE253BDFB0D9D48501A6A(class UStatusTrigger_X* T);
	void DebugPrint();
	bool HasTriggerConditionBeenMet();
	void Unregister();
	void Register();
	class UTriggerCondition_TA* SetCallback(struct FScriptDelegate InCallback);
	class UTriggerCondition_TA* SetRepeatable(unsigned long bIsRepeatable);
	class UTriggerCondition_TA* AddTriggers(TArray<class UStatusTrigger_X*>& InTriggers);
	class UTriggerCondition_TA* AddClump(class UTriggerClump_TA*& InClump);
	void OnTriggersMet(class UTriggerCondition_TA* InTriggerCondition);
};

// Class TAGame.FirstTimeExperienceRedefinition_TA
// 0x0010 (0x0060 - 0x0070)
class UFirstTimeExperienceRedefinition_TA : public UObject
{
public:
	TArray<struct FRedefinedInfo>                      FTERedefinedInfo;                                 		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FirstTimeExperienceRedefinition_TA");
		}

		return uClassPointer;
	};

	void DebugPrint();
	void RedefineFTESave(class UFirstTimeExperienceSave_TA*& OutSave);
	void RedefineFTEGroups(TArray<struct FFTEGroup>& FTEGroups);
};

// Class TAGame.____SaveData_TA__GetOnlineProductQuantity_CCCA096F4032FCA24EDC79BE16C2C889____SaveData_TA__GetOnlineProductQuantity_234C15594A3F2F8EB4A2779B27DF7EB4_B828D65441338B60854E98AF6D83F5B2
// 0x0008 (0x0060 - 0x0068)
class U____SaveData_TA__GetOnlineProductQuantity_CCCA096F4032FCA24EDC79BE16C2C889____SaveData_TA__GetOnlineProductQuantity_234C15594A3F2F8EB4A2779B27DF7EB4_B828D65441338B60854E98AF6D83F5B2 : public UObject
{
public:
	class UOnlineProduct_TA*                           Op;                                               		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.____SaveData_TA__GetOnlineProductQuantity_CCCA096F4032FCA24EDC79BE16C2C889____SaveData_TA__GetOnlineProductQuantity_234C15594A3F2F8EB4A2779B27DF7EB4_B828D65441338B60854E98AF6D83F5B2");
		}

		return uClassPointer;
	};

	bool ____SaveData_TA__GetOnlineProductQuantity_CCCA096F4032FCA24EDC79BE16C2C889____SaveData_TA__GetOnlineProductQuantity_234C15594A3F2F8EB4A2779B27DF7EB4_B828D65441338B60854E98AF6D83F5B2(struct FProfileProduct PP);
};

// Class TAGame.__BanSync_TA__GetBanMessage_8E2AB5D4411E74B529992EB1A81D6076
// 0x0050 (0x0060 - 0x00B0)
class U__BanSync_TA__GetBanMessage_8E2AB5D4411E74B529992EB1A81D6076 : public UObject
{
public:
	unsigned char                                      BanType;                                          		// 0x0060 (0x0001) [0x0000000000000000]               
	struct FUniqueNetId                                PlayerID;                                         		// 0x0068 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__BanSync_TA__GetBanMessage_8E2AB5D4411E74B529992EB1A81D6076");
		}

		return uClassPointer;
	};

	bool __BanSync_TA__GetBanMessage_8E2AB5D4411E74B529992EB1A81D6076(class UBanMessage_X* M);
};

// Class TAGame.__BanSync_TA__GetPlayerBanMessages_CCDE124B41DEAAED1463D7A3EDD264CE
// 0x0048 (0x0060 - 0x00A8)
class U__BanSync_TA__GetPlayerBanMessages_CCDE124B41DEAAED1463D7A3EDD264CE : public UObject
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__BanSync_TA__GetPlayerBanMessages_CCDE124B41DEAAED1463D7A3EDD264CE");
		}

		return uClassPointer;
	};

	bool __BanSync_TA__GetPlayerBanMessages_CCDE124B41DEAAED1463D7A3EDD264CE(class UBanMessage_X* M);
};

// Class TAGame.__BanSync_TA__GetBanMessageTypes_105245F6425A2A55944AB180D202EA79
// 0x0001 (0x0060 - 0x0061)
class U__BanSync_TA__GetBanMessageTypes_105245F6425A2A55944AB180D202EA79 : public UObject
{
public:
	unsigned char                                      BanType;                                          		// 0x0060 (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__BanSync_TA__GetBanMessageTypes_105245F6425A2A55944AB180D202EA79");
		}

		return uClassPointer;
	};

	bool __BanSync_TA__GetBanMessageTypes_105245F6425A2A55944AB180D202EA79(class UBanMessage_X* M);
};

// Class TAGame.RPC_GetBanStatus_TA
// 0x0020 (0x00E8 - 0x0108)
class URPC_GetBanStatus_TA : public URPC_X
{
public:
	TArray<struct FUniqueNetId>                        Players;                                          		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UBanMessage_X*>                       BanMessages;                                      		// 0x00F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_GetBanStatus_TA");
		}

		return uClassPointer;
	};

	class URPC_GetBanStatus_TA* SetPlayers(TArray<struct FUniqueNetId>& InPlayers);
};

// Class TAGame.CameraTrackPoint_TA
// 0x0024 (0x0060 - 0x0084)
class UCameraTrackPoint_TA : public UObject
{
public:
	int                                                frame;                                            		// 0x0060 (0x0004) [0x0000000000000000]               
	float                                              Time;                                             		// 0x0064 (0x0004) [0x0000000000000000]               
	struct FVector                                     Location;                                         		// 0x0068 (0x000C) [0x0000000000000000]               
	struct FRotator                                    Rotation;                                         		// 0x0074 (0x000C) [0x0000000000000000]               
	float                                              FOV;                                              		// 0x0080 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraTrackPoint_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.Challenge_TA
// 0x0020 (0x01D8 - 0x01F8)
class UChallenge_TA : public UChallengeDefault_TA
{
public:
	unsigned long                                      bIsHidden : 1;                                    		// 0x01D8 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bRewardsAvailable : 1;                            		// 0x01D8 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bNotifyNewInfo : 1;                               		// 0x01D8 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bComplete : 1;                                    		// 0x01D8 (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	int                                                CompleteCount;                                    		// 0x01DC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 ProgressResetTimeUTC;                             		// 0x01E0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<class UChallengeRequirement_TA*>            RequirementProgress;                              		// 0x01E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Challenge_TA");
		}

		return uClassPointer;
	};

	void __Challenge_TA__OnTimeElapsed_9FDB2F5541F8103E13547A8D14A5B43C(class UChallengeRequirement_TA* Requirement);
	void __Challenge_TA__ResetChangedProgress_1BECD8A741265254A1B2F6901319A7B9(class UChallengeRequirement_TA* R);
	bool __Challenge_TA__ProgressHasChanged_41A9A2884AD049315C207CA70C85D531(class UChallengeRequirement_TA* P);
	class UChallengeManager_TA* GetChallengeManager();
	bool ProgressHasChanged();
	void ResetChangedProgress();
	void OnRewardsCollected(struct FOnlineReward& Reward);
	void OnTimeElapsed();
	bool IsAvailable();
	void HandleChallengeObjectRemoved(class UListenObject_TA* ChallengeObject);
	void HandleNotifyCompleteImageChanged(class UChallengeDefault_TA* Challenge);
	void HandleNotifyAvailableImageChanged(class UChallengeDefault_TA* Challenge);
	void HandleBackgroundChanged(class UChallengeDefault_TA* Challenge);
	void HandleIconChanged(class UChallengeDefault_TA* Challenge);
	void SetRequirementProgress(TArray<struct FChallengeRequirementProgress>& Progress);
	void SetChallengeProgress(struct FChallengeProgress Progress);
	void Init(class UListenObject_TA* ChallengeObject);
};

// Class TAGame.__ChallengeManager_TA__FindChallengeIndex_096CE7FE40FD481DAB694B89698851BD
// 0x0004 (0x0060 - 0x0064)
class U__ChallengeManager_TA__FindChallengeIndex_096CE7FE40FD481DAB694B89698851BD : public UObject
{
public:
	int                                                Id;                                               		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ChallengeManager_TA__FindChallengeIndex_096CE7FE40FD481DAB694B89698851BD");
		}

		return uClassPointer;
	};

	bool __ChallengeManager_TA__FindChallengeIndex_096CE7FE40FD481DAB694B89698851BD(class UChallenge_TA* C);
};

// Class TAGame.RPC_Challenge_TrainingComplete_TA
// 0x0070 (0x00E8 - 0x0158)
class URPC_Challenge_TrainingComplete_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     TrainingType;                                     		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     Difficulty;                                       		// 0x0140 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                Score;                                            		// 0x0150 (0x0004) [0x0000000000000000]               
	int                                                TotalRounds;                                      		// 0x0154 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_Challenge_TrainingComplete_TA");
		}

		return uClassPointer;
	};

	class URPC_Challenge_TrainingComplete_TA* SetFromTraining(class AGameEvent_Training_TA* Training);
	class URPC_Challenge_TrainingComplete_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_Challenge_TutorialComplete_TA
// 0x0058 (0x00E8 - 0x0140)
class URPC_Challenge_TutorialComplete_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     TutorialType;                                     		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_Challenge_TutorialComplete_TA");
		}

		return uClassPointer;
	};

	class URPC_Challenge_TutorialComplete_TA* SetTutorialType(struct FString Type);
	class URPC_Challenge_TutorialComplete_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.ChallengeCompleteNotification_TA
// 0x0004 (0x0124 - 0x0128)
class UChallengeCompleteNotification_TA : public UChallengeNotification_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ChallengeCompleteNotification_TA");
		}

		return uClassPointer;
	};

	void __ChallengeCompleteNotification_TA__SetChallenge_A0F1057E48FE63B46BA3A6977FC9092C(class UChallengeDefault_TA* C);
	class UChallengeNotification_TA* SetChallenge(class UChallengeDefault_TA* Challenge);
};

// Class TAGame.RPC_Challenge_CompleteReceived_TA
// 0x004C (0x00E8 - 0x0134)
class URPC_Challenge_CompleteReceived_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                Id;                                               		// 0x0130 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_Challenge_CompleteReceived_TA");
		}

		return uClassPointer;
	};

	class URPC_Challenge_CompleteReceived_TA* SetChallengeID(int ChallengeID);
	class URPC_Challenge_CompleteReceived_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_Challenge_AvailableReceived_TA
// 0x004C (0x00E8 - 0x0134)
class URPC_Challenge_AvailableReceived_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                Id;                                               		// 0x0130 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_Challenge_AvailableReceived_TA");
		}

		return uClassPointer;
	};

	class URPC_Challenge_AvailableReceived_TA* SetChallengeID(int ChallengeID);
	class URPC_Challenge_AvailableReceived_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.ChallengeAvailableNotification_TA
// 0x0004 (0x0124 - 0x0128)
class UChallengeAvailableNotification_TA : public UChallengeNotification_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ChallengeAvailableNotification_TA");
		}

		return uClassPointer;
	};

	void __ChallengeAvailableNotification_TA__SetChallenge_0017FF4F48D67534B502838B32158AB2(class UChallengeDefault_TA* C);
	class UChallengeNotification_TA* SetChallenge(class UChallengeDefault_TA* Challenge);
};

// Class TAGame.RPC_Challenge_ClearNewInfo_TA
// 0x0058 (0x00E8 - 0x0140)
class URPC_Challenge_ClearNewInfo_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        ChallengeIDs;                                     		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_Challenge_ClearNewInfo_TA");
		}

		return uClassPointer;
	};

	class URPC_Challenge_ClearNewInfo_TA* SetChallengeIDs(TArray<int> InChallengeIDs);
	class URPC_Challenge_ClearNewInfo_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.PsyNetService_ChallengeProgress_TA
// 0x0010 (0x0090 - 0x00A0)
class UPsyNetService_ChallengeProgress_TA : public UPsyNetClientService_X
{
public:
	TArray<struct FChallengeProgress>                  Challenges;                                       		// 0x0090 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_ChallengeProgress_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_GetChallengeProgress_TA
// 0x0068 (0x00E8 - 0x0150)
class URPC_GetChallengeProgress_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        ChallengeIDs;                                     		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FChallengeProgress>                  ProgressData;                                     		// 0x0140 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_GetChallengeProgress_TA");
		}

		return uClassPointer;
	};

	class URPC_GetChallengeProgress_TA* SetRequestedIDs(TArray<int>& Ids);
	class URPC_GetChallengeProgress_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.ConnectionQualityConfig_TA
// 0x0060 (0x0078 - 0x00D8)
class UConnectionQualityConfig_TA : public UOnlineConfig_X
{
public:
	float                                              ClientPollRate;                                   		// 0x0078 (0x0004) [0x0000000000000000]               
	float                                              ClientDelayBeforePolling;                         		// 0x007C (0x0004) [0x0000000000000000]               
	float                                              ClientUpdateDelay;                                		// 0x0080 (0x0004) [0x0000000000000000]               
	float                                              MediocrePing;                                     		// 0x0084 (0x0004) [0x0000000000000000]               
	float                                              BadPing;                                          		// 0x0088 (0x0004) [0x0000000000000000]               
	float                                              RecentBadPingFlagPercent;                         		// 0x008C (0x0004) [0x0000000000000000]               
	float                                              BadAckTime;                                       		// 0x0090 (0x0004) [0x0000000000000000]               
	float                                              BadReceiveTime;                                   		// 0x0094 (0x0004) [0x0000000000000000]               
	float                                              MediocreJitter;                                   		// 0x0098 (0x0004) [0x0000000000000000]               
	float                                              BadJitter;                                        		// 0x009C (0x0004) [0x0000000000000000]               
	float                                              JitterRollingAverageTimespan;                     		// 0x00A0 (0x0004) [0x0000000000000000]               
	float                                              RecentBadJitterFlagPercent;                       		// 0x00A4 (0x0004) [0x0000000000000000]               
	float                                              MediocrePacketLossPercent;                        		// 0x00A8 (0x0004) [0x0000000000000000]               
	float                                              BadPacketLossPercent;                             		// 0x00AC (0x0004) [0x0000000000000000]               
	float                                              PacketLossRollingAverageTimespan;                 		// 0x00B0 (0x0004) [0x0000000000000000]               
	float                                              RecentBadPacketLossFlagPercent;                   		// 0x00B4 (0x0004) [0x0000000000000000]               
	float                                              RecentPoorConnectionRollingTimespan;              		// 0x00B8 (0x0004) [0x0000000000000000]               
	float                                              NotificationDelayInDays;                          		// 0x00BC (0x0004) [0x0000000000000000]               
	unsigned long                                      bShouldProvidePoorConnectionHelp : 1;             		// 0x00C0 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FString                                     PoorConnectionHelpNotificationURL;                		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ConnectionQualityConfig_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__EngineAudioUnlocker_TA__FixupUnlockedEngineAudio_DDA49456468F8750DDB765A45ACF437F
// 0x0010 (0x0060 - 0x0070)
class U__EngineAudioUnlocker_TA__FixupUnlockedEngineAudio_DDA49456468F8750DDB765A45ACF437F : public UObject
{
public:
	TArray<class UProduct_TA*>                         UnlockedBodies;                                   		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__EngineAudioUnlocker_TA__FixupUnlockedEngineAudio_DDA49456468F8750DDB765A45ACF437F");
		}

		return uClassPointer;
	};

	bool __EngineAudioUnlocker_TA__FixupUnlockedEngineAudio_DDA49456468F8750DDB765A45ACF437F(struct FBodyToEngineAudioPair Pair);
};

// Class TAGame.__EpicAccountSave_TA__Reconcile_53D4290D4BA74B46CE72989B147E657B
// 0x0001 (0x0060 - 0x0061)
class U__EpicAccountSave_TA__Reconcile_53D4290D4BA74B46CE72989B147E657B : public UObject
{
public:
	unsigned char                                      Platform;                                         		// 0x0060 (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__EpicAccountSave_TA__Reconcile_53D4290D4BA74B46CE72989B147E657B");
		}

		return uClassPointer;
	};

	bool __EpicAccountSave_TA__Reconcile_6E6514254F410C8E68D778972015D5F6(struct FEpicConvertFriendsSaveData Data);
	bool __EpicAccountSave_TA__Reconcile_53D4290D4BA74B46CE72989B147E657B(struct FEpicConvertFriendsSaveData Data);
};

// Class TAGame.__EpicAccountSave_TA__SetLastConvertPlatformFriendsPromptTime_9F9D8F3F4CC2BD57CC88E6B0895D7DE9
// 0x0008 (0x0060 - 0x0068)
class U__EpicAccountSave_TA__SetLastConvertPlatformFriendsPromptTime_9F9D8F3F4CC2BD57CC88E6B0895D7DE9 : public UObject
{
public:
	class UOnlineSubsystem*                            OSS;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__EpicAccountSave_TA__SetLastConvertPlatformFriendsPromptTime_9F9D8F3F4CC2BD57CC88E6B0895D7DE9");
		}

		return uClassPointer;
	};

	bool __EpicAccountSave_TA__SetLastConvertPlatformFriendsPromptTime_A3DF18E2410469B36FF35BAD714B464E(struct FEpicConvertFriendsSaveData Data);
	bool __EpicAccountSave_TA__SetLastConvertPlatformFriendsPromptTime_9F9D8F3F4CC2BD57CC88E6B0895D7DE9(struct FEpicConvertFriendsSaveData Data);
};

// Class TAGame.__EpicAccountSave_TA__SetConvertPlatformFriends_E9360FBF47B126B2BCE48CBC60F74BE4
// 0x0008 (0x0060 - 0x0068)
class U__EpicAccountSave_TA__SetConvertPlatformFriends_E9360FBF47B126B2BCE48CBC60F74BE4 : public UObject
{
public:
	class UOnlineSubsystem*                            OSS;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__EpicAccountSave_TA__SetConvertPlatformFriends_E9360FBF47B126B2BCE48CBC60F74BE4");
		}

		return uClassPointer;
	};

	bool __EpicAccountSave_TA__SetConvertPlatformFriends_50394F53493211D818322FA8971388B4(struct FEpicConvertFriendsSaveData Data);
	bool __EpicAccountSave_TA__SetConvertPlatformFriends_E9360FBF47B126B2BCE48CBC60F74BE4(struct FEpicConvertFriendsSaveData Data);
};

// Class TAGame.__EpicAccountSave_TA__GetLastConvertPlatformFriendsPromptTime_0315ED494FD4C456025B17BD3F43EC07
// 0x0008 (0x0060 - 0x0068)
class U__EpicAccountSave_TA__GetLastConvertPlatformFriendsPromptTime_0315ED494FD4C456025B17BD3F43EC07 : public UObject
{
public:
	class UOnlineSubsystem*                            OSS;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__EpicAccountSave_TA__GetLastConvertPlatformFriendsPromptTime_0315ED494FD4C456025B17BD3F43EC07");
		}

		return uClassPointer;
	};

	bool __EpicAccountSave_TA__GetLastConvertPlatformFriendsPromptTime_0315ED494FD4C456025B17BD3F43EC07(struct FEpicConvertFriendsSaveData Data);
};

// Class TAGame.__EpicAccountSave_TA__GetConvertPlatformFriends_82F6DCB747858D39319A09B25CFBC1DF
// 0x0008 (0x0060 - 0x0068)
class U__EpicAccountSave_TA__GetConvertPlatformFriends_82F6DCB747858D39319A09B25CFBC1DF : public UObject
{
public:
	class UOnlineSubsystem*                            OSS;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__EpicAccountSave_TA__GetConvertPlatformFriends_82F6DCB747858D39319A09B25CFBC1DF");
		}

		return uClassPointer;
	};

	bool __EpicAccountSave_TA__GetConvertPlatformFriends_82F6DCB747858D39319A09B25CFBC1DF(struct FEpicConvertFriendsSaveData Data);
};

// Class TAGame.PsyNetService_FaceItMatchComplete_TA
// 0x0004 (0x0090 - 0x0094)
class UPsyNetService_FaceItMatchComplete_TA : public UPsyNetClientService_X
{
public:
	int                                                MatchID;                                          		// 0x0090 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_FaceItMatchComplete_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_FaceItFindMatchForPlayer_TA
// 0x0108 (0x00E8 - 0x01F0)
class URPC_FaceItFindMatchForPlayer_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FServerReservationData                      ReservationData;                                  		// 0x0130 (0x0080) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FFaceItMatchInfo                            MatchInfo;                                        		// 0x01B0 (0x0038) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long long                                 Expiration;                                       		// 0x01E8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_FaceItFindMatchForPlayer_TA");
		}

		return uClassPointer;
	};

	class UErrorType* eventOverrideErrorType(class UErrorType* ErrorType);
	class URPC_FaceItFindMatchForPlayer_TA* SetPlayerID(struct FUniqueNetId Value);
};

// Class TAGame.RPC_FaceItPlayerFailedJoin_TA
// 0x00D8 (0x00E8 - 0x01C0)
class URPC_FaceItPlayerFailedJoin_TA : public URPC_X
{
public:
	int                                                MatchID;                                          		// 0x00E8 (0x0004) [0x0000000000000000]               
	int                                                FailedJoinServerID;                               		// 0x00EC (0x0004) [0x0000000000000000]               
	struct FString                                     FailReason;                                       		// 0x00F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FServerReservationData                      ReservationData;                                  		// 0x0100 (0x0080) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FFaceItMatchInfo                            MatchInfo;                                        		// 0x0180 (0x0038) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long long                                 Expiration;                                       		// 0x01B8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_FaceItPlayerFailedJoin_TA");
		}

		return uClassPointer;
	};

	class UErrorType* eventOverrideErrorType(class UErrorType* ErrorType);
	class URPC_FaceItPlayerFailedJoin_TA* SetFailReason(struct FString InFailReason);
	class URPC_FaceItPlayerFailedJoin_TA* SetServerID(int InServerID);
	class URPC_FaceItPlayerFailedJoin_TA* SetMatchID(int InMatchID);
};

// Class TAGame.FaceItErrors_TA
// 0x0050 (0x0080 - 0x00D0)
class UFaceItErrors_TA : public UErrorList
{
public:
	class UErrorType*                                  MatchHasBeenCancelled;                            		// 0x0080 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  CannotJoinCrossPlatformMatch;                     		// 0x0088 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  CannotJoinWhileInParty;                           		// 0x0090 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  CannotJoinWhilePlayingSplitscreen;                		// 0x0098 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  CannotJoinWhileOnline;                            		// 0x00A0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  ReturnToMainMenuToJoin;                           		// 0x00A8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  JoinGameFailed;                                   		// 0x00B0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  NoFaceItMatchFound;                               		// 0x00B8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  FaceItGameServerPending;                          		// 0x00C0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  ExternalMatchServerNotFound;                      		// 0x00C8 (0x0008) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FaceItErrors_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.FaceItConfig_TA
// 0x0028 (0x0078 - 0x00A0)
class UFaceItConfig_TA : public UOnlineConfig_X
{
public:
	int                                                MaxConnectionAttempts;                            		// 0x0078 (0x0004) [0x0000000000000000]               
	unsigned long                                      bEnabled : 1;                                     		// 0x007C (0x0004) [0x0000000000000000] [0x00000001] 
	TArray<struct FPartnerMapping>                     PartnerNames;                                     		// 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     DefaultPartnerName;                               		// 0x0090 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FaceItConfig_TA");
		}

		return uClassPointer;
	};

	struct FString GetPartnerNameFromID(int Id);
};

// Class TAGame.RPC_FaceItFindMatchForPlayer2_TA
// 0x0048 (0x00E8 - 0x0130)
class URPC_FaceItFindMatchForPlayer2_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_FaceItFindMatchForPlayer2_TA");
		}

		return uClassPointer;
	};

	class UErrorType* eventOverrideErrorType(class UErrorType* ErrorType);
	class URPC_FaceItFindMatchForPlayer2_TA* SetPlayerID(struct FUniqueNetId Value);
};

// Class TAGame.FaceItFindServerTask_TA
// 0x0028 (0x00D0 - 0x00F8)
class UFaceItFindServerTask_TA : public UAsyncTask
{
public:
	float                                              SearchTimeout;                                    		// 0x00D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class URPC_X*                                      RPC;                                              		// 0x00D8 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventResult__Delegate;                          		// 0x00E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FaceItFindServerTask_TA");
		}

		return uClassPointer;
	};

	void HandleClientReservationMessage(class UIReservationConnection_X* Connection, class UFaceItClientReservationMessage_X* Message);
	void HandleSearchTimeout();
	void HandleJoinMatchError(class URPC_X* InRPC);
	void Cleanup();
	void Init(class URPC_X* InRPC);
	class UFaceItFindServerTask_TA* NotifyOnResult(struct FScriptDelegate Callback);
	class UFaceItFindServerTask_TA* FindUsingRPC(class URPC_X* InRPC);
	void EventResult(struct FServerReservationData Reservation, struct FFaceItMatchInfo MatchInfo, unsigned long long Expiration);
};

// Class TAGame.FaceItMatchNotification_TA
// 0x00B8 (0x0110 - 0x01C8)
class UFaceItMatchNotification_TA : public UNotification_TA
{
public:
	struct FServerReservationData                      ReservationData;                                  		// 0x0110 (0x0080) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FFaceItMatchInfo                            MatchInfo;                                        		// 0x0190 (0x0038) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FaceItMatchNotification_TA");
		}

		return uClassPointer;
	};

	bool ShouldShow();
	void ClickAccept();
	class UFaceItMatchNotification_TA* SetReservationService(struct FServerReservationData InReservationData, struct FFaceItMatchInfo InMatchInfo);
};

// Class TAGame.PsyNetService_FaceItMatchCancelled_TA
// 0x0004 (0x0090 - 0x0094)
class UPsyNetService_FaceItMatchCancelled_TA : public UPsyNetClientService_X
{
public:
	int                                                MatchID;                                          		// 0x0090 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_FaceItMatchCancelled_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAsset_PlayerTitle_TA
// 0x0000 (0x00F8 - 0x00F8)
class UProductAsset_PlayerTitle_TA : public UProductAsset_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_PlayerTitle_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.Save_TA
// 0x003C (0x0060 - 0x009C)
class USave_TA : public UObject
{
public:
	class USaveObjectManager_TA*                       SaveObjectManager;                                		// 0x0060 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     DirectoryPath;                                    		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     SaveType;                                         		// 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     SaveExt;                                          		// 0x0088 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long                                      bExactFileMatch : 1;                              		// 0x0098 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Save_TA");
		}

		return uClassPointer;
	};

	void CancelGetHeaders(struct FScriptDelegate Callback);
	void GetHeaders(class ULocalPlayer_TA* Player, struct FString FolderPath, struct FString Pattern, struct FScriptDelegate Callback);
	struct FString GetFullSavePath(class ULocalPlayer_TA* Player, struct FString SaveName);
	struct FString GetFullSaveDirectory(class ULocalPlayer_TA* Player);
	void Delete(class ULocalPlayer_TA* Player, struct FString SavePath);
	void Save(class ULocalPlayer_TA* Player, struct FString SaveName);
	void LoadAsync(class ULocalPlayer_TA* Player, struct FString SaveFileName, struct FScriptDelegate Callback);
	bool Load(class ULocalPlayer_TA* Player, struct FString SaveFileName);
	struct FString GetUniqueSaveKey(class ULocalPlayer_TA* Player);
	void Init();
};

// Class TAGame.SaveData_GameEditor_TA
// 0x0004 (0x009C - 0x00A0)
class USaveData_GameEditor_TA : public USave_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SaveData_GameEditor_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GameEditor_Switch_TA
// 0x0000 (0x02D0 - 0x02D0)
class AGameEditor_Switch_TA : public AGameEditor_Trigger_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEditor_Switch_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.DynamicSpawnPointMesh_TA
// 0x0000 (0x02B0 - 0x02B0)
class ADynamicSpawnPointMesh_TA : public AGameEditor_Actor_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.DynamicSpawnPointMesh_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GameEditor_Pawn_TA
// 0x0000 (0x0558 - 0x0558)
class AGameEditor_Pawn_TA : public APawn_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEditor_Pawn_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__GFxData_ErrorModals_TA__AlertError_052E3D394EDC8F18327DAEBFE9DFC2B4
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_ErrorModals_TA__AlertError_052E3D394EDC8F18327DAEBFE9DFC2B4 : public UObject
{
public:
	class UError*                                      Error;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_ErrorModals_TA__AlertError_052E3D394EDC8F18327DAEBFE9DFC2B4");
		}

		return uClassPointer;
	};

	bool __GFxData_ErrorModals_TA__AlertError_052E3D394EDC8F18327DAEBFE9DFC2B4(struct FPendingError PE);
};

// Class TAGame.MapPrefsMetrics_TA
// 0x0000 (0x0080 - 0x0080)
class UMapPrefsMetrics_TA : public UMetricsGroup_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MapPrefsMetrics_TA");
		}

		return uClassPointer;
	};

	void MapPrefs(TArray<struct FMapPrefsMetric> Playlists);
	struct FMapPrefsMetric GetMetric(struct FPlaylistMapPrefs& InPrefs);
	TArray<struct FMapPrefsMetric> GetAllMetrics(TArray<struct FPlaylistMapPrefs>& InMapPrefs);
	void RecordMapPrefs(TArray<struct FPlaylistMapPrefs>& InMapPrefs);
};

// Class TAGame.EOSOnlineStorageSync_TA
// 0x0028 (0x0060 - 0x0088)
class UEOSOnlineStorageSync_TA : public UObject
{
public:
	class UAsyncTask*                                  SyncTask;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
	int                                                EOS_FILE_CORRUPTED;                               		// 0x0068 (0x0004) [0x0000000000000002] (CPF_Const)   
	struct FScriptDelegate                             __EventSyncObjectSuccess__Delegate;               		// 0x0070 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EOSOnlineStorageSync_TA");
		}

		return uClassPointer;
	};

	void HandleFileReadComplete(unsigned long bWasSuccessful, struct FString UserId, struct FString Filename);
	void HandleEnumerateUserFilesComplete(unsigned long bWasSuccessful, struct FString UserId);
	class UAsyncTask* SyncCloudSave();
	void Unload();
	void HandleEOSInitialized();
	void eventConstruct();
	void EventSyncObjectSuccess(class UObject* RemoteObject);
};

// Class TAGame.__OnlineDLCProductCache_TA__GetOldGeneratedOnlineProduct_ED13189040293AEA75554B88748EE4DA
// 0x0008 (0x0060 - 0x0068)
class U__OnlineDLCProductCache_TA__GetOldGeneratedOnlineProduct_ED13189040293AEA75554B88748EE4DA : public UObject
{
public:
	unsigned long long                                 InstanceID;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineDLCProductCache_TA__GetOldGeneratedOnlineProduct_ED13189040293AEA75554B88748EE4DA");
		}

		return uClassPointer;
	};

	bool __OnlineDLCProductCache_TA__GetOldGeneratedOnlineProduct_ED13189040293AEA75554B88748EE4DA(class UOnlineProduct_TA* P);
};

// Class TAGame.TourConfig_TA
// 0x00A0 (0x0078 - 0x0118)
class UTourConfig_TA : public UOnlineConfig_X
{
public:
	unsigned long                                      bEnableUI : 1;                                    		// 0x0078 (0x0004) [0x0000000040000001] [0x00000001] (CPF_Edit | CPF_EditInlineNotify)
	unsigned long                                      bNextMatchPushNotificationsEnabled : 1;           		// 0x0078 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bEnableRewards : 1;                               		// 0x0078 (0x0004) [0x0000000040000001] [0x00000004] (CPF_Edit | CPF_EditInlineNotify)
	unsigned long                                      bHideBetaUI : 1;                                  		// 0x0078 (0x0004) [0x0000000040000001] [0x00000008] (CPF_Edit | CPF_EditInlineNotify)
	unsigned long                                      bAllowTeamMemberCheckIns : 1;                     		// 0x0078 (0x0004) [0x0000000000000000] [0x00000010] 
	int                                                CheckInWindowMinutes;                             		// 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                CreateFutureMinutes;                              		// 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                ActivityWindowMinutes;                            		// 0x0084 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              NextMatchPollIntervalSeconds;                     		// 0x0088 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              NextMatchPollIntervalSecondsPushEnabled;          		// 0x008C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FirstMatchRequestOffsetMin;                       		// 0x0090 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FirstMatchRequestOffsetMax;                       		// 0x0094 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PausedRpcDelaySeconds;                            		// 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                CreateFutureMaxDays;                              		// 0x009C (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	float                                              BracketCacheSeconds;                              		// 0x00A0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<int>                                        AllowedTeamSizes;                                 		// 0x00A8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     AllowedTeamSizesCSV;                              		// 0x00B8 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                MaxBracketSize;                                   		// 0x00C8 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	TArray<struct FName>                               TeamSizeToPlaylistMap;                            		// 0x00D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FName>                               GameModeToPlaylistMap;                            		// 0x00E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned char                                      MaxJoinServerAttempts;                            		// 0x00F0 (0x0001) [0x0000000000000000]               
	float                                              MatchmakingDelay;                                 		// 0x00F4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                MinCheckInDelaySeconds;                           		// 0x00F8 (0x0004) [0x0000000000000000]               
	int                                                MaxCheckInDelaySeconds;                           		// 0x00FC (0x0004) [0x0000000000000000]               
	int                                                CheckInDelaySeconds;                              		// 0x0100 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<struct FName>                               PlaylistsWithDynamicMapsets;                      		// 0x0108 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourConfig_TA");
		}

		return uClassPointer;
	};

	float GetPausedPollDelay();
	bool PlaylistHasDynamicMapset(struct FName PlaylistName);
	struct FName GetMapSetNameForGameMode(int GameMode, int TeamSize);
	struct FName GetPlaylistName(int GameMode, int TeamSize);
	void Apply();
};

// Class TAGame.TourCheckInWindowWatcher_TA
// 0x0038 (0x0060 - 0x0098)
class UTourCheckInWindowWatcher_TA : public UObject
{
public:
	class UTourConfig_TA*                              Config;                                           		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourSettings_TA*                            NextTournament;                                   		// 0x0068 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long long                                 CheckInWindowSeconds;                             		// 0x0070 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long long                                 ActivityWindowSeconds;                            		// 0x0078 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventWindowChange__Delegate;                    		// 0x0080 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourCheckInWindowWatcher_TA");
		}

		return uClassPointer;
	};

	bool CanShowActivityNotifications(unsigned long long StartTime, unsigned long long CurrentTime);
	bool CanCheckIn(unsigned long long StartTime, unsigned long long CurrentTime);
	float GetTimeToNextWindow();
	void HandleCheckInWindowEvent();
	void ClearCheckInTimer();
	void UpdateCheckInTimer(unsigned long long CurrentTime, unsigned long long NextEventTime);
	unsigned long long GetWindowOpenTime(unsigned long long StartTime);
	unsigned long long StaticGetWindowOpenTime(unsigned long long StartTime, unsigned long long WindowSeconds);
	unsigned long long GetNextWindowEventTime(unsigned long long CurrentTime, unsigned long long StartTime, unsigned long long WindowSeconds);
	class UTourSettings_TA* FindNextWindow(unsigned long long CurrentTime, unsigned long long WindowSeconds, TArray<class UTourSettings_TA*>& Tournaments);
	void HandleConfigChange();
	void Stopwatch();
	void StartWatch(TArray<class UTourSettings_TA*> Tournaments, unsigned long long CurrentTime);
	void EventWindowChange(class UTourCheckInWindowWatcher_TA* Watcher, class UTourSettings_TA* Tournament);
};

// Class TAGame.TourBracketCache_TA
// 0x0060 (0x0060 - 0x00C0)
class UTourBracketCache_TA : public UObject
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourConfig_TA*                              Config;                                           		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FBracketResult>                      Brackets;                                         		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FBracketRequest>                     Requests;                                         		// 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnBracketRetrieved__Delegate;                   		// 0x0090 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnBracketError__Delegate;                       		// 0x00A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourBracketCache_TA");
		}

		return uClassPointer;
	};

	bool __TourBracketCache_TA__RequestCached_BD6DA2AC4CD8576B3D259CA5FDDE52D4(struct FTourMatch M);
	void __TourBracketCache_TA__Dispose_3BECE77442AC3F9276D503B197A39D03(struct FBracketRequest R);
	void eventDispose();
	int GetBracketIndex(unsigned long long TournamentID);
	void HandleDownload(struct FTourBracket Bracket);
	void ClearOnBracketChanged(struct FScriptDelegate Callback);
	void NotifyOnBracketChanged(unsigned long long TournamentID, struct FScriptDelegate Callback);
	void HandleGetBracketError(unsigned long long TournamentID, class UError* Error);
	void NotifyOnBracketError(unsigned long long TournamentID, struct FScriptDelegate Callback);
	class UAsyncTask* Request(struct FUniqueNetId PlayerID, unsigned long long TournamentID, struct FScriptDelegate Callback);
	class UAsyncTask* RequestCached(struct FUniqueNetId PlayerID, unsigned long long TournamentID, struct FScriptDelegate Callback);
	void OnBracketError(unsigned long long TournamentID, class UError* Error);
	void OnBracketRetrieved(struct FTourBracket& Bracket);
};

// Class TAGame.TourService_TA
// 0x00A8 (0x0060 - 0x0108)
class UTourService_TA : public UObject
{
public:
	struct FScriptDelegate                             __OnTournamentResult__Delegate;                   		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnCheckIn__Delegate;                            		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnGetBracket__Delegate;                         		// 0x0090 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnGetMatch__Delegate;                           		// 0x00A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnGetMatchDetails__Delegate;                    		// 0x00C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnGetRewards__Delegate;                         		// 0x00D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnStartMatchmaking__Delegate;                   		// 0x00F0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourService_TA");
		}

		return uClassPointer;
	};

	class UAsyncTask* StartMatchmaking(struct FUniqueNetId PlayerID, struct FScriptDelegate Callback);
	void OnStartMatchmaking();
	class UAsyncTask* GetRewards(struct FUniqueNetId PlayerID, unsigned long long TournamentID, struct FScriptDelegate Callback);
	void OnGetRewards(unsigned long long TournamentID, TArray<struct FTourReward> Rewards);
	class UAsyncTask* GetMatchDetails(unsigned long long TournamentID, int MatchID, struct FScriptDelegate Callback);
	void OnGetMatchDetails(TArray<struct FTourMatchTeamDetails>& TeamStats);
	class UAsyncTask* GetMatch(struct FUniqueNetId PlayerID, unsigned long long TournamentID, struct FScriptDelegate Callback);
	void OnGetMatch(struct FTourMatch Match);
	class UAsyncTask* GetBracket(struct FUniqueNetId PlayerID, unsigned long long TournamentID, struct FScriptDelegate Callback);
	void OnGetBracket(struct FTourBracket Bracket);
	class UAsyncTask* CheckIn(struct FUniqueNetId PlayerID, struct FUniqueLobbyId PartyID, class UTourSettings_TA* TourSettings, struct FCustomMatchTeamSettings Settings, TArray<struct FUniqueNetId> LocalTeamMemberIDs, TArray<struct FUniqueNetId> AllTeamMemberIDs, unsigned long long TeamID, struct FScriptDelegate Callback);
	void OnCheckIn(struct FUniqueNetId PlayerID, class UTourSettings_TA* TourSettings, struct FTourTeam Team);
	class UAsyncTask* RegisterTournament(struct FUniqueNetId PlayerID, unsigned long long TournamentID, struct FTourPrivateCredentials Credentials, struct FScriptDelegate Callback);
	class UAsyncTask* CreateTournament(struct FUniqueNetId PlayerID, struct FTourCreateSettings Settings, struct FScriptDelegate Callback);
	void OnTournamentResult(class UTourSettings_TA* NewTournament);
};

// Class TAGame.TourRegistration_TA
// 0x0030 (0x0060 - 0x0090)
class UTourRegistration_TA : public UObject
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0060 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UTourSubscriptions_TA*                       Subscriptions;                                    		// 0x0068 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UAsyncTask*                                  RegistrationTask;                                 		// 0x0070 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __OnRegistered__Delegate;                         		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourRegistration_TA");
		}

		return uClassPointer;
	};

	void __TourRegistration_TA__Register_84F916A641C9FD57D782AF9352D46FAA(class UError* _);
	class UErrorType* CheckRegistrationError(class UTourSettings_TA* Settings);
	class UAsyncTask* Register(struct FUniqueNetId PlayerID, class UTourSettings_TA* Settings, struct FTourPrivateCredentials Credentials, struct FScriptDelegate Callback);
	void Init(class UOnlineGameTournaments_TA* InTournaments);
	void OnRegistered(class UTourSettings_TA* TourSettings);
};

// Class TAGame.TourPartyCheckIn_TA
// 0x0028 (0x0060 - 0x0088)
class UTourPartyCheckIn_TA : public UObject
{
public:
	class UTourConfig_TA*                              TourConfig;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
	struct FString                                     MemberCheckInError;                               		// 0x0068 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0078 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineGameParty_X*                          Party;                                            		// 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourPartyCheckIn_TA");
		}

		return uClassPointer;
	};

	void __TourPartyCheckIn_TA__HandleLeaderCheckIn_9509DB5E419D4813FEA47489AF0429EF(class UTourSettings_TA* TourSettings, class UError* Error);
	void HandlePreCheckInMessage(class UOnlineMessageComponent_X* Component, class UPartyMessage_TourPreCheckIn_TA* Message);
	void HandleMemberCheckInError(struct FUniqueNetId PartyMemberID, unsigned long long TournamentID, class UError* Error);
	void HandleMemberCheckInErrorMessage(class UOnlineMessageComponent_X* Component, class UPartyMessage_TourCheckInError_TA* Message);
	void HandleError(class UError* Error);
	void TournamentCheckIn(class UPartyMessage_TourCheckIn_TA* Message, class UTourPartyCheckInTransaction_TA* Transaction);
	void HandleLeaderCheckIn(class UOnlineMessageComponent_X* Component, class UPartyMessage_TourCheckIn_TA* Message);
	void BroadcastTournamentCheckIn();
	void Init(class UOnlineGameTournaments_TA* InTournaments, class UOnlineGameParty_X* InParty);
};

// Class TAGame.TourPartyLeaderLeave_TA
// 0x0010 (0x0060 - 0x0070)
class UTourPartyLeaderLeave_TA : public UObject
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0060 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineGameParty_X*                          Party;                                            		// 0x0068 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourPartyLeaderLeave_TA");
		}

		return uClassPointer;
	};

	void __TourPartyLeaderLeave_TA__HandleLeaveTournamentMessage_244DC15E4D10A2E0AA575E941DC217AA(class UGFxModal_X* Modal);
	class UGFxShell_TA* GetGFxShell();
	void HandleLeaveTournamentConfirm(class UGFxModal_X* Modal);
	void HandleLeaveTournamentMessage(class UOnlineMessageComponent_X* Component, class UPartyMessage_TourLeaveTournament_TA* Message);
	void HandleUnsubscribe(class UTourSubscriptions_TA* Subscriptions, unsigned long long TournamentID);
	void Init(class UOnlineGameTournaments_TA* InTournaments, class UOnlineGameParty_X* InParty);
};

// Class TAGame.TourStatus_TA
// 0x0018 (0x0060 - 0x0078)
class UTourStatus_TA : public UObject
{
public:
	TArray<struct FTourStatus>                         Statuses;                                         		// 0x0060 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourStatus_TA");
		}

		return uClassPointer;
	};

	void __TourStatus_TA__Init_991D69E143B13739EA513C923B5D9D3F(class UOnlineGameTourMatchmaking_TA* _, class UError* Error);
	void __TourStatus_TA__Init_38BA15274E3E3A2DC5F9F58D279AB258(unsigned long long Id);
	void __TourStatus_TA__HandleSubscriptions_4DADA1CD4EBA96A5725608B9A817B259(class UTourSettings_TA* T);
	void __TourStatus_TA__HandleTourActivated_A83EF6DE420119BE0ED179AE2E0DD2C4(class UTourEvent_TA* InTourEvent);
	void __TourStatus_TA__HandleTourActivated_E230F0F24B6196728FBBDD8B06549B1C(class UTourEventMatch_TA* EventMatch, class UError* Error);
	void HandleError(unsigned long long TournamentID, class UError* Error);
	void HandleTourActivated(class UOnlineGameTournaments_TA* Tournament, class UTourEvent_TA* TourEvent);
	void UpdateStatus(unsigned char Status, unsigned long long TournamentID);
	int GetStatusIndex(unsigned long long TournamentID);
	void HandleBracketError(unsigned long long TournamentID, class UError* Error);
	void HandleSubscriptions(class UTourList_TA* TourList);
	unsigned char GetStatus(unsigned long long TournamentID);
	void Init(class UOnlineGameTourMatchmaking_TA* TourMatchmaking);
};

// Class TAGame.TourCheckInError_TA
// 0x00D8 (0x0060 - 0x0138)
class UTourCheckInError_TA : public UObject
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UOnlineGameParty_X*                          Party;                                            		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FUniqueNetId                                PlayerID;                                         		// 0x0070 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     MemberPreCheckInError;                            		// 0x00B8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UTourSettings_TA*                            Settings;                                         		// 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     PartyError;                                       		// 0x00D0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UErrorType*                                  PartyErrorType;                                   		// 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     Error;                                            		// 0x00E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UErrorType*                                  ErrorType;                                        		// 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     CrossPlatformNotEnabled;                          		// 0x0100 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     TournamentRequirementTitle;                       		// 0x0110 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTourCheckInError__Delegate;                		// 0x0120 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourCheckInError_TA");
		}

		return uClassPointer;
	};

	void HandleEnableCrossPlatform(class UGFxShell_TA* Shell);
	void AlertSignupError(class UGFxShell_TA* Shell, class UError* InError, unsigned long long TournamentID, struct FScriptDelegate Callback);
	void HandleMemberPreCheckInErrorMessage(class UOnlineMessageComponent_X* Component, class UPartyMessage_TourPreCheckInError_TA* Message);
	void ClearPartyError();
	void HandlePartyDestroyed(class UOnlineGameParty_X* PartyObject);
	void UpdatePartyError();
	void UpdateError();
	void EndErrorCheck();
	void BeginErrorCheck(struct FUniqueNetId InPlayerId, unsigned long long TournamentID);
	void UpdateErrorData(struct FUniqueNetId InPlayerId, unsigned long long TournamentID);
	void EventTourCheckInError(unsigned long long TournamentID, class UError* CheckInError);
};

// Class TAGame.TourRewards_TA
// 0x0038 (0x0060 - 0x0098)
class UTourRewards_TA : public UObject
{
public:
	TArray<struct FRewardsResult>                      Results;                                          		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FRewardsRequest>                     Requests;                                         		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnGetRewards__Delegate;                         		// 0x0080 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourRewards_TA");
		}

		return uClassPointer;
	};

	void HandleGetRewards(unsigned long long TournamentID, TArray<struct FTourReward> Rewards);
	class UAsyncTask* Request(class UTourService_TA* Service, struct FUniqueNetId PlayerID, unsigned long long TournamentID, struct FScriptDelegate Callback);
	void OnGetRewards(unsigned long long TournamentID, TArray<struct FTourReward> Rewards);
};

// Class TAGame.TourCredentials_TA
// 0x0010 (0x0060 - 0x0070)
class UTourCredentials_TA : public UObject
{
public:
	TArray<struct FCredentialItem>                     CredentialsMap;                                   		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourCredentials_TA");
		}

		return uClassPointer;
	};

	bool Get(unsigned long long TourID, struct FTourPrivateCredentials& Credentials);
	void Set(unsigned long long TourID, struct FTourPrivateCredentials Credentials);
};

// Class TAGame.TourMatchServerBrowser_TA
// 0x0020 (0x0060 - 0x0080)
class UTourMatchServerBrowser_TA : public UObject
{
public:
	class UAsyncTask*                                  GetMatchTask;                                     		// 0x0060 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __OnGetMatchServer__Delegate;                     		// 0x0068 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourMatchServerBrowser_TA");
		}

		return uClassPointer;
	};

	void __TourMatchServerBrowser_TA__GetMatchServer_377B867043034763F26A53A1B636DEA1(class UError* _);
	void ClearTask();
	class UAsyncTask* GetMatchServer(struct FUniqueNetId PlayerID, unsigned long long TournamentID, int MatchID, struct FScriptDelegate Callback);
	void OnGetMatchServer(struct FServerReservationData Reservation);
};

// Class TAGame.RPC_ProductsClearExpired_TA
// 0x0010 (0x00E8 - 0x00F8)
class URPC_ProductsClearExpired_TA : public URPC_X
{
public:
	TArray<unsigned long long>                         InstanceIDs;                                      		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_ProductsClearExpired_TA");
		}

		return uClassPointer;
	};

	class URPC_ProductsClearExpired_TA* SetInstanceIDs(TArray<unsigned long long> InIDs);
};

// Class TAGame.ProductExpirationNotification_TA
// 0x0030 (0x0110 - 0x0140)
class UProductExpirationNotification_TA : public UNotification_TA
{
public:
	struct FProductHashID                              HashID;                                           		// 0x0110 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     ExpiredTitle;                                     		// 0x0118 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     ExpiredBody;                                      		// 0x0128 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UOnlineProduct_TA*                           OnlineProduct;                                    		// 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductExpirationNotification_TA");
		}

		return uClassPointer;
	};

	class UProductExpirationNotification_TA* SetOnlineProduct(class UOnlineProduct_TA* InProduct);
};

// Class TAGame.__OnlineProductExpirationHelper_TA__HandleNotificationSaveAdded_7D98A53E4F2E9FE44050EDB927179895
// 0x0008 (0x0060 - 0x0068)
class U__OnlineProductExpirationHelper_TA__HandleNotificationSaveAdded_7D98A53E4F2E9FE44050EDB927179895 : public UObject
{
public:
	class UOnlineProduct_TA*                           OnlineProduct;                                    		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineProductExpirationHelper_TA__HandleNotificationSaveAdded_7D98A53E4F2E9FE44050EDB927179895");
		}

		return uClassPointer;
	};

	bool __OnlineProductExpirationHelper_TA__HandleNotificationSaveAdded_7D98A53E4F2E9FE44050EDB927179895(class UNotification_TA* N);
};

// Class TAGame.__OnlineStorageSyncManager_TA__SyncCloudData_88E467D04E47101CDEA9B2A50FFAC6FA
// 0x0008 (0x0060 - 0x0068)
class U__OnlineStorageSyncManager_TA__SyncCloudData_88E467D04E47101CDEA9B2A50FFAC6FA : public UObject
{
public:
	class URPC_X*                                      ProductsPlayerGet;                                		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineStorageSyncManager_TA__SyncCloudData_88E467D04E47101CDEA9B2A50FFAC6FA");
		}

		return uClassPointer;
	};

	void __OnlineStorageSyncManager_TA__SyncCloudData_88E467D04E47101CDEA9B2A50FFAC6FA();
};

// Class TAGame.MapGroups_TA
// 0x0000 (0x0060 - 0x0060)
class UMapGroups_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MapGroups_TA");
		}

		return uClassPointer;
	};

	TArray<class UMapData_TA*> __MapGroups_TA__BuildMaps_709B1F6344F34D343984ACBF0D07A91D(struct FMapGroup Group);
	TArray<class UMapData_TA*> BuildMaps(TArray<struct FMapGroup>& Groups);
	TArray<struct FMapGroup> BuildGroups(TArray<class UMapData_TA*>& AvailableMaps, TArray<struct FMapGroup>& SourceGroups);
};

// Class TAGame.GFxData_TourMatchmaking_TA
// 0x0010 (0x0098 - 0x00A8)
class UGFxData_TourMatchmaking_TA : public UGFxDataSingleton_X
{
public:
	class UOnlineGameTourMatchmaking_TA*               TourMatchmaking;                                  		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UOnlineGameVersion_X*                        GameVersion;                                      		// 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourMatchmaking_TA");
		}

		return uClassPointer;
	};

	void HandleMatchmakingError(struct FString NewStatus);
	void eventOnShellSet();
};

// Class TAGame.__PlaylistSkillDataSave_TA__Reconcile_8B0DD31D45AEE7BAD0E5F09AF65A89CF
// 0x0008 (0x0060 - 0x0068)
class U__PlaylistSkillDataSave_TA__Reconcile_8B0DD31D45AEE7BAD0E5F09AF65A89CF : public UObject
{
public:
	class UPlaylistSkillDataSave_TA*                   Other;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__PlaylistSkillDataSave_TA__Reconcile_8B0DD31D45AEE7BAD0E5F09AF65A89CF");
		}

		return uClassPointer;
	};

	bool __PlaylistSkillDataSave_TA__Reconcile_8B0DD31D45AEE7BAD0E5F09AF65A89CF(struct FPlaylistSkillData S);
};

// Class TAGame.__ProductsHashSave_TA__UpdateInstanceIDs_3938B9E54A14A3554C8DC7B5E42F4BCB
// 0x0010 (0x0060 - 0x0070)
class U__ProductsHashSave_TA__UpdateInstanceIDs_3938B9E54A14A3554C8DC7B5E42F4BCB : public UObject
{
public:
	TArray<unsigned long long>                         Instances;                                        		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ProductsHashSave_TA__UpdateInstanceIDs_3938B9E54A14A3554C8DC7B5E42F4BCB");
		}

		return uClassPointer;
	};

	bool __ProductsHashSave_TA__UpdateInstanceIDs_3938B9E54A14A3554C8DC7B5E42F4BCB(unsigned long long Id);
};

// Class TAGame.ProductAttribute_RocketPassPremium_TA
// 0x0000 (0x0080 - 0x0080)
class UProductAttribute_RocketPassPremium_TA : public UProductAttribute_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_RocketPassPremium_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_RocketPassPurchaseTiers_TA
// 0x0080 (0x00E8 - 0x0168)
class URPC_RocketPassPurchaseTiers_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long long>                         InstanceIDs;                                      		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                PurchasableID;                                    		// 0x0140 (0x0004) [0x0000000000000000]               
	int                                                TierLevel;                                        		// 0x0144 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<struct FRocketPassUnlock>                   Unlocks;                                          		// 0x0148 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FCurrency>                           WalletCurrencies;                                 		// 0x0158 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_RocketPassPurchaseTiers_TA");
		}

		return uClassPointer;
	};

	class URPC_RocketPassPurchaseTiers_TA* SetPurchasable(int InPurchasableID);
	class URPC_RocketPassPurchaseTiers_TA* SetKeys(TArray<unsigned long long>& KeyInstanceIDs);
	class URPC_RocketPassPurchaseTiers_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_RocketPassPurchasePremium_TA
// 0x0088 (0x00E8 - 0x0170)
class URPC_RocketPassPurchasePremium_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long long>                         InstanceIDs;                                      		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                PurchasableID;                                    		// 0x0140 (0x0004) [0x0000000000000000]               
	unsigned long                                      bOwnsPremium : 1;                                 		// 0x0144 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	int                                                TierLevel;                                        		// 0x0148 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<struct FRocketPassUnlock>                   Unlocks;                                          		// 0x0150 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FCurrency>                           WalletCurrencies;                                 		// 0x0160 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_RocketPassPurchasePremium_TA");
		}

		return uClassPointer;
	};

	class URPC_RocketPassPurchasePremium_TA* SetPurchasable(int InPurchasableID);
	class URPC_RocketPassPurchasePremium_TA* SetKeys(TArray<unsigned long long>& KeyInstanceIDs);
	class URPC_RocketPassPurchasePremium_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_RocketPassGetPlayerPrestigeRewards_TA
// 0x0060 (0x00E8 - 0x0148)
class URPC_RocketPassGetPlayerPrestigeRewards_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                RocketPassID;                                     		// 0x0130 (0x0004) [0x0000000000000000]               
	TArray<struct FRocketPassRewardData>               PrestigeRewards;                                  		// 0x0138 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_RocketPassGetPlayerPrestigeRewards_TA");
		}

		return uClassPointer;
	};

	class URPC_RocketPassGetPlayerPrestigeRewards_TA* SetRocketPassID(int InRocketPassID);
	class URPC_RocketPassGetPlayerPrestigeRewards_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RocketPassConfig_TA
// 0x0048 (0x0078 - 0x00C0)
class URocketPassConfig_TA : public UOnlineConfig_X
{
public:
	int                                                RocketPassID;                                     		// 0x0078 (0x0004) [0x0000000000000000]               
	unsigned long long                                 StartTime;                                        		// 0x0080 (0x0008) [0x0000000000000000]               
	unsigned long long                                 EndTime;                                          		// 0x0088 (0x0008) [0x0000000000000000]               
	int                                                StartRangeSeconds;                                		// 0x0090 (0x0004) [0x0000000000000000]               
	unsigned long long                                 FinalStartTime;                                   		// 0x0098 (0x0008) [0x0000000000000000]               
	unsigned long                                      bIsActive : 1;                                    		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bHideMainMenuButton : 1;                          		// 0x00A0 (0x0004) [0x0000000000000000] [0x00000002] 
	struct FScriptDelegate                             __bIsActive__ChangeNotify;                        		// 0x00A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RocketPassConfig_TA");
		}

		return uClassPointer;
	};

	void __bIsActive__ChangeNotifyFunc();
	void UpdateActiveState();
	bool IsActive();
	unsigned long long GetFinalStartTime();
	bool IsValid();
	void Apply();
};

// Class TAGame.RPC_RocketPassGetRewardContent_TA
// 0x0028 (0x00E8 - 0x0110)
class URPC_RocketPassGetRewardContent_TA : public URPC_X
{
public:
	int                                                RocketPassID;                                     		// 0x00E8 (0x0004) [0x0000000000000000]               
	int                                                TierCap;                                          		// 0x00EC (0x0004) [0x0000000000000000]               
	TArray<struct FRocketPassRewardData>               FreeRewards;                                      		// 0x00F0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FRocketPassRewardData>               PremiumRewards;                                   		// 0x0100 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_RocketPassGetRewardContent_TA");
		}

		return uClassPointer;
	};

	class URPC_RocketPassGetRewardContent_TA* SetRocketPassID(int InRocketPassID);
};

// Class TAGame.RocketPassBundleContainer_TA
// 0x0048 (0x0070 - 0x00B8)
class URocketPassBundleContainer_TA : public UComponent
{
public:
	struct FName                                       RocketPassMenuName;                               		// 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	TArray<struct FRocketPassBundleInfo>               Premium;                                          		// 0x0078 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FRocketPassBundleInfo>               Tier;                                             		// 0x0088 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     RocketPassPackageName;                            		// 0x0098 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FString                                     TierBundleFileNameBase;                           		// 0x00A8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RocketPassBundleContainer_TA");
		}

		return uClassPointer;
	};

	class UGFxData_MenuStack_TA* GetMenuStack();
	void HandleImageDownloaded(struct FOnlineImageDownload DownloadResult);
	void UpdateBundleImages(class UOnlineImageDownloaderWeb* ImageDownloader, struct FString DefaultTextureNameBase, TArray<struct FRocketPassBundleInfo>& Bundles, TArray<struct FString>& RequiredURLs);
	void DownloadBundleImages();
	void HandleTopMenuChanged(struct FName PrevMenu, struct FName NewMenu);
	void SetBundleInfo(struct FRocketPassStore RPInfo, class URocketPass_TA* InRocketPass);
};

// Class TAGame.RPC_RocketPassGetPlayerInfo_TA
// 0x0078 (0x00E8 - 0x0160)
class URPC_RocketPassGetPlayerInfo_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                RocketPassID;                                     		// 0x0130 (0x0004) [0x0000000000000000]               
	struct FRocketPassInfo                             RocketPassInfo;                                   		// 0x0134 (0x000C) [0x0000000000000000]               
	struct FRocketPassStore                            RocketPassStore;                                  		// 0x0140 (0x0020) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_RocketPassGetPlayerInfo_TA");
		}

		return uClassPointer;
	};

	class URPC_RocketPassGetPlayerInfo_TA* SetRocketPassID(int InRocketPassID);
	class URPC_RocketPassGetPlayerInfo_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.__SaveDataVersions_TA__UpdateFavoriteHashIDs_B41A198148B1DFA23FB0D5BF33F21F9C
// 0x0004 (0x0060 - 0x0064)
class U__SaveDataVersions_TA__UpdateFavoriteHashIDs_B41A198148B1DFA23FB0D5BF33F21F9C : public UObject
{
public:
	int                                                Id;                                               		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__SaveDataVersions_TA__UpdateFavoriteHashIDs_B41A198148B1DFA23FB0D5BF33F21F9C");
		}

		return uClassPointer;
	};

	bool __SaveDataVersions_TA__UpdateFavoriteHashIDs_B41A198148B1DFA23FB0D5BF33F21F9C(class UOnlineProduct_TA* P);
};

// Class TAGame.__TourCheckIn_TA__CheckIn_109D66DC401C813EB3EAEDAD52714591
// 0x0078 (0x0060 - 0x00D8)
class U__TourCheckIn_TA__CheckIn_109D66DC401C813EB3EAEDAD52714591 : public UObject
{
public:
	TArray<struct FUniqueNetId>                        LocalTeamMemberIDs;                               		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UOnlineGameParty_TA*                         Party;                                            		// 0x0070 (0x0008) [0x0000000000000000]               
	class UTourSettings_TA*                            Settings;                                         		// 0x0078 (0x0008) [0x0000000000000000]               
	struct FUniqueNetId                                PlayerID;                                         		// 0x0080 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        AllTeamMemberIDs;                                 		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourCheckIn_TA__CheckIn_109D66DC401C813EB3EAEDAD52714591");
		}

		return uClassPointer;
	};

	void __TourCheckIn_TA__CheckIn_BEE6A5474AAB81849BA4939A446E5401(class UError* InError);
	bool __TourCheckIn_TA__CheckIn_109D66DC401C813EB3EAEDAD52714591(struct FUniqueNetId P);
};

// Class TAGame.TourEventMatchComplete_TA
// 0x0020 (0x0060 - 0x0080)
class UTourEventMatchComplete_TA : public UObject
{
public:
	class AGameEvent_Soccar_TA*                        GameEvent;                                        		// 0x0060 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventMatchComplete__Delegate;                   		// 0x0068 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourEventMatchComplete_TA");
		}

		return uClassPointer;
	};

	void OnMatchComplete();
	void HandleGRISpawned(class AGRI_X* GRI);
	void HandleGameStateChanged(class AGameEvent_TA* G);
	void HandleGameEventRemoved(class UObject* Obj);
	void HandleGameEventAdded(class AGameEvent_Soccar_TA* InGameEvent);
	void HandleGameDataSelected(int PlaylistId, int MutatorIndex);
	void Deactivate();
	void eventConstruct();
	void EventMatchComplete();
};

// Class TAGame.PsyNetService_TourReceivedBye_TA
// 0x0008 (0x0090 - 0x0098)
class UPsyNetService_TourReceivedBye_TA : public UPsyNetClientService_X
{
public:
	unsigned long long                                 TournamentID;                                     		// 0x0090 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_TourReceivedBye_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PsyNetService_TourMatchFound_TA
// 0x0030 (0x0090 - 0x00C0)
class UPsyNetService_TourMatchFound_TA : public UPsyNetClientService_X
{
public:
	struct FTourMatch                                  Match;                                            		// 0x0090 (0x0030) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_TourMatchFound_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PsyNetService_TourConcluded_TA
// 0x0000 (0x0090 - 0x0090)
class UPsyNetService_TourConcluded_TA : public UPsyNetClientService_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_TourConcluded_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.TourList_TA
// 0x0068 (0x0070 - 0x00D8)
class UTourList_TA : public UComponent
{
public:
	TArray<class UTourSettings_TA*>                    Tournaments;                                      		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FTourResult>                         Results;                                          		// 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTournamentsChanged__Delegate;              		// 0x0090 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTournamentAdded__Delegate;                 		// 0x00A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventResultsChanged__Delegate;                  		// 0x00C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourList_TA");
		}

		return uClassPointer;
	};

	void __TourList_TA__SetTournaments_0BAA106745E0EDC67448FC95239D5AFE(class UTourSettings_TA* T);
	struct FTourResult GetTournamentResult(unsigned long long TournamentID);
	void AddTournamentResult(struct FTourResult InTourResult);
	void Remove(unsigned long long TournamentID);
	void AddUnique(class UTourSettings_TA* Tournament);
	void SetResults(TArray<struct FTourResult>& InResults);
	void SetTournaments(TArray<class UTourSettings_TA*>& NewTournaments);
	void EventResultsChanged(class UTourList_TA* Publisher);
	void EventTournamentAdded(class UTourSettings_TA* Tournament);
	void EventTournamentsChanged(class UTourList_TA* Publisher);
};

// Class TAGame.RPC_TourUnsubscribe_TA
// 0x0068 (0x00E8 - 0x0150)
class URPC_TourUnsubscribe_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 TournamentID;                                     		// 0x0130 (0x0008) [0x0000000000000000]               
	unsigned long                                      bUnsubscribeAnyRegisteredTournament : 1;          		// 0x0138 (0x0004) [0x0000000000000000] [0x00000001] 
	TArray<struct FUniqueNetId>                        TeamMembers;                                      		// 0x0140 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourUnsubscribe_TA");
		}

		return uClassPointer;
	};

	class URPC_TourUnsubscribe_TA* SetTeamMembers(TArray<struct FUniqueNetId> InTeamMembers);
	class URPC_TourUnsubscribe_TA* SetUnsubscribeAnyRegisteredTournament(unsigned long bValue);
	class URPC_TourUnsubscribe_TA* SetTournamentID(unsigned long long InTournamentID);
	class URPC_TourUnsubscribe_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.PsyNetService_TourKicked_TA
// 0x0010 (0x0090 - 0x00A0)
class UPsyNetService_TourKicked_TA : public UPsyNetClientService_X
{
public:
	unsigned long long                                 TournamentID;                                     		// 0x0090 (0x0008) [0x0000000000000000]               
	class UErrorType*                                  Reason;                                           		// 0x0098 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_TourKicked_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__TourSubscriptions_TA__GetTournament_89AEA19F42E829EFE88FCABC8BDF15B8
// 0x0008 (0x0060 - 0x0068)
class U__TourSubscriptions_TA__GetTournament_89AEA19F42E829EFE88FCABC8BDF15B8 : public UObject
{
public:
	unsigned long long                                 TourID;                                           		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourSubscriptions_TA__GetTournament_89AEA19F42E829EFE88FCABC8BDF15B8");
		}

		return uClassPointer;
	};

	bool __TourSubscriptions_TA__GetTournament_89AEA19F42E829EFE88FCABC8BDF15B8(class UTourSettings_TA* T);
};

// Class TAGame.RPC_TourGetSubscriptions_TA
// 0x00E8 (0x00E8 - 0x01D0)
class URPC_TourGetSubscriptions_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UTourSettings_TA*>                    Tournaments;                                      		// 0x0130 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<unsigned long long>                         CreatorOf;                                        		// 0x0140 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<unsigned long long>                         AdminOf;                                          		// 0x0150 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<unsigned long long>                         Registered;                                       		// 0x0160 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long long                                 ActiveTournamentID;                               		// 0x0170 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FTourTeam                                   ActiveTeam;                                       		// 0x0178 (0x0048) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FTourResult>                         Results;                                          		// 0x01C0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourGetSubscriptions_TA");
		}

		return uClassPointer;
	};

	class URPC_TourGetSubscriptions_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.GFxTourList_TA
// 0x0018 (0x0070 - 0x0088)
class UGFxTourList_TA : public UComponent
{
public:
	class UGFxShell_X*                                 Shell;                                            		// 0x0070 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UTourList_TA*                                TourList;                                         		// 0x0078 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UClass*                                      GFxDataClass;                                     		// 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxTourList_TA");
		}

		return uClassPointer;
	};

	void HandleTournamentsChanged(class UTourList_TA* InTourList);
	void Init(class UGFxShell_X* InShell, class UTourList_TA* InTourList, class UClass* InGFxDataClass);
};

// Class TAGame.GFxData_TourSubscription_TA
// 0x001C (0x0094 - 0x00B0)
class UGFxData_TourSubscription_TA : public UGFxDataRow_X
{
public:
	class UTourSettings_TA*                            TourSettings;                                     		// 0x0098 (0x0008) [0x0000000000000000]               
	class UTourList_TA*                                TourList;                                         		// 0x00A0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	int                                                Difficulty;                                       		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Placement;                                        		// 0x00AC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourSubscription_TA");
		}

		return uClassPointer;
	};

	TArray<int> GetSeriesRoundLengths();
	void UpdateTourResult(class UTourList_TA* InTourList);
	void SetTourList(class UTourList_TA* InTourList);
	void SetProxy(class UObject* InProxyObject);
	void eventOnRemoved();
};

// Class TAGame.__GFxTourList_TA__HandleTournamentsChanged_7835983A43D66B558881038A223A8203
// 0x0008 (0x0060 - 0x0068)
class U__GFxTourList_TA__HandleTournamentsChanged_7835983A43D66B558881038A223A8203 : public UObject
{
public:
	class UTourList_TA*                                InTourList;                                       		// 0x0060 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxTourList_TA__HandleTournamentsChanged_7835983A43D66B558881038A223A8203");
		}

		return uClassPointer;
	};

	void __GFxTourList_TA__HandleTournamentsChanged_7835983A43D66B558881038A223A8203(class UTourSettings_TA* T);
};

// Class TAGame.__TourList_TA__GetTournamentResult_F456D4704F3B7521FC658EB21B67B425
// 0x0008 (0x0060 - 0x0068)
class U__TourList_TA__GetTournamentResult_F456D4704F3B7521FC658EB21B67B425 : public UObject
{
public:
	unsigned long long                                 TournamentID;                                     		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourList_TA__GetTournamentResult_F456D4704F3B7521FC658EB21B67B425");
		}

		return uClassPointer;
	};

	bool __TourList_TA__GetTournamentResult_F456D4704F3B7521FC658EB21B67B425(struct FTourResult R);
};

// Class TAGame.__TourList_TA__AddUnique_99BC28F0472076D978D8F5924652D4BE
// 0x0008 (0x0060 - 0x0068)
class U__TourList_TA__AddUnique_99BC28F0472076D978D8F5924652D4BE : public UObject
{
public:
	class UTourSettings_TA*                            Tournament;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourList_TA__AddUnique_99BC28F0472076D978D8F5924652D4BE");
		}

		return uClassPointer;
	};

	bool __TourList_TA__AddUnique_99BC28F0472076D978D8F5924652D4BE(class UTourSettings_TA* T);
};

// Class TAGame.SpecialEventConfig_TA
// 0x01A0 (0x0078 - 0x0218)
class USpecialEventConfig_TA : public UOnlineConfig_X
{
public:
	TArray<struct FSpecialEventStoreConfigs>           StoreConfigs;                                     		// 0x0078 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FDebugMicroEventPlaylistID>          DebugMicroEventPlaylistIDs;                       		// 0x0088 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                CurrencyID;                                       		// 0x0098 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	int                                                ShopID;                                           		// 0x009C (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	struct FString                                     Title;                                            		// 0x00A0 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Subtitle;                                         		// 0x00B0 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     RedemptionTitle;                                  		// 0x00C0 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Description;                                      		// 0x00D0 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     RedemptionDescription;                            		// 0x00E0 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     CurrencyName;                                     		// 0x00F0 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     CurrencyImageURL;                                 		// 0x0100 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     CurrencyImageLargeURL;                            		// 0x0110 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     BackgroundImageURL;                               		// 0x0120 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     LogoImageURL;                                     		// 0x0130 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	int                                                CurrencyColor;                                    		// 0x0140 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	int                                                BackgroundColor;                                  		// 0x0144 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	unsigned long long                                 StartTime;                                        		// 0x0148 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	struct FString                                     StartTimeString;                                  		// 0x0150 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long long                                 EndTime;                                          		// 0x0160 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	struct FString                                     EndTimeString;                                    		// 0x0168 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long long                                 RedemptionEndTime;                                		// 0x0178 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	struct FString                                     RedemptionEndTimeString;                          		// 0x0180 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UTexture*                                    BackgroundImage;                                  		// 0x0190 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	class UTexture*                                    CurrencyImage;                                    		// 0x0198 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	class UTexture*                                    CurrencyImageLarge;                               		// 0x01A0 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	class UTexture*                                    LogoImage;                                        		// 0x01A8 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	unsigned long                                      bApplied : 1;                                     		// 0x01B0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	struct FScriptDelegate                             __CurrencyID__ChangeNotify;                       		// 0x01B8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __CurrencyImage__ChangeNotify;                    		// 0x01D0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __CurrencyImageLarge__ChangeNotify;               		// 0x01E8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bApplied__ChangeNotify;                         		// 0x0200 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialEventConfig_TA");
		}

		return uClassPointer;
	};

	void __SpecialEventConfig_TA__Apply_060F4E344934533B5ADA83AA7B035B81(class UTexture2DDynamic* Texture);
	void __SpecialEventConfig_TA__Apply_A0F51A514D8A5D247362DBBA85E1F910(class UTexture2DDynamic* Texture);
	void __SpecialEventConfig_TA__Apply_A98D06C8425F56B2BD5D9B9EBD0FA03E(class UTexture2DDynamic* Texture);
	void __SpecialEventConfig_TA__Apply_EDF1347B4500FB80645167AA960BD7E2(class UTexture2DDynamic* Texture);
	void __bApplied__ChangeNotifyFunc();
	void __CurrencyImageLarge__ChangeNotifyFunc();
	void __CurrencyImage__ChangeNotifyFunc();
	void __CurrencyID__ChangeNotifyFunc();
	bool IsDebugMicroEventPlaylist(int PlaylistId);
	int GetSecondsRemaining();
	unsigned char GetState();
	void SyncImageForIndex(class UWebImageCache_X* WebImageCache, int I);
	void Apply();
};

// Class TAGame.PsyNetService_CurrencyAdded_TA
// 0x0008 (0x0090 - 0x0098)
class UPsyNetService_CurrencyAdded_TA : public UPsyNetClientService_X
{
public:
	int                                                CurrencyID;                                       		// 0x0090 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                Amount;                                           		// 0x0094 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_CurrencyAdded_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__Wallet_TA__GetCurrency_2E2754B943F70383BA8E48AC49038A62
// 0x0004 (0x0060 - 0x0064)
class U__Wallet_TA__GetCurrency_2E2754B943F70383BA8E48AC49038A62 : public UObject
{
public:
	int                                                InCurrencyID;                                     		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__Wallet_TA__GetCurrency_2E2754B943F70383BA8E48AC49038A62");
		}

		return uClassPointer;
	};

	bool __Wallet_TA__GetCurrency_2E2754B943F70383BA8E48AC49038A62(struct FCurrency C);
};

// Class TAGame.RPC_GetWallet_TA
// 0x0058 (0x00E8 - 0x0140)
class URPC_GetWallet_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FCurrency>                           Currencies;                                       		// 0x0130 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_GetWallet_TA");
		}

		return uClassPointer;
	};

	class URPC_GetWallet_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.TournamentMetrics_TA
// 0x0000 (0x0080 - 0x0080)
class UTournamentMetrics_TA : public UMetricsGroup_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TournamentMetrics_TA");
		}

		return uClassPointer;
	};

	void CheckIn(unsigned long long TournamentID, struct FUniqueNetId PlayerID, TArray<struct FUniqueNetId> PartyMembers, unsigned long bSuccessfullyCheckedIn);
	void RecordCheckIn(unsigned long long TournamentID, struct FUniqueNetId PlayerID, TArray<struct FUniqueNetId> PartyMembers, unsigned long bSuccessfullyCheckedIn);
};

// Class TAGame.Notification_AntiAddiction_TA
// 0x0000 (0x0110 - 0x0110)
class UNotification_AntiAddiction_TA : public UNotification_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Notification_AntiAddiction_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PsyNetService_ClubsUpdate_TA
// 0x0008 (0x0090 - 0x0098)
class UPsyNetService_ClubsUpdate_TA : public UPsyNetClientService_X
{
public:
	class UClubDetails_X*                              ClubDetails;                                      		// 0x0090 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_ClubsUpdate_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PsyNetService_ClubsOwnerChanged_TA
// 0x0000 (0x0090 - 0x0090)
class UPsyNetService_ClubsOwnerChanged_TA : public UPsyNetClientService_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_ClubsOwnerChanged_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PsyNetService_ClubsMemberRemoved_TA
// 0x0000 (0x0090 - 0x0090)
class UPsyNetService_ClubsMemberRemoved_TA : public UPsyNetClientService_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_ClubsMemberRemoved_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PsyNetService_ClubsMemberAdded_TA
// 0x0000 (0x0090 - 0x0090)
class UPsyNetService_ClubsMemberAdded_TA : public UPsyNetClientService_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_ClubsMemberAdded_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PersonaClubData
// 0x0020 (0x0060 - 0x0080)
class UPersonaClubData : public UObject
{
public:
	class UPersona_TA*                                 Persona;                                          		// 0x0060 (0x0008) [0x0000000000000000]               
	struct FString                                     ClubTagWithName;                                  		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 ClubID;                                           		// 0x0078 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PersonaClubData");
		}

		return uClassPointer;
	};

};

// Class TAGame.__ClubPersonas_TA__RefreshPersona_34F603CA429F5DE61EFC31AFA98CCB4B
// 0x0018 (0x0060 - 0x0078)
class U__ClubPersonas_TA__RefreshPersona_34F603CA429F5DE61EFC31AFA98CCB4B : public UObject
{
public:
	class UPersona_TA*                                 Persona;                                          		// 0x0060 (0x0008) [0x0000000000000000]               
	class UPersonaClubData*                            PClub;                                            		// 0x0068 (0x0008) [0x0000000000000000]               
	class UClubDetails_X*                              Club;                                             		// 0x0070 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ClubPersonas_TA__RefreshPersona_34F603CA429F5DE61EFC31AFA98CCB4B");
		}

		return uClassPointer;
	};

	void __ClubPersonas_TA__RefreshPersona_606413EE44906FE1AAC5CBBAF4459B79(struct FString O, struct FString S);
	bool __ClubPersonas_TA__RefreshPersona_34F603CA429F5DE61EFC31AFA98CCB4B(class UPersonaClubData* P);
};

// Class TAGame.__ClubPersonas_TA__QueueRefresh_71A7514F4A2CA27C14F1009E9DBDCB2D
// 0x0008 (0x0060 - 0x0068)
class U__ClubPersonas_TA__QueueRefresh_71A7514F4A2CA27C14F1009E9DBDCB2D : public UObject
{
public:
	class UPersona_TA*                                 Persona;                                          		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ClubPersonas_TA__QueueRefresh_71A7514F4A2CA27C14F1009E9DBDCB2D");
		}

		return uClassPointer;
	};

	void __ClubPersonas_TA__QueueRefresh_71A7514F4A2CA27C14F1009E9DBDCB2D();
};

// Class TAGame.__CrumbTrails_TA__HandleTrailComplete_595EF14A41CD2C81A8BD0F8EBD32B5CA
// 0x0004 (0x0060 - 0x0064)
class U__CrumbTrails_TA__HandleTrailComplete_595EF14A41CD2C81A8BD0F8EBD32B5CA : public UObject
{
public:
	int                                                Index;                                            		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CrumbTrails_TA__HandleTrailComplete_595EF14A41CD2C81A8BD0F8EBD32B5CA");
		}

		return uClassPointer;
	};

	bool __CrumbTrails_TA__HandleTrailComplete_595EF14A41CD2C81A8BD0F8EBD32B5CA(struct FName T);
};

// Class TAGame.CrumbTrailMetrics_TA
// 0x0000 (0x0080 - 0x0080)
class UCrumbTrailMetrics_TA : public UMetricsGroup_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CrumbTrailMetrics_TA");
		}

		return uClassPointer;
	};

	void Completed(struct FName CompletedTrail, unsigned long bWasActive, unsigned long bRepeatable);
	void Activated(struct FName ActivatedTrail);
	void InitFromRedefinition(TArray<struct FName> ActiveTrails);
	void InitFromLoadedSave(TArray<struct FName> ActiveTrails);
};

// Class TAGame.__CrumbTrails_TA__GetActiveCrumbs_535245CE4E4EFE00DAA5E5B244C17EA6
// 0x0010 (0x0060 - 0x0070)
class U__CrumbTrails_TA__GetActiveCrumbs_535245CE4E4EFE00DAA5E5B244C17EA6 : public UObject
{
public:
	TArray<struct FName>                               Crumbs;                                           		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CrumbTrails_TA__GetActiveCrumbs_535245CE4E4EFE00DAA5E5B244C17EA6");
		}

		return uClassPointer;
	};

	void __CrumbTrails_TA__GetActiveCrumbs_535245CE4E4EFE00DAA5E5B244C17EA6(struct FName C);
};

// Class TAGame.__CrumbTrails_TA__SetupCompletionCondition_143423F94F3848B473C2BE83952AAE43
// 0x0004 (0x0060 - 0x0064)
class U__CrumbTrails_TA__SetupCompletionCondition_143423F94F3848B473C2BE83952AAE43 : public UObject
{
public:
	int                                                Index;                                            		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CrumbTrails_TA__SetupCompletionCondition_143423F94F3848B473C2BE83952AAE43");
		}

		return uClassPointer;
	};

	void __CrumbTrails_TA__SetupCompletionCondition_143423F94F3848B473C2BE83952AAE43(class UTriggerCondition_TA* C);
};

// Class TAGame.__CrumbTrails_TA__SetupActivationCondition_374AD00347307EB450460D8624A83EB6
// 0x0004 (0x0060 - 0x0064)
class U__CrumbTrails_TA__SetupActivationCondition_374AD00347307EB450460D8624A83EB6 : public UObject
{
public:
	int                                                Index;                                            		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CrumbTrails_TA__SetupActivationCondition_374AD00347307EB450460D8624A83EB6");
		}

		return uClassPointer;
	};

	void __CrumbTrails_TA__SetupActivationCondition_17F9C35047143D2AC3D53E967DBDB503(class UTriggerCondition_TA* _);
	void __CrumbTrails_TA__SetupActivationCondition_374AD00347307EB450460D8624A83EB6(class UTriggerClump_TA* C);
};

// Class TAGame.StatusTrigger_Named_TA
// 0x0008 (0x0080 - 0x0088)
class UStatusTrigger_Named_TA : public UStatusTrigger_X
{
public:
	struct FName                                       ConditionalValue;                                 		// 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatusTrigger_Named_TA");
		}

		return uClassPointer;
	};

	void DebugPrint();
	void HandleChange(struct FName InValue);
};

// Class TAGame.StatusTrigger_MenuButton_TA
// 0x0000 (0x0088 - 0x0088)
class UStatusTrigger_MenuButton_TA : public UStatusTrigger_Named_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatusTrigger_MenuButton_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.CrumbTrailRedefinition_TA
// 0x0010 (0x0060 - 0x0070)
class UCrumbTrailRedefinition_TA : public UObject
{
public:
	TArray<struct FCrumbRedefinedInfo>                 CrumbRedefInfo;                                   		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CrumbTrailRedefinition_TA");
		}

		return uClassPointer;
	};

	void DebugPrint();
	void RedefineCrumbTrails(TArray<struct FCrumbTrailData>& CrumbTrails);
};

// Class TAGame.__GameTags_TA__ConvertToGameTags_924C010747EB99F7C31E90BC09FC01A8
// 0x0008 (0x0060 - 0x0068)
class U__GameTags_TA__ConvertToGameTags_924C010747EB99F7C31E90BC09FC01A8 : public UObject
{
public:
	class UObject*                                     InOuter;                                          		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameTags_TA__ConvertToGameTags_924C010747EB99F7C31E90BC09FC01A8");
		}

		return uClassPointer;
	};

	class UGameTags_TA* __GameTags_TA__ConvertToGameTags_924C010747EB99F7C31E90BC09FC01A8(class UGameTags_TA* G);
};

// Class TAGame.RPC_MicroTransactions_GetContainerDropTable_TA
// 0x0010 (0x00E8 - 0x00F8)
class URPC_MicroTransactions_GetContainerDropTable_TA : public URPC_X
{
public:
	TArray<struct FRPCContainerDropTable>              ContainerDrops;                                   		// 0x00E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_MicroTransactions_GetContainerDropTable_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__GFxData_ContainerDrops_TA__GetMatchingProductSeries_A4061EA041BB3AB511ACBBB657261E3C
// 0x0018 (0x0060 - 0x0078)
class U__GFxData_ContainerDrops_TA__GetMatchingProductSeries_A4061EA041BB3AB511ACBBB657261E3C : public UObject
{
public:
	int                                                SeriesID;                                         		// 0x0060 (0x0004) [0x0000000000000000]               
	TArray<class UOnlineProduct_TA*>                   SeriesProducts;                                   		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_ContainerDrops_TA__GetMatchingProductSeries_A4061EA041BB3AB511ACBBB657261E3C");
		}

		return uClassPointer;
	};

	bool __GFxData_ContainerDrops_TA__GetMatchingProductSeries_125CD58C4026519AA07F2CA212F93699(class UOnlineProduct_TA* Product);
	bool __GFxData_ContainerDrops_TA__GetMatchingProductSeries_C21766FB4429CE9D7619BFBD988575F8(class UOnlineProduct_TA* P);
	bool __GFxData_ContainerDrops_TA__GetMatchingProductSeries_A4061EA041BB3AB511ACBBB657261E3C(class UOnlineProduct_TA* P);
};

// Class TAGame.RPC_MicroTransactions_ClaimEntitlements_TA
// 0x0088 (0x00E8 - 0x0170)
class URPC_MicroTransactions_ClaimEntitlements_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     AuthCode;                                         		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FOnlineProductData>                  Products;                                         		// 0x0140 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FCurrency>                           Currencies;                                       		// 0x0150 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FCurrency>                           WalletCurrencies;                                 		// 0x0160 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_MicroTransactions_ClaimEntitlements_TA");
		}

		return uClassPointer;
	};

	class URPC_MicroTransactions_ClaimEntitlements_TA* SetAuthCode(struct FString InAuthCode);
	class URPC_MicroTransactions_ClaimEntitlements_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.PartyMessage_ClubChanged_TA
// 0x0008 (0x00A8 - 0x00B0)
class UPartyMessage_ClubChanged_TA : public UPartyMessage_X
{
public:
	unsigned long long                                 ClubID;                                           		// 0x00A8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PartyMessage_ClubChanged_TA");
		}

		return uClassPointer;
	};

	class UPartyMessage_ClubChanged_TA* SetClubID(unsigned long long InClubID);
};

// Class TAGame.__TourStatus_TA__GetStatus_B1B2943E4B259E68732345BDDDF36FC0
// 0x0008 (0x0060 - 0x0068)
class U__TourStatus_TA__GetStatus_B1B2943E4B259E68732345BDDDF36FC0 : public UObject
{
public:
	unsigned long long                                 TournamentID;                                     		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourStatus_TA__GetStatus_B1B2943E4B259E68732345BDDDF36FC0");
		}

		return uClassPointer;
	};

	bool __TourStatus_TA__GetStatus_B1B2943E4B259E68732345BDDDF36FC0(struct FTourStatus S);
};

// Class TAGame.RPC_TourSetScheduleRegion_TA
// 0x0058 (0x00E8 - 0x0140)
class URPC_TourSetScheduleRegion_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     ScheduleRegion;                                   		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourSetScheduleRegion_TA");
		}

		return uClassPointer;
	};

	class URPC_TourSetScheduleRegion_TA* SetScheduleRegion(struct FString InScheduleRegion);
	class URPC_TourSetScheduleRegion_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_AutoTour_GetSchedule_TA
// 0x0068 (0x00E8 - 0x0150)
class URPC_AutoTour_GetSchedule_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     Region;                                           		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FScheduledTournament>                Schedules;                                        		// 0x0140 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_AutoTour_GetSchedule_TA");
		}

		return uClassPointer;
	};

	class URPC_AutoTour_GetSchedule_TA* SetRegion(struct FString InRegion);
	class URPC_AutoTour_GetSchedule_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.__AutoTour_TA__OnReceivedBracket_70AFC66C48B101D823139382918F19C9
// 0x0048 (0x0060 - 0x00A8)
class U__AutoTour_TA__OnReceivedBracket_70AFC66C48B101D823139382918F19C9 : public UObject
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__AutoTour_TA__OnReceivedBracket_70AFC66C48B101D823139382918F19C9");
		}

		return uClassPointer;
	};

	bool ____AutoTour_TA__OnReceivedBracket_70AFC66C48B101D823139382918F19C9____AutoTour_TA__OnReceivedBracket_E9ABB2DC407D6EC2351BDBB0C9E7010B_4BF3FD454B46C9195587CB9577114444(struct FTourPlayer P);
	bool __AutoTour_TA__OnReceivedBracket_E9ABB2DC407D6EC2351BDBB0C9E7010B(struct FTourTeam T);
	bool __AutoTour_TA__OnReceivedBracket_70AFC66C48B101D823139382918F19C9(struct FTourPlayer P);
};

// Class TAGame.TourUtils_TA
// 0x0000 (0x0060 - 0x0060)
class UTourUtils_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourUtils_TA");
		}

		return uClassPointer;
	};

	bool IsFirstRound(int MatchID, int NumTeams);
	int GetSiblingMatch(int MatchID);
	int CalcTeamWins(unsigned long long TeamID, struct FTourMatch& MatchData);
	int NextRound(int Round);
	struct FIntPair CalcPrevMatchIDs(int Round, int Order);
	struct FQWORDPair MakeQWORDPair(unsigned long long A, unsigned long long B);
	struct FIntPair MakeIntPair(int A, int B);
	int CalcNextMatchID(int Round, int Order);
	int CalcNextMatchIDByMatchID(int MatchID);
	bool IsRoundOrderValid(int Round, int Order);
	int GetBracketMatchCount(int NumTeams);
	int GetTotalRoundsForTeams(int NumTeams);
	int GetMaxRoundForTeams(int NumTeams);
	int GetNumByes(int NumTeams);
	int GetTeamCountAtRound(int Round);
	int GetMatchCountForRound(int Round);
	int Max0(int Value);
	int CalcMatchID(int Round, int Order);
	int CalcOrder(int MatchID);
	int CalcRound(int MatchID);
};

// Class TAGame.AutoTourConfig_TA
// 0x0028 (0x0078 - 0x00A0)
class UAutoTourConfig_TA : public UOnlineConfig_X
{
public:
	int                                                MaxTournamentsPerWeek;                            		// 0x0078 (0x0004) [0x0000000000000000]               
	int                                                TourResultsTimeoutSeconds;                        		// 0x007C (0x0004) [0x0000000000000000]               
	int                                                CurrencyID;                                       		// 0x0080 (0x0004) [0x0000000000000000]               
	int                                                MaxNumPlayers;                                    		// 0x0084 (0x0004) [0x0000000000000000]               
	unsigned long                                      bAutoPartyUpEnabled : 1;                          		// 0x0088 (0x0004) [0x0000000000000000] [0x00000001] 
	TArray<struct FScheduleRegion>                     ScheduleRegions;                                  		// 0x0090 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AutoTourConfig_TA");
		}

		return uClassPointer;
	};

	struct FString GetScheduleRegionLabel(struct FString RegionID);
};

// Class TAGame.__AutoTour_TA__UpdateIneligibleTournament_43F899194FE70AFB919658AA41082DC0
// 0x0008 (0x0060 - 0x0068)
class U__AutoTour_TA__UpdateIneligibleTournament_43F899194FE70AFB919658AA41082DC0 : public UObject
{
public:
	class UTourSettings_TA*                            LastAutoTournament;                               		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__AutoTour_TA__UpdateIneligibleTournament_43F899194FE70AFB919658AA41082DC0");
		}

		return uClassPointer;
	};

	void __AutoTour_TA__UpdateIneligibleTournament_43F899194FE70AFB919658AA41082DC0(struct FTourBracket B);
};

// Class TAGame.TournamentCompletedEvent_TA
// 0x0014 (0x0060 - 0x0074)
class UTournamentCompletedEvent_TA : public UObject
{
public:
	unsigned long long                                 TourID;                                           		// 0x0060 (0x0008) [0x0000000000000000]               
	unsigned long long                                 ScheduleID;                                       		// 0x0068 (0x0008) [0x0000000000000000]               
	unsigned long                                      bEliminatedFirstRound : 1;                        		// 0x0070 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TournamentCompletedEvent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PsyNetService_AutoTourFound_TA
// 0x0050 (0x0090 - 0x00E0)
class UPsyNetService_AutoTourFound_TA : public UPsyNetClientService_X
{
public:
	class UTourSettings_TA*                            Tournament;                                       		// 0x0090 (0x0008) [0x0000000000000000]               
	struct FTourTeam                                   Team;                                             		// 0x0098 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_AutoTourFound_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_AutoTour_GetCycleData_TA
// 0x0098 (0x00E8 - 0x0180)
class URPC_AutoTour_GetCycleData_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 CycleID;                                          		// 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long long                                 CycleEndTime;                                     		// 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                WeekID;                                           		// 0x0140 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long long                                 WeekEndTime;                                      		// 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<struct FShopCurrencyInfo>                   WeeklyCurrencies;                                 		// 0x0150 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FTournamentWeek>                     Weeks;                                            		// 0x0160 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<int>                                        MaxTierScores;                                    		// 0x0170 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_AutoTour_GetCycleData_TA");
		}

		return uClassPointer;
	};

	class URPC_AutoTour_GetCycleData_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_TourGetScheduleRegion_TA
// 0x0058 (0x00E8 - 0x0140)
class URPC_TourGetScheduleRegion_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     ScheduleRegion;                                   		// 0x0130 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourGetScheduleRegion_TA");
		}

		return uClassPointer;
	};

	class URPC_TourGetScheduleRegion_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.__Eula_TA__RequiresAcceptance_C8E0246F46C90DBCE9EF4FBB90816B8D
// 0x0001 (0x0060 - 0x0061)
class U__Eula_TA__RequiresAcceptance_C8E0246F46C90DBCE9EF4FBB90816B8D : public UObject
{
public:
	unsigned char                                      PlayerPlatform;                                   		// 0x0060 (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__Eula_TA__RequiresAcceptance_C8E0246F46C90DBCE9EF4FBB90816B8D");
		}

		return uClassPointer;
	};

	bool __Eula_TA__RequiresAcceptance_C8E0246F46C90DBCE9EF4FBB90816B8D(unsigned char P);
};

// Class TAGame.EulaConfig_TA
// 0x0018 (0x0078 - 0x0090)
class UEulaConfig_TA : public UOnlineConfig_X
{
public:
	unsigned long                                      bRequiresAcceptance : 1;                          		// 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	TArray<unsigned char>                              ExcludedPlatforms;                                		// 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EulaConfig_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__GFxData_MultiItemDrops_TA__IsSlotInGroup_57BA5943440E5DD1F7609BB8837D8F45
// 0x0004 (0x0060 - 0x0064)
class U__GFxData_MultiItemDrops_TA__IsSlotInGroup_57BA5943440E5DD1F7609BB8837D8F45 : public UObject
{
public:
	int                                                SlotIndex;                                        		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_MultiItemDrops_TA__IsSlotInGroup_57BA5943440E5DD1F7609BB8837D8F45");
		}

		return uClassPointer;
	};

	bool __GFxData_MultiItemDrops_TA__IsSlotInGroup_57BA5943440E5DD1F7609BB8837D8F45(class UItemDropGroup_TA* Group);
};

// Class TAGame.GarageSlotDropGroup_TA
// 0x000C (0x00B0 - 0x00BC)
class UGarageSlotDropGroup_TA : public UItemDropGroup_TA
{
public:
	class UTexture*                                    Icon;                                             		// 0x00B0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SlotIndex;                                        		// 0x00B8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GarageSlotDropGroup_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__GFxData_MultiItemDrops_TA__IsProductInGroup_FB84776C4DC71490A77D44B0D217E5C5
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_MultiItemDrops_TA__IsProductInGroup_FB84776C4DC71490A77D44B0D217E5C5 : public UObject
{
public:
	unsigned long long                                 InstanceID;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_MultiItemDrops_TA__IsProductInGroup_FB84776C4DC71490A77D44B0D217E5C5");
		}

		return uClassPointer;
	};

	bool ____GFxData_MultiItemDrops_TA__IsProductInGroup_FB84776C4DC71490A77D44B0D217E5C5____GFxData_MultiItemDrops_TA__IsProductInGroup_D9F9224646B3EC9B9BA56ABD9A96B9C5_255BA55C4F22A3B0DB68CEAC6F725095(struct FProductDrop Product);
	bool __GFxData_MultiItemDrops_TA__IsProductInGroup_D9F9224646B3EC9B9BA56ABD9A96B9C5(class UItemDropGroup_TA* Group);
	bool __GFxData_MultiItemDrops_TA__IsProductInGroup_67996AC949C9A980E50B5598F76F00E5(struct FProductDrop Product);
	bool __GFxData_MultiItemDrops_TA__IsProductInGroup_FB84776C4DC71490A77D44B0D217E5C5(struct FProductDrop Product);
};

// Class TAGame.__GFxData_MultiItemDrops_TA__HandleGroupSeen_49105E594074DE78094D9FB49E4EC123
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_MultiItemDrops_TA__HandleGroupSeen_49105E594074DE78094D9FB49E4EC123 : public UObject
{
public:
	class USaveData_TA*                                SaveData;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_MultiItemDrops_TA__HandleGroupSeen_49105E594074DE78094D9FB49E4EC123");
		}

		return uClassPointer;
	};

	void __GFxData_MultiItemDrops_TA__HandleGroupSeen_49105E594074DE78094D9FB49E4EC123(struct FProductDrop P);
};

// Class TAGame.__GFxData_MultiItemDrops_TA__GetDropsByType_CBB1929040873A8A7A7F188A935D5FB5
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_MultiItemDrops_TA__GetDropsByType_CBB1929040873A8A7A7F188A935D5FB5 : public UObject
{
public:
	struct FName                                       DropType;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_MultiItemDrops_TA__GetDropsByType_CBB1929040873A8A7A7F188A935D5FB5");
		}

		return uClassPointer;
	};

	bool __GFxData_MultiItemDrops_TA__GetDropsByType_CBB1929040873A8A7A7F188A935D5FB5(class UItemDropGroup_TA* Group);
};

// Class TAGame.__GFxData_MultiItemDrops_TA__HandleChallengeRewardCollected_D61D479F42112DED633490BA42586ACF
// 0x0010 (0x0060 - 0x0070)
class U__GFxData_MultiItemDrops_TA__HandleChallengeRewardCollected_D61D479F42112DED633490BA42586ACF : public UObject
{
public:
	TArray<struct FCurrency>                           Currency;                                         		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_MultiItemDrops_TA__HandleChallengeRewardCollected_D61D479F42112DED633490BA42586ACF");
		}

		return uClassPointer;
	};

	void __GFxData_MultiItemDrops_TA__HandleChallengeRewardCollected_D61D479F42112DED633490BA42586ACF(class UChallengeCurrency_TA* C);
};

// Class TAGame.ChallengeReward_TA
// 0x0040 (0x0080 - 0x00C0)
class UChallengeReward_TA : public UListenObject_TA
{
public:
	int                                                XP;                                               		// 0x0080 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<class UChallengeCurrency_TA*>               Currency;                                         		// 0x0088 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FOnlineProductData>                  Products;                                         		// 0x0098 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     ProductHashIDs;                                   		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UOnlineProductStoreSet_TA*                   OnlineProductStoreSet;                            		// 0x00B8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ChallengeReward_TA");
		}

		return uClassPointer;
	};

	void Remove();
	void Init(class UListenObject_TA* ListenObj);
};

// Class TAGame.CompleteTaskDropGroup_TA
// 0x001C (0x00B0 - 0x00CC)
class UCompleteTaskDropGroup_TA : public UItemDropGroup_TA
{
public:
	class UTexture*                                    Icon;                                             		// 0x00B0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     Title;                                            		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                Points;                                           		// 0x00C8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CompleteTaskDropGroup_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ChallengeDropGroup_TA
// 0x0008 (0x00CC - 0x00D4)
class UChallengeDropGroup_TA : public UCompleteTaskDropGroup_TA
{
public:
	unsigned long                                      bPremium : 1;                                     		// 0x00D0 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ChallengeDropGroup_TA");
		}

		return uClassPointer;
	};

	void InitFromChallenge(class UChallenge_TA* Challenge);
};

// Class TAGame.__GFxData_MultiItemDrops_TA__DropRewardGroup_F3EFF4AF406524C0F546329F320C6D4A
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_MultiItemDrops_TA__DropRewardGroup_F3EFF4AF406524C0F546329F320C6D4A : public UObject
{
public:
	class UCompleteTaskDropGroup_TA*                   DropGroup;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_MultiItemDrops_TA__DropRewardGroup_F3EFF4AF406524C0F546329F320C6D4A");
		}

		return uClassPointer;
	};

	void __GFxData_MultiItemDrops_TA__DropRewardGroup_F3EFF4AF406524C0F546329F320C6D4A(struct FOnlineProductData P);
};

// Class TAGame.GFxData_PlayerTitles_TA
// 0x0028 (0x0098 - 0x00C0)
class UGFxData_PlayerTitles_TA : public UGFxDataSingleton_X
{
public:
	int                                                SelectedTitle;                                    		// 0x0098 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FPlayerTitleData>                    PlayerTitles;                                     		// 0x00A0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UProfileLoadoutSave_TA*                      LoadoutSave;                                      		// 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPlayerTitleConfig_X*                        TitleConfig;                                      		// 0x00B8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PlayerTitles_TA");
		}

		return uClassPointer;
	};

	void __GFxData_PlayerTitles_TA__HandleSaveDataLoaded_98846AA443F0B0D4E88D02ABE205E6FE(class USaveData_TA* SaveData);
	void __GFxData_PlayerTitles_TA__HandleLoadoutSaveLoaded_50D64F484167D0DE43E0F88C6AA967C4();
	void __GFxData_PlayerTitles_TA__UpdatePlayerTitles_7C46CBAD4656A271300B1AAF210D361D(class UPlayer* P);
	bool __GFxData_PlayerTitles_TA__GetOnlinePlayerTitles_E1A6976B4F9DC6F1FBC03A827A54DC0A(struct FPlayerTitleData Title);
	bool __GFxData_PlayerTitles_TA__GetOnlinePlayerTitles_B6806EBD4DE75E3506C94B8F70479B2D(struct FName Title);
	struct FName __GFxData_PlayerTitles_TA__GetOnlinePlayerTitles_8F1D2B5047862311388C9786B8F86485(class UOnlineProduct_TA* Product);
	int SortTitles(struct FPlayerTitleData A, struct FPlayerTitleData B);
	TArray<struct FPlayerTitleData> GetOnlinePlayerTitles();
	TArray<struct FPlayerTitleData> GetPlayerTitles();
	struct FPlayerTitleData GetTitleData(struct FName TitleId);
	void SetPlayerTitle(struct FName Title);
	void UpdateSelectedTitle(struct FName Title);
	void UpdatePlayerTitles();
	void HandleNewOnlineProduct(class USaveData_TA* SaveData, class UOnlineProduct_TA* OnlineProduct);
	void HandleLoadoutSaveLoaded(class UProfileLoadoutSave_TA* InSave);
	void HandleProfileSet(class ULocalPlayer_TA* P);
	void HandleSaveDataLoaded(class USaveGameManager_TA* Manager, class USaveData_TA* InSaveData, class UError* Error);
	void eventOnShellSet();
};

// Class TAGame.__GFxData_MultiItemDrops_TA__HandleNewOnlineItem_83D8EC694572F0D5BFCCE5A189FA7DDA
// 0x0010 (0x0060 - 0x0070)
class U__GFxData_MultiItemDrops_TA__HandleNewOnlineItem_83D8EC694572F0D5BFCCE5A189FA7DDA : public UObject
{
public:
	class USaveData_TA*                                InSaveData;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
	class UOnlineProduct_TA*                           OnlineProduct;                                    		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_MultiItemDrops_TA__HandleNewOnlineItem_83D8EC694572F0D5BFCCE5A189FA7DDA");
		}

		return uClassPointer;
	};

	void __GFxData_MultiItemDrops_TA__HandleNewOnlineItem_83D8EC694572F0D5BFCCE5A189FA7DDA(class UPlayer* P);
};

// Class TAGame.RewardDropGroup_TA
// 0x0020 (0x00B0 - 0x00D0)
class URewardDropGroup_TA : public UItemDropGroup_TA
{
public:
	TArray<struct FGFxRewardDrop>                      Rewards;                                          		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FGFxLevelThreshold>                  Thresholds;                                       		// 0x00C0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RewardDropGroup_TA");
		}

		return uClassPointer;
	};

	struct FGFxLevelThreshold __RewardDropGroup_TA__UpdateLevelThresholds_FB9B2C314D556178F53B29A67D28FF92(int Threshold);
	bool IsValid();
	void UpdateRewardInfo(struct FOnlineXPReward& InRewardDrop);
	void UpdateLevelThresholds(struct FOnlineXPReward& InRewardDrop);
	int SortThresholdsAscending(struct FGFxLevelThreshold A, struct FGFxLevelThreshold B);
	int GetIndex(struct FOnlineXPReward& InRewardDrop);
	void AddReward(struct FOnlineXPReward& InRewardDrop);
};

// Class TAGame.__GFxData_MultiItemDrops_TA__DropItemGroup_317A3F2F4A4BFB5D14DD0B95AF99E09B
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_MultiItemDrops_TA__DropItemGroup_317A3F2F4A4BFB5D14DD0B95AF99E09B : public UObject
{
public:
	class UItemDropGroup_TA*                           DropGroup;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_MultiItemDrops_TA__DropItemGroup_317A3F2F4A4BFB5D14DD0B95AF99E09B");
		}

		return uClassPointer;
	};

	void __GFxData_MultiItemDrops_TA__DropItemGroup_317A3F2F4A4BFB5D14DD0B95AF99E09B(struct FOnlineProductData OnlineProduct);
};

// Class TAGame.__GFxData_TradeLobby_TA__GetHashIDFromCurrencyID_8E496B73429A2E036D2929A037D1A2F7
// 0x0004 (0x0060 - 0x0064)
class U__GFxData_TradeLobby_TA__GetHashIDFromCurrencyID_8E496B73429A2E036D2929A037D1A2F7 : public UObject
{
public:
	int                                                CurrencyID;                                       		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_TradeLobby_TA__GetHashIDFromCurrencyID_8E496B73429A2E036D2929A037D1A2F7");
		}

		return uClassPointer;
	};

	bool __GFxData_TradeLobby_TA__GetHashIDFromCurrencyID_8E496B73429A2E036D2929A037D1A2F7(struct FCurrency C);
};

// Class TAGame.CurrencyProductSet_TA
// 0x0018 (0x0060 - 0x0078)
class UCurrencyProductSet_TA : public UObject
{
public:
	class UWallet_TA*                                  PlayerWallet;                                     		// 0x0060 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<struct FCurrencyProduct>                    CurrencyProducts;                                 		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CurrencyProductSet_TA");
		}

		return uClassPointer;
	};

	void __CurrencyProductSet_TA__Init_C20E11E8416C31E2C18DAD9009C8B53F(class UWallet_TA* InWallet);
	bool __CurrencyProductSet_TA__GetCurrenciesWithBalance_AA2E4F6F4688A4A89C93D79B6FFA9433(struct FCurrency C);
	struct FCurrency __CurrencyProductSet_TA__GetCurrencies_0943F39C4344D111453E7DB07A990A70(struct FCurrencyProduct C);
	int GetCurrencyIndexFromHashID(struct FProductHashID CurrencyHashID);
	void Clear();
	TArray<struct FCurrency> GetCurrencies();
	TArray<struct FCurrency> GetCurrenciesWithBalance();
	void SetQuantity(struct FProductHashID CurrencyHashID, int Quantity);
	int GetQuantity(struct FProductHashID CurrencyHashID);
	void Init(class UObjectProvider* Owner);
};

// Class TAGame.GFxData_ProductFilter_TA
// 0x06A0 (0x0098 - 0x0738)
class UGFxData_ProductFilter_TA : public UGFxDataSingleton_X
{
public:
	TArray<class UClass*>                              UIAttributes;                                     		// 0x0098 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class UProductSlot_TA*>                     AlwaysIgnoredSlots;                               		// 0x00A8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     Label;                                            		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FFilterProductSlot>                  Slots;                                            		// 0x00C8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FFilterProductQuality>               Qualities;                                        		// 0x00D8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FFilterProductAttribute>             Attributes;                                       		// 0x00E8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FFilterProductSeries>                SeriesIDs;                                        		// 0x00F8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FFilterProductSorting>               SortingLabels;                                    		// 0x0108 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long                                      bIgnoreEquipped : 1;                              		// 0x0118 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bTradeInScreenSelected : 1;                       		// 0x0118 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	unsigned long                                      bAllowDefaultProducts : 1;                        		// 0x0118 (0x0004) [0x0000000000004001] [0x00000004] (CPF_Edit | CPF_Config)
	TArray<unsigned char>                              FilterStack;                                      		// 0x0120 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FProductFilter                              Filters[0x4] ;                                    		// 0x0130 (0x0520) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FString>                             ProductQualitiesToIgnore;                         		// 0x0650 (0x0010) [0x0000000000404001] (CPF_Edit | CPF_Config | CPF_NeedCtorLink)
	TArray<struct FString>                             ProductSortingToIgnore;                           		// 0x0660 (0x0010) [0x0000000000404001] (CPF_Edit | CPF_Config | CPF_NeedCtorLink)
	TArray<struct FString>                             ProductAttributesToIgnore;                        		// 0x0670 (0x0010) [0x0000000000404001] (CPF_Edit | CPF_Config | CPF_NeedCtorLink)
	struct FString                                     DefaultSorting;                                   		// 0x0680 (0x0010) [0x0000000000404001] (CPF_Edit | CPF_Config | CPF_NeedCtorLink)
	class UGarageArchiveSlot_TA*                       GarageArchiveSlot;                                		// 0x0690 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMtxConfig_TA*                               MtxConfig;                                        		// 0x0698 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UProductsConfig_TA*                          ProductsConfig;                                   		// 0x06A0 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventFilterSelected__Delegate;                  		// 0x06A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSlotSelectedChanged__Delegate;             		// 0x06C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventAttributeSelected__Delegate;               		// 0x06D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPostRefreshPreviewQuantity__Delegate;      		// 0x06F0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPreRefreshPreviewQuantity__Delegate;       		// 0x0708 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventPreFilterProducts__Delegate;               		// 0x0720 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductFilter_TA");
		}

		return uClassPointer;
	};

	struct FFilterProductSlot __GFxData_ProductFilter_TA__InitProductSlots_FDE119954BAA37162C7B19AF3FA1946D(class UProductSlot_TA* Slot);
	class UOnlineProduct_TA* __GFxData_ProductFilter_TA__GetTradableCurrencies_0ED088B14B91ED851550BC932FFF056D(struct FCurrency C);
	bool __GFxData_ProductFilter_TA__GetTradableCurrencies_7CE1DA48471C15E82F06A5A43889496D(struct FCurrency C);
	int __GFxData_ProductFilter_TA__FilterProducts_2A0CBF43499AD3FA7E801CBC7A912A88(struct FProfileProduct P);
	bool __GFxData_ProductFilter_TA__FilterProducts_9F652A7E4C4175D1F3E8EE8891B62687(struct FProfileProduct PP);
	unsigned long long __GFxData_ProductFilter_TA__FilterProducts_704E1C2249077B4D0154ABB06C308CAE(struct FProfileProduct P);
	bool __GFxData_ProductFilter_TA__FilterProducts_8A9DA57143BB93B294D3BDA6DF2143B4(struct FProfileProduct P);
	int __GFxData_ProductFilter_TA__FilterProducts_FFCB40C747EDB682B9EB6780D2DD15C1(struct FProductHashID P);
	unsigned long long __GFxData_ProductFilter_TA__FilterProducts_438477C14AD5442C0EA7FA8D7C939200(struct FProfileProduct P);
	void __GFxData_ProductFilter_TA__HandleContainersUpdated_A66F6A2C441368E23746DBB5E9591731(struct FContainerInfo Container);
	void RemoveNewProduct(struct FProductHashID HashID);
	void PopFilterType(unsigned char Type);
	void PushFilterType(unsigned char Type);
	void ClearFilterType(unsigned char Type);
	void UpdateProductSlotNewItems();
	void UpdateFromType(unsigned char Type);
	void RefreshPreviewQuantity(unsigned char Type);
	void HandleBatchPreviewQuantity();
	void HandleContainersUpdated(class UGFxData_ContainerDrops_TA* ContainerDrops);
	void ApplyBlueprintFilter(unsigned char FilterType, unsigned long bBlueprintSlotSelected);
	void ApplyCurrencyTradeRestrictionOption(unsigned char Type, struct FProductFilter& OutFilter);
	void ApplyContainerNotificationOption(struct FProductFilter& OutFilter);
	void SetStackProducts(unsigned long bValue, unsigned char FilterType);
	void SetPackID(struct FProductHashID PackHashID, unsigned char FilterType);
	unsigned char GetSortType(unsigned char FilterType);
	void SetSortType(unsigned char SortType, unsigned char FilterType);
	void SetIgnoreEquipped(unsigned long bSelected, unsigned char FilterType);
	void SetSeriesIDSelected(int Row, unsigned long bSelected, unsigned char FilterType);
	void SetProhibitedAttributeTypeSelected(unsigned char Attribute, unsigned long bSelected, unsigned char FilterType);
	void SetExclusiveAttributeTypeSelected(unsigned char Attribute, unsigned long bSelected, unsigned char FilterType);
	struct FName FilterProductAttributeToName(unsigned char Attribute);
	void SetAttributeSelected(struct FString AttributeLabel, unsigned long bSelected, unsigned char FilterType);
	void RemoveProhibitedQuality(unsigned char Quality, unsigned char FilterType);
	void AddProhibitedQuality(unsigned char Quality, unsigned char FilterType);
	void SetTradeInSelected(unsigned long bSelected);
	TArray<struct FFilterProductAttribute> GetProductAttributeFilters(unsigned char FilterType);
	TArray<struct FFilterProductSorting> GetProductSortingFilters(unsigned char FilterType);
	void OnTradeInFilterSelected(unsigned char FilterType);
	void SetTradeInFilterSelected(int TradeInFilterID, unsigned char Quality, unsigned char FilterType);
	void SetQualitySelected(int Row, unsigned long bSelected, unsigned char FilterType);
	void SetSlotSelected(int Row, unsigned long bSelected, unsigned char FilterType);
	void SetLabel(struct FString NewLabel, unsigned char FilterType);
	TArray<struct FProductHashID> FilterProducts(unsigned char FilterType);
	TArray<class UOnlineProduct_TA*> GetTradableCurrencies();
	bool ShouldDisplayOfflineProducts(unsigned char FilterType);
	void UpdateProductAttributes(struct FProductFilter& InFilter);
	void UpdateProductQualities(struct FProductFilter& InFilter);
	void UpdateProductSlots(unsigned char Type);
	int GetFilterQuantity(struct FProductFilter& InFilter);
	void InitSortTypes();
	void AddUniqueSeriesID(int SeriesID);
	void InitProductSeriesIDs();
	void InitProductAttributes();
	void InitProductQualities();
	void InitProductSlots();
	void HandleNewProductUnlocked(class USaveData_TA* Data, class UOnlineProduct_TA* OnlineProduct);
	void InitFromProfile(class ULocalPlayer_TA* LocalPlayer);
	void eventOnShellSet();
	class UProfile_TA* GetProfile();
	void EventPreFilterProducts(unsigned char SelectedFilter);
	void EventPreRefreshPreviewQuantity(unsigned char SelectedFilter);
	void EventPostRefreshPreviewQuantity(unsigned char SelectedFilter);
	void EventAttributeSelected(class UClass* SelectedAttributeClass, unsigned char SelectedFilter);
	void EventSlotSelectedChanged(int SlotIndex, unsigned long bSelected, unsigned char SelectedFilter);
	void EventFilterSelected(unsigned char SelectedFilter);
};

// Class TAGame.GFxData_PartyMemberProfile_TA
// 0x0094 (0x0094 - 0x0128)
class UGFxData_PartyMemberProfile_TA : public UGFxDataRow_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x0098 (0x0048) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FName                                       Title;                                            		// 0x00E0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     TitleText;                                        		// 0x00E8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FColor                                      TitleColor;                                       		// 0x00F8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FColor                                      TitleGlowColor;                                   		// 0x00FC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class UPlayerAvatarBorder_TA*                      PlayerBorder;                                     		// 0x0100 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UGFxData_PlayerAvatarBorder_TA*              GFxPlayerBorder;                                  		// 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPlayerBanner_TA*                            PlayerBanner;                                     		// 0x0110 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UGFxData_PlayerBanner_TA*                    GFxPlayerBanner;                                  		// 0x0118 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineGameParty_TA*                         OnlineGameParty;                                  		// 0x0120 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PartyMemberProfile_TA");
		}

		return uClassPointer;
	};

	bool __GFxData_PartyMemberProfile_TA__SetProfileProducts_6B0B75DA4CC9B19FD9D2E98CC81C3A09(struct FPartyMemberLoadout P);
	void SetProfileProducts();
	void HandleLoadoutChanged(struct FUniqueNetId InPlayerId);
	void eventOnRemoved();
	void Init(struct FUniqueNetId InPlayerId);
};

// Class TAGame.__BotConfig_TA__RefreshIDs_F4DA9F7F4B69C83B6209C0989D23E0B4
// 0x0004 (0x0060 - 0x0064)
class U__BotConfig_TA__RefreshIDs_F4DA9F7F4B69C83B6209C0989D23E0B4 : public UObject
{
public:
	int                                                ProductID;                                        		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__BotConfig_TA__RefreshIDs_F4DA9F7F4B69C83B6209C0989D23E0B4");
		}

		return uClassPointer;
	};

	bool __BotConfig_TA__RefreshIDs_FB02016340863E8DE1C6C088AB763FDE(int Id);
	bool __BotConfig_TA__RefreshIDs_F4DA9F7F4B69C83B6209C0989D23E0B4(int Id);
};

// Class TAGame.CameraStateSelector_TA
// 0x0018 (0x0070 - 0x0088)
class UCameraStateSelector_TA : public UComponent
{
public:
	TArray<class UCameraState_X*>                      States;                                           		// 0x0070 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class ACamera_X*                                   Camera;                                           		// 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraStateSelector_TA");
		}

		return uClassPointer;
	};

	class UCameraState_X* SelectState(class UCameraState_X* InCurrentState);
	void SetActive();
	void Init(class ACamera_X* InCamera);
};

// Class TAGame.ChallengeRequirement_TA
// 0x001C (0x0080 - 0x009C)
class UChallengeRequirement_TA : public UListenObject_TA
{
public:
	struct FString                                     DisplayName;                                      		// 0x0080 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                RequiredCount;                                    		// 0x0090 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                ProgressCount;                                    		// 0x0094 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                ProgressChange;                                   		// 0x0098 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ChallengeRequirement_TA");
		}

		return uClassPointer;
	};

	bool ProgressHasChanged();
	void ResetChangedProgress();
	void SetProgress(struct FChallengeRequirementProgress& Progress);
};

// Class TAGame.__ChallengeDefault_TA__RequestImage_C1C5A9054567EDB33CF65BA15DB9BB31
// 0x0010 (0x0060 - 0x0070)
class U__ChallengeDefault_TA__RequestImage_C1C5A9054567EDB33CF65BA15DB9BB31 : public UObject
{
public:
	struct FString                                     ImageURL;                                         		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ChallengeDefault_TA__RequestImage_C1C5A9054567EDB33CF65BA15DB9BB31");
		}

		return uClassPointer;
	};

	void __ChallengeDefault_TA__RequestImage_C1C5A9054567EDB33CF65BA15DB9BB31(class UTexture2DDynamic* Texture);
};

// Class TAGame.GFxData_ChallengeAvaliableNotification_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_ChallengeAvaliableNotification_TA : public UGFxData_Notification_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ChallengeAvaliableNotification_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_ChallengeCompleteNotification_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_ChallengeCompleteNotification_TA : public UGFxData_Notification_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ChallengeCompleteNotification_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ChallengeFolder_TA
// 0x0080 (0x0060 - 0x00E0)
class UChallengeFolder_TA : public UObject
{
public:
	struct FString                                     CodeName;                                         		// 0x0060 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     DisplayName;                                      		// 0x0070 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                ChallengeID;                                      		// 0x0080 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                DefaultActiveIndex;                               		// 0x0084 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 StartTime;                                        		// 0x0088 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 EndTime;                                          		// 0x0090 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      ChallengeFolderSort;                              		// 0x0098 (0x0001) [0x0000000000000000]               
	TArray<int>                                        ChallengeIDs;                                     		// 0x00A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UChallengeFolder_TA*>                 SubFolders;                                       		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     SubFolderNames;                                   		// 0x00C0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     LinkedFolderCodeName;                             		// 0x00D0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ChallengeFolder_TA");
		}

		return uClassPointer;
	};

	bool HasValidChallengeID();
	class UChallengeFolder_TA* FindFolder(struct FString& FindCodeName);
	void GetSortedChallenges(class UClass* Filter, TArray<class UChallenge_TA*>& AllChallenges, TArray<class UChallenge_TA*>& Out_SortedChallenges);
	void Init();
};

// Class TAGame.PsyNetService_ChallengeDefault_TA
// 0x0030 (0x0090 - 0x00C0)
class UPsyNetService_ChallengeDefault_TA : public UPsyNetClientService_X
{
public:
	TArray<class UChallengeFolder_TA*>                 Folders;                                          		// 0x0090 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UChallengeDefault_TA*>                Challenges;                                       		// 0x00A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        ChallengeIDsToRemove;                             		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_ChallengeDefault_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_GetChallengeDefault_TA
// 0x0020 (0x00E8 - 0x0108)
class URPC_GetChallengeDefault_TA : public URPC_X
{
public:
	TArray<class UChallengeDefault_TA*>                Challenges;                                       		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UChallengeFolder_TA*>                 Folders;                                          		// 0x00F8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_GetChallengeDefault_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.BotDetectionConfig_TA
// 0x0004 (0x0078 - 0x007C)
class UBotDetectionConfig_TA : public UOnlineConfig_X
{
public:
	float                                              IdleLeadTime;                                     		// 0x0078 (0x0004) [0x0000000000004001] (CPF_Edit | CPF_Config)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BotDetectionConfig_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame._CrowdTypes_TA
// 0x0000 (0x0060 - 0x0060)
class U_CrowdTypes_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame._CrowdTypes_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.FaceItClientReservationMessage_X
// 0x00C4 (0x0060 - 0x0124)
class UFaceItClientReservationMessage_X : public UBeaconMessage_X
{
public:
	struct FServerReservationData                      Reservation;                                      		// 0x0060 (0x0080) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FFaceItMatchInfo                            MatchInfo;                                        		// 0x00E0 (0x0038) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 Expiration;                                       		// 0x0118 (0x0008) [0x0000000000000000]               
	int                                                OfflineTimeToLiveSeconds;                         		// 0x0120 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FaceItClientReservationMessage_X");
		}

		return uClassPointer;
	};

	int GetOfflineTimeToLiveSeconds();
	struct FString GetDSRToken();
	struct FString GetReservationID();
};

// Class TAGame.GFxData_FaceItMatchNotification_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_FaceItMatchNotification_TA : public UGFxData_Notification_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_FaceItMatchNotification_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__FirstTimeExperienceSave_TA__GetGroupIndex_1956D39F44A0DF0A6D9472B079875F4A
// 0x0008 (0x0060 - 0x0068)
class U__FirstTimeExperienceSave_TA__GetGroupIndex_1956D39F44A0DF0A6D9472B079875F4A : public UObject
{
public:
	struct FName                                       GroupName;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__FirstTimeExperienceSave_TA__GetGroupIndex_1956D39F44A0DF0A6D9472B079875F4A");
		}

		return uClassPointer;
	};

	bool __FirstTimeExperienceSave_TA__GetGroupIndex_1956D39F44A0DF0A6D9472B079875F4A(struct FCompletedFTEInfo P);
};

// Class TAGame.ESportConfig_TA
// 0x0010 (0x0078 - 0x0088)
class UESportConfig_TA : public UOnlineConfig_X
{
public:
	TArray<struct FESportEventData>                    Events;                                           		// 0x0078 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ESportConfig_TA");
		}

		return uClassPointer;
	};

	unsigned long long GetNextEventTime(unsigned long long CurrentTime, TArray<struct FESportEventData>& InEvents);
	TArray<unsigned long long> EventToEpochTimes(struct FESportEventData Event);
	void UpdateEvents();
	void HandleImageDownloaded(class UTexture2DDynamic* Texture, struct FString URL);
	void DownloadEventImage(struct FString URL);
	void Apply();
};

// Class TAGame.__GFxData_PartyInvite_TA__InviteToPartySilent_4ED7E5F0473B27FE2B67048F884848A0
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_PartyInvite_TA__InviteToPartySilent_4ED7E5F0473B27FE2B67048F884848A0 : public UObject
{
public:
	class UParties_X*                                  PsyNetInterface;                                  		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_PartyInvite_TA__InviteToPartySilent_4ED7E5F0473B27FE2B67048F884848A0");
		}

		return uClassPointer;
	};

	void __GFxData_PartyInvite_TA__InviteToPartySilent_4ED7E5F0473B27FE2B67048F884848A0(struct FUniqueNetId PlayerID);
};

// Class TAGame.PartyInviteNotification_TA
// 0x0058 (0x0110 - 0x0168)
class UPartyInviteNotification_TA : public UNotification_TA
{
public:
	struct FUniqueLobbyId                              LobbyId;                                          		// 0x0110 (0x0010) [0x0000000000000000]               
	struct FUniqueNetId                                PlayerID;                                         		// 0x0120 (0x0048) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PartyInviteNotification_TA");
		}

		return uClassPointer;
	};

	bool ShouldShow();
	struct FUniqueNetId GetSenderID();
	class UPartyInviteNotification_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
	class UPartyInviteNotification_TA* SetLobbyID(struct FUniqueLobbyId InLobbyId);
};

// Class TAGame.__GFxData_PartyInvite_TA__HandlePlayerInvitePending_40A583654E83407048264183CE9D0FDE
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_PartyInvite_TA__HandlePlayerInvitePending_40A583654E83407048264183CE9D0FDE : public UObject
{
public:
	class UPersona_TA*                                 Persona;                                          		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_PartyInvite_TA__HandlePlayerInvitePending_40A583654E83407048264183CE9D0FDE");
		}

		return uClassPointer;
	};

	void __GFxData_PartyInvite_TA__HandlePlayerInvitePending_AFEA215F4CF92D73EEF88F80D4EE71D3(class UNotification_TA* Notification);
	void __GFxData_PartyInvite_TA__HandlePlayerInvitePending_40A583654E83407048264183CE9D0FDE(class UNotification_TA* Notification);
};

// Class TAGame.__GFxData_PartyInvite_TA__InviteToPartyInternal_AE1786CB4EC71488939F5CBECADCEF62
// 0x0060 (0x0060 - 0x00C0)
class U__GFxData_PartyInvite_TA__InviteToPartyInternal_AE1786CB4EC71488939F5CBECADCEF62 : public UObject
{
public:
	struct FUniqueNetId                                ToPlayer;                                         		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             InviteHandler;                                    		// 0x00A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_PartyInvite_TA__InviteToPartyInternal_AE1786CB4EC71488939F5CBECADCEF62");
		}

		return uClassPointer;
	};

	void __GFxData_PartyInvite_TA__InviteToPartyInternal_C3E92772427439AE4020008D2D340373(class UPrivilegeCheck_X* PrivilegeCheck);
	bool __GFxData_PartyInvite_TA__InviteToPartyInternal_AE1786CB4EC71488939F5CBECADCEF62(struct FPartyMember Member);
};

// Class TAGame.RPC_ProductsTradeIn_TA
// 0x0078 (0x00E8 - 0x0160)
class URPC_ProductsTradeIn_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long long>                         ProductInstances;                                 		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FOnlineProductData>                  Drops;                                            		// 0x0140 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UOnlineProduct_TA*>                   Products;                                         		// 0x0150 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_ProductsTradeIn_TA");
		}

		return uClassPointer;
	};

	void eventOnComplete();
	class URPC_ProductsTradeIn_TA* SetProducts(TArray<unsigned long long>& InProducts);
	class URPC_ProductsTradeIn_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.__GFxData_ProductTradeIn_TA__UpdateTradeInQuantity_D33E44CF496CF890783CA39E1135D386
// 0x0004 (0x0060 - 0x0064)
class U__GFxData_ProductTradeIn_TA__UpdateTradeInQuantity_D33E44CF496CF890783CA39E1135D386 : public UObject
{
public:
	struct FProductHashID                              HashID;                                           		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_ProductTradeIn_TA__UpdateTradeInQuantity_D33E44CF496CF890783CA39E1135D386");
		}

		return uClassPointer;
	};

	bool __GFxData_ProductTradeIn_TA__UpdateTradeInQuantity_B92BC2BD4130D39940BE5F9370709464(struct FTradeIn Trade);
	bool __GFxData_ProductTradeIn_TA__UpdateTradeInQuantity_D33E44CF496CF890783CA39E1135D386(struct FTradeIn Trade);
};

// Class TAGame.GFxData_TradeInFilter_TA
// 0x0074 (0x0094 - 0x0108)
class UGFxData_TradeInFilter_TA : public UGFxDataRow_X
{
public:
	int                                                Id;                                               		// 0x0098 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     Label;                                            		// 0x00A0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<class UGFxData_PossibleTradeIn_TA*>         PossibleTradeIns;                                 		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FProductTradeInFilter                       TradeInFilter;                                    		// 0x00C0 (0x0040) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class USaveData_TA*                                SaveData;                                         		// 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TradeInFilter_TA");
		}

		return uClassPointer;
	};

	void __GFxData_TradeInFilter_TA__OnRemoved_D312429C44D1BA6A5863F1BEED29BD98(class UGFxData_PossibleTradeIn_TA* P);
	void __GFxData_TradeInFilter_TA__GenerateTradeInQuantities_85E1A747416C5D5E71857DB420E43FEC(class UGFxData_PossibleTradeIn_TA* P);
	void GenerateTradeInQuantities();
	void HandleSaveDataLoaded(class USaveGameManager_TA* Manager, class USaveData_TA* InSaveData, class UError* Error);
	void Init(struct FProductTradeInFilter& InTradeInFilter);
	void eventOnRemoved();
};

// Class TAGame.__MapsConfig_TA__GetMapFrequencyForSet_C5D96D0A4DFAAF4716062D8CBEA0532F
// 0x0008 (0x0060 - 0x0068)
class U__MapsConfig_TA__GetMapFrequencyForSet_C5D96D0A4DFAAF4716062D8CBEA0532F : public UObject
{
public:
	struct FName                                       MapName;                                          		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__MapsConfig_TA__GetMapFrequencyForSet_C5D96D0A4DFAAF4716062D8CBEA0532F");
		}

		return uClassPointer;
	};

	bool __MapsConfig_TA__GetMapFrequencyForSet_C5D96D0A4DFAAF4716062D8CBEA0532F(struct FOnlineMapData M);
};

// Class TAGame.__MapsConfig_TA__GetMapSetByName_7C79B88A401C7D401F242188F3A2506E
// 0x0008 (0x0060 - 0x0068)
class U__MapsConfig_TA__GetMapSetByName_7C79B88A401C7D401F242188F3A2506E : public UObject
{
public:
	struct FName                                       SetName;                                          		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__MapsConfig_TA__GetMapSetByName_7C79B88A401C7D401F242188F3A2506E");
		}

		return uClassPointer;
	};

	bool __MapsConfig_TA__GetMapSetByName_7C79B88A401C7D401F242188F3A2506E(struct FOnlineMapSet S);
};

// Class TAGame.ProductStat_MVPs_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_MVPs_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_MVPs_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.ProductAttribute_ShopItem_TA
// 0x0008 (0x0080 - 0x0088)
class UProductAttribute_ShopItem_TA : public UProductAttribute_TA
{
public:
	class UProductAssetReference_TA*                   ShopItemReference;                                		// 0x0080 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_ShopItem_TA");
		}

		return uClassPointer;
	};

	bool HasLoadedAllAdditionalReferences(class ULoadingProduct_TA* ProductData);
	void LoadAdditionalAssets(struct FScriptDelegate Callback);
	bool ShouldLoadAdditionalAssets();
};

// Class TAGame.ProductAsset_ShopItem_TA
// 0x0010 (0x00F8 - 0x0108)
class UProductAsset_ShopItem_TA : public UProductAsset_TA
{
public:
	class UTexture*                                    BackgroundImage;                                  		// 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTexture*                                    ItemLogo;                                         		// 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_ShopItem_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductStat_Baskets_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_Baskets_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_Baskets_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.ProductStat_EpicSaves_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_EpicSaves_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_EpicSaves_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.ProductAttribute_SwapMICParameterValues_TA
// 0x0010 (0x0080 - 0x0090)
class UProductAttribute_SwapMICParameterValues_TA : public UProductAttribute_TA
{
public:
	TArray<struct FMICSwapParameters>                  Parameters;                                       		// 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_SwapMICParameterValues_TA");
		}

		return uClassPointer;
	};

	void SwapParameterValue(class UMaterialInstanceConstant* MICToChange, struct FName FirstParam, struct FName SecondParam, class UMeshComponent* ObjectToModify);
	void ChangeValues(class UMeshComponent* ObjectToModify);
	void ApplyToObject(class UProductAsset_TA* Asset, class UObject* Target);
};

// Class TAGame.CrowdSoundSettings_TA
// 0x0200 (0x0060 - 0x0260)
class UCrowdSoundSettings_TA : public UObject
{
public:
	class UDynamicValue_X*                             Tension;                                          		// 0x0060 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValue_X*                             Excitement;                                       		// 0x0068 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValue_X*                             Upset;                                            		// 0x0070 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValue_X*                             Anticipation;                                     		// 0x0078 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                TensionScorability;                               		// 0x0080 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                TensionOpenGoal;                                  		// 0x0088 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                TensionSpeedTowardsGoal;                          		// 0x0090 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                TensionCloseToGoal;                               		// 0x0098 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                TensionDistanceFromGoal;                          		// 0x00A0 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                TensionAerial;                                    		// 0x00A8 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierDuration_X*             TensionFastBreak;                                 		// 0x00B0 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                TensionTimeSinceLastGoal;                         		// 0x00B8 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                TensionScoreSeparation;                           		// 0x00C0 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                TensionTimeNearGoal;                              		// 0x00C8 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                TensionLeadChanges;                               		// 0x00D0 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierDuration_X*             TensionGoalScored;                                		// 0x00D8 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierDuration_X*             ExcitementGameStart;                              		// 0x00E0 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierDuration_X*             ExcitementRoundStart;                             		// 0x00E8 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierDuration_X*             ExcitementKickoffTouch;                           		// 0x00F0 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierDuration_X*             ExcitementOvertimeStart;                          		// 0x00F8 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                ExcitementScorability;                            		// 0x0100 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierDuration_X*             ExcitementFastBreak;                              		// 0x0108 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierDuration_X*             ExcitementGoal;                                   		// 0x0110 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierDuration_X*             ExcitementAerial;                                 		// 0x0118 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierDuration_X*             ExcitementTenseClear;                             		// 0x0120 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                ExcitementTimeRemaining;                          		// 0x0128 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                ExcitementLeadChanges;                            		// 0x0130 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                ExcitementScoreSeparation;                        		// 0x0138 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                ExcitementTimeSinceLastGoal;                      		// 0x0140 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                Excitement0Seconds;                               		// 0x0148 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierDuration_X*             UpsetAnyDemo;                                     		// 0x0150 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierDuration_X*             UpsetRelevantDemo;                                		// 0x0158 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierDuration_X*             UpsetGoal;                                        		// 0x0160 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                AnticipationScorability;                          		// 0x0168 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                Anticipation0Seconds;                             		// 0x0170 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierDuration_X*             AnticipationFastBreak;                            		// 0x0178 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                AnticipationOpenGoal;                             		// 0x0180 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicValueModifierCurve_X*                AnticipationExcitementMultiplier;                 		// 0x0188 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	struct FCrowdDefense                               DefenseChantSettings;                             		// 0x0190 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              OpenGoalMinDuration;                              		// 0x019C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OpenGoalMaxDistance;                              		// 0x01A0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OpenGoalMaxDefense;                               		// 0x01A4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              LongTimeNearGoalDuration;                         		// 0x01A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              LongTimeNearGoalMaxDistance;                      		// 0x01AC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ShotMaxDistanceToGoal;                            		// 0x01B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ShotScorability;                                  		// 0x01B4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ShotSpeedTowardsGoal;                             		// 0x01B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SaveScorability;                                  		// 0x01BC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SaveDistanceToGoal;                               		// 0x01C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SaveHitMaxTime;                                   		// 0x01C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SaveShotMaxTime;                                  		// 0x01C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FastBreakMinDistanceToGoal;                       		// 0x01CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FastBreakMaxDistanceToGoal;                       		// 0x01D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FastBreakSpeedTowardsGoal;                        		// 0x01D4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FastBreakDuration;                                		// 0x01D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MissedShotMinScorability;                         		// 0x01DC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MissedShotMinTension;                             		// 0x01E0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MissedShotMinLastHitTime;                         		// 0x01E4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RelevantDemoMaxDistanceToBall;                    		// 0x01E8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              RelevantDemoMaxBallDistanceToGoal;                		// 0x01EC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AerialMinValue;                                   		// 0x01F0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AerialMinDuration;                                		// 0x01F4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AerialMinCarInAirDuration;                        		// 0x01F8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AerialCooldown;                                   		// 0x01FC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              LowEnergyMaxExcitement;                           		// 0x0200 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              LowEnergyMaxTension;                              		// 0x0204 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ChantLowEnergyDuration;                           		// 0x0208 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ChantLowEnergyRandomDuration;                     		// 0x020C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              KickoffTimeRemaining;                             		// 0x0210 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                KickoffScoreSeparation;                           		// 0x0214 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TenseNearGoalMinTension;                          		// 0x0218 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TenseNearGoalDuration;                            		// 0x021C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TenseNearGoalDistance;                            		// 0x0220 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TenseClearDistance;                               		// 0x0224 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PostGameExcitement;                               		// 0x0228 (0x0004) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FCrowdValueState>                    ExcitementStates;                                 		// 0x0230 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FCrowdValueState>                    TensionStates;                                    		// 0x0240 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FCrowdScoreState>                    ScoreStates;                                      		// 0x0250 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CrowdSoundSettings_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.CrowdActorManager_TA
// 0x0018 (0x0268 - 0x0280)
class ACrowdActorManager_TA : public AActor
{
public:
	TArray<class ACrowdActor_TA*>                      CrowdActors;                                      		// 0x0268 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UCrowdSounds_TA*                             Sounds;                                           		// 0x0278 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CrowdActorManager_TA");
		}

		return uClassPointer;
	};

	bool __CrowdActorManager_TA__PlayCrowdSound_BEC57CC741EC5B03A2E363A68BE693A9(class ACrowdActor_TA* C);
	bool __CrowdActorManager_TA__StopCrowdSound_6EAC2191423C5C8793D37F90C9007067(class ACrowdActor_TA* C);
	void __CrowdActorManager_TA__Destroyed_51173D8E4CBC4BDF5A6FA0A8734E46C3(class ACrowdActor_TA* C);
	void eventDestroyed();
	void StopCrowdExcitementSound(class UAkSoundCue* Sound, class AActor* FromActor);
	void StopCrowdSound(struct FScriptDelegate GetSoundDelegate);
	void PlayCrowdActorSound(class UAkSoundCue* Sound, class AActor* FromActor);
	void PlayCrowdSound(struct FScriptDelegate GetSoundDelegate);
	void OverrideCrowdActorSounds(class UCrowdSounds_TA* NewSounds);
	void SetCrowdSounds(class UCrowdSounds_TA* NewSounds);
	void SetCrowdActors(TArray<class ACrowdActor_TA*> Actors);
};

// Class TAGame.__ConsecutiveMatchTracker_TA__HandleGameEnded_D4012BAF4DEED71ADE8930B1446382DC
// 0x0008 (0x0060 - 0x0068)
class U__ConsecutiveMatchTracker_TA__HandleGameEnded_D4012BAF4DEED71ADE8930B1446382DC : public UObject
{
public:
	class AGameEvent_Soccar_TA*                        GameEvent;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ConsecutiveMatchTracker_TA__HandleGameEnded_D4012BAF4DEED71ADE8930B1446382DC");
		}

		return uClassPointer;
	};

	bool __ConsecutiveMatchTracker_TA__HandleGameEnded_D4012BAF4DEED71ADE8930B1446382DC(struct FMatchData Player);
};

// Class TAGame.ProductStat_AerialGoals_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_AerialGoals_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_AerialGoals_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.ProductStat_Assists_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_Assists_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_Assists_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.ProductStat_BackwardsGoals_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_BackwardsGoals_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_BackwardsGoals_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.ProductStat_BicycleGoals_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_BicycleGoals_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_BicycleGoals_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.ProductStat_Centers_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_Centers_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_Centers_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.ProductStat_Clears_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_Clears_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_Clears_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.ProductStat_Juggles_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_Juggles_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_Juggles_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.ProductStat_LongGoals_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_LongGoals_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_LongGoals_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.ProductStat_ShotsOnGoal_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_ShotsOnGoal_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_ShotsOnGoal_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.ProductStat_TurtleGoals_TA
// 0x0000 (0x00B0 - 0x00B0)
class UProductStat_TurtleGoals_TA : public UProductStat_SoccarEventBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductStat_TurtleGoals_TA");
		}

		return uClassPointer;
	};

	void OnStatEvent(class UStatEvent_TA* StatEvent);
};

// Class TAGame.__GFxData_FirstTimeExperience_TA__LoadFTELevel_BEA83A4F4C56E824264251939DEF2DFA
// 0x0010 (0x0060 - 0x0070)
class U__GFxData_FirstTimeExperience_TA__LoadFTELevel_BEA83A4F4C56E824264251939DEF2DFA : public UObject
{
public:
	struct FString                                     AddedInfo;                                        		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_FirstTimeExperience_TA__LoadFTELevel_BEA83A4F4C56E824264251939DEF2DFA");
		}

		return uClassPointer;
	};

	void __GFxData_FirstTimeExperience_TA__LoadFTELevel_BEA83A4F4C56E824264251939DEF2DFA(struct FString S);
};

// Class TAGame.LanServerMetaData_TA
// 0x0084 (0x0060 - 0x00E4)
class ULanServerMetaData_TA : public UObject
{
public:
	struct FUniqueNetId                                OwnerId;                                          		// 0x0060 (0x0048) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     OwnerName;                                        		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     ServerName;                                       		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FName                                       ServerMap;                                        		// 0x00C8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                ServerGameMode;                                   		// 0x00D0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bPassword : 1;                                    		// 0x00D4 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	int                                                NumPlayers;                                       		// 0x00D8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                MaxPlayers;                                       		// 0x00DC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                BuildID;                                          		// 0x00E0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.LanServerMetaData_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__MatchSeries_TA__GetSeriesWinnerFromData_0C035DBF4EF46F573F2D0C930ECF68C9
// 0x0004 (0x0060 - 0x0064)
class U__MatchSeries_TA__GetSeriesWinnerFromData_0C035DBF4EF46F573F2D0C930ECF68C9 : public UObject
{
public:
	int                                                HalfMatchGames;                                   		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__MatchSeries_TA__GetSeriesWinnerFromData_0C035DBF4EF46F573F2D0C930ECF68C9");
		}

		return uClassPointer;
	};

	bool __MatchSeries_TA__GetSeriesWinnerFromData_0C035DBF4EF46F573F2D0C930ECF68C9(int GamesWon);
};

// Class TAGame.__MatchType_Public_TA__CanSkipPreMatchLobby_BBA373E94E4CBF9DF1768085C754BF25
// 0x0004 (0x0060 - 0x0064)
class U__MatchType_Public_TA__CanSkipPreMatchLobby_BBA373E94E4CBF9DF1768085C754BF25 : public UObject
{
public:
	int                                                MaxTeamSize;                                      		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__MatchType_Public_TA__CanSkipPreMatchLobby_BBA373E94E4CBF9DF1768085C754BF25");
		}

		return uClassPointer;
	};

	bool __MatchType_Public_TA__CanSkipPreMatchLobby_BBA373E94E4CBF9DF1768085C754BF25(class ATeam_TA* Team);
};

// Class TAGame.IdleFeature_TA
// 0x0008 (0x0060 - 0x0068)
class UIdleFeature_TA : public UObject
{
public:
	float                                              IdleActionTime;                                   		// 0x0060 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              IdleWarningTime;                                  		// 0x0064 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IdleFeature_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.IdleKickFeature_TA
// 0x0000 (0x0068 - 0x0068)
class UIdleKickFeature_TA : public UIdleFeature_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IdleKickFeature_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__MatchType_Tournament_TA__CanSkipPreMatchLobby_C80964844E629A8AEA85A0BC1DE85BAA
// 0x0004 (0x0060 - 0x0064)
class U__MatchType_Tournament_TA__CanSkipPreMatchLobby_C80964844E629A8AEA85A0BC1DE85BAA : public UObject
{
public:
	int                                                MaxTeamSize;                                      		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__MatchType_Tournament_TA__CanSkipPreMatchLobby_C80964844E629A8AEA85A0BC1DE85BAA");
		}

		return uClassPointer;
	};

	bool __MatchType_Tournament_TA__CanSkipPreMatchLobby_C80964844E629A8AEA85A0BC1DE85BAA(class ATeam_TA* Team);
};

// Class TAGame.TourServerConfig_TA
// 0x0008 (0x0078 - 0x0080)
class UTourServerConfig_TA : public UOnlineConfig_X
{
public:
	unsigned long                                      bBotTeamsEnabled : 1;                             		// 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	float                                              MidSeriesConnectionTimeout;                       		// 0x007C (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourServerConfig_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.IdleBanFeature_TA
// 0x0000 (0x0068 - 0x0068)
class UIdleBanFeature_TA : public UIdleFeature_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IdleBanFeature_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_ProductExpirationNotification_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_ProductExpirationNotification_TA : public UGFxData_Notification_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductExpirationNotification_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__ProductsConfig_TA__IsTradeInAllowed_7A21DE484AC63FCE6A1C50AC2418CF55
// 0x0004 (0x0060 - 0x0064)
class U__ProductsConfig_TA__IsTradeInAllowed_7A21DE484AC63FCE6A1C50AC2418CF55 : public UObject
{
public:
	int                                                SeriesID;                                         		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ProductsConfig_TA__IsTradeInAllowed_7A21DE484AC63FCE6A1C50AC2418CF55");
		}

		return uClassPointer;
	};

	bool __ProductsConfig_TA__IsTradeInAllowed_7A21DE484AC63FCE6A1C50AC2418CF55(struct FProductTradeInFilter P);
};

// Class TAGame.LoadoutUtils_TA
// 0x0000 (0x0060 - 0x0060)
class ULoadoutUtils_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.LoadoutUtils_TA");
		}

		return uClassPointer;
	};

	void ConformRandomizedLoadoutData(class ULoadout_TA* Loadout);
	void FixupDeprecatedTeamPaint(class ULoadout_TA* Loadout);
	void ConvertFromOldCustomPaint(class ULoadout_TA* Loadout, class UCarColorSet_TA* OldSet, class UCarColorSet_TA* NewSet);
	void ConvertFromOldTeamPaint(class ULoadout_TA* Loadout, class UCarColorSet_TA* OldSet, class UCarColorSet_TA* NewSet);
	void ConvertFromOldLoadout(class ULoadout_TA* OldLoadout, class ULoadout_TA* NewLoadout, int TeamIndex);
};

// Class TAGame.__ProfileVersions_TA__CarColors2_E458493F421CD144EB16E9B1D2B7EF47
// 0x0010 (0x0060 - 0x0070)
class U__ProfileVersions_TA__CarColors2_E458493F421CD144EB16E9B1D2B7EF47 : public UObject
{
public:
	TArray<class ATeam_TA*>                            TeamArchetypes;                                   		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ProfileVersions_TA__CarColors2_E458493F421CD144EB16E9B1D2B7EF47");
		}

		return uClassPointer;
	};

	void __ProfileVersions_TA__CarColors2_E458493F421CD144EB16E9B1D2B7EF47(class ULoadoutSet_TA* Set);
};

// Class TAGame.ServerPerformanceConfig_TA
// 0x0014 (0x0078 - 0x008C)
class UServerPerformanceConfig_TA : public UOnlineConfig_X
{
public:
	float                                              InternalLowFPS;                                   		// 0x0078 (0x0004) [0x0000000000000000]               
	float                                              InternalLowFPSTimeThreshold;                      		// 0x007C (0x0004) [0x0000000000000000]               
	float                                              PublicBadFPS;                                     		// 0x0080 (0x0004) [0x0000000000000000]               
	float                                              PublicMediocreFPS;                                		// 0x0084 (0x0004) [0x0000000000000000]               
	float                                              FpsRollingAverageTime;                            		// 0x0088 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ServerPerformanceConfig_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__ShopsManager_TA__Purchase_FC73C11E41142AE7AF66F48C513744FD
// 0x0018 (0x0060 - 0x0078)
class U__ShopsManager_TA__Purchase_FC73C11E41142AE7AF66F48C513744FD : public UObject
{
public:
	struct FScriptDelegate                             SuccessCallback;                                  		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ShopsManager_TA__Purchase_FC73C11E41142AE7AF66F48C513744FD");
		}

		return uClassPointer;
	};

	void __ShopsManager_TA__Purchase_FC73C11E41142AE7AF66F48C513744FD(TArray<struct FOnlineProductData> PurchasedProducts, TArray<struct FCurrency> PurchasedCurrencies);
};

// Class TAGame.ShopsService_TA
// 0x0000 (0x0060 - 0x0060)
class UShopsService_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ShopsService_TA");
		}

		return uClassPointer;
	};

	class UAsyncTask* Purchase(struct FUniqueNetId PlayerID, int CostID, int ShopID, int DiscountID, int Count, struct FScriptDelegate SuccessCallback, struct FScriptDelegate FailedCallback);
	class UAsyncTask* GetCrateShop(int CrateID, struct FScriptDelegate Callback, struct FScriptDelegate FailedCallback);
	class UAsyncTask* GetShopCatalogue(int ShopID, struct FScriptDelegate Callback, struct FScriptDelegate FailedCallback);
	class UAsyncTask* GetAllShops(struct FScriptDelegate Callback, struct FScriptDelegate FailedCallback);
};

// Class TAGame.SpawnPointGroup_TA
// 0x0044 (0x0060 - 0x00A4)
class USpawnPointGroup_TA : public UObject
{
public:
	TArray<struct FVector>                             SpawnOffset;                                      		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FRotator>                            SpawnFacing;                                      		// 0x0070 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class AActor*>                              SpawnPoints;                                      		// 0x0080 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class APRI_TA*>                             SpotPRI;                                          		// 0x0090 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                MaxSpots;                                         		// 0x00A0 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpawnPointGroup_TA");
		}

		return uClassPointer;
	};

	void RemoveFromSpawnPoints(class AController* ForPlayer);
	bool GetSpawnOrientation(class AController* ForPlayer, struct FVector& out_Location, struct FRotator& out_Rotation);
	bool IsPointAvailable(int PointIdx);
	int GetPointId(class AActor* Point);
	bool TryAddToGroupAtPoint(class AController* Car, int PointIdx);
	bool TryAddToGroup(class AController* Car);
	void SetupPoints(class AGameEvent_TA* GameEvent, struct FVector& Center, struct FRotator& Orientation);
};

// Class TAGame.__SpecialEventConfig_TA__SyncImageForIndex_79BF3071415256B28A5707AB4A393FBC
// 0x0004 (0x0060 - 0x0064)
class U__SpecialEventConfig_TA__SyncImageForIndex_79BF3071415256B28A5707AB4A393FBC : public UObject
{
public:
	int                                                I;                                                		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__SpecialEventConfig_TA__SyncImageForIndex_79BF3071415256B28A5707AB4A393FBC");
		}

		return uClassPointer;
	};

	void __SpecialEventConfig_TA__SyncImageForIndex_79BF3071415256B28A5707AB4A393FBC(class UTexture2DDynamic* Texture);
};

// Class TAGame.__StatusTriggerManager_TA__RemoveTriggers_171F469D4C5C73728B6777B2645337E8
// 0x0008 (0x0060 - 0x0068)
class U__StatusTriggerManager_TA__RemoveTriggers_171F469D4C5C73728B6777B2645337E8 : public UObject
{
public:
	class UTriggerClump_TA*                            Clump;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__StatusTriggerManager_TA__RemoveTriggers_171F469D4C5C73728B6777B2645337E8");
		}

		return uClassPointer;
	};

	void __StatusTriggerManager_TA__RemoveTriggers_171F469D4C5C73728B6777B2645337E8(class UStatusObserver_X* O);
};

// Class TAGame.__StatusTriggerManager_TA__RegisterTriggers_F33B01FE471C4D3B4D4228A7A0AC3FC1
// 0x0018 (0x0060 - 0x0078)
class U__StatusTriggerManager_TA__RegisterTriggers_F33B01FE471C4D3B4D4228A7A0AC3FC1 : public UObject
{
public:
	class UTriggerCondition_TA*                        InCondition;                                      		// 0x0060 (0x0008) [0x0000000000000000]               
	TArray<class UStatusTrigger_X*>                    InTriggers;                                       		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__StatusTriggerManager_TA__RegisterTriggers_F33B01FE471C4D3B4D4228A7A0AC3FC1");
		}

		return uClassPointer;
	};

	void __StatusTriggerManager_TA__RegisterTriggers_0FA1F6B445154DD3852EA7877B50AB38(class UStatusObserver_X* O);
	void __StatusTriggerManager_TA__RegisterTriggers_F33B01FE471C4D3B4D4228A7A0AC3FC1();
};

// Class TAGame.__StatusTriggerManager_TA__AddTriggerCondition_6977EEB34F925862D53E998731765096
// 0x0008 (0x0060 - 0x0068)
class U__StatusTriggerManager_TA__AddTriggerCondition_6977EEB34F925862D53E998731765096 : public UObject
{
public:
	class UTriggerCondition_TA*                        InCondition;                                      		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__StatusTriggerManager_TA__AddTriggerCondition_6977EEB34F925862D53E998731765096");
		}

		return uClassPointer;
	};

	void __StatusTriggerManager_TA__AddTriggerCondition_6977EEB34F925862D53E998731765096(class UTriggerClump_TA* G);
};

// Class TAGame.__StatusTriggerManager_TA__Init_93EA473D4A9C568AC140C6B21C8FE5D9
// 0x0010 (0x0060 - 0x0070)
class U__StatusTriggerManager_TA__Init_93EA473D4A9C568AC140C6B21C8FE5D9 : public UObject
{
public:
	class ULocalPlayer_TA*                             LP;                                               		// 0x0060 (0x0008) [0x0000000000000000]               
	class UTriggerCondition_TA*                        TriggerCondition;                                 		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__StatusTriggerManager_TA__Init_93EA473D4A9C568AC140C6B21C8FE5D9");
		}

		return uClassPointer;
	};

	void __StatusTriggerManager_TA__Init_4E83AE1B444F61887DB84FB11F13EC60(class UTriggerClump_TA* G);
	void __StatusTriggerManager_TA__Init_93EA473D4A9C568AC140C6B21C8FE5D9(class UStatusObserver_X* O);
};

// Class TAGame.StatusObserver_XPLevel_TA
// 0x0008 (0x00A0 - 0x00A8)
class UStatusObserver_XPLevel_TA : public UStatusObserver_X
{
public:
	int                                                LastGivenXp;                                      		// 0x00A0 (0x0004) [0x0000000000000000]               
	int                                                LastGivenLevel;                                   		// 0x00A4 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatusObserver_XPLevel_TA");
		}

		return uClassPointer;
	};

	void DebugPrint();
	void UpdateLevelTrigger(class UStatusTrigger_PlayerLevel_TA* InTrigger);
	void HandleLevelUpdated(class UClientXPSave_TA* XPSave, int NewLevel, int OldLevel);
	void UpdateXPTrigger(class UStatusTrigger_PlayerXP_TA* InTrigger);
	void HandleTriggerXPUpdate(class UClientXPSave_TA* XPSave, int OldXP);
	void HandleSaveLoaded(class UClientXPSave_TA* InXPSave);
	void Init(class ULocalPlayer_X* LP);
};

// Class TAGame.StatusObserver_MenuStack_TA
// 0x0028 (0x00A0 - 0x00C8)
class UStatusObserver_MenuStack_TA : public UStatusObserver_X
{
public:
	struct FName                                       LastMenuVisited;                                  		// 0x00A0 (0x0008) [0x0000000000000000]               
	struct FName                                       LastButtonTriggered;                              		// 0x00A8 (0x0008) [0x0000000000000000]               
	struct FName                                       LastCrumbTrailCompleted;                          		// 0x00B0 (0x0008) [0x0000000000000000]               
	class UCrumbTrails_TA*                             CrumbManager;                                     		// 0x00B8 (0x0008) [0x0000000000000000]               
	class UCrumbTrailSave_TA*                          CrumbSave;                                        		// 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatusObserver_MenuStack_TA");
		}

		return uClassPointer;
	};

	void DebugPrint();
	void UpdateCrumbTrigger(class UStatusTrigger_CrumbPathComplete_TA* InTrigger);
	void UpdateMenuButtonTrigger(class UStatusTrigger_MenuButton_TA* InTrigger);
	void UpdateMenuTrigger(class UStatusTrigger_Menu_TA* InTrigger);
	void HandleCrumbComplete(struct FName InCrumbName);
	void HandleMenuButtonChange(struct FName TriggeredButton);
	void HandleMenuChange(struct FName PrevMenu, struct FName TopMenu);
	void SetupCrumbSave();
	void HandleCrumbSaveAdded(class UCrumbTrailSave_TA* InSave);
	void SaveTriggerSetup();
	void Init(class ULocalPlayer_X* LP);
};

// Class TAGame.StatusObserver_Products_TA
// 0x0050 (0x00A0 - 0x00F0)
class UStatusObserver_Products_TA : public UStatusObserver_X
{
public:
	TArray<int>                                        LastEquippedProducts;                             		// 0x00A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        LastOwnedProducts;                                		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                LastTeamIndex;                                    		// 0x00C0 (0x0004) [0x0000000000000000]               
	class USaveData_TA*                                SaveData;                                         		// 0x00C8 (0x0008) [0x0000000000000000]               
	class UProductsSave_TA*                            ProductsSave;                                     		// 0x00D0 (0x0008) [0x0000000000000000]               
	class UProfileLoadoutSave_TA*                      ProfileLoadoutSave;                               		// 0x00D8 (0x0008) [0x0000000000000000]               
	TArray<int>                                        PendingChangedProductSlots;                       		// 0x00E0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatusObserver_Products_TA");
		}

		return uClassPointer;
	};

	void __StatusObserver_Products_TA__Init_DCEA29074C3E86C1AF749AA436B4D677(class UPlayerVanitySave_TA* P);
	void __StatusObserver_Products_TA__Init_85EDBEE243FF8BCCBE9A4EA2989ED384(class UPlayerVanitySave_TA* P);
	void __StatusObserver_Products_TA__HandleVanitySave_6D7757D1485AB043C2CEC78F5CA99A35(unsigned long long P);
	void __StatusObserver_Products_TA__RebuildOwnedProducts_23EB5E6B45ED5DEEF18D35843B27617A(int SlotIndex);
	bool __StatusObserver_Products_TA__RebuildOwnedProducts_447373F9494631A65474A29D72FEF57F(int Id);
	int __StatusObserver_Products_TA__RebuildOwnedProducts_292FA87F430EB8C4FBAE6A850339203F(class UOnlineProduct_TA* Op);
	void DebugPrint();
	void UpdateOwnedTrigger(class UStatusTrigger_ProductOwned_TA* InTrigger);
	void HandleProductAdded(class USaveData_TA* InSaveData, class UOnlineProduct_TA* OnlineProduct);
	void HandleProductRemoved(class USaveData_TA* InSaveData, class UOnlineProduct_TA* OnlineProduct);
	void HandleOnlineProductsSynced(class USaveData_TA* InSaveData);
	void RebuildOwnedProducts();
	void HandleProductSave(class UProductsSave_TA* InSaveData);
	void UpdateEquippedTrigger(class UStatusTrigger_ProductEquipped_TA* InTrigger);
	void OnTeamChanged(int InTeamIndex);
	void HandlePreviewTeamChanged(class UProfileLoadoutSave_TA* InLoadoutSave);
	void HandleTeamChanged(class APRI_X* InPRI);
	void HandlePRIReceived(class APRI_X* InPRI);
	void HandleReceivePlayerController(class APlayerController* PlayerRef);
	void HandleProductEquipped(int ProductID);
	void HandleVanitySave(class UPlayerVanitySave_TA* InVanitySave, int SlotIndex);
	void HandleLoadout(class UProfileLoadoutSave_TA* LoadoutSave);
	void UpdateTriggersBySlot(class UClass* InType, int InSlotIndex);
	void HandleSaveDataLoaded(class USaveData_TA* InSaveData);
	void Init(class ULocalPlayer_X* LP);
};

// Class TAGame.StatusObserver_FTE_TA
// 0x0010 (0x00A0 - 0x00B0)
class UStatusObserver_FTE_TA : public UStatusObserver_X
{
public:
	struct FName                                       LastGroupCompleted;                               		// 0x00A0 (0x0008) [0x0000000000000000]               
	class UFirstTimeExperienceManager_TA*              FTEManager;                                       		// 0x00A8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatusObserver_FTE_TA");
		}

		return uClassPointer;
	};

	void DebugPrint();
	void UpdateGroupTrigger(class UStatusTrigger_FTEGroupComplete_TA* InTrigger);
	void HandleGroupComplete(struct FName InGroupName);
	void HandleManagerAdded(class UFirstTimeExperienceManager_TA* InFTEManager);
	void HandleFTESaveAdded(class UFirstTimeExperienceSave_TA* InFTESave);
	void Init(class ULocalPlayer_X* LP);
};

// Class TAGame.__StayAsPartySystem_TA__FindHumanTeammatesOfID_2E6ABDF447BEC0C811459898799BE0A0
// 0x0014 (0x0060 - 0x0074)
class U__StayAsPartySystem_TA__FindHumanTeammatesOfID_2E6ABDF447BEC0C811459898799BE0A0 : public UObject
{
public:
	TArray<class APRI_TA*>                             PRIs;                                             		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                PlayerIndex;                                      		// 0x0070 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__StayAsPartySystem_TA__FindHumanTeammatesOfID_2E6ABDF447BEC0C811459898799BE0A0");
		}

		return uClassPointer;
	};

	bool __StayAsPartySystem_TA__FindHumanTeammatesOfID_2E6ABDF447BEC0C811459898799BE0A0(class APRI_TA* P);
};

// Class TAGame.ServerStartVoteEvent_TA
// 0x0018 (0x0060 - 0x0078)
class UServerStartVoteEvent_TA : public UObject
{
public:
	TArray<struct FPartyInfo>                          Parties;                                          		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class AActor*                                      VoteOwner;                                        		// 0x0070 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ServerStartVoteEvent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__StayAsPartySystem_TA__IsOneParty_8C7CADBE4635A7DBC21E36872B11AB8E
// 0x0010 (0x0060 - 0x0070)
class U__StayAsPartySystem_TA__IsOneParty_8C7CADBE4635A7DBC21E36872B11AB8E : public UObject
{
public:
	TArray<class APRI_TA*>                             PRIs;                                             		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__StayAsPartySystem_TA__IsOneParty_8C7CADBE4635A7DBC21E36872B11AB8E");
		}

		return uClassPointer;
	};

	bool __StayAsPartySystem_TA__IsOneParty_8C7CADBE4635A7DBC21E36872B11AB8E(class APRI_TA* P);
};

// Class TAGame.PartyLeaderChangedEvent_TA
// 0x00A8 (0x0060 - 0x0108)
class UPartyLeaderChangedEvent_TA : public UObject
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FUniqueNetId                                NewLeaderID;                                      		// 0x00A8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        NewFollowerIds;                                   		// 0x00F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class AActor*                                      VoterOwner;                                       		// 0x0100 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PartyLeaderChangedEvent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__StayAsPartySystem_TA__GFxPlayerJoinedParty_EF15A3F04FBC040FA0EFBFBBF196514F
// 0x0008 (0x0060 - 0x0068)
class U__StayAsPartySystem_TA__GFxPlayerJoinedParty_EF15A3F04FBC040FA0EFBFBBF196514F : public UObject
{
public:
	class UPartyLeaderChangedEvent_TA*                 LeaderChanged;                                    		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__StayAsPartySystem_TA__GFxPlayerJoinedParty_EF15A3F04FBC040FA0EFBFBBF196514F");
		}

		return uClassPointer;
	};

	bool __StayAsPartySystem_TA__GFxPlayerJoinedParty_EF15A3F04FBC040FA0EFBFBBF196514F(class APRI_TA* PRI);
};

// Class TAGame.__StayAsPartySystem_TA__GFxLeaderActive_5ECAFE8D42763DC6A3463899949E8EAC
// 0x0018 (0x0060 - 0x0078)
class U__StayAsPartySystem_TA__GFxLeaderActive_5ECAFE8D42763DC6A3463899949E8EAC : public UObject
{
public:
	class AStayAsPartyVoter_TA*                        Voter;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
	TArray<class APRI_TA*>                             PrimaryGroup;                                     		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__StayAsPartySystem_TA__GFxLeaderActive_5ECAFE8D42763DC6A3463899949E8EAC");
		}

		return uClassPointer;
	};

	bool __StayAsPartySystem_TA__GFxLeaderActive_7CD877FD4FAF458714082189401DD2A3(class APRI_TA* PRI);
	bool __StayAsPartySystem_TA__GFxLeaderActive_5ECAFE8D42763DC6A3463899949E8EAC(class APRI_TA* PRI);
};

// Class TAGame.GFxStayAsPartyDisplayButton_TA
// 0x0000 (0x0060 - 0x0060)
class UGFxStayAsPartyDisplayButton_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxStayAsPartyDisplayButton_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ServerFormPartyEvent_TA
// 0x0008 (0x0060 - 0x0068)
class UServerFormPartyEvent_TA : public UObject
{
public:
	class UMergePartyEvent_TA*                         ConfirmedMerge;                                   		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ServerFormPartyEvent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__StayAsPartySystem_TA__MergeEventConfirmFollower_CFD391024691DA3CDBAF8EBE17569B8B
// 0x0008 (0x0060 - 0x0068)
class U__StayAsPartySystem_TA__MergeEventConfirmFollower_CFD391024691DA3CDBAF8EBE17569B8B : public UObject
{
public:
	class UMergePartyEvent_TA*                         MergeEvent;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__StayAsPartySystem_TA__MergeEventConfirmFollower_CFD391024691DA3CDBAF8EBE17569B8B");
		}

		return uClassPointer;
	};

	bool __StayAsPartySystem_TA__MergeEventConfirmFollower_CFD391024691DA3CDBAF8EBE17569B8B(class APRI_TA* PRI);
};

// Class TAGame.StayAsPartyVote_TA
// 0x0050 (0x0060 - 0x00B0)
class UStayAsPartyVote_TA : public UObject
{
public:
	TArray<class AStayAsPartyVoter_TA*>                Voters;                                           		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class AStayAsPartyVoter_TA*>                VotedYes;                                         		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UMergePartyEvent_TA*>                 PendingMerges;                                    		// 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UMergePartyEvent_TA*>                 MergeRecord;                                      		// 0x0090 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FPartyUpMergeError>                  MergeErrors;                                      		// 0x00A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StayAsPartyVote_TA");
		}

		return uClassPointer;
	};

	void RemoveVote(class AStayAsPartyVoter_TA* Voter);
	bool HasVoted(struct FUniqueNetId& PlayerID);
	void ComposePartyChangeWithMerges(class UPartyLeaderChangedEvent_TA* PartyEvent);
	void RemovePlayerFromMerges(class AStayAsPartyVoter_TA* RemovedVoter);
	void AddPendingMerge(class UMergePartyEvent_TA* MergeEvent);
	bool CanPlayerVote(struct FUniqueNetId& PlayerID);
	class AStayAsPartyVoter_TA* FindVoter(struct FUniqueNetId& PlayerID);
	void AddFollowerToLeader(struct FUniqueNetId& LeaderID, struct FUniqueNetId& FollowerID);
	void RemoveFollower(struct FUniqueNetId& FollowerID);
};

// Class TAGame.__StayAsPartySystem_TA__ProcessVote_2080A19E4837462DDF7EB5B01DF12A58
// 0x0008 (0x0060 - 0x0068)
class U__StayAsPartySystem_TA__ProcessVote_2080A19E4837462DDF7EB5B01DF12A58 : public UObject
{
public:
	class AStayAsPartyVoter_TA*                        VoterItr;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__StayAsPartySystem_TA__ProcessVote_2080A19E4837462DDF7EB5B01DF12A58");
		}

		return uClassPointer;
	};

	bool __StayAsPartySystem_TA__ProcessVote_2080A19E4837462DDF7EB5B01DF12A58(class UMergePartyEvent_TA* Merge);
};

// Class TAGame.StayAsPartyMetrics_TA
// 0x0000 (0x0080 - 0x0080)
class UStayAsPartyMetrics_TA : public UMetricsGroup_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StayAsPartyMetrics_TA");
		}

		return uClassPointer;
	};

	void PartyMergeResults(TArray<struct FPartyMergeResult>& Results);
	void ProcessPartyUpResults(class UStayAsPartyVote_TA* Vote, class UGameEventFinishedState_TA* _);
	void ProcessMergeError(class UStayAsPartyVote_TA* Vote, class UErrorType* InErrorType, TArray<struct FUniqueNetId>& Invitees, struct FUniqueNetId& Leader);
	void OnMergeError(class UStayAsPartyVote_TA* Vote, class UServerMergeErrorEvent_TA* ErrorEvent);
	void OnMergeAdded(class UStayAsPartyVote_TA* Vote, class UMergePartyEvent_TA* MergeEvent);
	void PartyUpActive(TArray<struct FUniqueNetId>& Players);
	void OnPlayerVoted(class AStayAsPartyVoter_TA* Voter);
};

// Class TAGame.__StayAsPartySystem_TA__HandlePartyChanged_E04E8E9245BE336902EB09880C668DC3
// 0x0008 (0x0060 - 0x0068)
class U__StayAsPartySystem_TA__HandlePartyChanged_E04E8E9245BE336902EB09880C668DC3 : public UObject
{
public:
	class UPartyLeaderChangedEvent_TA*                 PartyEvent;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__StayAsPartySystem_TA__HandlePartyChanged_E04E8E9245BE336902EB09880C668DC3");
		}

		return uClassPointer;
	};

	bool __StayAsPartySystem_TA__HandlePartyChanged_E04E8E9245BE336902EB09880C668DC3(class AStayAsPartyVoter_TA* Voter);
};

// Class TAGame.ServerVoteStartedEvent_TA
// 0x0010 (0x0060 - 0x0070)
class UServerVoteStartedEvent_TA : public UObject
{
public:
	TArray<class AStayAsPartyVoter_TA*>                Voters;                                           		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ServerVoteStartedEvent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__StayAsPartySystem_TA__CreateVoteStartEvent_E8C6867E4DEB7FD8E94D9B81C0B1B3EE
// 0x0010 (0x0060 - 0x0070)
class U__StayAsPartySystem_TA__CreateVoteStartEvent_E8C6867E4DEB7FD8E94D9B81C0B1B3EE : public UObject
{
public:
	class UServerStartVoteEvent_TA*                    StartEvent;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
	class ATeam_TA*                                    Team;                                             		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__StayAsPartySystem_TA__CreateVoteStartEvent_E8C6867E4DEB7FD8E94D9B81C0B1B3EE");
		}

		return uClassPointer;
	};

	void __StayAsPartySystem_TA__CreateVoteStartEvent_E8C6867E4DEB7FD8E94D9B81C0B1B3EE(class APRI_TA* Leader);
};

// Class TAGame.__TourBracketCache_TA__Request_4D02F89442A8286E73B6CA9FE83A9D86
// 0x0008 (0x0060 - 0x0068)
class U__TourBracketCache_TA__Request_4D02F89442A8286E73B6CA9FE83A9D86 : public UObject
{
public:
	unsigned long long                                 TournamentID;                                     		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourBracketCache_TA__Request_4D02F89442A8286E73B6CA9FE83A9D86");
		}

		return uClassPointer;
	};

	void __TourBracketCache_TA__Request_4D02F89442A8286E73B6CA9FE83A9D86(class UError* E);
};

// Class TAGame.__TourBracketCache_TA__RequestCached_4870C3F74EB1FC13EF52098C060DCC79
// 0x0020 (0x0060 - 0x0080)
class U__TourBracketCache_TA__RequestCached_4870C3F74EB1FC13EF52098C060DCC79 : public UObject
{
public:
	int                                                BracketIndex;                                     		// 0x0060 (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             Callback;                                         		// 0x0068 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourBracketCache_TA__RequestCached_4870C3F74EB1FC13EF52098C060DCC79");
		}

		return uClassPointer;
	};

	void __TourBracketCache_TA__RequestCached_4870C3F74EB1FC13EF52098C060DCC79();
};

// Class TAGame.__TourCheckInError_TA__AlertSignupError_5DC5C67B44CD96118250BC8F1EFC6054
// 0x0010 (0x0060 - 0x0070)
class U__TourCheckInError_TA__AlertSignupError_5DC5C67B44CD96118250BC8F1EFC6054 : public UObject
{
public:
	class UGFxShell_TA*                                Shell;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
	unsigned long long                                 TournamentID;                                     		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourCheckInError_TA__AlertSignupError_5DC5C67B44CD96118250BC8F1EFC6054");
		}

		return uClassPointer;
	};

	void __TourCheckInError_TA__AlertSignupError_256BBE974527C3AA013323865B566371(class UGFxModal_X* _);
	void __TourCheckInError_TA__AlertSignupError_5DC5C67B44CD96118250BC8F1EFC6054(class UGFxModal_X* _);
};

// Class TAGame.PartyMessage_TourPreCheckInError_TA
// 0x0010 (0x00A8 - 0x00B8)
class UPartyMessage_TourPreCheckInError_TA : public UPartyMessage_X
{
public:
	unsigned long long                                 TourID;                                           		// 0x00A8 (0x0008) [0x0000000000000000]               
	struct FName                                       ErrorTypeName;                                    		// 0x00B0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PartyMessage_TourPreCheckInError_TA");
		}

		return uClassPointer;
	};

	class UPartyMessage_TourPreCheckInError_TA* SetError(class UErrorType* ErrorType);
	class UPartyMessage_TourPreCheckInError_TA* SetTourID(unsigned long long InTourID);
};

// Class TAGame.PartyMessage_TourPreCheckIn_TA
// 0x0008 (0x00A8 - 0x00B0)
class UPartyMessage_TourPreCheckIn_TA : public UPartyMessage_X
{
public:
	class UTourSettings_TA*                            Settings;                                         		// 0x00A8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PartyMessage_TourPreCheckIn_TA");
		}

		return uClassPointer;
	};

	class UPartyMessage_TourPreCheckIn_TA* SetTourSettings(class UTourSettings_TA* InSettings);
};

// Class TAGame.__TourMatchServerBrowser_TA__GetMatchServer_557C87524AAA233194BEFC88D3055707
// 0x0018 (0x0060 - 0x0078)
class U__TourMatchServerBrowser_TA__GetMatchServer_557C87524AAA233194BEFC88D3055707 : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourMatchServerBrowser_TA__GetMatchServer_557C87524AAA233194BEFC88D3055707");
		}

		return uClassPointer;
	};

	void __TourMatchServerBrowser_TA__GetMatchServer_557C87524AAA233194BEFC88D3055707(class URPC_TourGetMatchServer_TA* RPC);
};

// Class TAGame.RPC_TourGetMatchServer_TA
// 0x00D8 (0x00E8 - 0x01C0)
class URPC_TourGetMatchServer_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 TournamentID;                                     		// 0x0130 (0x0008) [0x0000000000000000]               
	int                                                MatchID;                                          		// 0x0138 (0x0004) [0x0000000000000000]               
	struct FCheckReservationResponse                   Reservation;                                      		// 0x0140 (0x0080) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourGetMatchServer_TA");
		}

		return uClassPointer;
	};

	struct FServerReservationData GetReservation();
	class URPC_TourGetMatchServer_TA* SetMatchID(int InMatchID);
	class URPC_TourGetMatchServer_TA* SetTournamentID(unsigned long long InTournamentID);
	class URPC_TourGetMatchServer_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_TourGetMatchServer2_TA
// 0x0000 (0x01C0 - 0x01C0)
class URPC_TourGetMatchServer2_TA : public URPC_TourGetMatchServer_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourGetMatchServer2_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PartyMessage_TourCheckIn_TA
// 0x0070 (0x00A8 - 0x0118)
class UPartyMessage_TourCheckIn_TA : public UPartyMessage_X
{
public:
	class UTourSettings_TA*                            TourSettings;                                     		// 0x00A8 (0x0008) [0x0000000000000000]               
	struct FTourTeam                                   Team;                                             		// 0x00B0 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FTourPrivateCredentials                     Credentials;                                      		// 0x00F8 (0x0020) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PartyMessage_TourCheckIn_TA");
		}

		return uClassPointer;
	};

	class UPartyMessage_TourCheckIn_TA* SetCredentials(struct FTourPrivateCredentials InCredentials);
	class UPartyMessage_TourCheckIn_TA* SetTeam(struct FTourTeam InTeam);
	class UPartyMessage_TourCheckIn_TA* SetTourSettings(class UTourSettings_TA* InSettings);
};

// Class TAGame.PartyMessage_TourCheckInError_TA
// 0x0010 (0x00A8 - 0x00B8)
class UPartyMessage_TourCheckInError_TA : public UPartyMessage_X
{
public:
	unsigned long long                                 TourID;                                           		// 0x00A8 (0x0008) [0x0000000000000000]               
	struct FName                                       ErrorTypeName;                                    		// 0x00B0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PartyMessage_TourCheckInError_TA");
		}

		return uClassPointer;
	};

	class UPartyMessage_TourCheckInError_TA* SetError(class UError* Error);
	class UPartyMessage_TourCheckInError_TA* SetTourID(unsigned long long InTourID);
};

// Class TAGame.TourPartyCheckInTransaction_TA
// 0x0040 (0x0060 - 0x00A0)
class UTourPartyCheckInTransaction_TA : public UObject
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UOnlineGameParty_X*                          Party;                                            		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UError*                                      CheckInError;                                     		// 0x0070 (0x0008) [0x0000000000000000]               
	class UTourSettings_TA*                            Settings;                                         		// 0x0078 (0x0008) [0x0000000000000000]               
	unsigned long                                      bDisposed : 1;                                    		// 0x0080 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FScriptDelegate                             __EventPartyCheckInError__Delegate;               		// 0x0088 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourPartyCheckInTransaction_TA");
		}

		return uClassPointer;
	};

	void NotifyPartyOfError(class UError* Error);
	void SetError(class UError* Error);
	void HandlePartySizeChanged(class UOnlineGameParty_X* InParty, int NewSize, int OldSize);
	void eventDispose();
	void Init(class UTourSettings_TA* InSettings);
	void EventPartyCheckInError(class UTourSettings_TA* TourSettings, class UError* Error);
};

// Class TAGame.__TourPartyCheckIn_TA__HandleLeaderCheckIn_DA5AF4CE46796704CF213AB25B076DC0
// 0x0010 (0x0060 - 0x0070)
class U__TourPartyCheckIn_TA__HandleLeaderCheckIn_DA5AF4CE46796704CF213AB25B076DC0 : public UObject
{
public:
	class UPartyMessage_TourCheckIn_TA*                Message;                                          		// 0x0060 (0x0008) [0x0000000000000000]               
	class UTourPartyCheckInTransaction_TA*             Transaction;                                      		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourPartyCheckIn_TA__HandleLeaderCheckIn_DA5AF4CE46796704CF213AB25B076DC0");
		}

		return uClassPointer;
	};

	void __TourPartyCheckIn_TA__HandleLeaderCheckIn_DA5AF4CE46796704CF213AB25B076DC0(class UTourSettings_TA* _);
};

// Class TAGame.PartyMessage_TourLeaveTournament_TA
// 0x0008 (0x00A8 - 0x00B0)
class UPartyMessage_TourLeaveTournament_TA : public UPartyMessage_X
{
public:
	unsigned long long                                 TourID;                                           		// 0x00A8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PartyMessage_TourLeaveTournament_TA");
		}

		return uClassPointer;
	};

	class UPartyMessage_TourLeaveTournament_TA* SetTourID(unsigned long long InTourID);
};

// Class TAGame.GFxData_TourSubscriptions_TA
// 0x0040 (0x0098 - 0x00D8)
class UGFxData_TourSubscriptions_TA : public UGFxDataSingleton_X
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourSubscriptions_TA*                       Subscriptions;                                    		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<struct FSubscriptionInfo>                   Created;                                          		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FSubscriptionInfo>                   AdminOf;                                          		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FSubscriptionInfo>                   RegisteredTo;                                     		// 0x00C8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourSubscriptions_TA");
		}

		return uClassPointer;
	};

	void __GFxData_TourSubscriptions_TA__Unsubscribe_540D9CA54EADAD072AAE688C01F5EB72(class UError* E);
	struct FSubscriptionInfo __GFxData_TourSubscriptions_TA__HandleCreatedChanged_35CA70D143FB0C9259033CA7BB542AB6(unsigned long long Id);
	struct FSubscriptionInfo __GFxData_TourSubscriptions_TA__HandleAdminOfChanged_D52EEDC84A7C62C6C9EE19B168D45054(unsigned long long Id);
	struct FSubscriptionInfo __GFxData_TourSubscriptions_TA__HandleRegisteredToChanged_E56FB32E40AC8627382B2095FF0ECA50(unsigned long long Id);
	void HandleRegisteredToChanged();
	void HandleAdminOfChanged();
	void HandleCreatedChanged();
	void HandleCancelCreated(class URPC_TourCancelCreated_TA* RPC);
	void CancelCreated(unsigned long long TournamentID);
	void Unsubscribe(unsigned long long TournamentID);
	void HandleSubscriptionsSynced(class UTourSubscriptions_TA* InSubscriptions, class UError* Error);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.__TourRegistration_TA__Register_25D668184DBC7A1D0711259341254F6D
// 0x0018 (0x0060 - 0x0078)
class U__TourRegistration_TA__Register_25D668184DBC7A1D0711259341254F6D : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourRegistration_TA__Register_25D668184DBC7A1D0711259341254F6D");
		}

		return uClassPointer;
	};

	void __TourRegistration_TA__Register_25D668184DBC7A1D0711259341254F6D(class UTourSettings_TA* Tournament);
};

// Class TAGame.__TriggerCondition_TA__AddTriggers_FB62DCC84B1C1B1538678CA5C3198239
// 0x0008 (0x0060 - 0x0068)
class U__TriggerCondition_TA__AddTriggers_FB62DCC84B1C1B1538678CA5C3198239 : public UObject
{
public:
	class UTriggerClump_TA*                            Clump;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TriggerCondition_TA__AddTriggers_FB62DCC84B1C1B1538678CA5C3198239");
		}

		return uClassPointer;
	};

	void __TriggerCondition_TA__AddTriggers_FB62DCC84B1C1B1538678CA5C3198239(class UStatusTrigger_X* T);
};

// Class TAGame.__UIConfig_TA__FindXPTier_0FC061D546FD220E2E40AEB38047B112
// 0x0004 (0x0060 - 0x0064)
class U__UIConfig_TA__FindXPTier_0FC061D546FD220E2E40AEB38047B112 : public UObject
{
public:
	int                                                XPAmount;                                         		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__UIConfig_TA__FindXPTier_0FC061D546FD220E2E40AEB38047B112");
		}

		return uClassPointer;
	};

	bool __UIConfig_TA__FindXPTier_0FC061D546FD220E2E40AEB38047B112(int XP);
};

// Class TAGame.____ConsecutiveMatchTracker_TA__HandleGameEnded_D4012BAF4DEED71ADE8930B1446382DC____ConsecutiveMatchTracker_TA__HandleGameEnded_D4012BAF4DEED71ADE8930B1446382DC_3F01CD9545863B690981BD9681AEE4BD
// 0x0050 (0x0060 - 0x00B0)
class U____ConsecutiveMatchTracker_TA__HandleGameEnded_D4012BAF4DEED71ADE8930B1446382DC____ConsecutiveMatchTracker_TA__HandleGameEnded_D4012BAF4DEED71ADE8930B1446382DC_3F01CD9545863B690981BD9681AEE4BD : public UObject
{
public:
	struct FMatchData                                  Player;                                           		// 0x0060 (0x0050) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.____ConsecutiveMatchTracker_TA__HandleGameEnded_D4012BAF4DEED71ADE8930B1446382DC____ConsecutiveMatchTracker_TA__HandleGameEnded_D4012BAF4DEED71ADE8930B1446382DC_3F01CD9545863B690981BD9681AEE4BD");
		}

		return uClassPointer;
	};

	bool ____ConsecutiveMatchTracker_TA__HandleGameEnded_D4012BAF4DEED71ADE8930B1446382DC____ConsecutiveMatchTracker_TA__HandleGameEnded_D4012BAF4DEED71ADE8930B1446382DC_3F01CD9545863B690981BD9681AEE4BD(class APRI_TA* PRI);
};

// Class TAGame.ChallengeCurrency_TA
// 0x0008 (0x0080 - 0x0088)
class UChallengeCurrency_TA : public UListenObject_TA
{
public:
	int                                                CurrencyID;                                       		// 0x0080 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Amount;                                           		// 0x0084 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ChallengeCurrency_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__BinaryUploader_TA__Upload_0FEF3E564E752AC742CBB49A48798380
// 0x0008 (0x0060 - 0x0068)
class U__BinaryUploader_TA__Upload_0FEF3E564E752AC742CBB49A48798380 : public UObject
{
public:
	class UWebRequest_X*                               Request;                                          		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__BinaryUploader_TA__Upload_0FEF3E564E752AC742CBB49A48798380");
		}

		return uClassPointer;
	};

	void __BinaryUploader_TA__Upload_0FEF3E564E752AC742CBB49A48798380(struct FString K, struct FString V);
};

// Class TAGame.GFxData_ChallengeDropGroup_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_ChallengeDropGroup_TA : public UGFxData_ItemDropGroup_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ChallengeDropGroup_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ChallengeFilter_TA
// 0x0000 (0x0060 - 0x0060)
class UChallengeFilter_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ChallengeFilter_TA");
		}

		return uClassPointer;
	};

	TArray<class UChallenge_TA*> FilterChallenges(TArray<class UChallenge_TA*>& AllChallenges);
};

// Class TAGame.__ChallengeReward_TA__Init_0A7C85974BB4F7776EAF32A88CC1B2BA
// 0x0008 (0x0060 - 0x0068)
class U__ChallengeReward_TA__Init_0A7C85974BB4F7776EAF32A88CC1B2BA : public UObject
{
public:
	class UListenObject_TA*                            ListenObj;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ChallengeReward_TA__Init_0A7C85974BB4F7776EAF32A88CC1B2BA");
		}

		return uClassPointer;
	};

	void __ChallengeReward_TA__Init_0A7C85974BB4F7776EAF32A88CC1B2BA(class UChallengeCurrency_TA* C);
};

// Class TAGame.__CinematicIntroSequence_TA__GetActionBinding_93235320474939DCA47D07BE99229CC8
// 0x0008 (0x0060 - 0x0068)
class U__CinematicIntroSequence_TA__GetActionBinding_93235320474939DCA47D07BE99229CC8 : public UObject
{
public:
	struct FName                                       ActionName;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CinematicIntroSequence_TA__GetActionBinding_93235320474939DCA47D07BE99229CC8");
		}

		return uClassPointer;
	};

	bool __CinematicIntroSequence_TA__GetActionBinding_9C4748B743F2DB5A36E9F0A831DD8957(struct FPlayerBinding B);
	bool __CinematicIntroSequence_TA__GetActionBinding_93235320474939DCA47D07BE99229CC8(struct FPlayerBinding B);
};

// Class TAGame.__CinematicIntroSequence_TA__SetTrackedBindings_E849AF544395EF0527E5A39A01A388FA
// 0x0008 (0x0060 - 0x0068)
class U__CinematicIntroSequence_TA__SetTrackedBindings_E849AF544395EF0527E5A39A01A388FA : public UObject
{
public:
	struct FName                                       ActionName;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CinematicIntroSequence_TA__SetTrackedBindings_E849AF544395EF0527E5A39A01A388FA");
		}

		return uClassPointer;
	};

	bool __CinematicIntroSequence_TA__SetTrackedBindings_93D650CD4C16EA9A84E013A87D3179A2(struct FPlayerBinding B);
	bool __CinematicIntroSequence_TA__SetTrackedBindings_E849AF544395EF0527E5A39A01A388FA(struct FPlayerBinding B);
};

// Class TAGame.SeqEvent_CinematicIntroSeqFinished_TA
// 0x0008 (0x017C - 0x0184)
class USeqEvent_CinematicIntroSeqFinished_TA : public USequenceEvent
{
public:
	int                                                SequenceIndex;                                    		// 0x0180 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_CinematicIntroSeqFinished_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_CinematicIntro_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_CinematicIntro_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_CinematicIntro_TA");
		}

		return uClassPointer;
	};

	void __GFxData_CinematicIntro_TA__OnShellSet_78FE6A5F4087A6883BEA80A08FBDF1BF(class USeqAct_CinematicIntroStartNextSeq_TA* SeqAct);
	class UCinematicIntroSequence_TA* GetActiveSequence();
	void HandleSequenceFinished(class UCinematicIntroSequence_TA* Seq);
	void OnFinished();
	void StartSequence(int SequenceIndex);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.__CrowdActorManager_TA__OverrideCrowdActorSounds_5C9EB5364FB43D6BD2D21FAE3364E779
// 0x0008 (0x0060 - 0x0068)
class U__CrowdActorManager_TA__OverrideCrowdActorSounds_5C9EB5364FB43D6BD2D21FAE3364E779 : public UObject
{
public:
	class UCrowdSounds_TA*                             NewSounds;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CrowdActorManager_TA__OverrideCrowdActorSounds_5C9EB5364FB43D6BD2D21FAE3364E779");
		}

		return uClassPointer;
	};

	void __CrowdActorManager_TA__OverrideCrowdActorSounds_5C9EB5364FB43D6BD2D21FAE3364E779(class ACrowdActor_TA* C);
};

// Class TAGame.__CrowdActorManager_TA__PlayCrowdSound_2C39936847A424B1E5D0C5AA51E06D16
// 0x0018 (0x0060 - 0x0078)
class U__CrowdActorManager_TA__PlayCrowdSound_2C39936847A424B1E5D0C5AA51E06D16 : public UObject
{
public:
	struct FScriptDelegate                             GetSoundDelegate;                                 		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CrowdActorManager_TA__PlayCrowdSound_2C39936847A424B1E5D0C5AA51E06D16");
		}

		return uClassPointer;
	};

	void __CrowdActorManager_TA__PlayCrowdSound_2C39936847A424B1E5D0C5AA51E06D16(class ACrowdActor_TA* C);
};

// Class TAGame.__CrowdActorManager_TA__StopCrowdSound_56C01D3B4EEF2DBA8ED98A8664C2A71F
// 0x0018 (0x0060 - 0x0078)
class U__CrowdActorManager_TA__StopCrowdSound_56C01D3B4EEF2DBA8ED98A8664C2A71F : public UObject
{
public:
	struct FScriptDelegate                             GetSoundDelegate;                                 		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CrowdActorManager_TA__StopCrowdSound_56C01D3B4EEF2DBA8ED98A8664C2A71F");
		}

		return uClassPointer;
	};

	void __CrowdActorManager_TA__StopCrowdSound_56C01D3B4EEF2DBA8ED98A8664C2A71F(class ACrowdActor_TA* C);
};

// Class TAGame.__CurrencyProductSet_TA__GetCurrencyIndexFromHashID_5EB179D2448ECF185F4D2E996EFE7090
// 0x0004 (0x0060 - 0x0064)
class U__CurrencyProductSet_TA__GetCurrencyIndexFromHashID_5EB179D2448ECF185F4D2E996EFE7090 : public UObject
{
public:
	struct FProductHashID                              CurrencyHashID;                                   		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__CurrencyProductSet_TA__GetCurrencyIndexFromHashID_5EB179D2448ECF185F4D2E996EFE7090");
		}

		return uClassPointer;
	};

	bool __CurrencyProductSet_TA__GetCurrencyIndexFromHashID_5EB179D2448ECF185F4D2E996EFE7090(struct FCurrency C);
};

// Class TAGame.__ESportConfig_TA__DownloadEventImage_AE17FDDA4881DA1E6142019DB6C2A3C1
// 0x0010 (0x0060 - 0x0070)
class U__ESportConfig_TA__DownloadEventImage_AE17FDDA4881DA1E6142019DB6C2A3C1 : public UObject
{
public:
	struct FString                                     URL;                                              		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ESportConfig_TA__DownloadEventImage_AE17FDDA4881DA1E6142019DB6C2A3C1");
		}

		return uClassPointer;
	};

	void __ESportConfig_TA__DownloadEventImage_AE17FDDA4881DA1E6142019DB6C2A3C1(class UTexture2DDynamic* Texture);
};

// Class TAGame.__ESportConfig_TA__GetNextEventTime_4083B8E94F3D3228150E539C6CF4C6DA
// 0x0008 (0x0060 - 0x0068)
class U__ESportConfig_TA__GetNextEventTime_4083B8E94F3D3228150E539C6CF4C6DA : public UObject
{
public:
	unsigned long long                                 CurrentTime;                                      		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ESportConfig_TA__GetNextEventTime_4083B8E94F3D3228150E539C6CF4C6DA");
		}

		return uClassPointer;
	};

	bool __ESportConfig_TA__GetNextEventTime_4083B8E94F3D3228150E539C6CF4C6DA(unsigned long long Time);
};

// Class TAGame.SeqEvent_PreviewGoalExplosion_TA
// 0x000C (0x017C - 0x0188)
class USeqEvent_PreviewGoalExplosion_TA : public USequenceEvent
{
public:
	class AFXActor_X*                                  FXInstance;                                       		// 0x0180 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_PreviewGoalExplosion_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SaveData_GameEditor_Training_TA
// 0x0058 (0x00A0 - 0x00F8)
class USaveData_GameEditor_Training_TA : public USaveData_GameEditor_TA
{
public:
	struct FString                                     LoadedSaveName;                                   		// 0x00A0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UTrainingEditorData_TA*                      TrainingData;                                     		// 0x00B0 (0x0008) [0x0000000000000000]               
	int                                                PlayerTeamNumber;                                 		// 0x00B8 (0x0004) [0x0000000000000000]               
	unsigned long                                      bUnowned : 1;                                     		// 0x00BC (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bPerfectCompleted : 1;                            		// 0x00BC (0x0004) [0x0000000000000000] [0x00000002] 
	int                                                ShotsCompleted;                                   		// 0x00C0 (0x0004) [0x0000000000000000]               
	struct FString                                     FavoritesFolderPath;                              		// 0x00C8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FString                                     MyTrainingFolderPath;                             		// 0x00D8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FString                                     DownloadedFolderPath;                             		// 0x00E8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SaveData_GameEditor_Training_TA");
		}

		return uClassPointer;
	};

	struct FString GetTrainingFullPath(class ULocalPlayer_TA* Player, unsigned char InSaveType);
	struct FString GetTrainingPath(unsigned char InSaveType);
	struct FString GetTrainingFolder(unsigned char InSaveType);
	unsigned char GetTrainingSaveType(unsigned long bOwned, unsigned long bFavorited);
	struct FString GetFullSavePath(class ULocalPlayer_TA* Player, struct FString SaveName);
	struct FString GetFullSaveDirectory(class ULocalPlayer_TA* Player);
	void Init();
};

// Class TAGame.TrainingEditorData_TA
// 0x00E0 (0x0060 - 0x0140)
class UTrainingEditorData_TA : public UObject
{
public:
	struct FGuid                                       TM_Guid;                                          		// 0x0060 (0x0010) [0x0000000000000000]               
	struct FString                                     Code;                                             		// 0x0070 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     TM_Name;                                          		// 0x0080 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned char                                      Type;                                             		// 0x0090 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      Difficulty;                                       		// 0x0091 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     CreatorName;                                      		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Description;                                      		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<int>                                        Tags;                                             		// 0x00B8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FName                                       MapName;                                          		// 0x00C8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                NumRounds;                                        		// 0x00D0 (0x0004) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	unsigned long long                                 CreatedAt;                                        		// 0x00D8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 UpdatedAt;                                        		// 0x00E0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FUniqueNetId                                CreatorPlayerID;                                  		// 0x00E8 (0x0048) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FEditorRoundData>                    Rounds;                                           		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TrainingEditorData_TA");
		}

		return uClassPointer;
	};

	void Init();
};

// Class TAGame.TrainingEditorMetrics_TA
// 0x0000 (0x0080 - 0x0080)
class UTrainingEditorMetrics_TA : public UMetricsGroup_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TrainingEditorMetrics_TA");
		}

		return uClassPointer;
	};

	void TrainingShotComplete(struct FGuid Id, int Index, unsigned long bSuccess, int ShotAttempt);
	void TrainingShotAttempt(struct FGuid Id, int Index, int ShotAttempt);
	void TrainingSetComplete(struct FGuid Id);
	void TrainingSetExit(struct FGuid Id);
	void TrainingSetEnter(struct FGuid Id);
	void TrainingSetDelete(struct FGuid Id);
	void TrainingSetDownload(struct FGuid Id);
	void TrainingEditorExit(struct FGuid Id);
	void TrainingEditorEnter(struct FGuid Id);
	void TrainingSetSubmitted(struct FGuid Id, struct FString TrainingType, int Difficulty, int TotalRounds, struct FString UserTags);
	void TrainingSetCreate(struct FGuid Id, struct FString TrainingType, int Difficulty, struct FString UserTags);
};

// Class TAGame.GFxData_GarageSlotDropGroup_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_GarageSlotDropGroup_TA : public UGFxData_ItemDropGroup_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_GarageSlotDropGroup_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__GFxData_ProductFilter_TA__UpdateProductSlotNewItems_0219023541D976D8FED2CF994EF2A006
// 0x0010 (0x0060 - 0x0070)
class U__GFxData_ProductFilter_TA__UpdateProductSlotNewItems_0219023541D976D8FED2CF994EF2A006 : public UObject
{
public:
	int                                                SlotIdx;                                          		// 0x0060 (0x0004) [0x0000000000000000]               
	class ULoadout_TA*                                 Loadout;                                          		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_ProductFilter_TA__UpdateProductSlotNewItems_0219023541D976D8FED2CF994EF2A006");
		}

		return uClassPointer;
	};

	bool __GFxData_ProductFilter_TA__UpdateProductSlotNewItems_9CD6F2E845EC9E795E2242A4465FC111(class UProduct_TA* Product);
	bool __GFxData_ProductFilter_TA__UpdateProductSlotNewItems_0219023541D976D8FED2CF994EF2A006(class UProduct_TA* Product);
};

// Class TAGame.__GFxData_ProductFilter_TA__SetProhibitedAttributeTypeSelected_189B52B74496E87E38C7AE8291C685BE
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_ProductFilter_TA__SetProhibitedAttributeTypeSelected_189B52B74496E87E38C7AE8291C685BE : public UObject
{
public:
	struct FName                                       Typename;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_ProductFilter_TA__SetProhibitedAttributeTypeSelected_189B52B74496E87E38C7AE8291C685BE");
		}

		return uClassPointer;
	};

	bool __GFxData_ProductFilter_TA__SetProhibitedAttributeTypeSelected_189B52B74496E87E38C7AE8291C685BE(class UClass* A);
};

// Class TAGame.__GFxData_ProductFilter_TA__SetExclusiveAttributeTypeSelected_05C5A8064E83D48F0041BE99A536244F
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_ProductFilter_TA__SetExclusiveAttributeTypeSelected_05C5A8064E83D48F0041BE99A536244F : public UObject
{
public:
	struct FName                                       Typename;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_ProductFilter_TA__SetExclusiveAttributeTypeSelected_05C5A8064E83D48F0041BE99A536244F");
		}

		return uClassPointer;
	};

	bool __GFxData_ProductFilter_TA__SetExclusiveAttributeTypeSelected_05C5A8064E83D48F0041BE99A536244F(class UClass* A);
};

// Class TAGame.__GFxData_ProductFilter_TA__GetProductAttributeFilters_20FEA1CB42645BB8E09BF2BCBAD4614B
// 0x0001 (0x0060 - 0x0061)
class U__GFxData_ProductFilter_TA__GetProductAttributeFilters_20FEA1CB42645BB8E09BF2BCBAD4614B : public UObject
{
public:
	unsigned char                                      FilterType;                                       		// 0x0060 (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_ProductFilter_TA__GetProductAttributeFilters_20FEA1CB42645BB8E09BF2BCBAD4614B");
		}

		return uClassPointer;
	};

	bool __GFxData_ProductFilter_TA__GetProductAttributeFilters_20FEA1CB42645BB8E09BF2BCBAD4614B(struct FFilterProductAttribute P);
};

// Class TAGame.__GFxData_ProductFilter_TA__GetProductSortingFilters_3529EBD04A8F9A413526FE889038022D
// 0x0001 (0x0060 - 0x0061)
class U__GFxData_ProductFilter_TA__GetProductSortingFilters_3529EBD04A8F9A413526FE889038022D : public UObject
{
public:
	unsigned char                                      FilterType;                                       		// 0x0060 (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_ProductFilter_TA__GetProductSortingFilters_3529EBD04A8F9A413526FE889038022D");
		}

		return uClassPointer;
	};

	bool __GFxData_ProductFilter_TA__GetProductSortingFilters_3529EBD04A8F9A413526FE889038022D(struct FFilterProductSorting P);
};

// Class TAGame.__GFxData_ProductFilter_TA__FilterProducts_4D6C1F824BCEE0CC008DD5A6A8FE1029
// 0x0028 (0x0060 - 0x0088)
class U__GFxData_ProductFilter_TA__FilterProducts_4D6C1F824BCEE0CC008DD5A6A8FE1029 : public UObject
{
public:
	class USaveData_TA*                                SaveData;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
	TArray<int>                                        AllEquippedProducts;                              		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long long>                         AllEquippedOnlineProducts;                        		// 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_ProductFilter_TA__FilterProducts_4D6C1F824BCEE0CC008DD5A6A8FE1029");
		}

		return uClassPointer;
	};

	bool __GFxData_ProductFilter_TA__FilterProducts_26D47293409F71D31174D890325E3CF7(class UOnlineProduct_TA* Op);
	bool __GFxData_ProductFilter_TA__FilterProducts_1BF97FC6499CF4811D184EB13187CC3F(class UProduct_TA* P);
	struct FProductHashID __GFxData_ProductFilter_TA__FilterProducts_4D6C1F824BCEE0CC008DD5A6A8FE1029(unsigned long long P);
};

// Class TAGame.__GFxData_ProductFilter_TA__InitProductAttributes_B9805A3F4EAF8CFCC25F6FBF20859092
// 0x0010 (0x0060 - 0x0070)
class U__GFxData_ProductFilter_TA__InitProductAttributes_B9805A3F4EAF8CFCC25F6FBF20859092 : public UObject
{
public:
	TArray<class UClass*>                              ExcludedAttributes;                               		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_ProductFilter_TA__InitProductAttributes_B9805A3F4EAF8CFCC25F6FBF20859092");
		}

		return uClassPointer;
	};

	void __GFxData_ProductFilter_TA__InitProductAttributes_B9805A3F4EAF8CFCC25F6FBF20859092(struct FString IgnoreAttribute);
};

// Class TAGame.GarageArchiveSlot_TA
// 0x0008 (0x0060 - 0x0068)
class UGarageArchiveSlot_TA : public UObject
{
public:
	class UProductsArchiveSave_TA*                     ArchiveSave;                                      		// 0x0060 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GarageArchiveSlot_TA");
		}

		return uClassPointer;
	};

	void __GarageArchiveSlot_TA__Construct_E606B82743124E68B1A3629CFF107262(class UClass* _, unsigned char SelectedFilter);
	void __GarageArchiveSlot_TA__Construct_1C74AD7644EF52D6DD52F4A211B8E0E0(unsigned char SelectedFilter);
	void HandleArchivedProductsChanged();
	void HandleArchiveSaveLoaded(class UProductsArchiveSave_TA* InArchiveSave);
	int GetPreviewQuantity(unsigned long bIgnoreAdditionalFilters);
	bool HasArchivedProducts();
	bool AttributeSelected();
	bool ViewingArchiveSlot();
	int ArchiveAttributeArrayIndex();
	int ArchiveSlotArrayIndex();
	unsigned char GetArchivedProductFilter(unsigned char DefaultArchiveFilter);
	void UpdateProducts(unsigned char SelectedFilter, unsigned char DefaultArchiveFilter);
	void UpdateSlotVisibility(unsigned char SelectedFilter);
	void UpdatePreviewQuantity(unsigned char SelectedFilter);
	void UpdateAttributeVisibility(unsigned long bArchiveSlotSelected);
	void OnSlotSelectedChanged(int SlotIndex, unsigned long bSelected, unsigned char SelectedFilter);
	void RemoveExclusiveAttribute(unsigned char SelectedFilter);
	void eventConstruct();
};

// Class TAGame.GFxData_PossibleTradeIn_TA
// 0x0054 (0x0094 - 0x00E8)
class UGFxData_PossibleTradeIn_TA : public UGFxDataRow_X
{
public:
	int                                                TradeInFilterID;                                  		// 0x0098 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      Quality;                                          		// 0x009C (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                NumberofTradeIns;                                 		// 0x00A0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                RemainingItems;                                   		// 0x00A4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FProductTradeInFilter                       TradeInFilter;                                    		// 0x00A8 (0x0040) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PossibleTradeIn_TA");
		}

		return uClassPointer;
	};

	void Init(unsigned char ProductQuality, TArray<class UOnlineProduct_TA*>& OnlineProducts, struct FProductTradeInFilter& InTradeInFilter);
};

// Class TAGame.__MtxConfig_TA__CreateModalForError_3C0F5FE341F046E797571C8386042A17
// 0x0008 (0x0060 - 0x0068)
class U__MtxConfig_TA__CreateModalForError_3C0F5FE341F046E797571C8386042A17 : public UObject
{
public:
	class UError*                                      Error;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__MtxConfig_TA__CreateModalForError_3C0F5FE341F046E797571C8386042A17");
		}

		return uClassPointer;
	};

	void __MtxConfig_TA__CreateModalForError_3C0F5FE341F046E797571C8386042A17(class UGFxModal_X* Modal);
};

// Class TAGame.MtxErrors_TA
// 0x0010 (0x0080 - 0x0090)
class UMtxErrors_TA : public UErrorList
{
public:
	class UErrorType*                                  MicrotransactionFulfillmentRestrictedWallet;      		// 0x0080 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  MicrotransactionFulfillmentRestrictedDaily;       		// 0x0088 (0x0008) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MtxErrors_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_Notification_AntiAddiction_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_Notification_AntiAddiction_TA : public UGFxData_Notification_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Notification_AntiAddiction_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_PartyInviteNotification_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_PartyInviteNotification_TA : public UGFxData_Notification_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PartyInviteNotification_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqEvent_MTXGarageReveal_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_MTXGarageReveal_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_MTXGarageReveal_TA");
		}

		return uClassPointer;
	};

	void SetRevealRarity(unsigned char InRarity);
};

// Class TAGame.GFxData_RewardDropGroup_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_RewardDropGroup_TA : public UGFxData_ItemDropGroup_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_RewardDropGroup_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_TourGetMatchReservations_TA
// 0x00F0 (0x00E8 - 0x01D8)
class URPC_TourGetMatchReservations_TA : public URPC_X
{
public:
	unsigned long long                                 ServerId;                                         		// 0x00E8 (0x0008) [0x0000000000000000]               
	struct FTourServerSettings                         Settings;                                         		// 0x00F0 (0x00E8) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourGetMatchReservations_TA");
		}

		return uClassPointer;
	};

	class URPC_TourGetMatchReservations_TA* SetServerID(unsigned long long InServerID);
};

// Class TAGame.TourGameUpdate_TA
// 0x0020 (0x0060 - 0x0080)
class UTourGameUpdate_TA : public UObject
{
public:
	TArray<struct FUniqueNetId>                        JoinedPlayers;                                    		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        IdlePlayers;                                      		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourGameUpdate_TA");
		}

		return uClassPointer;
	};

	void __TourGameUpdate_TA__Construct_1B6DB6E94C1AB2D25C242092D64BA0BC(class AGameEvent_TA* GameEvent);
	void __TourGameUpdate_TA__Construct_35B55F59416749FACF99B08108A17DF3(class AGameEvent_TA* G, class APRI_TA* PRI);
	bool __TourGameUpdate_TA__GetNoShowPlayers_F08E9E544BB497C7FBD31FBC8136885D(struct FUniqueNetId Id);
	struct FUniqueNetId __TourGameUpdate_TA__GetLeavers_DFFE50C346AA0C294B80499699B6045F(struct FReservationData P);
	bool __TourGameUpdate_TA__GetLeavers_D5B61E4E41CFB5D6B8E9C8936A3184F1(struct FReservationData P);
	struct FTourPlayerStats __TourGameUpdate_TA__GetPlayersStats_1DB194764E1E2A5DD695B7A9708C2CCE(class APRI_TA* PRI);
	class APRI_TA* __TourGameUpdate_TA__GetPlayersStats_4326BA3142898357A6C78699997DFBE3(class AController* P);
	class URPC_X* SendUpdateGameRPC(class UTourGameUpdateDispatcher_TA* Dispatcher, int InGameNum, struct FTourMatchGame InGameData, unsigned long long SeriesWinnerID);
	TArray<struct FTourPlayerStats> GetPlayersStats();
	TArray<struct FUniqueNetId> GetLeavers();
	TArray<struct FUniqueNetId> GetNoShowPlayers(class UTourGameUpdateDispatcher_TA* Dispatcher);
	void eventConstruct();
};

// Class TAGame.__TourUtils_TA__CalcTeamWins_C9EEEC794A23758A9DB64BB9BBF15D50
// 0x0008 (0x0060 - 0x0068)
class U__TourUtils_TA__CalcTeamWins_C9EEEC794A23758A9DB64BB9BBF15D50 : public UObject
{
public:
	unsigned long long                                 TeamID;                                           		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourUtils_TA__CalcTeamWins_C9EEEC794A23758A9DB64BB9BBF15D50");
		}

		return uClassPointer;
	};

	bool __TourUtils_TA__CalcTeamWins_C9EEEC794A23758A9DB64BB9BBF15D50(struct FTourMatchGame G);
};

// Class TAGame.RPC_TourCancelCreated_TA
// 0x0050 (0x00E8 - 0x0138)
class URPC_TourCancelCreated_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 TournamentID;                                     		// 0x0130 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourCancelCreated_TA");
		}

		return uClassPointer;
	};

	class URPC_TourCancelCreated_TA* SetTournamentID(unsigned long long InTournamentID);
	class URPC_TourCancelCreated_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.__GFxData_TourSubscriptions_TA__Unsubscribe_A925527941EDD86B2351FC91238BF995
// 0x0020 (0x0060 - 0x0080)
class U__GFxData_TourSubscriptions_TA__Unsubscribe_A925527941EDD86B2351FC91238BF995 : public UObject
{
public:
	class UOnlineGameParty_TA*                         Party;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             TimerDelegate;                                    		// 0x0068 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_TourSubscriptions_TA__Unsubscribe_A925527941EDD86B2351FC91238BF995");
		}

		return uClassPointer;
	};

	void __GFxData_TourSubscriptions_TA__Unsubscribe_C593D84448EC5C46F867CB9A7FB7C29D();
	void __GFxData_TourSubscriptions_TA__Unsubscribe_A925527941EDD86B2351FC91238BF995();
};

// Class TAGame.MenuSequence_TA
// 0x0048 (0x0060 - 0x00A8)
class UMenuSequence_TA : public UObject
{
public:
	struct FName                                       CameraState;                                      		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bRemotePlayersHidden : 1;                         		// 0x0068 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bLockPreviewActor : 1;                            		// 0x0068 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bImmediate : 1;                                   		// 0x0068 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	class UMenuSequencer_TA*                           MenuSequenceComp;                                 		// 0x0070 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FScriptDelegate                             __EventEnteredSequence__Delegate;                 		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventLeftSequence__Delegate;                    		// 0x0090 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MenuSequence_TA");
		}

		return uClassPointer;
	};

	class ACamera_MainMenu_TA* GetCamera();
	void SetLockPreviewActor();
	void SetRemotePlayersHidden();
	void SetCameraState();
	void TickSequence(float DeltaTime);
	void LeaveSequence(class UMenuSequence_TA* NextSequence);
	void EnterSequence(class UMenuSequence_TA* PrevSequence);
	void Init(class UMenuSequencer_TA* InComp);
	void EventLeftSequence(class UMenuSequence_TA* InSequence);
	void EventEnteredSequence(class UMenuSequence_TA* InSequence);
};

// Class TAGame.IMatchmakingViewFilter_TA
// 0x0000 (0x0060 - 0x0060)
class UIMatchmakingViewFilter_TA : public UInterface
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IMatchmakingViewFilter_TA");
		}

		return uClassPointer;
	};

	TArray<struct FName> GetAccessiblePlaylists(TArray<struct FName>& SelectedPlaylists);
};

// Class TAGame.MatchmakingViewFilter_Unranked_TA
// 0x0020 (0x0060 - 0x0080)
class UMatchmakingViewFilter_Unranked_TA : public UObject
{
public:
	class UIMicroEventConfig_TA*                       MicroEventConfig;                                 		// 0x0060 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0068 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
	class UIOnlineGamePlaylists_X*                     Playlists;                                        		// 0x0070 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData01[0x8];                               		// 0x0078 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchmakingViewFilter_Unranked_TA");
		}

		return uClassPointer;
	};

	bool __MatchmakingViewFilter_Unranked_TA__GetAccessiblePlaylists_4442BD0249D7434DF4550CAB38E15189(struct FName P);
	TArray<struct FName> GetAccessiblePlaylists(TArray<struct FName>& SelectedPlaylists);
};

// Class TAGame.MatchmakingViewFilter_Ranked_TA
// 0x0010 (0x0060 - 0x0070)
class UMatchmakingViewFilter_Ranked_TA : public UObject
{
public:
	class UIOnlineGamePlaylists_X*                     Playlists;                                        		// 0x0060 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0068 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchmakingViewFilter_Ranked_TA");
		}

		return uClassPointer;
	};

	TArray<struct FName> GetAccessiblePlaylists(TArray<struct FName>& SelectedPlaylists);
};

// Class TAGame.MatchmakingViewFilter_RankedSports_TA
// 0x0010 (0x0060 - 0x0070)
class UMatchmakingViewFilter_RankedSports_TA : public UObject
{
public:
	class UIOnlineGamePlaylists_X*                     Playlists;                                        		// 0x0060 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0068 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchmakingViewFilter_RankedSports_TA");
		}

		return uClassPointer;
	};

	TArray<struct FName> GetAccessiblePlaylists(TArray<struct FName>& SelectedPlaylists);
};

// Class TAGame.MatchmakingViewFilter_UnrankedSports_TA
// 0x0010 (0x0060 - 0x0070)
class UMatchmakingViewFilter_UnrankedSports_TA : public UObject
{
public:
	class UIOnlineGamePlaylists_X*                     Playlists;                                        		// 0x0060 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0068 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchmakingViewFilter_UnrankedSports_TA");
		}

		return uClassPointer;
	};

	TArray<struct FName> GetAccessiblePlaylists(TArray<struct FName>& SelectedPlaylists);
};

// Class TAGame.MatchmakingViewFilter_Casual_TA
// 0x0020 (0x0060 - 0x0080)
class UMatchmakingViewFilter_Casual_TA : public UObject
{
public:
	class UIMicroEventConfig_TA*                       MicroEventConfig;                                 		// 0x0060 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0068 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
	class UIOnlineGamePlaylists_X*                     Playlists;                                        		// 0x0070 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData01[0x8];                               		// 0x0078 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchmakingViewFilter_Casual_TA");
		}

		return uClassPointer;
	};

	bool __MatchmakingViewFilter_Casual_TA__GetAccessiblePlaylists_398797E144850163317747BBB902D248(struct FName P);
	TArray<struct FName> GetAccessiblePlaylists(TArray<struct FName>& SelectedPlaylists);
};

// Class TAGame.MatchmakingViewFilter_MicroEvent_TA
// 0x0000 (0x0080 - 0x0080)
class UMatchmakingViewFilter_MicroEvent_TA : public UMatchmakingViewFilter_Unranked_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchmakingViewFilter_MicroEvent_TA");
		}

		return uClassPointer;
	};

	TArray<struct FName> GetAccessiblePlaylists(TArray<struct FName>& SelectedPlaylists);
};

// Class TAGame.MatchmakingViewFilter_DebugMicroEvent_TA
// 0x0018 (0x0060 - 0x0078)
class UMatchmakingViewFilter_DebugMicroEvent_TA : public UObject
{
public:
	class USpecialEventConfig_TA*                      SpecialEventConfig;                               		// 0x0060 (0x0008) [0x0000000000000000]               
	class UIOnlineGamePlaylists_X*                     Playlists;                                        		// 0x0068 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0070 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchmakingViewFilter_DebugMicroEvent_TA");
		}

		return uClassPointer;
	};

	bool __MatchmakingViewFilter_DebugMicroEvent_TA__GetAccessiblePlaylists_96EC7B8F427456C240A85CB4CC9DD022(struct FName P);
	TArray<struct FName> GetAccessiblePlaylists(TArray<struct FName>& SelectedPlaylists);
};

// Class TAGame.__MenuSequencer_TA__GetSequence_F3F7D9E54F28139EA3AAF99B50599BF4
// 0x0008 (0x0060 - 0x0068)
class U__MenuSequencer_TA__GetSequence_F3F7D9E54F28139EA3AAF99B50599BF4 : public UObject
{
public:
	struct FName                                       SequenceName;                                     		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__MenuSequencer_TA__GetSequence_F3F7D9E54F28139EA3AAF99B50599BF4");
		}

		return uClassPointer;
	};

	bool __MenuSequencer_TA__GetSequence_F3F7D9E54F28139EA3AAF99B50599BF4(class UMenuSequence_TA* S);
};

// Class TAGame.IMicroEventConfig_TA
// 0x0000 (0x0060 - 0x0060)
class UIMicroEventConfig_TA : public UInterface
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IMicroEventConfig_TA");
		}

		return uClassPointer;
	};

	bool IsActiveMicroEventPlaylist(int PlaylistId);
	class UMicroEvent_TA* GetNextActiveMicroEvent();
};

// Class TAGame.__Mutator_Freeplay_TA__HandleUnlimitedBoostChange_752DAA204E5C178A3C07C09D084B37ED
// 0x0008 (0x0060 - 0x0068)
class U__Mutator_Freeplay_TA__HandleUnlimitedBoostChange_752DAA204E5C178A3C07C09D084B37ED : public UObject
{
public:
	class UGameplaySettingsSave_TA*                    Settings;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__Mutator_Freeplay_TA__HandleUnlimitedBoostChange_752DAA204E5C178A3C07C09D084B37ED");
		}

		return uClassPointer;
	};

	void __Mutator_Freeplay_TA__HandleUnlimitedBoostChange_752DAA204E5C178A3C07C09D084B37ED(class ACarComponent_Boost_TA* Boost);
};

// Class TAGame.__Mutator_Freeplay_TA__HandleGameplaySettingsSave_9A590E2340E985199C0E519FA734556A
// 0x0010 (0x0060 - 0x0070)
class U__Mutator_Freeplay_TA__HandleGameplaySettingsSave_9A590E2340E985199C0E519FA734556A : public UObject
{
public:
	class ACar_TA*                                     Car;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
	class UGameplaySettingsSave_TA*                    Settings;                                         		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__Mutator_Freeplay_TA__HandleGameplaySettingsSave_9A590E2340E985199C0E519FA734556A");
		}

		return uClassPointer;
	};

	void __Mutator_Freeplay_TA__HandleGameplaySettingsSave_9A590E2340E985199C0E519FA734556A();
};

// Class TAGame.GameEvent_Soccar_SubRules_Items_TA
// 0x0028 (0x0060 - 0x0088)
class UGameEvent_Soccar_SubRules_Items_TA : public UGameEvent_Soccar_SubRules_TA
{
public:
	class UPlayerItemDispenser_TA*                     DispenserArchetype;                               		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              StaggerTime;                                      		// 0x0068 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CurrentStaggerByTeam[0x2] ;                       		// 0x006C (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class UPlayerItemDispenser_TA*>             ItemDispensers;                                   		// 0x0078 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Soccar_SubRules_Items_TA");
		}

		return uClassPointer;
	};

	void RandomizeDispenserOrder();
	void CheckPlayers();
	void Unapply();
	void UnregisterEvents();
	void OnMatchEnd();
	void HandleGoalScored(class AGameEvent_Soccar_TA* GameEvent, class ABall_TA* Ball, class UGoal_TA* Goal, int ScoreIndex, int AssistIdx);
	void HandleCarSpawned(class AGameEvent_TA* GameEvent, class ACar_TA* Car);
	void HandleStartNewRound(class AGameEvent_Soccar_TA* GameEvent);
	void HandleTeamsCreated(class AGameEvent_Team_TA* GameEvent);
	void HandlePRIRemoved(class AGameEvent_TA* GameEvent, class APRI_TA* PRI);
	void HandlePRIAdded(class AGameEvent_TA* GameEvent, class APRI_TA* PRI);
	void OnNewRound();
	void StopUpdating();
	void Init();
};

// Class TAGame.PlayerItemDispenser_TA
// 0x0028 (0x0060 - 0x0088)
class UPlayerItemDispenser_TA : public UObject
{
public:
	float                                              ItemGiveRate;                                     		// 0x0060 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PreviewTimeSeconds;                               		// 0x0064 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UItemPool_TA*                                ItemPool;                                         		// 0x0068 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	unsigned long                                      bResetTimerOnDemolish : 1;                        		// 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bWaitingForNextRound : 1;                         		// 0x0070 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bGiveItemOnRoundStart : 1;                        		// 0x0070 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	unsigned long                                      bGiveItemOnFirstBallHit : 1;                      		// 0x0070 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	unsigned long                                      bGiveItemBeforeRoundStart : 1;                    		// 0x0070 (0x0004) [0x0000000000000001] [0x00000010] (CPF_Edit)
	unsigned long                                      bHideItemIconByDefault : 1;                       		// 0x0070 (0x0004) [0x0000000000000001] [0x00000020] (CPF_Edit)
	unsigned long                                      bGiven : 1;                                       		// 0x0070 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	float                                              NextItemTime;                                     		// 0x0074 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              NextItemPreviewTime;                              		// 0x0078 (0x0004) [0x0000000000002000] (CPF_Transient)
	class APRI_TA*                                     PRI;                                              		// 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerItemDispenser_TA");
		}

		return uClassPointer;
	};

	void GiveNextItemNextUpdate();
	void ClearNextItemPreviewTime();
	void ClearNextItemTime();
	void SetNextItemTime(float TimeFromNow);
	void OnGoalScored();
	void OnMatchEnd();
	void OnNewRound(float InStaggerTime, float InGameTimeRemaining);
	void Update();
	float GetTotalGameTimePlayed();
	float GetCurrentPickupCooldownTime();
	void SetCurrentPickupCooldownTime(float NewCooldownSeconds);
	void SetPickupCooldownTime(float NewCooldownSeconds);
	void HandleActiveRoundChanged(class AGameEvent_Soccar_TA* InGameEvent);
	void HandleFirstBallHit(class AGameEvent_Soccar_TA* InGameEvent);
	void HandleCarPickupsSet();
	void HandleCarDestroyed(class APawn_X* Car);
	void HandleCarDemolished(class ACar_TA* Car, struct FDemolishData Data);
	void HandleCarSet(class APRI_TA* OwningPRI);
	void SetPreviewTime(float NewTimeSeconds);
	void Init(class APRI_TA* InPRI, float InStaggerTime);
};

// Class TAGame.ItemPool_TA
// 0x0010 (0x0060 - 0x0070)
class UItemPool_TA : public UObject
{
public:
	TArray<struct FRandomWeight>                       Items;                                            		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ItemPool_TA");
		}

		return uClassPointer;
	};

	void OnCarDestroyedWithItem(class ACar_TA* Car);
	void GiveItem(class ACar_TA* Car);
	bool PreviewItem(class ACar_TA* Car);
	bool GiveItemForRespawn(class ACar_TA* Car);
	void OnGoalScored();
	void OnNewRound();
	void OnInit();
	int GetConcurrentItemCount();
	void Init();
};

// Class TAGame.__Mutator_Freeplay_TA__MutateObject_D6DF13B84F534462B0E45780E40AF64A
// 0x0008 (0x0060 - 0x0068)
class U__Mutator_Freeplay_TA__MutateObject_D6DF13B84F534462B0E45780E40AF64A : public UObject
{
public:
	class ACar_TA*                                     Car;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__Mutator_Freeplay_TA__MutateObject_D6DF13B84F534462B0E45780E40AF64A");
		}

		return uClassPointer;
	};

	void __Mutator_Freeplay_TA__MutateObject_E145142148A05CD17C0E7FA3F8DF3689();
	void __Mutator_Freeplay_TA__MutateObject_D6DF13B84F534462B0E45780E40AF64A(class UGameplaySettingsSave_TA* Settings);
};

// Class TAGame.MatchType_Freeplay_TA
// 0x0000 (0x00A8 - 0x00A8)
class UMatchType_Freeplay_TA : public UMatchType_Tutorial_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchType_Freeplay_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.TourGameUpdateDispatcher_TA
// 0x00C8 (0x0060 - 0x0128)
class UTourGameUpdateDispatcher_TA : public UObject
{
public:
	class UMatchSeries_TA*                             MatchSeries;                                      		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UOnlineGameReservations_X*                   Reservations;                                     		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FString                                     MatchGUID;                                        		// 0x0070 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long long                                 GameServerID;                                     		// 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long long                                 TournamentID;                                     		// 0x0088 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                MatchID;                                          		// 0x0090 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                GameNum;                                          		// 0x0094 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<unsigned long long>                         TeamIDs;                                          		// 0x0098 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FTourMatchGame                              GameData;                                         		// 0x00A8 (0x0018) [0x0000000000002000] (CPF_Transient)
	TArray<struct FUniqueNetId>                        ReservedPlayerIDs;                                		// 0x00C0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long long                                 SeriesWinningTeamID;                              		// 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<unsigned long long>                         PsyNetTeamIdOrder;                                		// 0x00D8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UTourGameUpdate_TA*                          GameUpdate;                                       		// 0x00E8 (0x0008) [0x0000000000000000]               
	int                                                InactiveGameTimeValue;                            		// 0x00F0 (0x0004) [0x0000000000000002] (CPF_Const)   
	struct FScriptDelegate                             __EventUpdateError__Delegate;                     		// 0x00F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __GameData__ChangeNotify;                         		// 0x0110 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourGameUpdateDispatcher_TA");
		}

		return uClassPointer;
	};

	void __TourGameUpdateDispatcher_TA__Init_27D3DAB04BC1D3E4E6D924B2EECD4FA1(class ATeam_TA* T);
	struct FUniqueNetId __TourGameUpdateDispatcher_TA__Init_A39F18CE4069D098D6F2AFA0DF6E9072(struct FTourPlayer P);
	TArray<struct FTourPlayer> __TourGameUpdateDispatcher_TA__Init_2CE082654DC2CCB477495FA4B0F61300(struct FTourTeam T);
	void __TourGameUpdateDispatcher_TA__HandleGameEnded_8D7BCF394EF19675F39F4E81A2623BA9(class ATeam_TA* Team);
	void __TourGameUpdateDispatcher_TA__OnUpdated_D8CC77BF42081977D8C70DA16448266A();
	struct FUniqueNetId __TourGameUpdateDispatcher_TA__HandleMatchStarted_0C748AE346A0C6F5765575BBD4E9AED1(class AController* P);
	void __TourGameUpdateDispatcher_TA__SendUpdateGameRPC_10550DDA4FE29DCAA76A52808975ECCD(class URPC_X* RPC);
	void __GameData__ChangeNotifyFunc();
	void HandleUpdateGameSuccess(class URPC_TourUpdateGame_TA* RPC);
	void HandleSeriesGameForfeit(class UMatchSeries_TA* InMatchSeries, int WinningTeamIndex);
	void SendUpdateGameRPC(int InGameNum, struct FTourMatchGame InGameData, unsigned long long SeriesWinnerID);
	unsigned long long GetTeamID(class ATeam_TA* Team);
	void HandleOvertimeUpdated(class AGameEvent_Soccar_TA* GameEvent);
	int GetTeamScoreIndex(class ATeam_TA* Team);
	void HandleTeamScoreUpdated(class ATeam_TA* Team);
	void UpdateGameTimeSeconds(int Value);
	void HandleGameTimeUpdated(class AGameEvent_Soccar_TA* GameEvent);
	void HandleMatchStarted(class AGameEvent_Soccar_TA* GameEvent);
	void OnUpdated();
	void HandleStartNewRound(class AGameEvent_Soccar_TA* GameEvent);
	void HandleGameEnded(class AGameEvent_Soccar_TA* GameEvent);
	void Init(class AGameEvent_Soccar_TA* GameEvent, struct FTourServerSettings& Settings, TArray<unsigned long long>& InPsyNetTeamIdOrder);
	void EventUpdateError(class UError* Error);
};

// Class TAGame.__OnlineGameTourServer_TA__IsBotOnlyTeam_D36CC15B4341DDD1045CE88BA8C86B05
// 0x0008 (0x0060 - 0x0068)
class U__OnlineGameTourServer_TA__IsBotOnlyTeam_D36CC15B4341DDD1045CE88BA8C86B05 : public UObject
{
public:
	class ATeam_TA*                                    Team;                                             		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineGameTourServer_TA__IsBotOnlyTeam_D36CC15B4341DDD1045CE88BA8C86B05");
		}

		return uClassPointer;
	};

	bool __OnlineGameTourServer_TA__IsBotOnlyTeam_D36CC15B4341DDD1045CE88BA8C86B05(unsigned long long T);
};

// Class TAGame.PsyNetService_JoinExternalMatch_X
// 0x0000 (0x00B0 - 0x00B0)
class UPsyNetService_JoinExternalMatch_X : public UPsyNetService_ReservationBase_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_JoinExternalMatch_X");
		}

		return uClassPointer;
	};

};

// Class TAGame.PsyNetService_CreateExternalMatch_X
// 0x00FC (0x00B0 - 0x01AC)
class UPsyNetService_CreateExternalMatch_X : public UPsyNetService_ReservationBase_X
{
public:
	int                                                Playlist;                                         		// 0x00B0 (0x0004) [0x0000000000000000]               
	struct FTourServerSettings                         Settings;                                         		// 0x00B8 (0x00E8) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FFaceItReservationMatchInfo                 MatchInfo;                                        		// 0x01A0 (0x000C) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_CreateExternalMatch_X");
		}

		return uClassPointer;
	};

	struct FPsyNetBeaconReservation GetReservation();
};

// Class TAGame.TourServerInfo_FaceIt_TA
// 0x000C (0x0080 - 0x008C)
class UTourServerInfo_FaceIt_TA : public UTourServerInfo_TA
{
public:
	struct FFaceItReservationMatchInfo                 ReservationMatchInfo;                             		// 0x0080 (0x000C) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourServerInfo_FaceIt_TA");
		}

		return uClassPointer;
	};

	class UObject* CreateClientReservationMessage(class UReservationBeacon_X* Beacon, struct FServerReservationData& Reservation, struct FUniqueNetId& PlayerID, struct FTourServerSettings& TourSettings);
	bool IsTourSet(struct FTourServerSettings& TourSettings);
};

// Class TAGame.__OnlineGameTourServer_TA__GetTeamScore_4FAC77564DB334091F4FC4BBFE0B63D7
// 0x0004 (0x0060 - 0x0064)
class U__OnlineGameTourServer_TA__GetTeamScore_4FAC77564DB334091F4FC4BBFE0B63D7 : public UObject
{
public:
	int                                                TeamIndex;                                        		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineGameTourServer_TA__GetTeamScore_4FAC77564DB334091F4FC4BBFE0B63D7");
		}

		return uClassPointer;
	};

	bool __OnlineGameTourServer_TA__GetTeamScore_4FAC77564DB334091F4FC4BBFE0B63D7(struct FTourMatchGame G);
};

// Class TAGame.__OnlineGameTourServer_TA__FilterMapData_2B4E36FB471608938A48BF942B84D956
// 0x0010 (0x0060 - 0x0070)
class U__OnlineGameTourServer_TA__FilterMapData_2B4E36FB471608938A48BF942B84D956 : public UObject
{
public:
	TArray<struct FName>                               FilterMaps;                                       		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineGameTourServer_TA__FilterMapData_2B4E36FB471608938A48BF942B84D956");
		}

		return uClassPointer;
	};

	bool __OnlineGameTourServer_TA__FilterMapData_2B4E36FB471608938A48BF942B84D956(class UMapData_TA* M);
};

// Class TAGame.PsyNetService_JoinTournament_X
// 0x0000 (0x00B0 - 0x00B0)
class UPsyNetService_JoinTournament_X : public UPsyNetService_ReservationBase_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_JoinTournament_X");
		}

		return uClassPointer;
	};

};

// Class TAGame.PsyNetService_CreateTournament_X
// 0x00F0 (0x00B0 - 0x01A0)
class UPsyNetService_CreateTournament_X : public UPsyNetService_ReservationBase_X
{
public:
	int                                                Playlist;                                         		// 0x00B0 (0x0004) [0x0000000000000000]               
	struct FTourServerSettings                         Settings;                                         		// 0x00B8 (0x00E8) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_CreateTournament_X");
		}

		return uClassPointer;
	};

	struct FPsyNetBeaconReservation GetReservation();
};

// Class TAGame.GetUploadUrlsMatch_TA
// 0x0048 (0x0060 - 0x00A8)
class UGetUploadUrlsMatch_TA : public UObject
{
public:
	struct FString                                     MatchGUID;                                        		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 RecordStartTimestamp;                             		// 0x0070 (0x0008) [0x0000000000000000]               
	int                                                Playlist;                                         		// 0x0078 (0x0004) [0x0000000000000000]               
	TArray<struct FName>                               Mutators;                                         		// 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long                                      bIsBotMatch : 1;                                  		// 0x0090 (0x0004) [0x0000000000000000] [0x00000001] 
	TArray<class UGetUploadUrlsPlayer_TA*>             Players;                                          		// 0x0098 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GetUploadUrlsMatch_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GetUploadUrlsPlayer_TA
// 0x004C (0x0060 - 0x00AC)
class UGetUploadUrlsPlayer_TA : public UObject
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                ActorID;                                          		// 0x00A8 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GetUploadUrlsPlayer_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.TraceableSpawnPoint_TA
// 0x0008 (0x0268 - 0x0270)
class ATraceableSpawnPoint_TA : public AActor
{
public:
	class UCylinderComponent*                          CylinderComp;                                     		// 0x0268 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TraceableSpawnPoint_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.StatusTrigger_CrumbPathComplete_TA
// 0x0000 (0x0088 - 0x0088)
class UStatusTrigger_CrumbPathComplete_TA : public UStatusTrigger_Named_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatusTrigger_CrumbPathComplete_TA");
		}

		return uClassPointer;
	};

	void HandleChange(struct FName InValue);
};

// Class TAGame.StatusTrigger_Menu_TA
// 0x0000 (0x0088 - 0x0088)
class UStatusTrigger_Menu_TA : public UStatusTrigger_Named_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatusTrigger_Menu_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.StatusTrigger_Product_TA
// 0x0008 (0x0080 - 0x0088)
class UStatusTrigger_Product_TA : public UStatusTrigger_X
{
public:
	class UProduct_TA*                                 ConditionalValue;                                 		// 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatusTrigger_Product_TA");
		}

		return uClassPointer;
	};

	void DebugPrint();
	void HandleChange(int InProductID);
};

// Class TAGame.StatusTrigger_ProductOwned_TA
// 0x0000 (0x0088 - 0x0088)
class UStatusTrigger_ProductOwned_TA : public UStatusTrigger_Product_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatusTrigger_ProductOwned_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.StatusTrigger_ProductEquipped_TA
// 0x0000 (0x0088 - 0x0088)
class UStatusTrigger_ProductEquipped_TA : public UStatusTrigger_Product_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatusTrigger_ProductEquipped_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__StatusObserver_Products_TA__UpdateTriggersBySlot_22A27D0D4CE0416054AC189A7DB8A117
// 0x0004 (0x0060 - 0x0064)
class U__StatusObserver_Products_TA__UpdateTriggersBySlot_22A27D0D4CE0416054AC189A7DB8A117 : public UObject
{
public:
	int                                                InSlotIndex;                                      		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__StatusObserver_Products_TA__UpdateTriggersBySlot_22A27D0D4CE0416054AC189A7DB8A117");
		}

		return uClassPointer;
	};

	bool __StatusObserver_Products_TA__UpdateTriggersBySlot_22A27D0D4CE0416054AC189A7DB8A117(class UStatusTrigger_X* T);
};

// Class TAGame.StatusTrigger_Numerical_TA
// 0x0008 (0x0080 - 0x0088)
class UStatusTrigger_Numerical_TA : public UStatusTrigger_X
{
public:
	unsigned char                                      TCNType;                                          		// 0x0080 (0x0001) [0x0000000000000001] (CPF_Edit)    
	int                                                ConditionalValue;                                 		// 0x0084 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatusTrigger_Numerical_TA");
		}

		return uClassPointer;
	};

	void DebugPrint();
	void HandleChange(int InValue);
};

// Class TAGame.StatusTrigger_PlayerLevel_TA
// 0x0000 (0x0088 - 0x0088)
class UStatusTrigger_PlayerLevel_TA : public UStatusTrigger_Numerical_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatusTrigger_PlayerLevel_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.StatusTrigger_PlayerXP_TA
// 0x0000 (0x0088 - 0x0088)
class UStatusTrigger_PlayerXP_TA : public UStatusTrigger_Numerical_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatusTrigger_PlayerXP_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ServerMergeErrorEvent_TA
// 0x0068 (0x0060 - 0x00C8)
class UServerMergeErrorEvent_TA : public UObject
{
public:
	class UStayAsPartyVote_TA*                         Vote;                                             		// 0x0060 (0x0008) [0x0000000000000000]               
	TArray<struct FUniqueNetId>                        Invitees;                                         		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FUniqueNetId                                Leader;                                           		// 0x0078 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	class UErrorType*                                  Reason;                                           		// 0x00C0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ServerMergeErrorEvent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__StayAsPartyVote_TA__RemoveFollower_801BDDAC4FC438B9724B8CB15531065E
// 0x0048 (0x0060 - 0x00A8)
class U__StayAsPartyVote_TA__RemoveFollower_801BDDAC4FC438B9724B8CB15531065E : public UObject
{
public:
	struct FUniqueNetId                                FollowerID;                                       		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__StayAsPartyVote_TA__RemoveFollower_801BDDAC4FC438B9724B8CB15531065E");
		}

		return uClassPointer;
	};

	void __StayAsPartyVote_TA__RemoveFollower_801BDDAC4FC438B9724B8CB15531065E(class AStayAsPartyVoter_TA* Voter);
};

// Class TAGame.__StayAsPartyVote_TA__AddFollowerToLeader_11A1A79843785419E3BDAA89D4BBE555
// 0x0048 (0x0060 - 0x00A8)
class U__StayAsPartyVote_TA__AddFollowerToLeader_11A1A79843785419E3BDAA89D4BBE555 : public UObject
{
public:
	struct FUniqueNetId                                LeaderID;                                         		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__StayAsPartyVote_TA__AddFollowerToLeader_11A1A79843785419E3BDAA89D4BBE555");
		}

		return uClassPointer;
	};

	bool __StayAsPartyVote_TA__AddFollowerToLeader_11A1A79843785419E3BDAA89D4BBE555(class AStayAsPartyVoter_TA* Voter);
};

// Class TAGame.__TAsyncResult__PrivilegeCheck_X__Copy_79EF0073423736B0946042BD4A85EFDF
// 0x0008 (0x0060 - 0x0068)
class U__TAsyncResult__PrivilegeCheck_X__Copy_79EF0073423736B0946042BD4A85EFDF : public UObject
{
public:
	class UTAsyncResult__PrivilegeCheck_X*             Instance;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TAsyncResult__PrivilegeCheck_X__Copy_79EF0073423736B0946042BD4A85EFDF");
		}

		return uClassPointer;
	};

	void __TAsyncResult__PrivilegeCheck_X__Copy_79EF0073423736B0946042BD4A85EFDF(class UPrivilegeCheck_X* R, class UError* E);
};

// Class TAGame.__TAsyncResult__PrivilegeCheck_X__SetResultWhen_F0C79AE44F4A4B242C5F9CB2105819B5
// 0x0018 (0x0060 - 0x0078)
class U__TAsyncResult__PrivilegeCheck_X__SetResultWhen_F0C79AE44F4A4B242C5F9CB2105819B5 : public UObject
{
public:
	struct FScriptDelegate                             GetResultDelegate;                                		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TAsyncResult__PrivilegeCheck_X__SetResultWhen_F0C79AE44F4A4B242C5F9CB2105819B5");
		}

		return uClassPointer;
	};

	void __TAsyncResult__PrivilegeCheck_X__SetResultWhen_F0C79AE44F4A4B242C5F9CB2105819B5();
};

// Class TAGame.__TAsyncResult__PrivilegeCheck_X__NotifyOnResultComplete_A2EEF91C46E866ECB02F649565F789D5
// 0x0018 (0x0060 - 0x0078)
class U__TAsyncResult__PrivilegeCheck_X__NotifyOnResultComplete_A2EEF91C46E866ECB02F649565F789D5 : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TAsyncResult__PrivilegeCheck_X__NotifyOnResultComplete_A2EEF91C46E866ECB02F649565F789D5");
		}

		return uClassPointer;
	};

	void __TAsyncResult__PrivilegeCheck_X__NotifyOnResultComplete_A2EEF91C46E866ECB02F649565F789D5(class UError* Err);
};

// Class TAGame.__TAsyncResult__PrivilegeCheck_X__NotifyOnResult_E10711734B8C124FE5276CA0970C5613
// 0x0018 (0x0060 - 0x0078)
class U__TAsyncResult__PrivilegeCheck_X__NotifyOnResult_E10711734B8C124FE5276CA0970C5613 : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TAsyncResult__PrivilegeCheck_X__NotifyOnResult_E10711734B8C124FE5276CA0970C5613");
		}

		return uClassPointer;
	};

	void __TAsyncResult__PrivilegeCheck_X__NotifyOnResult_E10711734B8C124FE5276CA0970C5613();
};

// Class TAGame.ArenaSoundEvent_TA
// 0x0020 (0x0060 - 0x0080)
class UArenaSoundEvent_TA : public UObject
{
public:
	struct FName                                       MapName;                                          		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 InGameMusicCue;                                   		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long long                                 StartTime;                                        		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long long                                 EndTime;                                          		// 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ArenaSoundEvent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ArenaSoundConfig_TA
// 0x0010 (0x0078 - 0x0088)
class UArenaSoundConfig_TA : public UOnlineConfig_X
{
public:
	TArray<class UArenaSoundEvent_TA*>                 Events;                                           		// 0x0078 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ArenaSoundConfig_TA");
		}

		return uClassPointer;
	};

	bool __ArenaSoundConfig_TA__GetNextEvent_232F23E44DDD674C77C276AAE916A740(class UArenaSoundEvent_TA* E);
	int __ArenaSoundConfig_TA__GetNextEvent_A144A0EC49644A87CCF06EBB23B93615(class UArenaSoundEvent_TA* L, class UArenaSoundEvent_TA* R);
	class UArenaSoundEvent_TA* GetNextEvent(struct FName MapName, unsigned long long CurrentTime);
};

// Class TAGame.__ArenaSoundManager_TA__HandleMatchWinnerSet_479607544A575772FFF319B6080DCFC7
// 0x0008 (0x0060 - 0x0068)
class U__ArenaSoundManager_TA__HandleMatchWinnerSet_479607544A575772FFF319B6080DCFC7 : public UObject
{
public:
	class AGameEvent_Soccar_TA*                        InGameEvent;                                      		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ArenaSoundManager_TA__HandleMatchWinnerSet_479607544A575772FFF319B6080DCFC7");
		}

		return uClassPointer;
	};

	bool __ArenaSoundManager_TA__HandleMatchWinnerSet_479607544A575772FFF319B6080DCFC7(class APRI_TA* PRI);
};

// Class TAGame.ArenaSoundPlayer_TA
// 0x0008 (0x0268 - 0x0270)
class AArenaSoundPlayer_TA : public AActor
{
public:
	class UAkSoundSource*                              SoundSource;                                      		// 0x0268 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ArenaSoundPlayer_TA");
		}

		return uClassPointer;
	};

	void eventPostBeginPlay();
};

// Class TAGame.ProductAttribute_Archived_TA
// 0x0000 (0x0080 - 0x0080)
class UProductAttribute_Archived_TA : public UProductAttribute_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_Archived_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_BuildBlueprint_TA
// 0x00A0 (0x00E8 - 0x0188)
class URPC_BuildBlueprint_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 InstanceID;                                       		// 0x0130 (0x0008) [0x0000000000000000]               
	int                                                ExpectedPrice;                                    		// 0x0138 (0x0004) [0x0000000000000000]               
	struct FOnlineProductData                          ProductData;                                      		// 0x0140 (0x0038) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FCurrency>                           WalletCurrencies;                                 		// 0x0178 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_BuildBlueprint_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_RevealBlueprint_TA
// 0x0088 (0x00E8 - 0x0170)
class URPC_RevealBlueprint_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 InstanceID;                                       		// 0x0130 (0x0008) [0x0000000000000000]               
	struct FOnlineProductData                          ProductData;                                      		// 0x0138 (0x0038) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_RevealBlueprint_TA");
		}

		return uClassPointer;
	};

	class URPC_RevealBlueprint_TA* SetInstanceID(unsigned long long InInstanceId);
	class URPC_RevealBlueprint_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.SeqAct_CinematicIntroStartNextSeq_TA
// 0x0020 (0x0160 - 0x0180)
class USeqAct_CinematicIntroStartNextSeq_TA : public USequenceAction
{
public:
	int                                                CurrentSequenceIndex;                             		// 0x0160 (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             __EventActivated__Delegate;                       		// 0x0168 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_CinematicIntroStartNextSeq_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
	void EventActivated(class USeqAct_CinematicIntroStartNextSeq_TA* SeqAct);
};

// Class TAGame.MusicTracklist_TA
// 0x0010 (0x0060 - 0x0070)
class UMusicTracklist_TA : public UObject
{
public:
	TArray<class UMusicTrack_TA*>                      Tracks;                                           		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MusicTracklist_TA");
		}

		return uClassPointer;
	};

	class UMusicTracklist_TA* AddLastTrackAction(struct FScriptDelegate Action);
	class UMusicTracklist_TA* Shuffle();
	int Num();
	void NextTrack();
};

// Class TAGame.MusicTracklistNull_TA
// 0x0000 (0x0060 - 0x0060)
class UMusicTracklistNull_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MusicTracklistNull_TA");
		}

		return uClassPointer;
	};

	int Num();
	void NextTrack();
};

// Class TAGame.__TourGameUpdateDispatcher_TA__Init_CA26E3E34CCAFF9394E9A2B9D7E22D9F
// 0x00E8 (0x0060 - 0x0148)
class U__TourGameUpdateDispatcher_TA__Init_CA26E3E34CCAFF9394E9A2B9D7E22D9F : public UObject
{
public:
	struct FTourServerSettings                         Settings;                                         		// 0x0060 (0x00E8) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourGameUpdateDispatcher_TA__Init_CA26E3E34CCAFF9394E9A2B9D7E22D9F");
		}

		return uClassPointer;
	};

	unsigned long long __TourGameUpdateDispatcher_TA__Init_CA26E3E34CCAFF9394E9A2B9D7E22D9F(class ATeam_TA* T);
};

// Class TAGame.__TourGameUpdateDispatcher_TA__HandleUpdateGameSuccess_AC5968884C62489359F3C68325C09BA2
// 0x0008 (0x0060 - 0x0068)
class U__TourGameUpdateDispatcher_TA__HandleUpdateGameSuccess_AC5968884C62489359F3C68325C09BA2 : public UObject
{
public:
	class UOnlineGameTourServer_TA*                    TourServer;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourGameUpdateDispatcher_TA__HandleUpdateGameSuccess_AC5968884C62489359F3C68325C09BA2");
		}

		return uClassPointer;
	};

	void __TourGameUpdateDispatcher_TA__HandleUpdateGameSuccess_AC5968884C62489359F3C68325C09BA2(struct FTeamUpdateInfo T);
};

// Class TAGame.RPC_TourUpdateGame_TA
// 0x0098 (0x00E8 - 0x0180)
class URPC_TourUpdateGame_TA : public URPC_X
{
public:
	struct FString                                     MatchGUID;                                        		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 ServerId;                                         		// 0x00F8 (0x0008) [0x0000000000000000]               
	unsigned long long                                 TournamentID;                                     		// 0x0100 (0x0008) [0x0000000000000000]               
	int                                                MatchID;                                          		// 0x0108 (0x0004) [0x0000000000000000]               
	int                                                Game;                                             		// 0x010C (0x0004) [0x0000000000000000]               
	struct FTourMatchGame                              GameData;                                         		// 0x0110 (0x0018) [0x0000000000000000]               
	unsigned long long                                 Winner;                                           		// 0x0128 (0x0008) [0x0000000000000000]               
	TArray<struct FUniqueNetId>                        PlayersNoShow;                                    		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        PlayersLeftEarly;                                 		// 0x0140 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        PlayersIdle;                                      		// 0x0150 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FTourPlayerStats>                    PlayersStats;                                     		// 0x0160 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FTeamUpdateInfo>                     Teams;                                            		// 0x0170 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourUpdateGame_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_FaceItMatchStarted_TA
// 0x0038 (0x00E8 - 0x0120)
class URPC_FaceItMatchStarted_TA : public URPC_X
{
public:
	int                                                MatchID;                                          		// 0x00E8 (0x0004) [0x0000000000000000]               
	struct FString                                     MatchGUID;                                        		// 0x00F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 ServerId;                                         		// 0x0100 (0x0008) [0x0000000000000000]               
	int                                                SeriesRoundNumber;                                		// 0x0108 (0x0004) [0x0000000000000000]               
	TArray<struct FUniqueNetId>                        Players;                                          		// 0x0110 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_FaceItMatchStarted_TA");
		}

		return uClassPointer;
	};

	class URPC_FaceItMatchStarted_TA* SetPlayerIDs(TArray<struct FUniqueNetId> Value);
	class URPC_FaceItMatchStarted_TA* SetSeriesRoundNumber(int Value);
	class URPC_FaceItMatchStarted_TA* SetServerID(unsigned long long Value);
	class URPC_FaceItMatchStarted_TA* SetMatchGUID(struct FString Value);
	class URPC_FaceItMatchStarted_TA* SetMatchID(int Value);
};

// Class TAGame.RPC_TourGetMatchReservations_FaceIt_TA
// 0x0000 (0x01D8 - 0x01D8)
class URPC_TourGetMatchReservations_FaceIt_TA : public URPC_TourGetMatchReservations_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourGetMatchReservations_FaceIt_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.TourGameUpdate_FaceIt_TA
// 0x0000 (0x0080 - 0x0080)
class UTourGameUpdate_FaceIt_TA : public UTourGameUpdate_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourGameUpdate_FaceIt_TA");
		}

		return uClassPointer;
	};

	class URPC_X* SendUpdateGameRPC(class UTourGameUpdateDispatcher_TA* Dispatcher, int InGameNum, struct FTourMatchGame InGameData, unsigned long long SeriesWinnerID);
};

// Class TAGame.GFxData_ProductAttribute_ContainerKey_TA
// 0x0004 (0x00B0 - 0x00B4)
class UGFxData_ProductAttribute_ContainerKey_TA : public UGFxData_ProductAttribute_TA
{
public:
	unsigned long                                      bMagicKey : 1;                                    		// 0x00B0 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_ContainerKey_TA");
		}

		return uClassPointer;
	};

	void OnReceivedAttribute(class UProductAttribute_Key_TA* Attribute);
};

// Class TAGame.GFxData_ProductAttribute_Container_TA
// 0x0004 (0x00B0 - 0x00B4)
class UGFxData_ProductAttribute_Container_TA : public UGFxData_ProductAttribute_TA
{
public:
	unsigned long                                      bUnlocked : 1;                                    		// 0x00B0 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bSkipRoulette : 1;                                		// 0x00B0 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bGiftbox : 1;                                     		// 0x00B0 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_Container_TA");
		}

		return uClassPointer;
	};

	void OnReceivedAttribute(class UProductAttribute_Container_TA* Attribute);
};

// Class TAGame.GFxData_ProductAttribute_Painted_TA
// 0x002C (0x00B0 - 0x00DC)
class UGFxData_ProductAttribute_Painted_TA : public UGFxData_ProductAttribute_TA
{
public:
	struct FColor                                      ProductPaintColor;                                		// 0x00B0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     ProductPaintColorName;                            		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UTexture2D*                                  ProductPaintMask;                                 		// 0x00C8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	float                                              ProductPaintDiffHue;                              		// 0x00D0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	float                                              ProductPaintDiffSaturation;                       		// 0x00D4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	float                                              ProductPaintDiffLightness;                        		// 0x00D8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_Painted_TA");
		}

		return uClassPointer;
	};

	void OnReceivedAttribute(class UProductAttribute_Painted_TA* Attribute);
};

// Class TAGame.GFxData_ProductAttribute_Level_TA
// 0x0004 (0x00B0 - 0x00B4)
class UGFxData_ProductAttribute_Level_TA : public UGFxData_ProductAttribute_TA
{
public:
	unsigned long                                      bProductUpgradable : 1;                           		// 0x00B0 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_Level_TA");
		}

		return uClassPointer;
	};

	void OnReceivedAttribute(class UProductAttribute_Level_TA* Attribute);
};

// Class TAGame.GFxData_ProductAttribute_Schematic_TA
// 0x0000 (0x00B0 - 0x00B0)
class UGFxData_ProductAttribute_Schematic_TA : public UGFxData_ProductAttribute_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_Schematic_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_ProductAttribute_Certified_TA
// 0x0010 (0x00B0 - 0x00C0)
class UGFxData_ProductAttribute_Certified_TA : public UGFxData_ProductAttribute_TA
{
public:
	struct FString                                     CertifiedStatLabel;                               		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_Certified_TA");
		}

		return uClassPointer;
	};

	void OnReceivedAttribute(class UProductAttribute_Certified_TA* Attribute);
};

// Class TAGame.GFxData_ProductAttribute_ProductLink_TA
// 0x0004 (0x00B0 - 0x00B4)
class UGFxData_ProductAttribute_ProductLink_TA : public UGFxData_ProductAttribute_TA
{
public:
	int                                                ProductID;                                        		// 0x00B0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_ProductLink_TA");
		}

		return uClassPointer;
	};

	void OnReceivedAttribute(class UProductAttribute_ProductLink_TA* Attribute);
};

// Class TAGame.GFxData_ProductAttribute_Expiration_TA
// 0x0008 (0x00B0 - 0x00B8)
class UGFxData_ProductAttribute_Expiration_TA : public UGFxData_ProductAttribute_TA
{
public:
	unsigned long long                                 ExpirationTime;                                   		// 0x00B0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_Expiration_TA");
		}

		return uClassPointer;
	};

	void OnReceivedAttribute(class UProductAttribute_Expiration_TA* Attribute);
};

// Class TAGame.GFxData_ProductAttribute_Rental_TA
// 0x0004 (0x00B0 - 0x00B4)
class UGFxData_ProductAttribute_Rental_TA : public UGFxData_ProductAttribute_TA
{
public:
	int                                                RentalLength;                                     		// 0x00B0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_Rental_TA");
		}

		return uClassPointer;
	};

	void OnReceivedAttribute(class UProductAttribute_Rental_TA* Attribute);
};

// Class TAGame.GFxData_ProductAttribute_Indestructible_TA
// 0x0004 (0x00B0 - 0x00B4)
class UGFxData_ProductAttribute_Indestructible_TA : public UGFxData_ProductAttribute_TA
{
public:
	unsigned long                                      bIndestructible : 1;                              		// 0x00B0 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_Indestructible_TA");
		}

		return uClassPointer;
	};

	void OnReceivedAttribute(class UProductAttribute_Indestructible_TA* Attribute);
};

// Class TAGame.GFxData_ProductAttribute_Title_TA
// 0x0008 (0x00B0 - 0x00B8)
class UGFxData_ProductAttribute_Title_TA : public UGFxData_ProductAttribute_TA
{
public:
	struct FName                                       TitleId;                                          		// 0x00B0 (0x0008) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_Title_TA");
		}

		return uClassPointer;
	};

	void OnReceivedAttribute(class UProductAttribute_TitleID_TA* Attribute);
};

// Class TAGame.GFxData_ProductAttribute_Tiered_TA
// 0x0004 (0x00B0 - 0x00B4)
class UGFxData_ProductAttribute_Tiered_TA : public UGFxData_ProductAttribute_TA
{
public:
	int                                                ProductTier;                                      		// 0x00B0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_Tiered_TA");
		}

		return uClassPointer;
	};

	void OnReceivedAttribute(class UProductAttribute_Tiered_TA* Attribute);
};

// Class TAGame.GFxData_ProductAttribute_SpecialEdition_TA
// 0x0010 (0x00B0 - 0x00C0)
class UGFxData_ProductAttribute_SpecialEdition_TA : public UGFxData_ProductAttribute_TA
{
public:
	struct FString                                     EditionLabel;                                     		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_SpecialEdition_TA");
		}

		return uClassPointer;
	};

	void OnReceivedAttribute(class UProductAttribute_SpecialEdition_TA* Attribute);
};

// Class TAGame.GFxData_ProductAttribute_TeamEdition_TA
// 0x0018 (0x00B0 - 0x00C8)
class UGFxData_ProductAttribute_TeamEdition_TA : public UGFxData_ProductAttribute_TA
{
public:
	struct FString                                     TeamName;                                         		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UTexture*                                    TeamLogo;                                         		// 0x00C0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_TeamEdition_TA");
		}

		return uClassPointer;
	};

	class UProduct_TA* GetRequiredProduct(class UProduct_TA* Product);
	void UpdateAdditionalLoadedData(class UGFxData_Products_TA* GFxData_Products, class ULoadingProduct_TA* ProductData, class UProduct_TA* Product);
};

// Class TAGame.GFxData_ProductAttribute_ShopItem_TA
// 0x0010 (0x00B0 - 0x00C0)
class UGFxData_ProductAttribute_ShopItem_TA : public UGFxData_ProductAttribute_TA
{
public:
	class UTexture*                                    BackgroundImage;                                  		// 0x00B0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	class UTexture*                                    ItemLogo;                                         		// 0x00B8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_ShopItem_TA");
		}

		return uClassPointer;
	};

	void UpdateAdditionalLoadedData(class UGFxData_Products_TA* GFxData_Products, class ULoadingProduct_TA* ProductData, class UProduct_TA* Product);
};

// Class TAGame.GFxData_ProductAttribute_Currency_TA
// 0x0004 (0x00B0 - 0x00B4)
class UGFxData_ProductAttribute_Currency_TA : public UGFxData_ProductAttribute_TA
{
public:
	int                                                CurrencyID;                                       		// 0x00B0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductAttribute_Currency_TA");
		}

		return uClassPointer;
	};

	void UpdateAdditionalLoadedData(class UGFxData_Products_TA* GFxProducts, class ULoadingProduct_TA* ProductData, class UProduct_TA* Product);
	void OnReceivedAttribute(class UProductAttribute_Currency_TA* Attribute);
};

// Class TAGame.__ArenaSoundConfig_TA__GetNextEvent_E19E1A3344E547BF0BD5B5833062750F
// 0x0010 (0x0060 - 0x0070)
class U__ArenaSoundConfig_TA__GetNextEvent_E19E1A3344E547BF0BD5B5833062750F : public UObject
{
public:
	struct FName                                       MapName;                                          		// 0x0060 (0x0008) [0x0000000000000000]               
	unsigned long long                                 CurrentTime;                                      		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ArenaSoundConfig_TA__GetNextEvent_E19E1A3344E547BF0BD5B5833062750F");
		}

		return uClassPointer;
	};

	bool __ArenaSoundConfig_TA__GetNextEvent_E19E1A3344E547BF0BD5B5833062750F(class UArenaSoundEvent_TA* E);
};

// Class TAGame.RPC_FaceItUpdateGame_TA
// 0x0068 (0x00E8 - 0x0150)
class URPC_FaceItUpdateGame_TA : public URPC_X
{
public:
	int                                                MatchID;                                          		// 0x00E8 (0x0004) [0x0000000000000000]               
	unsigned long long                                 ServerId;                                         		// 0x00F0 (0x0008) [0x0000000000000000]               
	int                                                SeriesRoundNumber;                                		// 0x00F8 (0x0004) [0x0000000000000000]               
	struct FTourMatchGame                              GameData;                                         		// 0x0100 (0x0018) [0x0000000000000000]               
	unsigned long long                                 SeriesWinner;                                     		// 0x0118 (0x0008) [0x0000000000000000]               
	TArray<struct FTourPlayerStats>                    PlayersStats;                                     		// 0x0120 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        PlayersNoShow;                                    		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        PlayersLeftEarly;                                 		// 0x0140 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_FaceItUpdateGame_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.__GFxData_DLC_TA__HandleEntitlementsError_CAB2EEFB4AFC29379D4D5991A21626AF
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_DLC_TA__HandleEntitlementsError_CAB2EEFB4AFC29379D4D5991A21626AF : public UObject
{
public:
	class UError*                                      Error;                                            		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_DLC_TA__HandleEntitlementsError_CAB2EEFB4AFC29379D4D5991A21626AF");
		}

		return uClassPointer;
	};

	void __GFxData_DLC_TA__HandleEntitlementsError_CAB2EEFB4AFC29379D4D5991A21626AF(class UGFxModal_X* Modal);
};

// Class TAGame.IntroCarTemplates_TA
// 0x0010 (0x0060 - 0x0070)
class UIntroCarTemplates_TA : public UObject
{
public:
	TArray<struct FEditorIntroCar>                     IntroCars;                                        		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IntroCarTemplates_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_AchievementDataUpload_TA
// 0x0020 (0x00E8 - 0x0108)
class URPC_AchievementDataUpload_TA : public URPC_X
{
public:
	TArray<struct FAchievementUpload>                  Achievements;                                     		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     SettingsArchetype;                                		// 0x00F8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_AchievementDataUpload_TA");
		}

		return uClassPointer;
	};

	class URPC_AchievementDataUpload_TA* Upload();
};

// Class TAGame.RPC_UploadIntroCars_TA
// 0x0010 (0x00E8 - 0x00F8)
class URPC_UploadIntroCars_TA : public URPC_X
{
public:
	TArray<struct FRPCIntroCar>                        LoadoutTemplates;                                 		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_UploadIntroCars_TA");
		}

		return uClassPointer;
	};

	void AddIntroCar(struct FString InTemplateName, struct FString InTemplateDescription, int InTemplateIndex, TArray<int> InProductsList);
};

// Class TAGame.__EpicFriendsConverterSystem_TA__SetupEpicFriendsConverter_5B65DC2743ABD324256F22A14C6F11EB
// 0x0008 (0x0060 - 0x0068)
class U__EpicFriendsConverterSystem_TA__SetupEpicFriendsConverter_5B65DC2743ABD324256F22A14C6F11EB : public UObject
{
public:
	class UEpicFriendsConverter_TA*                    Converter;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__EpicFriendsConverterSystem_TA__SetupEpicFriendsConverter_5B65DC2743ABD324256F22A14C6F11EB");
		}

		return uClassPointer;
	};

	void __EpicFriendsConverterSystem_TA__SetupEpicFriendsConverter_5B65DC2743ABD324256F22A14C6F11EB(class UEOS_GetAccountsResponse* Response, class UError* Error);
};

// Class TAGame.EpicFriendsConverterSystem_TA
// 0x0000 (0x0060 - 0x0060)
class UEpicFriendsConverterSystem_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EpicFriendsConverterSystem_TA");
		}

		return uClassPointer;
	};

	void CheckToConvertPlatformFriends(class UEpicFriendsConverter_TA* InConverter, class ULinkedAccountMap_X* PlatformFriendsToEpicAccountMap);
	void AddPsyNetFriendsToConversionList(class UEpicFriendsConverter_TA* InConverter, class UPsyNetFriends_X* InPsyNetFriends);
	void RemoveOutgoingInvites(class UEpicFriendsConverter_TA* Converter, class UEOS_GetAccountsResponse* Response, class UError* Error);
	void SetupEpicFriendsConverter(class UOnlinePlayerFriends_TA* OnlinePlayerFriends, class UGFxShell_TA* InShell, class UOnlineSubsystem* InEOS, class UEpicFriendsPlugin_X* InFriendsPlugin, class UEpicFriends_X* InEpicFriends, class UEpicAccountSave_TA* InSave);
};

// Class TAGame.EpicFriendsConverter_TA
// 0x0048 (0x0060 - 0x00A8)
class UEpicFriendsConverter_TA : public UObject
{
public:
	unsigned long                                      bCheckedToConvert : 1;                            		// 0x0060 (0x0004) [0x0000000000000000] [0x00000001] 
	class UEpicAccountSave_TA*                         EpicSave;                                         		// 0x0068 (0x0008) [0x0000000000000000]               
	TArray<struct FUniqueNetId>                        InvitesToSend;                                    		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                LocalPlayerId;                                    		// 0x0080 (0x0004) [0x0000000000000000]               
	class UEpicFriendsConverterConfig_TA*              EpicFriendsConverterConfig;                       		// 0x0088 (0x0008) [0x0000000000000000]               
	class UOnlineSubsystem*                            EOSSubsystem;                                     		// 0x0090 (0x0008) [0x0000000000000000]               
	class UEpicFriendsPlugin_X*                        FriendsPlugin;                                    		// 0x0098 (0x0008) [0x0000000000000000]               
	float                                              SecondsBetweenInvites;                            		// 0x00A0 (0x0004) [0x0000000000000000]               
	int                                                NumFailedAttempts;                                		// 0x00A4 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EpicFriendsConverter_TA");
		}

		return uClassPointer;
	};

	void StopConversion();
	void RetryOrAbort(struct FString& FriendId);
	void HandleOnFriendAdded(class UEOS_ManageFriendsListResponse* Response, class UError* Error, struct FString& FriendId);
	void SendNextFriendRequest();
	void SetConversionTimer(float TimeBetweenInvites);
	void StartConversion();
	void HandleOnReceivedLinkedAccount(unsigned long bSuccess, TArray<struct FLinkedAccountData> LinkedAccountData);
	void AddPlatformFriendsFromLinkedAccountMap(class ULinkedAccountMap_X* PlatformFriendsToEpicAccountMap);
	void AddPlatformFriendsFromPersonaList(TArray<struct FPersonaDataId> PlatformFriends);
	void AddPsyNetFriends(class UPsyNetFriends_X* InPsyNetFriends);
	void SetConvertPlatformFriends(unsigned long bConvertPlatformFriends);
	bool ShouldPromptToConvertFriends();
};

// Class TAGame.__GameEventProductAssetCache_TA__HandleCarAssetsLoaded_33B16DB046AB0668E13398A294C52213
// 0x0008 (0x0060 - 0x0068)
class U__GameEventProductAssetCache_TA__HandleCarAssetsLoaded_33B16DB046AB0668E13398A294C52213 : public UObject
{
public:
	class UProductLoader_TA*                           Loader;                                           		// 0x0060 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameEventProductAssetCache_TA__HandleCarAssetsLoaded_33B16DB046AB0668E13398A294C52213");
		}

		return uClassPointer;
	};

	bool __GameEventProductAssetCache_TA__HandleCarAssetsLoaded_33B16DB046AB0668E13398A294C52213(class UPriAssetCache_TA* C);
};

// Class TAGame.PriAssetCache_TA
// 0x0018 (0x0060 - 0x0078)
class UPriAssetCache_TA : public UObject
{
public:
	class APRI_TA*                                     PRI;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
	TArray<int>                                        Products;                                         		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PriAssetCache_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GameEventProductAssetCache_TA
// 0x001C (0x00A4 - 0x00C0)
class UGameEventProductAssetCache_TA : public UActorComponent_X
{
public:
	class UProductAssetCache_TA*                       AssetCache;                                       		// 0x00A8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	TArray<class UPriAssetCache_TA*>                   PriCache;                                         		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEventProductAssetCache_TA");
		}

		return uClassPointer;
	};

	int __GameEventProductAssetCache_TA__HandleCarAssetsLoaded_5171EA314C036654F4474195DF0257C4(class UProductAsset_TA* P);
	void __GameEventProductAssetCache_TA__RefreshCache_F4BF25504CA8F063F2D84DAFF615F6C9(class UPriAssetCache_TA* C);
	void RefreshCache();
	void RefreshCacheDelayed();
	void HandleCarAssetsLoaded(class UProductLoader_TA* Loader);
	void HandleCarSet(class APRI_TA* PRI);
	void HandlePlayerRemoved(class AGameEvent_TA* G, class APRI_TA* PRI);
	void HandlePlayerAdded(class AGameEvent_TA* G, class APRI_TA* PRI);
	void eventDetached();
	void eventAttached();
};

// Class TAGame.__GameEventProductAssetCache_TA__HandlePlayerAdded_C2FB01A44ABC2080E349AD8F931DAD9F
// 0x0008 (0x0060 - 0x0068)
class U__GameEventProductAssetCache_TA__HandlePlayerAdded_C2FB01A44ABC2080E349AD8F931DAD9F : public UObject
{
public:
	class APRI_TA*                                     PRI;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameEventProductAssetCache_TA__HandlePlayerAdded_C2FB01A44ABC2080E349AD8F931DAD9F");
		}

		return uClassPointer;
	};

	bool __GameEventProductAssetCache_TA__HandlePlayerAdded_C2FB01A44ABC2080E349AD8F931DAD9F(class UPriAssetCache_TA* C);
};

// Class TAGame.__GameEventProductAssetCache_TA__HandlePlayerRemoved_24DE4A834B43B95AB74DC387D21BF830
// 0x0008 (0x0060 - 0x0068)
class U__GameEventProductAssetCache_TA__HandlePlayerRemoved_24DE4A834B43B95AB74DC387D21BF830 : public UObject
{
public:
	class APRI_TA*                                     PRI;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GameEventProductAssetCache_TA__HandlePlayerRemoved_24DE4A834B43B95AB74DC387D21BF830");
		}

		return uClassPointer;
	};

	bool __GameEventProductAssetCache_TA__HandlePlayerRemoved_24DE4A834B43B95AB74DC387D21BF830(class UPriAssetCache_TA* C);
};

// Class TAGame.__GFxData_AutoTour_TourCard_TA__HandleSubscriptionChanged_9AEAF37C45920B27986A119CA4AA0CD3
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_AutoTour_TourCard_TA__HandleSubscriptionChanged_9AEAF37C45920B27986A119CA4AA0CD3 : public UObject
{
public:
	unsigned long long                                 TournamentID;                                     		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_AutoTour_TourCard_TA__HandleSubscriptionChanged_9AEAF37C45920B27986A119CA4AA0CD3");
		}

		return uClassPointer;
	};

	bool __GFxData_AutoTour_TourCard_TA__HandleSubscriptionChanged_9AEAF37C45920B27986A119CA4AA0CD3(class UTourSettings_TA* S);
};

// Class TAGame.GFxData_AutoTour_TourCard_TA
// 0x0060 (0x0094 - 0x00F4)
class UGFxData_AutoTour_TourCard_TA : public UGFxDataRow_X
{
public:
	class UOnlineGameTournaments_TA*                   OnlineGameTournaments;                            		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<class UTourSettings_TA*>                    Settings;                                         		// 0x00A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 StartTime;                                        		// 0x00B0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 LastTournamentTime;                               		// 0x00B8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     Title;                                            		// 0x00C0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Description;                                      		// 0x00D0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long long                                 ScheduleID;                                       		// 0x00E0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TeamSize;                                         		// 0x00E8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      GameMode;                                         		// 0x00EC (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bIsIneligible : 1;                                		// 0x00F0 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bCanCheckIn : 1;                                  		// 0x00F0 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bRegistered : 1;                                  		// 0x00F0 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bIsInitialized : 1;                               		// 0x00F0 (0x0004) [0x0000000000000000] [0x00000008] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_AutoTour_TourCard_TA");
		}

		return uClassPointer;
	};

	bool __GFxData_AutoTour_TourCard_TA__Init_317683A844DD401B09A2CA9DD551D52F(class UTourSettings_TA* S);
	bool __GFxData_AutoTour_TourCard_TA__GetEligibleTourSetting_7B40C34C49B58EA805C10282E380E92A(class UTourSettings_TA* S);
	bool GetHoldsIneligibleScheduleID();
	class UTourSettings_TA* GetEligibleTourSetting();
	unsigned long long GetActiveTourID();
	void HandleSubscriptionChanged(class UTourSubscriptions_TA* Subscriptions, unsigned long long TournamentID);
	void OnCheckInClosed();
	void OnCheckInOpen();
	void UpdateCanCheckIn();
	void UpdateTitle();
	void Init(struct FScheduledTournament& Schedule);
};

// Class TAGame.__GFxData_CarRumble_TA__HandlePawnSet_CFE0A6F543583E4BCBEEED947C2DF028
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_CarRumble_TA__HandlePawnSet_CFE0A6F543583E4BCBEEED947C2DF028 : public UObject
{
public:
	class ACar_TA*                                     NewCar;                                           		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_CarRumble_TA__HandlePawnSet_CFE0A6F543583E4BCBEEED947C2DF028");
		}

		return uClassPointer;
	};

	void __GFxData_CarRumble_TA__HandlePawnSet_CFE0A6F543583E4BCBEEED947C2DF028();
};

// Class TAGame.GFxData_CarRumble_TA
// 0x0028 (0x0098 - 0x00C0)
class UGFxData_CarRumble_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FRumblePickupData>                   Items;                                            		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                SelectedItem;                                     		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bHasItems : 1;                                    		// 0x00AC (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	int                                                ItemCount;                                        		// 0x00B0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                PreviewTimeSeconds;                               		// 0x00B4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class ARumblePickups_TA*                           Pickups;                                          		// 0x00B8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_CarRumble_TA");
		}

		return uClassPointer;
	};

	void UpdatePreviewSeconds();
	void UpdateSelectedItem();
	void UpdateItems();
	void UpdateHasItems();
	void HandleConcurrentItemCountSet();
	void HandleRumblePickupsSet(class ACar_TA* Car);
	void HandlePawnSet(class APlayerController_X* PC, class APawn* OldPawn, class APawn* NewPawn);
	void HandlePlayerControllerSet(class UPlayer* InPlayer);
	void eventOnShellSet();
};

// Class TAGame.__GFxData_ClubDetails_TA__UpdateClubMembers_F0003A4546D618257DBC179C7FFBB978
// 0x0058 (0x0060 - 0x00B8)
class U__GFxData_ClubDetails_TA__UpdateClubMembers_F0003A4546D618257DBC179C7FFBB978 : public UObject
{
public:
	struct FClubMember                                 Member;                                           		// 0x0060 (0x0058) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_ClubDetails_TA__UpdateClubMembers_F0003A4546D618257DBC179C7FFBB978");
		}

		return uClassPointer;
	};

	bool __GFxData_ClubDetails_TA__UpdateClubMembers_F0003A4546D618257DBC179C7FFBB978(class UGFxData_ClubMember_TA* D);
};

// Class TAGame.GFxData_ClubDetails_TA
// 0x00BC (0x0094 - 0x0150)
class UGFxData_ClubDetails_TA : public UGFxDataRow_X
{
public:
	unsigned long long                                 ClubID;                                           		// 0x0098 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     ClubName;                                         		// 0x00A0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     ClubTag;                                          		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     ClubMotD;                                         		// 0x00C0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                PrimaryColorID;                                   		// 0x00D0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                AccentColorID;                                    		// 0x00D4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FUniqueNetId                                OwnerId;                                          		// 0x00D8 (0x0048) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long                                      bVerified : 1;                                    		// 0x0120 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bCrossPlatformFiltered : 1;                       		// 0x0120 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	class UClubDetails_X*                              ClubDetails;                                      		// 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class UGFxData_ClubMember_TA*>              ClubMembers;                                      		// 0x0130 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UOnlineGameWordFilter_X*                     WordFilter;                                       		// 0x0140 (0x0008) [0x0000000000000000]               
	class UCrossplayConfig_X*                          CrossplayConfig;                                  		// 0x0148 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ClubDetails_TA");
		}

		return uClassPointer;
	};

	void __GFxData_ClubDetails_TA__OnShellSet_AB4DF37F44E690E98C6C8083C5853805(class UAccountSettingsComponent_TA* AccountSettings);
	bool CanDisplayClubMember(struct FUniqueNetId NetId, unsigned long bEnableCrossplay);
	bool CanViewPlatformWithCrossplayDisabled(struct FUniqueNetId Id0, struct FUniqueNetId Id1);
	void UpdateClubMembers();
	void HandleSanitizedClubMotD(struct FString Original, struct FString Sanitized);
	void HandleSanitizedClubTag(struct FString Original, struct FString Sanitized);
	void HandleSanitizedClubName(struct FString Original, struct FString Sanitized);
	void Destroyed();
	void SetClubDetails(class UClubDetails_X* InClubDetails);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.__GFxData_Clubs_TA__AcceptClubInvite_9196296D449907E2FB7D15AD11BCA980
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Clubs_TA__AcceptClubInvite_9196296D449907E2FB7D15AD11BCA980 : public UObject
{
public:
	class UClubInviteNotification_TA*                  Notification;                                     		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Clubs_TA__AcceptClubInvite_9196296D449907E2FB7D15AD11BCA980");
		}

		return uClassPointer;
	};

	class UAsyncTask* __GFxData_Clubs_TA__AcceptClubInvite_70D1B087454570DD490BB0B68352ED41();
	void __GFxData_Clubs_TA__AcceptClubInvite_9196296D449907E2FB7D15AD11BCA980(class UGFxClubAction_TA* Action);
};

// Class TAGame.GFxData_Clubs_TA
// 0x00F0 (0x0098 - 0x0188)
class UGFxData_Clubs_TA : public UGFxDataSingleton_X
{
public:
	unsigned long long                                 LocalClubID;                                      		// 0x0098 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bClubOwner : 1;                                   		// 0x00A0 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bSyncedLocalClub : 1;                             		// 0x00A0 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bHasSyncedClubInvites : 1;                        		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	struct FString                                     LocalClubSyncError;                               		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     ExecutingClubAction;                              		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UPsyNet_X*                                   PsyNet;                                           		// 0x00C8 (0x0008) [0x0000000000000000]               
	class UOnlineClubProvider_X*                       ClubProvider;                                     		// 0x00D0 (0x0008) [0x0000000000000000]               
	class UClubsConfig_TA*                             ClubsConfig;                                      		// 0x00D8 (0x0008) [0x0000000000000000]               
	class UOnlineGameParty_X*                          Party;                                            		// 0x00E0 (0x0008) [0x0000000000000000]               
	class UPersonas_TA*                                PersonasData;                                     		// 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineClubManager_X*                        ClubManager;                                      		// 0x00F0 (0x0008) [0x0000000000000000]               
	TArray<class UGFxData_ClubDetails_TA*>             AllClubDetails;                                   		// 0x00F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UGFxClubAction_TA*                           CurrentClubAction;                                		// 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     TagTooShort;                                      		// 0x0110 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     TagTooLong;                                       		// 0x0120 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     TagHasInvalidCharacters;                          		// 0x0130 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     NameTooShort;                                     		// 0x0140 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     NameTooLong;                                      		// 0x0150 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     NameHasInvalidCharacters;                         		// 0x0160 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FScriptDelegate                             __FlashActionHandler__Delegate;                   		// 0x0170 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Clubs_TA");
		}

		return uClassPointer;
	};

	void __GFxData_Clubs_TA__InviteToClub_665DCFE043553269CD0FD4B5D1BA2E8C(class UError* TaskError);
	void __GFxData_Clubs_TA__SetClubInvites_E5B8616D46BEE8B4C519E88BC7898F20(class UClubInviteNotification_TA* Notification);
	void __GFxData_Clubs_TA__SetClubInvites_5E021FC643A060CF1D3780AF03652E85(class UClubInviteNotification_TA* Notification);
	void __GFxData_Clubs_TA__RejectAllClubInvites_C024404B4639D00A610E9AB1F1AF8F97(class URPC_ClearClubInvites_X* RPC);
	void __GFxData_Clubs_TA__RejectAllClubInvites_1E2FBD3447AF6B728FA48086D3253837(class URPC_ClearClubInvites_X* RPC);
	class UAsyncTask* __GFxData_Clubs_TA__LeaveClub_0EE07B044E6B4F1E838D92AFF34423B6();
	bool CanDisbandClub(unsigned long long ClubID);
	void LeaveClub();
	void RemoveClubInvites(unsigned long long ClubID);
	void HandleRejectedClubInviteComplete(class UGFxClubAction_TA* Action, class UClubInviteNotification_TA* Notification);
	void RejectClubInvite(class UClubInviteNotification_TA* Notification);
	void RejectAllClubInvites();
	void HandleAcceptedClubInviteComplete(class UGFxClubAction_TA* Action, class UClubInviteNotification_TA* Notification);
	void AcceptClubInvite(class UClubInviteNotification_TA* Notification);
	void SetClubInvites(TArray<class UClubInvite_X*> Invites);
	class UGFxData_ClubInvite_TA* GetGFxClubInvite(unsigned long long ClubID);
	void SyncClubInvites();
	void SetClubOwner(struct FUniqueNetId PlayerID);
	void RemoveFromClub(struct FUniqueNetId PlayerID);
	void HandleClubInviteFailed(struct FUniqueNetId PlayerID, class UError* TaskError);
	void InviteToClub(struct FUniqueNetId PlayerID);
	void SetMotD(struct FString Text);
	void UpdateClubColors(int PrimaryColorID, int AccentColorID);
	void UpdateClubName(struct FString ClubName, struct FString ClubTag);
	void ClearLocalClubInvitations();
	void HandleCreateClubFinished(class UGFxClubAction_TA* Action);
	void CreateClub(struct FString ClubName, struct FString ClubTag, int PrimaryColorID, int AccentColorID);
	struct FString GetClubNameError(struct FString ClubName);
	struct FString GetClubTagError(struct FString Tag);
	struct FString StripInvalidCharacters(struct FString Text);
	void OnClubActionComplete(struct FString Action, struct FString Error);
	void HandleClubActionComplete(class UGFxClubAction_TA* Action);
	class UGFxClubAction_TA* CreateClubAction(struct FName ActionName, struct FScriptDelegate Callback);
	void OnSyncClubDetails(unsigned long long ClubID, struct FString ErrorMessage);
	void SyncClubDetails(unsigned long long ClubID);
	void UpdateGFxClubDetails(class UClubDetails_X* ClubDetails);
	void HandleClubChanged(class UOnlineClubCache_X* Cache, class UClubDetails_X* ClubDetails);
	void HandlePlayerSynced(class UOnlineClubProvider_X* Provider, struct FUniqueNetId PlayerID);
	void UpdateLocalClub();
	class UOnlineClubManager_X* GetClubManager();
	void HandlePsyNetConnection(class UPsyNetConnection_X* C);
	void HandleClubInvite(class UPsyNetService_ClubsInvite_TA* Update);
	void eventOnRemoved();
	void eventOnShellSet();
	void FlashActionHandler(struct FString Error);
};

// Class TAGame.ClubInviteNotification_TA
// 0x0070 (0x0110 - 0x0180)
class UClubInviteNotification_TA : public UNotification_TA
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x0110 (0x0048) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long long                                 ClubID;                                           		// 0x0158 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     ClubName;                                         		// 0x0160 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     ClubTag;                                          		// 0x0170 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ClubInviteNotification_TA");
		}

		return uClassPointer;
	};

	bool ShouldShow();
	struct FUniqueNetId GetSenderID();
	class UClubInviteNotification_TA* SetClubDetails(unsigned long long InClubID, struct FString InClubName, struct FString InClubTag);
	class UClubInviteNotification_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.GFxClubAction_TA
// 0x0048 (0x0060 - 0x00A8)
class UGFxClubAction_TA : public UObject
{
public:
	class UAsyncTask*                                  Task;                                             		// 0x0060 (0x0008) [0x0000000000000000]               
	struct FString                                     ErrorMessage;                                     		// 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __StartTaskDelegate__Delegate;                    		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventComplete__Delegate;                        		// 0x0090 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxClubAction_TA");
		}

		return uClassPointer;
	};

	void eventDispose();
	void OnComplete();
	void HandleTaskComplete(class UError* TaskError);
	class UGFxClubAction_TA* Start(struct FScriptDelegate Action);
	class UGFxClubAction_TA* SetError(struct FString Message);
	class UGFxClubAction_TA* AssertNotGuest(struct FUniqueNetId PlayerID);
	class UGFxClubAction_TA* Assert(unsigned long expr, struct FString Message);
	void EventComplete(class UGFxClubAction_TA* Action);
	class UAsyncTask* StartTaskDelegate();
};

// Class TAGame.__GFxData_Clubs_TA__CreateClub_D7D0D097443EE97DEED8198D70FC9668
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Clubs_TA__CreateClub_D7D0D097443EE97DEED8198D70FC9668 : public UObject
{
public:
	class UClubSettings_X*                             Settings;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Clubs_TA__CreateClub_D7D0D097443EE97DEED8198D70FC9668");
		}

		return uClassPointer;
	};

	class UAsyncTask* __GFxData_Clubs_TA__CreateClub_D7D0D097443EE97DEED8198D70FC9668();
};

// Class TAGame.__GFxData_Clubs_TA__InviteToClub_4C77654844C429513EFCD8BB793CCDC0
// 0x0048 (0x0060 - 0x00A8)
class U__GFxData_Clubs_TA__InviteToClub_4C77654844C429513EFCD8BB793CCDC0 : public UObject
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Clubs_TA__InviteToClub_4C77654844C429513EFCD8BB793CCDC0");
		}

		return uClassPointer;
	};

	void ____GFxData_Clubs_TA__InviteToClub_4C77654844C429513EFCD8BB793CCDC0____GFxData_Clubs_TA__InviteToClub_4C77654844C429513EFCD8BB793CCDC0_B8C5D89D42D7CBF69D8F7F90291869E4(class UError* TaskError);
	class UAsyncTask* __GFxData_Clubs_TA__InviteToClub_4C77654844C429513EFCD8BB793CCDC0();
};

// Class TAGame.__GFxData_Clubs_TA__RejectClubInvite_D98F90FC4C2D0DD6AD4F99B041F51E24
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Clubs_TA__RejectClubInvite_D98F90FC4C2D0DD6AD4F99B041F51E24 : public UObject
{
public:
	class UClubInviteNotification_TA*                  Notification;                                     		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Clubs_TA__RejectClubInvite_D98F90FC4C2D0DD6AD4F99B041F51E24");
		}

		return uClassPointer;
	};

	class UAsyncTask* __GFxData_Clubs_TA__RejectClubInvite_198E77C54E127F6591DF7BAE52EDD27F();
	void __GFxData_Clubs_TA__RejectClubInvite_D98F90FC4C2D0DD6AD4F99B041F51E24(class UGFxClubAction_TA* Action);
};

// Class TAGame.__GFxData_Clubs_TA__RemoveFromClub_D5D3D8DF44B38F6F50D130A2993EC4F6
// 0x0048 (0x0060 - 0x00A8)
class U__GFxData_Clubs_TA__RemoveFromClub_D5D3D8DF44B38F6F50D130A2993EC4F6 : public UObject
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Clubs_TA__RemoveFromClub_D5D3D8DF44B38F6F50D130A2993EC4F6");
		}

		return uClassPointer;
	};

	class UAsyncTask* __GFxData_Clubs_TA__RemoveFromClub_D5D3D8DF44B38F6F50D130A2993EC4F6();
};

// Class TAGame.__GFxData_Clubs_TA__SetClubInvites_3256C1294CE5FD572C78BF92EEF5364B
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Clubs_TA__SetClubInvites_3256C1294CE5FD572C78BF92EEF5364B : public UObject
{
public:
	class UClubInvite_X*                               ClubInvite;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Clubs_TA__SetClubInvites_3256C1294CE5FD572C78BF92EEF5364B");
		}

		return uClassPointer;
	};

	bool __GFxData_Clubs_TA__SetClubInvites_3256C1294CE5FD572C78BF92EEF5364B(class UClubInviteNotification_TA* N);
};

// Class TAGame.__GFxData_Clubs_TA__SetClubOwner_96E6E37C479D0ED708F65C939B3D52E9
// 0x0048 (0x0060 - 0x00A8)
class U__GFxData_Clubs_TA__SetClubOwner_96E6E37C479D0ED708F65C939B3D52E9 : public UObject
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Clubs_TA__SetClubOwner_96E6E37C479D0ED708F65C939B3D52E9");
		}

		return uClassPointer;
	};

	class UAsyncTask* __GFxData_Clubs_TA__SetClubOwner_96E6E37C479D0ED708F65C939B3D52E9();
};

// Class TAGame.__GFxData_Clubs_TA__SetMotD_2EB6C4614078A55799BC10BF2E565382
// 0x0010 (0x0060 - 0x0070)
class U__GFxData_Clubs_TA__SetMotD_2EB6C4614078A55799BC10BF2E565382 : public UObject
{
public:
	struct FString                                     Text;                                             		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Clubs_TA__SetMotD_2EB6C4614078A55799BC10BF2E565382");
		}

		return uClassPointer;
	};

	class UAsyncTask* __GFxData_Clubs_TA__SetMotD_2EB6C4614078A55799BC10BF2E565382();
};

// Class TAGame.__GFxData_Clubs_TA__SyncClubDetails_BDA48EE8436A4A0C146C35BA78E28EE9
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Clubs_TA__SyncClubDetails_BDA48EE8436A4A0C146C35BA78E28EE9 : public UObject
{
public:
	unsigned long long                                 ClubID;                                           		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Clubs_TA__SyncClubDetails_BDA48EE8436A4A0C146C35BA78E28EE9");
		}

		return uClassPointer;
	};

	void __GFxData_Clubs_TA__SyncClubDetails_BDA48EE8436A4A0C146C35BA78E28EE9(class UError* Error);
};

// Class TAGame.__GFxData_Clubs_TA__UpdateClubColors_4E5DD7BC4085B45829FF0684A982B6CC
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Clubs_TA__UpdateClubColors_4E5DD7BC4085B45829FF0684A982B6CC : public UObject
{
public:
	int                                                PrimaryColor;                                     		// 0x0060 (0x0004) [0x0000000000000000]               
	int                                                AccentColor;                                      		// 0x0064 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Clubs_TA__UpdateClubColors_4E5DD7BC4085B45829FF0684A982B6CC");
		}

		return uClassPointer;
	};

	class UAsyncTask* __GFxData_Clubs_TA__UpdateClubColors_4E5DD7BC4085B45829FF0684A982B6CC();
};

// Class TAGame.__GFxData_Clubs_TA__UpdateClubName_CB88F3064F9171361B91F2BCB821D6F4
// 0x0020 (0x0060 - 0x0080)
class U__GFxData_Clubs_TA__UpdateClubName_CB88F3064F9171361B91F2BCB821D6F4 : public UObject
{
public:
	struct FString                                     ClubName;                                         		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     ClubTag;                                          		// 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Clubs_TA__UpdateClubName_CB88F3064F9171361B91F2BCB821D6F4");
		}

		return uClassPointer;
	};

	class UAsyncTask* __GFxData_Clubs_TA__UpdateClubName_CB88F3064F9171361B91F2BCB821D6F4();
};

// Class TAGame.__GFxData_Clubs_TA__UpdateGFxClubDetails_ADFE9F36449B5DC22DCD4EBBEF2098B9
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Clubs_TA__UpdateGFxClubDetails_ADFE9F36449B5DC22DCD4EBBEF2098B9 : public UObject
{
public:
	class UClubDetails_X*                              ClubDetails;                                      		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Clubs_TA__UpdateGFxClubDetails_ADFE9F36449B5DC22DCD4EBBEF2098B9");
		}

		return uClassPointer;
	};

	bool __GFxData_Clubs_TA__UpdateGFxClubDetails_ADFE9F36449B5DC22DCD4EBBEF2098B9(class UGFxData_ClubDetails_TA* D);
};

// Class TAGame.__GFxData_FaceIt_TA__HandleError_704554BB4E5F632A272485AFE4740E98
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_FaceIt_TA__HandleError_704554BB4E5F632A272485AFE4740E98 : public UObject
{
public:
	class UError*                                      InError;                                          		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_FaceIt_TA__HandleError_704554BB4E5F632A272485AFE4740E98");
		}

		return uClassPointer;
	};

	void __GFxData_FaceIt_TA__HandleError_704554BB4E5F632A272485AFE4740E98();
};

// Class TAGame.GFxData_FaceIt_TA
// 0x0030 (0x0098 - 0x00C8)
class UGFxData_FaceIt_TA : public UGFxDataSingleton_X
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x0098 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	class UFaceIt_TA*                                  FaceIt;                                           		// 0x00A0 (0x0008) [0x0000000000002001] (CPF_Edit | CPF_Transient)
	class UFaceItConfig_TA*                            Config;                                           		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPsyNet_X*                                   PsyNet;                                           		// 0x00B0 (0x0008) [0x0000000000000000]               
	unsigned long long                                 LastSpectatorPopupTime;                           		// 0x00B8 (0x0008) [0x0000000000000000]               
	unsigned long long                                 SpectatorPopupDelaySeconds;                       		// 0x00C0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_FaceIt_TA");
		}

		return uClassPointer;
	};

	void __GFxData_FaceIt_TA__HandlePsyNetLogin_0587A1F54799325F1ABB519FA6FD73D7(class UPsyNetService_FaceItReservationFound_TA* Service);
	struct FString GetPartnerString(int PartnerID);
	void HandleFaceItMatchFound(class UPsyNetService_FaceItSearchStarted_TA* Service);
	void HandleJoiningReservation(class UAsyncTask* Task, struct FFaceItMatchInfo& MatchInfo);
	void HandleAddReservationCommon(unsigned long long Expiration, unsigned long bSuppressNotification, struct FServerReservationData& ReservationData, struct FFaceItMatchInfo& MatchInfo);
	void HandleClienFaceItClientReservationMessage(class UIReservationConnection_X* Connection, class UFaceItClientReservationMessage_X* Message);
	void HandleAddReservationV1(struct FServerReservationData ReservationData, struct FFaceItMatchInfo MatchInfo, unsigned long long Expiration, unsigned long bSuppressNotification);
	void FindMatchForPlayer();
	void HandlePsyNetLogin();
	void HandleFaceItConfigChange();
	void HandleError(class UError* InError);
	void HandleFaceItRefChange();
	void eventOnShellSet();
};

// Class TAGame.__GFxData_Friends_TA__CreateConvertPlatformFriendsPrompt_F731CFEB4C8D0DF2D1D3B5ADADA0CEB4
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_Friends_TA__CreateConvertPlatformFriendsPrompt_F731CFEB4C8D0DF2D1D3B5ADADA0CEB4 : public UObject
{
public:
	class UEpicFriendsConverter_TA*                    Converter;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Friends_TA__CreateConvertPlatformFriendsPrompt_F731CFEB4C8D0DF2D1D3B5ADADA0CEB4");
		}

		return uClassPointer;
	};

	void ____GFxData_Friends_TA__CreateConvertPlatformFriendsPrompt_F731CFEB4C8D0DF2D1D3B5ADADA0CEB4____GFxData_Friends_TA__CreateConvertPlatformFriendsPrompt_1FE6A4A9427047DB4651D4B19D1113AD_4E3FF0904C6E1AF227F654A1CB247B2D(class UPrivilegeCheck_X* Check);
	void __GFxData_Friends_TA__CreateConvertPlatformFriendsPrompt_B1CD9A6344EF876E7CC800B1C8915B48(class UGFxModal_X* _);
	void __GFxData_Friends_TA__CreateConvertPlatformFriendsPrompt_1FE6A4A9427047DB4651D4B19D1113AD(class UGFxModal_X* _);
	void __GFxData_Friends_TA__CreateConvertPlatformFriendsPrompt_F731CFEB4C8D0DF2D1D3B5ADADA0CEB4(class UPrivilegeCheck_X* Check);
};

// Class TAGame.GFxData_Friends_TA
// 0x0120 (0x0098 - 0x01B8)
class UGFxData_Friends_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FPersonaDataId>                      Friends;                                          		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FPersonaDataId>                      PlatformFriends;                                  		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FPersonaDataId>                      EpicFriends;                                      		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FPersonaDataId>                      bLocked;                                          		// 0x00C8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FPersonaDataId>                      Recent;                                           		// 0x00D8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FPersonaDataId>                      InternalRecent;                                   		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FPersonaDataId>                      Pending;                                          		// 0x00F8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FPersonaDataId>                      BlockedFriendInvites;                             		// 0x0108 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                NumOnlineFriendsPlatform;                         		// 0x0118 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                NumInGameFriendsPlatform;                         		// 0x011C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                NumOnlineFriendsEpic;                             		// 0x0120 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                NumInGameFriendsEpic;                             		// 0x0124 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bPlatformFriendsDownloadFailed : 1;               		// 0x0128 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bEpicFriendsDownloadFailed : 1;                   		// 0x0128 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bUsePresenceGroups : 1;                           		// 0x0128 (0x0004) [0x0000000000004002] [0x00000004] (CPF_Const | CPF_Config)
	unsigned long                                      bCrossplayEnabled : 1;                            		// 0x0128 (0x0004) [0x0000000000000000] [0x00000008] 
	class UPersonas_TA*                                PersonasData;                                     		// 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineGame_X*                               OnlineGame;                                       		// 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPersonaSave_TA*                             PersonaSave;                                      		// 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UAccountSettingsComponent_TA*                AccountSettings;                                  		// 0x0148 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	int                                                MaxRecentPlayerCount;                             		// 0x0150 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<unsigned char>                              DefaultPlatformFriendGroups;                      		// 0x0158 (0x0010) [0x0000000000404002] (CPF_Const | CPF_Config | CPF_NeedCtorLink)
	TArray<unsigned char>                              DefaultEpicFriendGroups;                          		// 0x0168 (0x0010) [0x0000000000404002] (CPF_Const | CPF_Config | CPF_NeedCtorLink)
	class UOnlineGameParty_X*                          Party;                                            		// 0x0178 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class UPersona_TA*>                         PartyMemberPersonas;                              		// 0x0180 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UGFxData_PersonaGroup_TA*                    PlatformPartyPresenceGroup;                       		// 0x0190 (0x0008) [0x0000000000000000]               
	class UGFxData_PersonaGroup_TA*                    EpicPartyPresenceGroup;                           		// 0x0198 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __InternalRecent__ChangeNotify;                   		// 0x01A0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Friends_TA");
		}

		return uClassPointer;
	};

	bool __GFxData_Friends_TA__HandlePartiesChanged_A6A421EA4B7C6BAB0AD65C94A3955A8C(class UPersona_TA* PMember);
	bool __GFxData_Friends_TA__HandlePartiesChanged_311F7F714872888BD2D690B26AF856D7(class UPersona_TA* PMember);
	void __GFxData_Friends_TA__HandlePartiesChanged_17B7086F4CC9DE572166FABA920964E8(class UPersona_TA* RMember);
	bool __GFxData_Friends_TA__HandlePartiesChanged_B92D0FA044CBCEAEB9C78EB68524A34F(class UPersona_TA* Member);
	bool __GFxData_Friends_TA__HandlePartiesChanged_591BD76B481061DEECCF97BA8BC15598(class UPersona_TA* Member);
	bool __GFxData_Friends_TA__HandlePartiesChanged_E3A66D9F479FE6D857490BAB099BC817(class UPersona_TA* Member);
	class UPersona_TA* __GFxData_Friends_TA__HandlePartiesChanged_F4E36719453982590C3E7090803B9002(struct FPartyMember OtherPMember);
	bool __GFxData_Friends_TA__UpdateRecentPlayerList_16890623469E3AB3C8E3039631071BBB(struct FPersonaDataId P);
	void __GFxData_Friends_TA__CheckNotificationLimits_2E7427964AF03AAB7D0FF28A223BE53A(class UGFxModal_X* Modal);
	void __GFxData_Friends_TA__CheckNotificationLimits_2E67CA7D4129BE8E87FCF3AB167EE318(class UGFxModal_X* Modal);
	void __GFxData_Friends_TA__HandleClearAllFriendInvites_E885DECE412747B7B811D793BF093A85(class UGFxModal_X* Modal);
	void __GFxData_Friends_TA__HandleClearAllFriendInvites_11E3AD80451FFC6035254A989E571E27(class URPC_ClearFriendInvites_X* RPC);
	void __GFxData_Friends_TA__HandleClearAllFriendInvites_E676B42748791E7321231782E86DF1A9(class URPC_ClearFriendInvites_X* RPC);
	void __GFxData_Friends_TA__HandleClearAllClubInvites_891DFBDF44619A9A1C9D83BF9FF9F091(class UGFxModal_X* Modal);
	struct FUniqueNetId __GFxData_Friends_TA__DownloadRecentPlayers_724FE053469AB191B56C0F81BD7381FD(struct FPersonaDataId P);
	struct FPersonaDataId __GFxData_Friends_TA__HandleReceivedRecentPlayerDetails_83774E9A4FF73B05CD613EB1E56E30E3(struct FOnlineFriend RP);
	void __GFxData_Friends_TA__CreateEpicFriendInviteNotification_725261C4493F64EFB1C8789235A305A1(class UNotification_TA* Notification);
	void __GFxData_Friends_TA__CreateEpicFriendInviteNotification_7D2C67F84303E37E081F46AABDB001AE(class UNotification_TA* Notification);
	void __GFxData_Friends_TA__DeleteFriendGroup_7105977945116B08F7E767B2ED4C6C6F(class UPersona_TA* P);
	bool __GFxData_Friends_TA__FilterFriendsFromRecentPlayers_5B3AFEEE4ED7F5E9052C9EBB19615E8C(struct FPersonaDataId RecentID);
	bool __GFxData_Friends_TA__FilterFriendsFromRecentPlayers_95B2FE1849B9C2E0557F23B74E5BF3FD(struct FPersonaDataId RecentID);
	struct FUniqueNetId __GFxData_Friends_TA__GetSortedInGameFriendSubset_38F90F494F7A00210BFE24BF4595ECEA(class UPersona_TA* Persona);
	bool __GFxData_Friends_TA__GetSortedInGameFriendSubset_CB34FBB0406DB251317705B2D20E4508(class UPersona_TA* Persona);
	class UPersona_TA* __GFxData_Friends_TA__GetSortedInGameFriendSubset_38CEFE0B4F5EDD2F84D39DB7DAB94EC3(struct FPersonaDataId PDID);
	void __InternalRecent__ChangeNotifyFunc();
	void CreateConvertPlatformFriendsPrompt(class UEpicFriendsConverter_TA* Converter);
	void CheckToPromptToConvertPlatformFriends();
	void UpdateFriendInfo();
	struct FString GetDisplayName(struct FUniqueNetId PlayerID, unsigned long bSingleResult, unsigned char& ForcedRelationships);
	struct FString GetPreferredDisplayName(struct FUniqueNetId PlayerID, unsigned char ForcedRelationships);
	struct FString GetPreferredSingleDisplayName(struct FUniqueNetId PlayerID, unsigned char ForcedRelationships);
	bool IsComplianceForcedPlatformNameVisible(unsigned char OtherPlatform);
	bool IsFriendInParty(struct FUniqueNetId UniqueId);
	TArray<struct FUniqueNetId> GetSortedInGameFriendSubset(TArray<struct FPersonaDataId>& FriendArray);
	TArray<struct FUniqueNetId> GetSortedInGameEpicFriends();
	TArray<struct FUniqueNetId> GetSortedEpicFriends();
	bool ShouldPlatformAlwaysShowEpicFriends();
	TArray<struct FUniqueNetId> GetSortedInGamePlatformFriends();
	TArray<struct FUniqueNetId> GetSortedPlatformFriends();
	TArray<struct FUniqueNetId> GetSortedOnlineFriends();
	TArray<struct FUniqueNetId> GetSortedFriends();
	void UpdateFriendAndGroupInfo();
	void FilterFriendsFromRecentPlayers();
	void HandleFriendsListChanged(class UOnlinePlayerFriends_X* FriendsRef, class UError* Error);
	int GenerateGroupId();
	class UGFxData_PersonaGroup_TA* GetGroup(int GroupIdx);
	class UGFxData_PersonaGroup_TA* FindGroup(int GroupDataId);
	void ReportRecentPlayer(unsigned char OffenseReasonID, struct FUniqueNetId PlayerID);
	void HandlePsyTagUpdate(struct FOnlineFriend& FriendData);
	void UpdatePersonaData(class UPersona_TA* Persona, struct FOnlineStatus StatusData);
	void HandleEpicStatusUpdate(struct FOnlineStatus StatusData);
	void HandlePsyNetStatusUpdate(struct FOnlineStatus StatusData);
	void HandlePlatformStatusUpdate(struct FOnlineStatus StatusData);
	void AddFriendNote(struct FUniqueNetId PlayerID, struct FString msg);
	void RemoveFriendInternal(class UPersona_TA* UnfriendedPersona, struct FUniqueNetId PlayerID);
	void RemoveEpicFriendInternal(struct FUniqueNetId PlayerID);
	void RemovePlatformFriendInternal(struct FUniqueNetId PlayerID);
	void HandleEpicPlayerUnfriended(struct FUniqueNetId PlayerID);
	void RemoveEpicFriend(struct FUniqueNetId PlayerID);
	void SwapFriendToGroup_Internal(int NewIdx, struct FUniqueNetId PlayerID);
	void SwapFriendToGroup_Presence(struct FUniqueNetId PlayerID);
	bool IsFriendInGame(struct FUniqueNetId PlayerID);
	void SwapFriendToGroup(int NewIdx, struct FUniqueNetId PlayerID);
	void UpdateGroupInfo(struct FUniqueNetId PlayerID);
	int GetFriendGroupCount(unsigned char PersonaInfoOrigin);
	int GetEpicFriendGroupCount();
	int GetPlatformFriendGroupCount();
	void ChangeGroupName(int GroupIdx, struct FString NewName);
	void DeleteFriendGroup(int GroupIdx);
	void CreateNewFriendGroup(struct FString GroupName);
	void HandleDeclineEpicFriendInviteComplete(struct FUniqueNetId PlayerID, class UError* Error);
	void DeclineEpicFriendInvite(struct FUniqueNetId PlayerID);
	void HandleAcceptEpicFriendInviteComplete(struct FUniqueNetId AcceptedId, class UError* Error);
	void AcceptEpicFriendInvite(struct FUniqueNetId PlayerID);
	void OnReceivedEpicFriendInvite(struct FUniqueNetId PlayerID);
	void OnReceivedFriendRequest(struct FUniqueNetId PlayerID);
	bool HasExistingFriendRequestNotification(class UFriendRequestNotification_TA* Notification, struct FUniqueNetId ForPlayerID);
	void CreateEpicFriendInviteNotification(class UPersona_TA* InPersona, unsigned long bSuppressPopup);
	void OnCrossPlatformSupportURLClick(class UGFxModal_X* Modal);
	void OnInviteToEpicFriendsSentSuccess(struct FUniqueNetId PlayerID);
	void ShowEpicFriendInviteError(struct FString DisplayName, class UError* AddFriendError);
	void HandleEpicFriendInviteFailed(struct FUniqueNetId PlayerID, class UError* AddFriendError);
	void HandleEpicFriendInviteSucceeded(struct FUniqueNetId PlayerID);
	void InviteEpicFriend(struct FUniqueNetId PlayerID);
	void HandleRequestLinkedAccount(unsigned long bSuccess, TArray<struct FLinkedAccountData> ReceivedAccountData);
	void HandleQueriedUserByEpicDisplayName(unsigned long bWasSuccessful, struct FString QueriedDisplayName, struct FUniqueNetId QueriedPlayerId);
	void InviteToEpicFriendsByName(struct FString DisplayName);
	void DeliverUnblockedEpicFriendInvites();
	void HideBlockedEpicFriendInvites();
	void HandleEpicFriendInviteRemoved(struct FUniqueNetId PlayerToRemove);
	void HandleIncomingEpicFriendInvite(struct FUniqueNetId RequestingPlayer, struct FString RequestingNick);
	void HandleBlockedListUpdated(class UOnlinePlayerFriends_X* FriendsObject);
	void HandleBlockedListDownloadComplete(class UError* RequestError);
	void DownloadBlockedList();
	void HandleReceivedRecentPlayerDetails(TArray<struct FOnlineFriend>& RecentPlayers);
	void DownloadRecentPlayersComplete();
	void DownloadRecentPlayers();
	void InviteToMatch(struct FUniqueNetId PlayerID);
	void HandlePlayerUnblocked(struct FUniqueNetId PlayerID, class UError* RequestError);
	void UnblockPlayer(struct FUniqueNetId PlayerID);
	void HandlePlayerBlocked(struct FUniqueNetId PlayerID, class UError* RequestError);
	void BlockPlayer(struct FUniqueNetId PlayerID);
	void HandleClearAllClubInvites();
	void HandleClearAllFriendInvites();
	void CheckNotificationLimits();
	void AddBlockedPlayerData(class UPersona_TA* Persona);
	bool AddPendingPlayerData(class UPersona_TA* Persona);
	void AddRecentPlayerData(class UPersona_TA* Persona);
	void AddFriendData(class UPersona_TA* Persona);
	bool ShouldAddToRecentPlayerList(class UPersona_TA* Persona);
	void UpdateRecentPlayerList();
	void HandlePlayerAddedToMatch(class AGameEvent_TA* GameEvent, class APRI_TA* PRI);
	void HandleGameEventRemoved(class AGameEvent_TA* GameEvent);
	void HandleGameEventAdded(class AGameEvent_TA* GameEvent);
	void HandleCrossPlayChanged();
	void HandleAccountSettingsLoaded(class UAccountSettingsComponent_TA* InAccountSettings);
	void HandlePersonaSaveLoaded(class UPersonaSave_TA* InPersonaSave);
	void HandleProfileSet(class ULocalPlayer_TA* InLocalPlayer);
	void HandlePsyNetLogin(class UPsyNetConnection_X* C);
	void HandleEpicFriendsListDownloadCompleted(unsigned long bSuccess);
	void HandlePlatformFriendsListDownloadCompleted(unsigned long bSuccess);
	void InitGroups();
	void SetupPersonaGroup(unsigned char Group, unsigned char GroupOrigin);
	class UPersona_TA* GetAndSetPersona(struct FOnlineFriend PersonaData, unsigned char Origin);
	class UGFxData_PersonaGroup_TA* CreatePartyPersonaGroup(unsigned char GroupOrigin);
	void ValidatePartyPersonaGroup(unsigned char GroupOrigin);
	void AddEpicFriendToPartyGroup(class UPersona_TA* PartyMemberPersona);
	void AddPlatformFriendToPartyGroup(class UPersona_TA* PartyMemberPersona);
	void HandlePartiesChanged(class UOnlineGameParty_X* PartyObject);
	class UPersona_TA* GetOrCreatePersona(struct FOnlineFriend PersonaData, unsigned char Origin);
	void eventOnShellSet();
};

// Class TAGame.__GFxData_Friends_TA__CreateEpicFriendInviteNotification_B545ED5340DD53DE84FBA6864CE94A5D
// 0x000C (0x0060 - 0x006C)
class U__GFxData_Friends_TA__CreateEpicFriendInviteNotification_B545ED5340DD53DE84FBA6864CE94A5D : public UObject
{
public:
	class UPersona_TA*                                 InPersona;                                        		// 0x0060 (0x0008) [0x0000000000000000]               
	unsigned long                                      bSuppressPopup : 1;                               		// 0x0068 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Friends_TA__CreateEpicFriendInviteNotification_B545ED5340DD53DE84FBA6864CE94A5D");
		}

		return uClassPointer;
	};

	void ____GFxData_Friends_TA__CreateEpicFriendInviteNotification_B545ED5340DD53DE84FBA6864CE94A5D____GFxData_Friends_TA__CreateEpicFriendInviteNotification_66D924D3425B526E75FE92875B000015_32BCD288485319B8B360D9862153BC37(class UNotification_TA* Notification);
	void ____GFxData_Friends_TA__CreateEpicFriendInviteNotification_B545ED5340DD53DE84FBA6864CE94A5D____GFxData_Friends_TA__CreateEpicFriendInviteNotification_66D924D3425B526E75FE92875B000015_89A69B2E45008F7C6EC441AC023E1C42(class UNotification_TA* Notification);
	void __GFxData_Friends_TA__CreateEpicFriendInviteNotification_66D924D3425B526E75FE92875B000015(class UPersona_TA* P);
	bool __GFxData_Friends_TA__CreateEpicFriendInviteNotification_B545ED5340DD53DE84FBA6864CE94A5D(class UNotification_TA* N);
};

// Class TAGame.FriendRequestNotification_TA
// 0x0048 (0x0110 - 0x0158)
class UFriendRequestNotification_TA : public UNotification_TA
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x0110 (0x0048) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FriendRequestNotification_TA");
		}

		return uClassPointer;
	};

	bool ShouldShow();
	struct FUniqueNetId GetSenderID();
	class UFriendRequestNotification_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.__GFxData_Friends_TA__DeliverUnblockedEpicFriendInvites_FB8D0ECE4BCBF7DEEF9F66B77F457F04
// 0x0004 (0x0060 - 0x0064)
class U__GFxData_Friends_TA__DeliverUnblockedEpicFriendInvites_FB8D0ECE4BCBF7DEEF9F66B77F457F04 : public UObject
{
public:
	int                                                BlockedInviteIdx;                                 		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Friends_TA__DeliverUnblockedEpicFriendInvites_FB8D0ECE4BCBF7DEEF9F66B77F457F04");
		}

		return uClassPointer;
	};

	bool __GFxData_Friends_TA__DeliverUnblockedEpicFriendInvites_FB8D0ECE4BCBF7DEEF9F66B77F457F04(struct FPersonaDataId BlockedID);
};

// Class TAGame.__GFxData_Friends_TA__HandlePartiesChanged_1711A32347FD32A5BD9144BE5EC8EEE4
// 0x0048 (0x0060 - 0x00A8)
class U__GFxData_Friends_TA__HandlePartiesChanged_1711A32347FD32A5BD9144BE5EC8EEE4 : public UObject
{
public:
	struct FUniqueNetId                                PrimaryPlayerId;                                  		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Friends_TA__HandlePartiesChanged_1711A32347FD32A5BD9144BE5EC8EEE4");
		}

		return uClassPointer;
	};

	bool __GFxData_Friends_TA__HandlePartiesChanged_1711A32347FD32A5BD9144BE5EC8EEE4(struct FPartyMember PMember);
};

// Class TAGame.__GFxData_Friends_TA__HideBlockedEpicFriendInvites_CDA8E1014900AA6C674277A4D38D5035
// 0x0004 (0x0060 - 0x0064)
class U__GFxData_Friends_TA__HideBlockedEpicFriendInvites_CDA8E1014900AA6C674277A4D38D5035 : public UObject
{
public:
	int                                                PendingIdx;                                       		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Friends_TA__HideBlockedEpicFriendInvites_CDA8E1014900AA6C674277A4D38D5035");
		}

		return uClassPointer;
	};

	bool __GFxData_Friends_TA__HideBlockedEpicFriendInvites_CDA8E1014900AA6C674277A4D38D5035(struct FPersonaDataId BlockedID);
};

// Class TAGame.__GFxData_Friends_TA__IsFriendInParty_34A61C874BDF03CC40F3ACA43685F61D
// 0x0048 (0x0060 - 0x00A8)
class U__GFxData_Friends_TA__IsFriendInParty_34A61C874BDF03CC40F3ACA43685F61D : public UObject
{
public:
	struct FUniqueNetId                                UniqueId;                                         		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Friends_TA__IsFriendInParty_34A61C874BDF03CC40F3ACA43685F61D");
		}

		return uClassPointer;
	};

	bool __GFxData_Friends_TA__IsFriendInParty_34A61C874BDF03CC40F3ACA43685F61D(struct FPartyMember PM);
};

// Class TAGame.GFxData_MTXGarage_TA
// 0x00C8 (0x0098 - 0x0160)
class UGFxData_MTXGarage_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FMTXPurchaseInfo>                    CatalogItems;                                     		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FMTCatalogInfo>                      CatalogProducts;                                  		// 0x00A8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FCartInfo>                           CartItems;                                        		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     CartTotal;                                        		// 0x00C8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Currency;                                         		// 0x00D8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long                                      TransactionInProgress : 1;                        		// 0x00E8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bCatalogReady : 1;                                		// 0x00E8 (0x0004) [0x0000000000000000] [0x00000002] 
	class UGFxModal_X*                                 ModalProcessing;                                  		// 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                BlackMarketSkinProductID;                         		// 0x00F8 (0x0004) [0x0000000000000000]               
	float                                              CatalogExpirationTime;                            		// 0x00FC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CatalogCacheDuration;                             		// 0x0100 (0x0004) [0x0000000000000000]               
	unsigned char                                      CatalogCategory;                                  		// 0x0104 (0x0001) [0x0000000000002000] (CPF_Transient)
	float                                              PurchaseTimeoutTime;                              		// 0x0108 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              GetPriceTimeoutTime;                              		// 0x010C (0x0004) [0x0000000000000002] (CPF_Const)   
	class AGameInfo_GFxMenu_TA*                        Menu;                                             		// 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMtxConfig_TA*                               MtxConfig;                                        		// 0x0118 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UOnlineSystemInterface*                      SystemInterface;                                  		// 0x0120 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0128 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
	class UOnlinePurchaseInterface*                    PurchaseInterface;                                		// 0x0130 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData01[0x8];                               		// 0x0138 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
	class UPsyNetConnection_X*                         PsyNetConnection;                                 		// 0x0140 (0x0008) [0x0000000000000000]               
	struct FString                                     RegionRestrictedOpenCrate;                        		// 0x0148 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UOnlineProductStoreSet_TA*                   OnlineProductStoreSet;                            		// 0x0158 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_MTXGarage_TA");
		}

		return uClassPointer;
	};

	struct FProductHashID __GFxData_MTXGarage_TA__GetKeyHashIDs_EBFC016744E915C43F5E3CA13DD85E83(class UOnlineProduct_TA* Op);
	bool __GFxData_MTXGarage_TA__GetKeyHashIDs_C4242D9441374AE3A74E98942982790D(class UOnlineProduct_TA* Op);
	struct FProductHashID __GFxData_MTXGarage_TA__GetDecryptorHashIDs_3A65E5D4453A87EC4BE5D4ADC0AA125C(class UOnlineProduct_TA* Op);
	bool __GFxData_MTXGarage_TA__GetDecryptorHashIDs_372716A74F664881C0F5378755A21AD5(class UOnlineProduct_TA* Op);
	struct FProductHashID __GFxData_MTXGarage_TA__GetTradeHoldSortedKeys_F86613FD4264D85A187C2DB33882EFEF(class UOnlineProduct_TA* Op);
	bool __GFxData_MTXGarage_TA__GetTradeHoldSortedKeys_F7E6B7CB47B719B822B9A180484E021B(class UOnlineProduct_TA* Op);
	bool __GFxData_MTXGarage_TA__AnyKeyRestricted_B20EDF294D2606017180BE826A23A5CE(class UOnlineProduct_TA* Key);
	unsigned long long __GFxData_MTXGarage_TA__UnlockContainers_C0D54D214920888EFD02D198E7FEDA3A(class UOnlineProduct_TA* Op);
	unsigned long long __GFxData_MTXGarage_TA__UnlockContainers_B283E69F494CE4F8D55F2F927388D7E4(class UOnlineProduct_TA* Op);
	int __GFxData_MTXGarage_TA__RevealContainerUnlocks_18390F25461C9DC9609E47949D413C5C(class UOnlineProduct_TA* P);
	struct FProductHashID __GFxData_MTXGarage_TA__RevealContainerUnlocks_7AE3F9734F55F2D3D7EE1AB05622F63F(class UOnlineProduct_TA* P);
	struct FString __GFxData_MTXGarage_TA__HandleGetCatalogResponse_FF4445FB4B4E051BB2147A910EA006EB(struct FCurrency C);
	struct FMTCartItem __GFxData_MTXGarage_TA__CheckoutAndReturnError_03FA322F44AFA8B9491AA9A699567C32(struct FCartInfo Item);
	bool __GFxData_MTXGarage_TA__CheckoutAndReturnError_831536F44E13220BA7EEAEAE4F90195D(struct FCartInfo Item);
	void HandleMTXErrorType(class UErrorType* InErrorType);
	void HandleMTXError(class UError* Error);
	void OnExitDisplay();
	void SetDisplayProduct(struct FProductHashID HashID);
	void ProductRevealExit();
	void OnRevealFinished(int SlotIndex);
	void ProductReveal();
	void OnKeyPurchase(TArray<unsigned long long> InstanceID);
	void HandlePsynetConfirmPurchase(class URPC_MicroTransactions_FinalizePurchase_TA* RPC);
	void OnPlayerConfirmPurchase(unsigned long bAuthorized, unsigned long long OrderId);
	void HandleClaimEntitlements(class UOnlinePlayerMTX_TA* MTX, TArray<class UOnlineProduct_TA*> NewProducts);
	void HandleStartPurchase(class URPC_MicroTransactions_StartPurchase_TA* RPC);
	void MTXPurchaseEnd();
	void PurchaseTimeout();
	class UErrorType* IsUserAbleToPurchaseReturnError();
	bool IsUserAbleToPurchase();
	class UErrorType* CheckoutAndReturnError();
	class UErrorType* CheckoutAndReturnError_V1();
	void CheckOut();
	void CheckoutCompleteFlashNNX();
	void CheckoutCompleteNNX();
	TArray<struct FMTCartItem> MapCartToCatalog();
	void UpdateCartTotal();
	void AddToCart(int CatalogID, int Count);
	void RemoveFromCart(int CatalogID, int Count);
	void ClearCart();
	void OnGetCatalog(unsigned long bSuccess);
	void HandleGetPriceInfoComplete(struct FName ProductName, struct FString Price, struct FString DiscountPrice, int DiscountPercentage);
	void HandleGetPriceTimeout();
	void UpdatePriceInfo(TArray<struct FMTCatalogInfo> PriceRequests);
	void HandleImageDownloaded(struct FString URL, class UTexture2DDynamic* Texture);
	void HandleGetCatalogResponse(class URPC_MicroTransactions_GetCatalog_TA* RPC);
	void SetCatalogCategory(unsigned char InCategory);
	void GetCatalog();
	void OnUnlockFailed();
	void OnUnlock(TArray<struct FProductHashID> HashIDs, TArray<int> ProductIDs);
	void RevealContainerUnlocks(unsigned long bMultiCrateUnlock, TArray<struct FOnlineProductData>& Drops);
	void HandleUnlockContainersResponse(class URPC_MicroTransactions_UnlockContainer_TA* RPC);
	void UnlockContainerFailed();
	void UnlockContainers(struct FProductHashID ContainerHashID, TArray<struct FProductHashID> KeyHashIDs);
	bool AnyKeyRestricted(TArray<class UOnlineProduct_TA*>& KeyProducts);
	TArray<struct FProductHashID> GetTradeHoldSortedKeys(unsigned long bIsAscending);
	TArray<struct FProductHashID> GetDecryptorHashIDs();
	TArray<struct FProductHashID> GetKeyHashIDs();
	void OnKeyListUpdated();
	bool CanStartTransaction();
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.__GFxData_MTXGarage_TA__HandleGetCatalogResponse_28D2145344B60B6F59F34AA4D5D0AD45
// 0x00A0 (0x0060 - 0x0100)
class U__GFxData_MTXGarage_TA__HandleGetCatalogResponse_28D2145344B60B6F59F34AA4D5D0AD45 : public UObject
{
public:
	struct FMTXPurchaseInfo                            BundleInfo;                                       		// 0x0060 (0x00A0) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_MTXGarage_TA__HandleGetCatalogResponse_28D2145344B60B6F59F34AA4D5D0AD45");
		}

		return uClassPointer;
	};

	void __GFxData_MTXGarage_TA__HandleGetCatalogResponse_28D2145344B60B6F59F34AA4D5D0AD45(class UTexture2DDynamic* Texture);
};

// Class TAGame.__GFxData_MTXGarage_TA__HandleUnlockContainersResponse_D1D146074C1C0D533BDC42905F895A4B
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_MTXGarage_TA__HandleUnlockContainersResponse_D1D146074C1C0D533BDC42905F895A4B : public UObject
{
public:
	class USaveData_TA*                                PCSaveData;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_MTXGarage_TA__HandleUnlockContainersResponse_D1D146074C1C0D533BDC42905F895A4B");
		}

		return uClassPointer;
	};

	void __GFxData_MTXGarage_TA__HandleUnlockContainersResponse_E20924D74F5AF0EC2FBDBF9620106550(unsigned long long KeyInstanceID);
	void __GFxData_MTXGarage_TA__HandleUnlockContainersResponse_D1D146074C1C0D533BDC42905F895A4B(unsigned long long InstanceID);
};

// Class TAGame.__GFxData_MTXGarage_TA__RevealContainerUnlocks_6F890F41416D58646A7D49BA5D521E9C
// 0x0020 (0x0060 - 0x0080)
class U__GFxData_MTXGarage_TA__RevealContainerUnlocks_6F890F41416D58646A7D49BA5D521E9C : public UObject
{
public:
	TArray<class UOnlineProduct_TA*>                   OnlineProducts;                                   		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UProductsSave_TA*                            ProductsSave;                                     		// 0x0070 (0x0008) [0x0000000000000000]               
	class USaveData_TA*                                PCSaveData;                                       		// 0x0078 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_MTXGarage_TA__RevealContainerUnlocks_6F890F41416D58646A7D49BA5D521E9C");
		}

		return uClassPointer;
	};

	void __GFxData_MTXGarage_TA__RevealContainerUnlocks_7AAD63C64CFB171761EE7EBD9E55AF4C(class UOnlineProduct_TA* Op);
	void __GFxData_MTXGarage_TA__RevealContainerUnlocks_6F890F41416D58646A7D49BA5D521E9C(struct FOnlineProductData D);
};

// Class TAGame.__GFxData_MultiItemDrops_TA__HandleAchievementRewardsReceived_3CA186F84268BF4315C2DF981848746E
// 0x0010 (0x0060 - 0x0070)
class U__GFxData_MultiItemDrops_TA__HandleAchievementRewardsReceived_3CA186F84268BF4315C2DF981848746E : public UObject
{
public:
	TArray<struct FCurrency>                           Currency;                                         		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_MultiItemDrops_TA__HandleAchievementRewardsReceived_3CA186F84268BF4315C2DF981848746E");
		}

		return uClassPointer;
	};

};

// Class TAGame.__GFxData_Mutators_TA__InitMutatorCustomGameSettings_3524919F4A782CAFDB81BF9AD76BE90D
// 0x0010 (0x0060 - 0x0070)
class U__GFxData_Mutators_TA__InitMutatorCustomGameSettings_3524919F4A782CAFDB81BF9AD76BE90D : public UObject
{
public:
	TArray<struct FName>                               DisabledCategories;                               		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Mutators_TA__InitMutatorCustomGameSettings_3524919F4A782CAFDB81BF9AD76BE90D");
		}

		return uClassPointer;
	};

	bool __GFxData_Mutators_TA__InitMutatorCustomGameSettings_3524919F4A782CAFDB81BF9AD76BE90D(class UGameSettingCategory_X* GSC);
};

// Class TAGame.GFxData_Mutators_TA
// 0x0078 (0x0098 - 0x0110)
class UGFxData_Mutators_TA : public UGFxDataSingleton_X
{
public:
	struct FName                                       SelectedMapName;                                  		// 0x0098 (0x0008) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	int                                                SelectedGameMode;                                 		// 0x00A0 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	int                                                SelectedBotDifficulty;                            		// 0x00A4 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	TArray<struct FGameModeData>                       GameModes;                                        		// 0x00A8 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FCustomGameSetting>                  CustomGameSettings;                               		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<class UGameSettingCategory_X*>              GameSettingCategories;                            		// 0x00C8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                PresetCategoryIndex;                              		// 0x00D8 (0x0004) [0x0000000000000000]               
	TArray<struct FModeMapPair>                        ModeMaps;                                         		// 0x00E0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned char                                      SettingsType;                                     		// 0x00F0 (0x0001) [0x0000000000002000] (CPF_Transient)
	class UProfile_TA*                                 Profile;                                          		// 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGameMode_TA*                                GameModeObj;                                      		// 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGameTags_TA*                                GameTags;                                         		// 0x0108 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Mutators_TA");
		}

		return uClassPointer;
	};

	void __GFxData_Mutators_TA__SetCustomGameSetting_74E43361481922270B8EB5BCFB83B244(struct FCategorySettingPair P);
	bool __GFxData_Mutators_TA__SetCustomGameSetting_7E6ADECD430DD3DA84A827B16028B1E0(struct FCategorySettingPair P);
	void SetCustomGameSetting(int MutatorCategoryIndex, int MutatorSettingIndex);
	bool ResetInvalidSettings(int MutatorCategoryIndex);
	bool IsValidSetting(int MutatorCategoryIndex, int MutatorSettingIndex, unsigned long bCoerceMap);
	struct FString GetCustomGameSettingDescription(int MutatorCategoryIndex, int MutatorSettingIndex);
	void ForceClearAllTags();
	void SetSelectedBotDifficulty(int BotDifficulty);
	struct FString GetGameTagValueFromIndex(struct FString GameTagCategory, int Index);
	int GetGameTagIndex(struct FString GameTagCategory, struct FString Value);
	void SetSelectedGameMode(int GameMode);
	void SetSelectedMapName(struct FName MapName);
	void InitMutatorCustomGameSettings();
	void InitCustomGameSettings();
	void RefreshCustomGameSettings(int MutatorCategoryIndex, int MutatorSettingIndex);
	void OnUpdatedSettings();
	void PopulateGameModes();
	void SetCustomMatchSettings(struct FCustomMatchSettings& InSettings);
	struct FCustomMatchSettings GetCustomMatchSettings();
	void SetGameTag(struct FString Key, struct FString Value);
	struct FString GetGameTag(struct FString Key);
	void InitMutatorsFromTournament(unsigned long long TournamentID);
	void InitMutators(unsigned char InSettingsType);
	void eventOnShellSet();
	class UOnlineGame_TA* GetOnlineGame();
};

// Class TAGame.__GFxData_NotificationManager_TA__HandleNotificationRemoved_40BB91DF4FC3334D624254999CC6C819
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_NotificationManager_TA__HandleNotificationRemoved_40BB91DF4FC3334D624254999CC6C819 : public UObject
{
public:
	class UNotification_TA*                            Notification;                                     		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_NotificationManager_TA__HandleNotificationRemoved_40BB91DF4FC3334D624254999CC6C819");
		}

		return uClassPointer;
	};

	bool __GFxData_NotificationManager_TA__HandleNotificationRemoved_E76EDC6246AF08024451F99F16A1988A(class UNotification_TA* N);
	bool __GFxData_NotificationManager_TA__HandleNotificationRemoved_40BB91DF4FC3334D624254999CC6C819(struct FGFXNotificationInfo N);
};

// Class TAGame.GFxData_NotificationManager_TA
// 0x0030 (0x0098 - 0x00C8)
class UGFxData_NotificationManager_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FGFXNotificationInfo>                Notifications;                                    		// 0x0098 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long                                      bShowInGameNotifications : 1;                     		// 0x00A8 (0x0004) [0x0000000040000001] [0x00000001] (CPF_Edit | CPF_EditInlineNotify)
	class UNotificationSave_TA*                        NotificationSave;                                 		// 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class UNotification_TA*>                    PendingNotifications;                             		// 0x00B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_NotificationManager_TA");
		}

		return uClassPointer;
	};

	void __GFxData_NotificationManager_TA__RefreshNotifications_0D4CB5D041C574C4269B9CA0B161FA41(class UNotification_TA* Notification);
	void DismissNotification(int NotificationID);
	void RejectNotification(int NotificationID);
	void AcceptNotification(int NotificationID);
	int GetNotificationRowIndex(int NotificationID);
	int GetNotificationInfoIndex(int NotificationID);
	void eventOnRemoved();
	void DestroyGFxNotifications();
	class UNotificationManager_TA* GetNotificationManager();
	void HandleNotificationRemoved(class UNotificationManager_TA* NotificationManager, class UNotification_TA* Notification);
	void ProcessPendingNotifications();
	void HandleNotificationAdded(class UNotificationManager_TA* NotificationManager, class UNotification_TA* Notification);
	void RefreshNotifications();
	void HandleNotificationSaveUpdated();
	void HandleNotificationSaveAdded(class UNotificationSave_TA* InNotificationSave);
	void HandleAccountSettingsAdded(class UAccountSettingsComponent_TA* AccountSettings);
	void eventOnShellSet();
};

// Class TAGame.__GFxData_PlayerAvatarBorderPreview_TA__CreatePlayerAvatarBorderPreview_04EA0A644725DC6D71FA96B74A6F760C
// 0x0014 (0x0060 - 0x0074)
class U__GFxData_PlayerAvatarBorderPreview_TA__CreatePlayerAvatarBorderPreview_04EA0A644725DC6D71FA96B74A6F760C : public UObject
{
public:
	class UPlayerAvatarBorder_TA*                      AvatarBorderPreview;                              		// 0x0060 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UOnlineProduct_TA*                           OnlineProduct;                                    		// 0x0068 (0x0008) [0x0000000000000000]               
	int                                                InColorID;                                        		// 0x0070 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_PlayerAvatarBorderPreview_TA__CreatePlayerAvatarBorderPreview_04EA0A644725DC6D71FA96B74A6F760C");
		}

		return uClassPointer;
	};

	void __GFxData_PlayerAvatarBorderPreview_TA__CreatePlayerAvatarBorderPreview_04EA0A644725DC6D71FA96B74A6F760C(class UPlayerVanity_TA* PlayerVanity);
};

// Class TAGame.GFxData_PlayerAvatarBorderPreview_TA
// 0x0010 (0x0098 - 0x00A8)
class UGFxData_PlayerAvatarBorderPreview_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FGFxPlayerAvatarBorderRef>           AvatarBorderPreviews;                             		// 0x0098 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PlayerAvatarBorderPreview_TA");
		}

		return uClassPointer;
	};

	int GetBorderIndexByHashID(struct FProductHashID HashID);
	int GetPlayerAvatarBorder(struct FUniqueNetId PlayerID);
	void DestroyPlayerAvatarBorderPreview(struct FProductHashID HashID);
	unsigned long long CreatePlayerAvatarBorderPreview(struct FProductHashID HashID, int InColorID);
};

// Class TAGame.__GFxData_PlayerAvatarPreview_TA__CreatePlayerAvatarPreview_009B80A145EB09F4F0324CB733D141D2
// 0x0014 (0x0060 - 0x0074)
class U__GFxData_PlayerAvatarPreview_TA__CreatePlayerAvatarPreview_009B80A145EB09F4F0324CB733D141D2 : public UObject
{
public:
	class UPlayerAvatar_TA*                            AvatarPreview;                                    		// 0x0060 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UOnlineProduct_TA*                           OnlineProduct;                                    		// 0x0068 (0x0008) [0x0000000000000000]               
	int                                                InColorID;                                        		// 0x0070 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_PlayerAvatarPreview_TA__CreatePlayerAvatarPreview_009B80A145EB09F4F0324CB733D141D2");
		}

		return uClassPointer;
	};

	void __GFxData_PlayerAvatarPreview_TA__CreatePlayerAvatarPreview_009B80A145EB09F4F0324CB733D141D2(class UPlayerVanity_TA* PlayerVanity);
};

// Class TAGame.GFxData_PlayerAvatarPreview_TA
// 0x0010 (0x0098 - 0x00A8)
class UGFxData_PlayerAvatarPreview_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FGFxPlayerAvatarRef>                 AvatarPreviews;                                   		// 0x0098 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PlayerAvatarPreview_TA");
		}

		return uClassPointer;
	};

	int GetAvatarIndexByHashID(struct FProductHashID HashID);
	int GetPlayerAvatar(struct FUniqueNetId PlayerID);
	void DestroyPlayerAvatarPreview(struct FProductHashID HashID);
	unsigned long long CreatePlayerAvatarPreview(struct FProductHashID HashID, int InColorID);
};

// Class TAGame.__GFxData_PlayerBanners_TA__CreatePlayerBanner_419590E3416B77664546279864AA1974
// 0x0024 (0x0060 - 0x0084)
class U__GFxData_PlayerBanners_TA__CreatePlayerBanner_419590E3416B77664546279864AA1974 : public UObject
{
public:
	class UPlayerBanner_TA*                            Banner;                                           		// 0x0060 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FProductHashSource                          ProductSource;                                    		// 0x0068 (0x0018) [0x0000000000000000]               
	int                                                InColorID;                                        		// 0x0080 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_PlayerBanners_TA__CreatePlayerBanner_419590E3416B77664546279864AA1974");
		}

		return uClassPointer;
	};

	void __GFxData_PlayerBanners_TA__CreatePlayerBanner_419590E3416B77664546279864AA1974(class UPlayerVanity_TA* PlayerVanity);
};

// Class TAGame.GFxData_PlayerBanners_TA
// 0x0018 (0x0098 - 0x00B0)
class UGFxData_PlayerBanners_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FGFxPlayerBannerRef>                 Banners;                                          		// 0x0098 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UPlayerBanner_TA*                            LastPreviewBanner;                                		// 0x00A8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PlayerBanners_TA");
		}

		return uClassPointer;
	};

	int GetBannerIndexByHashID(struct FProductHashID HashID);
	int GetPlayerBanner(struct FUniqueNetId PlayerID);
	void DestroyPendingAndActivePlayerBannerPreviews();
	void DestroyPlayerBannerPreview();
	void DestroyPlayerBanner(struct FProductHashID HashID);
	void DestroyBannerByNetID(struct FUniqueNetId PlayerID);
	void CreatePlayerBannerPreview(struct FProductHashID HashID, int InColorID);
	void OnBannerPreviewLoaded(unsigned long long InstanceID);
	class UProfile_TA* GetProfile();
	void HandleBannerPreviewLoaded(class UPlayerBanner_TA* Banner, class UOnlineProduct_TA* OnlineProduct, int InColorID, struct FUniqueNetId PlayerID, struct FProductHashID HashID);
	int CreatePlayerBanner(struct FProductHashID HashID, int InColorID);
};

// Class TAGame.__GFxData_PlayerBanners_TA__CreatePlayerBannerPreview_D4574F4F43C72B2E1DAA05BF40BCB9D8
// 0x0010 (0x0060 - 0x0070)
class U__GFxData_PlayerBanners_TA__CreatePlayerBannerPreview_D4574F4F43C72B2E1DAA05BF40BCB9D8 : public UObject
{
public:
	class UOnlineProduct_TA*                           OnlineProduct;                                    		// 0x0060 (0x0008) [0x0000000000000000]               
	int                                                InColorID;                                        		// 0x0068 (0x0004) [0x0000000000000000]               
	struct FProductHashID                              HashID;                                           		// 0x006C (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_PlayerBanners_TA__CreatePlayerBannerPreview_D4574F4F43C72B2E1DAA05BF40BCB9D8");
		}

		return uClassPointer;
	};

	void __GFxData_PlayerBanners_TA__CreatePlayerBannerPreview_D4574F4F43C72B2E1DAA05BF40BCB9D8(class UPlayerVanity_TA* PlayerVanity);
};

// Class TAGame.__GFxData_ReplayManager_TA__DownloadReplay_FDAD166F454EA4BCC45D9B81F4E8DBE3
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_ReplayManager_TA__DownloadReplay_FDAD166F454EA4BCC45D9B81F4E8DBE3 : public UObject
{
public:
	class UWebRequest_X*                               Request;                                          		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_ReplayManager_TA__DownloadReplay_FDAD166F454EA4BCC45D9B81F4E8DBE3");
		}

		return uClassPointer;
	};

};

// Class TAGame.__GFxData_ShopCatalogue_TA__GetOnlineProductsByCostID_02AFDCAD452CD9B0DF78D4AC9707471E
// 0x0004 (0x0060 - 0x0064)
class U__GFxData_ShopCatalogue_TA__GetOnlineProductsByCostID_02AFDCAD452CD9B0DF78D4AC9707471E : public UObject
{
public:
	int                                                CostID;                                           		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_ShopCatalogue_TA__GetOnlineProductsByCostID_02AFDCAD452CD9B0DF78D4AC9707471E");
		}

		return uClassPointer;
	};

	bool __GFxData_ShopCatalogue_TA__GetOnlineProductsByCostID_02AFDCAD452CD9B0DF78D4AC9707471E(struct FShopItem I);
};

// Class TAGame.GFxData_ShopCatalogue_TA
// 0x00EC (0x0094 - 0x0180)
class UGFxData_ShopCatalogue_TA : public UGFxDataRow_X
{
public:
	class UShopsManager_TA*                            ShopManager;                                      		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                ShopID;                                           		// 0x00A0 (0x0004) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	struct FString                                     ShopName;                                         		// 0x00A8 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Type;                                             		// 0x00B8 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Region;                                           		// 0x00C8 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long long                                 StartDate;                                        		// 0x00D8 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	unsigned long long                                 EndDate;                                          		// 0x00E0 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	class UTexture*                                    ShopImage;                                        		// 0x00E8 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	struct FString                                     ShopImageURL;                                     		// 0x00F0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long                                      bLoaded : 1;                                      		// 0x0100 (0x0004) [0x0000000040002000] [0x00000001] (CPF_Transient | CPF_EditInlineNotify)
	unsigned long                                      bFailedToLoad : 1;                                		// 0x0100 (0x0004) [0x0000000040002000] [0x00000002] (CPF_Transient | CPF_EditInlineNotify)
	unsigned long                                      bShopItemExpired : 1;                             		// 0x0100 (0x0004) [0x0000000040002000] [0x00000004] (CPF_Transient | CPF_EditInlineNotify)
	unsigned long                                      bAutoReload : 1;                                  		// 0x0100 (0x0004) [0x0000000040002000] [0x00000008] (CPF_Transient | CPF_EditInlineNotify)
	TArray<struct FShopItem>                           CachedItems;                                      		// 0x0108 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              CacheDuration;                                    		// 0x0118 (0x0004) [0x0000000000004000] (CPF_Config)  
	float                                              LastCacheTime;                                    		// 0x011C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastOwnedCacheTime;                               		// 0x0120 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UAsyncTask*                                  ShopTask;                                         		// 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineProductStoreSet_TA*                   CatalogueSet;                                     		// 0x0130 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UShopItemExpirationHelper_TA*                ExpirationHelper;                                 		// 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UShopAutoLoadHelper_TA*                      AutoLoadHelper;                                   		// 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UShopsConfig_TA*                             ShopsConfig;                                      		// 0x0148 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __bLoaded__ChangeNotify;                          		// 0x0150 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __bAutoReload__ChangeNotify;                      		// 0x0168 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ShopCatalogue_TA");
		}

		return uClassPointer;
	};

	void __GFxData_ShopCatalogue_TA__OnShellSet_7130ED92493972A4C693E8981DFFC531(class UShopItemExpirationHelper_TA* _);
	struct FProductHashID __GFxData_ShopCatalogue_TA__GetOnlineProductsByCostID_9FE80F844011F8E6386B4AB431F8488E(struct FShopDeliverable D);
	bool __GFxData_ShopCatalogue_TA__SetOwnedDeliverableProducts_BC5FE3F6488E845900AC8CBBD43F8D90(struct FShopDeliverable P);
	bool __GFxData_ShopCatalogue_TA__SetOwnedDeliverableProducts_770F18FE48F66C6833D78581F9FB7ECC(class UOnlineProduct_TA* P);
	void __bAutoReload__ChangeNotifyFunc();
	void __bLoaded__ChangeNotifyFunc();
	void DebugSetCatalogueItems(TArray<struct FShopItem> InItems);
	void DebugOverride(int Index, int ProductID, int PaintID, int CertifiedId, int SpecialEditionID, int Cost);
	void OnCatalogueLoaded();
	void HandleShopItemExpired();
	void HandleCatalogueLoadFailed(class UError* Error);
	void ShopItemTextureLoaded(int ShopItemID, class UTexture* LoadedTexture);
	void SyncItemImages(class UWebImageCache_X* WebImageCache, int I);
	void HandleCatalogueLoaded(TArray<struct FShopItem> InItems);
	void SetOwnedDeliverableProducts();
	void ClearLastOwnedCacheTime();
	void SetCatalogueItems(TArray<struct FShopItem> InItems);
	TArray<class UOnlineProduct_TA*> GetOnlineProductsByCostID(int CostID);
	void LoadCatalogueInternal(unsigned long bForce);
	void OnOwnedProductsSet();
	void SetAutoLoadCatalogue(unsigned long bInAutoReload);
	TArray<struct FShopItem> GetShopItems();
	void ForceLoadCatalogue();
	void LoadCatalogue();
	void Init(struct FShopData InData);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.__GFxData_ShopCatalogue_TA__SyncItemImages_659081674E50B15CDA83618B273917B4
// 0x0004 (0x0060 - 0x0064)
class U__GFxData_ShopCatalogue_TA__SyncItemImages_659081674E50B15CDA83618B273917B4 : public UObject
{
public:
	int                                                ShopItemID;                                       		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_ShopCatalogue_TA__SyncItemImages_659081674E50B15CDA83618B273917B4");
		}

		return uClassPointer;
	};

	void __GFxData_ShopCatalogue_TA__SyncItemImages_659081674E50B15CDA83618B273917B4(class UTexture2DDynamic* Texture);
};

// Class TAGame.__GFxData_Shops_TA__GetCrateShop_87CAC0504FA2FC7622DFA09967CE957F
// 0x0004 (0x0060 - 0x0064)
class U__GFxData_Shops_TA__GetCrateShop_87CAC0504FA2FC7622DFA09967CE957F : public UObject
{
public:
	int                                                CrateID;                                          		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Shops_TA__GetCrateShop_87CAC0504FA2FC7622DFA09967CE957F");
		}

		return uClassPointer;
	};

	void __GFxData_Shops_TA__GetCrateShop_87CAC0504FA2FC7622DFA09967CE957F(TArray<struct FShopItem> Items, int ShopID);
};

// Class TAGame.GFxData_Shops_TA
// 0x0060 (0x0098 - 0x00F8)
class UGFxData_Shops_TA : public UGFxDataSingleton_X
{
public:
	class UShopsManager_TA*                            ShopManager;                                      		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UShopsConfig_TA*                             Config;                                           		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class UGFxData_ShopCatalogue_TA*>           Shops;                                            		// 0x00A8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                DebugShopID;                                      		// 0x00B8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bHideMainMenuButton : 1;                          		// 0x00BC (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	class UOnlineProductStoreSet_TA*                   CrateShopSet;                                     		// 0x00C0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	float                                              CacheDuration;                                    		// 0x00C8 (0x0004) [0x0000000000004000] (CPF_Config)  
	float                                              LastCacheTime;                                    		// 0x00CC (0x0004) [0x0000000000002000] (CPF_Transient)
	class UAsyncTask*                                  ShopTask;                                         		// 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UShopMetrics_TA*                             ShopMetrics;                                      		// 0x00D8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FScriptDelegate                             __EventReceivedShops__Delegate;                   		// 0x00E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Shops_TA");
		}

		return uClassPointer;
	};

	void __GFxData_Shops_TA__OnCheckForPurchaseWarning_0B87CC6E4F0350B0A220F7825DB9822D(class UGFxModal_X* _);
	void __GFxData_Shops_TA__OnCheckForPurchaseWarning_FA802E0F40ACF8A4950AFAB83962BAEF(class UGFxModal_X* _);
	void __GFxData_Shops_TA__OnCheckForPurchaseWarning_5BC292984E9014F8EACBAE8641998E24(class UGFxModal_X* _);
	bool __GFxData_Shops_TA__OnCheckForPurchaseWarning_36ACBF394182B0AF1B27C492CC7D6C34(class UOnlineProduct_TA* P);
	void CreateTemporaryOnlineProducts(class UOnlineProductStoreSet_TA* ProductSet, TArray<struct FShopItem>& Items);
	void OnGetCrateShopFailed();
	void HandleGetCrateShopFailed(class UError* Error);
	void OnReceivedCrateShop(int CrateID, TArray<struct FShopItem> CrateItems, int ShopID);
	void GetCrateShop(int CrateID);
	void OnPurchaseFail();
	void HandlePurchaseFail(class UError* Error);
	void OnPurchaseSuccess();
	void HandlePurchaseSuccess(TArray<struct FOnlineProductData> PurchasedProducts, TArray<struct FCurrency> PurchasedCurrencies);
	void OnPurchase(int CostID, int ShopID, int InDiscountID, int Count);
	void OnCheckForPurchaseWarningSuccess();
	bool OnCheckForPurchaseWarning(int CostID, int ShopID, int InDiscountID, int Count);
	void CheckForPurchaseWarning(int CostID, int ShopID, int InDiscountID, int Count);
	bool CheckPlayerMeetsProductRequirements(class UOnlineProduct_TA* OnlineProduct, TArray<class UOnlineProduct_TA*>& DeliverableOnlineProducts, struct FString& ErrorString);
	void HandleShopItemTextureLoaded(int ShopID, int ShopItemIndex, class UTexture* LoadedTexture);
	void Purchase(int CostID, int ShopID, int InDiscountID, int Count);
	void PreviewShopItem(int ShopItemID);
	void ExitShopPage();
	void OnShopCatalogueChanged(int NewShopID);
	void RefreshOwnedProducts();
	void OnEnterShopMenu(int BrowseSourceID);
	int GetShopCatalogueIndex(int InShopID);
	bool CheckShopExists(int InShopID);
	void OnGetAllShopsFailed();
	void OnGetAllShopsSuccess();
	void HandleGetAllShopsFailed(class UError* Error);
	void HandleImageDownloaded(struct FOnlineImageDownload DownloadResult);
	void DownloadShopImages(TArray<struct FString>& RequiredURLs);
	void HandleGetAllShops(TArray<struct FShopData> InShops);
	void GetAllShopsInternal(unsigned long bForce);
	void GetAllShopsForced();
	void RefreshAllShops();
	void HandleConfigChanged();
	void eventOnRemoved();
	void eventOnShellSet();
	void EventReceivedShops(class UGFxData_Shops_TA* GFxShops);
};

// Class TAGame.__GFxData_Shops_TA__HandleGetAllShops_2C63B15544BD316FD1DA79B9BCD0B2FB
// 0x0058 (0x0060 - 0x00B8)
class U__GFxData_Shops_TA__HandleGetAllShops_2C63B15544BD316FD1DA79B9BCD0B2FB : public UObject
{
public:
	struct FShopData                                   Data;                                             		// 0x0060 (0x0058) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Shops_TA__HandleGetAllShops_2C63B15544BD316FD1DA79B9BCD0B2FB");
		}

		return uClassPointer;
	};

	bool __GFxData_Shops_TA__HandleGetAllShops_2C63B15544BD316FD1DA79B9BCD0B2FB(class UGFxData_ShopCatalogue_TA* S);
};

// Class TAGame.__GFxData_Shops_TA__OnCheckForPurchaseWarning_BD8BCA8B4BF7105A7A19BCB327C7AEF0
// 0x0004 (0x0060 - 0x0064)
class U__GFxData_Shops_TA__OnCheckForPurchaseWarning_BD8BCA8B4BF7105A7A19BCB327C7AEF0 : public UObject
{
public:
	int                                                ShopID;                                           		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Shops_TA__OnCheckForPurchaseWarning_BD8BCA8B4BF7105A7A19BCB327C7AEF0");
		}

		return uClassPointer;
	};

	bool __GFxData_Shops_TA__OnCheckForPurchaseWarning_BD8BCA8B4BF7105A7A19BCB327C7AEF0(class UGFxData_ShopCatalogue_TA* S);
};

// Class TAGame.__GFxData_SpecialEvents_TA__HandlePurchaseRewardFromStoreSuccess_5FC8E2FA4E79C0DDE08DAD8BF24F242C
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_SpecialEvents_TA__HandlePurchaseRewardFromStoreSuccess_5FC8E2FA4E79C0DDE08DAD8BF24F242C : public UObject
{
public:
	class URPC_PurchaseSpecialEventReward_TA*          RPC;                                              		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_SpecialEvents_TA__HandlePurchaseRewardFromStoreSuccess_5FC8E2FA4E79C0DDE08DAD8BF24F242C");
		}

		return uClassPointer;
	};

	void __GFxData_SpecialEvents_TA__HandlePurchaseRewardFromStoreSuccess_5FC8E2FA4E79C0DDE08DAD8BF24F242C(class UGFxData_SpecialEventStore_TA* S);
};

// Class TAGame.GFxData_SpecialEventStore_TA
// 0x0024 (0x0094 - 0x00B8)
class UGFxData_SpecialEventStore_TA : public UGFxDataRow_X
{
public:
	int                                                EventID;                                          		// 0x0098 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FGFxSpecialEventReward>              Rewards;                                          		// 0x00A0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UOnlineProductStoreSet_TA*                   SpecialEventsSet;                                 		// 0x00B0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_SpecialEventStore_TA");
		}

		return uClassPointer;
	};

	void HandlePurchasedRewards(class URPC_PurchaseSpecialEventReward_TA* RPC);
	TArray<struct FGFxSpecialEventReward> GetRewards();
	struct FProductHashID GetRewardHashID(struct FSpecialEventReward& InReward);
	struct FGFxSpecialEventReward CreateEventReward(struct FSpecialEventReward InReward);
	void Init(struct FSpecialEventStore StoreData);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.RPC_SpecialEventBase_TA
// 0x0000 (0x00E8 - 0x00E8)
class URPC_SpecialEventBase_TA : public URPC_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_SpecialEventBase_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_PurchaseSpecialEventReward_TA
// 0x0098 (0x00E8 - 0x0180)
class URPC_PurchaseSpecialEventReward_TA : public URPC_SpecialEventBase_TA
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                StoreProductID;                                   		// 0x0130 (0x0004) [0x0000000000000000]               
	struct FRocketPassInfo                             RocketPassInfo;                                   		// 0x0134 (0x000C) [0x0000000000000000]               
	TArray<struct FOnlineProductData>                  ProductData;                                      		// 0x0140 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FOnlineXPReward>                     RewardDrops;                                      		// 0x0150 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FCurrency>                           CurrencyData;                                     		// 0x0160 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FCurrency>                           WalletCurrencies;                                 		// 0x0170 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_PurchaseSpecialEventReward_TA");
		}

		return uClassPointer;
	};

	class URPC_PurchaseSpecialEventReward_TA* SetStoreProductID(int InProductID);
	class URPC_PurchaseSpecialEventReward_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.GFxData_SpecialEvents_TA
// 0x0034 (0x0098 - 0x00CC)
class UGFxData_SpecialEvents_TA : public UGFxDataSingleton_X
{
public:
	class USpecialEventConfig_TA*                      EventData;                                        		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      EventState;                                       		// 0x00A0 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Currency;                                         		// 0x00A4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SecondsRemaining;                                 		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<class UGFxData_SpecialEventStore_TA*>       EventStores;                                      		// 0x00B0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UWallet_TA*                                  Wallet;                                           		// 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bSpecialEventButtonVisible : 1;                   		// 0x00C8 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_SpecialEvents_TA");
		}

		return uClassPointer;
	};

	void __GFxData_SpecialEvents_TA__OnShellSet_B78A1497486607CA246308A2A890471E(class UPsyNetConnection_X* _);
	void __GFxData_SpecialEvents_TA__OnShellSet_605D5BBE48054547E9DD55BAC885CFE0(class UWallet_TA* InWallet);
	void __GFxData_SpecialEvents_TA__OnShellSet_7F0B462C48C9D65A53BA2AB36A0C23DD(class UWallet_TA* W, int Id);
	void __GFxData_SpecialEvents_TA__GetStoreRewards_EAF88B0843B930BCAD8FBCA117C9D1FA(class URPC_GetSpecialEventCurrencyRewards_TA* RPC);
	int __GFxData_SpecialEvents_TA__GetStoreRewards_A509648C427AF24D112EE5B7059CB348(struct FSpecialEventStoreConfigs S);
	void __GFxData_SpecialEvents_TA__PurchaseRewardFromStore_2B0FDF944690D82FC0EF9BA64B535A42(class URPC_PurchaseSpecialEventReward_TA* RPC);
	int GetCost(int StoreProductID);
	void OnPurchaseSuccess();
	void HandlePurchaseRewardFromStoreSuccess(class URPC_PurchaseSpecialEventReward_TA* RPC);
	void OnPurchaseFail();
	void HandlePurchaseFail(class URPC_X* RPC);
	void PurchaseRewardFromStore(int StoreProductID);
	int GetStoreIndex(int InEventID);
	void OnStoreRewardsReceived();
	void SetStoreRewards(TArray<struct FSpecialEventStore>& InStores);
	void GetStoreRewards();
	void GetCurrency();
	void UpdateSpecialEventButtonVisibility();
	void UpdateEventStatus();
	void HandleEventConfigChanged(class USpecialEventConfig_TA* InEventData);
	void eventOnShellSet();
};

// Class TAGame.__GFxData_SpecialEvents_TA__PurchaseRewardFromStore_E05C72D4466E0B989C068E87DFFE9D5B
// 0x0010 (0x0060 - 0x0070)
class U__GFxData_SpecialEvents_TA__PurchaseRewardFromStore_E05C72D4466E0B989C068E87DFFE9D5B : public UObject
{
public:
	class USaveData_TA*                                SaveData;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
	class UWallet_TA*                                  WalletReference;                                  		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_SpecialEvents_TA__PurchaseRewardFromStore_E05C72D4466E0B989C068E87DFFE9D5B");
		}

		return uClassPointer;
	};

	void __GFxData_SpecialEvents_TA__PurchaseRewardFromStore_390DF975424ED6CBDAD6B5BB99218A4E(class URPC_PurchaseSpecialEventReward_TA* RPC);
	void __GFxData_SpecialEvents_TA__PurchaseRewardFromStore_589B67EF4FC5FE9B970CCEA645148218(class URPC_PurchaseSpecialEventReward_TA* RPC);
	void __GFxData_SpecialEvents_TA__PurchaseRewardFromStore_E05C72D4466E0B989C068E87DFFE9D5B(class URPC_PurchaseSpecialEventReward_TA* RPC);
};

// Class TAGame.__GFxData_TourBracket_TA__InitTeams_13AEF037476DE82B3E0DCE84EFB93686
// 0x0048 (0x0060 - 0x00A8)
class U__GFxData_TourBracket_TA__InitTeams_13AEF037476DE82B3E0DCE84EFB93686 : public UObject
{
public:
	struct FTourTeam                                   Team;                                             		// 0x0060 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_TourBracket_TA__InitTeams_13AEF037476DE82B3E0DCE84EFB93686");
		}

		return uClassPointer;
	};

	bool __GFxData_TourBracket_TA__InitTeams_13AEF037476DE82B3E0DCE84EFB93686(class UGFxData_TourBracketTeam_TA* T);
};

// Class TAGame.GFxData_TourBracketTeam_TA
// 0x0024 (0x0094 - 0x00B8)
class UGFxData_TourBracketTeam_TA : public UGFxDataRow_X
{
public:
	unsigned long long                                 TeamID;                                           		// 0x0098 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     TeamName;                                         		// 0x00A0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                TeamColorID;                                      		// 0x00B0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                CustomColorID;                                    		// 0x00B4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourBracketTeam_TA");
		}

		return uClassPointer;
	};

	void __GFxData_TourBracketTeam_TA__SetTeam_F2DF3B54430C42266E799ABABFF6BE6E(struct FString Original, struct FString Sanitized);
	void SetTeam(struct FTourTeam& Team);
};

// Class TAGame.GFxData_TourBracket_TA
// 0x0038 (0x0098 - 0x00D0)
class UGFxData_TourBracket_TA : public UGFxDataSingleton_X
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long long                                 PlayerTeamID;                                     		// 0x00A0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TotalRounds;                                      		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 Id;                                               		// 0x00B0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FShopCurrencyInfo>                   CurrentPayouts;                                   		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UTourBracketSync_TA*                         BracketSync;                                      		// 0x00C8 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourBracket_TA");
		}

		return uClassPointer;
	};

	void __GFxData_TourBracket_TA__Show_6BE2842F4DAEF255403F8E81E323D4AD(class UError* Error);
	bool __GFxData_TourBracket_TA__SetBracket_74EE394F4E32A701393E24BB6104F188(struct FTourTeam Team);
	void HandleDependentMatchUpdated(class UTourEventMatch_TA* TourEventMatch, struct FTourMatch& Match);
	void HandleStartTimeElapsed(class UTourEvent_TA* InTourEvent);
	void HandleTourActivated(class UOnlineGameTournaments_TA* InTournaments, class UTourEvent_TA* TourEvent);
	void InitLeaderboard(struct FTourLeaderboard& Leaderboard);
	void InitMatches(TArray<struct FTourMatch>& Matches);
	void InitTeams(TArray<struct FTourTeam>& Teams);
	void SetBracket(struct FTourBracket& Bracket);
	void OnBracketRetrieved();
	void UpdateBracket(unsigned long long TournamentID);
	void hide();
	void HandleShowBracketComplete(struct FTourBracket& Bracket);
	void HandleTournamentSwapped(unsigned long long OldTournamentID, unsigned long long NewTournamentID);
	void Show(unsigned long long TournamentID);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.__GFxData_TourBracketMatchDetails_TA__HandleGetMatchDetails_0AA9F8A54B5049F16D6C5984501D729B
// 0x0028 (0x0060 - 0x0088)
class U__GFxData_TourBracketMatchDetails_TA__HandleGetMatchDetails_0AA9F8A54B5049F16D6C5984501D729B : public UObject
{
public:
	struct FTourMatchTeamDetails                       Details;                                          		// 0x0060 (0x0028) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_TourBracketMatchDetails_TA__HandleGetMatchDetails_0AA9F8A54B5049F16D6C5984501D729B");
		}

		return uClassPointer;
	};

	bool __GFxData_TourBracketMatchDetails_TA__HandleGetMatchDetails_0AA9F8A54B5049F16D6C5984501D729B(class UGFxData_TourBracketMatchTeamDetails_TA* T);
};

// Class TAGame.GFxData_TourBracketMatchTeamDetails_TA
// 0x002C (0x0094 - 0x00C0)
class UGFxData_TourBracketMatchTeamDetails_TA : public UGFxDataRow_X
{
public:
	unsigned long long                                 TeamID;                                           		// 0x0098 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FTeamGameStats>                      GameStats;                                        		// 0x00A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FTourMatchPlayerStats>               PlayerStats;                                      		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourBracketMatchTeamDetails_TA");
		}

		return uClassPointer;
	};

	struct FTeamGameStats __GFxData_TourBracketMatchTeamDetails_TA__SetDetails_A7AD932A4702CE555379118E8DB12969(int G);
	TArray<struct FTourMatchPlayerStats> GetPlayerStats();
	TArray<struct FTeamGameStats> GetTeamGameStats();
	void SetDetails(struct FTourMatchTeamDetails InDetails);
};

// Class TAGame.GFxData_TourBracketMatchDetails_TA
// 0x0020 (0x0098 - 0x00B8)
class UGFxData_TourBracketMatchDetails_TA : public UGFxDataSingleton_X
{
public:
	unsigned long long                                 TournamentID;                                     		// 0x0098 (0x0008) [0x0000000000000000]               
	int                                                MatchID;                                          		// 0x00A0 (0x0004) [0x0000000000000000]               
	float                                              PollIntervalSeconds;                              		// 0x00A4 (0x0004) [0x0000000000000000]               
	class UAsyncTask*                                  GetMatchDetailsTask;                              		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x00B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourBracketMatchDetails_TA");
		}

		return uClassPointer;
	};

	void __GFxData_TourBracketMatchDetails_TA__SendRequest_2D9A4A1D405CBF1A35FBE4BA21F970F5(class UError* _);
	void OnMatchDetailsRefreshed();
	void HandleGetMatchDetails(TArray<struct FTourMatchTeamDetails>& TeamDetails);
	void SendRequest();
	void DeactivateMatchDetails();
	void StartSynchDetails();
	void HideMatchDetails();
	void ShowMatchDetails(unsigned long long InTournamentID, int InMatchID);
};

// Class TAGame.__GFxData_TourCheckIn_TA__HandleCheckInError_8D75AF21436EE94B7D7EA8AB33EE9A5C
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_TourCheckIn_TA__HandleCheckInError_8D75AF21436EE94B7D7EA8AB33EE9A5C : public UObject
{
public:
	unsigned long long                                 TournamentID;                                     		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_TourCheckIn_TA__HandleCheckInError_8D75AF21436EE94B7D7EA8AB33EE9A5C");
		}

		return uClassPointer;
	};

	void __GFxData_TourCheckIn_TA__HandleCheckInError_8D75AF21436EE94B7D7EA8AB33EE9A5C(class UGFxModal_X* _);
};

// Class TAGame.GFxData_TourCheckIn_TA
// 0x0060 (0x0098 - 0x00F8)
class UGFxData_TourCheckIn_TA : public UGFxDataSingleton_X
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FString                                     TeamName;                                         		// 0x00A0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FCustomMatchTeamSettings                    TeamSettings;                                     		// 0x00B0 (0x0020) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UTournamentSettingsSave_TA*                  SaveData;                                         		// 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     TournamentJoinTitle;                              		// 0x00D8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     MatchmakingCancelledOnCheckIn;                    		// 0x00E8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourCheckIn_TA");
		}

		return uClassPointer;
	};

	class UAsyncTask* GetJoiningTask();
	void SetCustomColorID(int ColorID);
	void SetTeamColorID(int ColorID);
	void SetTeamName(struct FString InTeamName);
	void HandleMatchmakingOnCheckin();
	void HandleCheckInError(class UError* InError, unsigned long long TournamentID, unsigned long bPromptUnsubscribe);
	void HandleRegisterOnCheck(class UTourSettings_TA* Settings);
	void PerformCheckIn(class UTourSettings_TA* Settings, unsigned long bPromptUnsubscribeOnFailure);
	void HandleRegisterSuccess(class UTourSettings_TA* Settings, struct FTourPrivateCredentials Credentials);
	void HandleEnterCredentials(struct FString Password, unsigned long bCanceled, unsigned long long TournamentID);
	void Register(class UTourSettings_TA* Settings, struct FTourPrivateCredentials Credentials);
	void CheckIn(unsigned long long TournamentID);
	bool AlertOnCheckInError(unsigned long long TournamentID);
	void HandleSaveDataLoaded(class UTournamentSettingsSave_TA* Save);
	void eventOnShellSet();
};

// Class TAGame.__GFxData_TourCheckIn_TA__PerformCheckIn_5F097F084514F14C439D32B04C72A9DF
// 0x000C (0x0060 - 0x006C)
class U__GFxData_TourCheckIn_TA__PerformCheckIn_5F097F084514F14C439D32B04C72A9DF : public UObject
{
public:
	class UTourSettings_TA*                            Settings;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
	unsigned long                                      bPromptUnsubscribeOnFailure : 1;                  		// 0x0068 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_TourCheckIn_TA__PerformCheckIn_5F097F084514F14C439D32B04C72A9DF");
		}

		return uClassPointer;
	};

	void __GFxData_TourCheckIn_TA__PerformCheckIn_AF15AAA64C2EEB425255A8AB55413A84();
	void __GFxData_TourCheckIn_TA__PerformCheckIn_5F097F084514F14C439D32B04C72A9DF(class UError* E);
};

// Class TAGame.__GFxData_TourCheckIn_TA__Register_594FC66C4459B0A998011FAC9FD92117
// 0x0028 (0x0060 - 0x0088)
class U__GFxData_TourCheckIn_TA__Register_594FC66C4459B0A998011FAC9FD92117 : public UObject
{
public:
	class UTourSettings_TA*                            Settings;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
	struct FTourPrivateCredentials                     Credentials;                                      		// 0x0068 (0x0020) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_TourCheckIn_TA__Register_594FC66C4459B0A998011FAC9FD92117");
		}

		return uClassPointer;
	};

	void __GFxData_TourCheckIn_TA__Register_6FDAF4744149AC372CF94F87793A6C03(class UError* E);
	void __GFxData_TourCheckIn_TA__Register_C57FB72F45E08517FD5156B610FE3386(class UTourSettings_TA* T);
	void __GFxData_TourCheckIn_TA__Register_594FC66C4459B0A998011FAC9FD92117(struct FString P, unsigned long C);
};

// Class TAGame.__GFxData_TourCreate_TA__CreateTournament_4C459254415CADA14A5ED98CEC4934BC
// 0x0038 (0x0060 - 0x0098)
class U__GFxData_TourCreate_TA__CreateTournament_4C459254415CADA14A5ED98CEC4934BC : public UObject
{
public:
	struct FTourCreateSettings                         FinalTourSettings;                                		// 0x0060 (0x0038) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_TourCreate_TA__CreateTournament_4C459254415CADA14A5ED98CEC4934BC");
		}

		return uClassPointer;
	};

	void __GFxData_TourCreate_TA__CreateTournament_4C459254415CADA14A5ED98CEC4934BC(class UTourSettings_TA* T);
};

// Class TAGame.GFxData_TourCreate_TA
// 0x009E (0x019A - 0x0238)
class UGFxData_TourCreate_TA : public UGFxData_PrivateMatch_TA
{
public:
	struct FString                                     PrivateNoPassword;                                		// 0x01A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     StartTimeTooSoon;                                 		// 0x01B0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	int                                                MaxBracketSize;                                   		// 0x01C0 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	int                                                RankMin;                                          		// 0x01C4 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	int                                                RankMax;                                          		// 0x01C8 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	int                                                SeriesLength;                                     		// 0x01CC (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	int                                                FinalSeriesLength;                                		// 0x01D0 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	TArray<struct FGFxTournamentReward>                Rewards;                                          		// 0x01D8 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned char                                      SeedingType;                                      		// 0x01E8 (0x0001) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	unsigned char                                      TieBreaker;                                       		// 0x01E9 (0x0001) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	class UOnlineSubsystem*                            OnlineSub;                                        		// 0x01F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x01F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourConfig_TA*                              Config;                                           		// 0x0200 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTourSettings_TA*                            Settings;                                         		// 0x0208 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UTournamentSettingsSave_TA*                  TournamentSave;                                   		// 0x0210 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMapSet_TA*                                  DefaultMapSet;                                    		// 0x0218 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventTournamentCreated__Delegate;               		// 0x0220 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourCreate_TA");
		}

		return uClassPointer;
	};

	struct FName __GFxData_TourCreate_TA__GetDefaultDisabledMaps_74D263E4486CBD611119A39489AD778D(struct FGFxMapSelectionData M);
	struct FName __GFxData_TourCreate_TA__GetDefaultDisabledMaps_F8130A184FB21389EB75CAA86118BA1E(class UMapData_TA* M);
	struct FString GetOnlineStatusError();
	void HandleMapSelectionChange(class UGFxData_MapSelection_TA* GFxMapSelection, struct FName MapName, unsigned long bSelected);
	void HandleMapListChange(class UGFxData_MapSelection_TA* GFxMapSelection);
	void HandlePlatformSelectionChange(class UGFxData_TourPlatforms_TA* GFxPlatforms, TArray<unsigned char> NewPlatforms);
	void GFxRewardsToTourRewards(TArray<struct FGFxTournamentReward>& GFxRewards, TArray<struct FTourReward>& TourRewards);
	void RemoveReward(int Placement, unsigned long long InstanceID);
	void AddReward(int Placement, unsigned long long InstanceID);
	void SetTieBreaker(unsigned char InTieBreaker);
	void SetSeedingType(unsigned char InSeedingType);
	void SetFinalSeriesLength(int InFinalSeriesLength);
	void SetSeriesLength(int InSeriesLength);
	void SetRankMax(int InRankMax);
	void SetRankMin(int InRankMin);
	void SetMaxBracketSize(int InMaxBracketSize);
	void SetStartDateTime(struct FDateTimeStruct DateTime);
	void HandleError(class UError* Error);
	void OnCreateComplete(unsigned long long Id);
	void HandleCreateTournament(class UTourSettings_TA* Tournament, struct FTourPrivateCredentials Credentials);
	void CreateTournament();
	void Update();
	TArray<struct FName> GetDefaultDisabledMaps();
	class UTourSettings_TA* CreateDefaultSettings();
	void OnProfileSet();
	void eventOnShellSet();
	void EventTournamentCreated(class UGFxData_TourCreate_TA* GFxTourCreate, class UTourSettings_TA* NewTournament);
};

// Class TAGame.__GFxData_TourCreate_TA__GetDefaultDisabledMaps_B53E07244D9C88EE0F6026A8B97841B9
// 0x0010 (0x0060 - 0x0070)
class U__GFxData_TourCreate_TA__GetDefaultDisabledMaps_B53E07244D9C88EE0F6026A8B97841B9 : public UObject
{
public:
	TArray<struct FName>                               DefaultMapNames;                                  		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_TourCreate_TA__GetDefaultDisabledMaps_B53E07244D9C88EE0F6026A8B97841B9");
		}

		return uClassPointer;
	};

	bool __GFxData_TourCreate_TA__GetDefaultDisabledMaps_B53E07244D9C88EE0F6026A8B97841B9(struct FName MapName);
};

// Class TAGame.__GFxData_TourDependentMatch_TA__UpdateDependentMatch_8A36C5B347CA1061EBDE57B285E9FF25
// 0x0030 (0x0060 - 0x0090)
class U__GFxData_TourDependentMatch_TA__UpdateDependentMatch_8A36C5B347CA1061EBDE57B285E9FF25 : public UObject
{
public:
	struct FTourMatch                                  Match;                                            		// 0x0060 (0x0030) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_TourDependentMatch_TA__UpdateDependentMatch_8A36C5B347CA1061EBDE57B285E9FF25");
		}

		return uClassPointer;
	};

	void __GFxData_TourDependentMatch_TA__UpdateDependentMatch_8A36C5B347CA1061EBDE57B285E9FF25(struct FTourBracket B);
};

// Class TAGame.GFxData_TourBracketMatch_TA
// 0x004C (0x0094 - 0x00E0)
class UGFxData_TourBracketMatch_TA : public UGFxDataRow_X
{
public:
	int                                                MatchID;                                          		// 0x0098 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Round;                                            		// 0x009C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Order;                                            		// 0x00A0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                NextMatch;                                        		// 0x00A4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                PrevMatchA;                                       		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                PrevMatchB;                                       		// 0x00AC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 TeamA;                                            		// 0x00B0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 TeamB;                                            		// 0x00B8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TeamAWins;                                        		// 0x00C0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TeamBWins;                                        		// 0x00C4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 WinnerTeam;                                       		// 0x00C8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bInProgress : 1;                                  		// 0x00D0 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bCanSpectate : 1;                                 		// 0x00D0 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	class UClass*                                      GFxGameClass;                                     		// 0x00D8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourBracketMatch_TA");
		}

		return uClassPointer;
	};

	void CreateGames(TArray<struct FTourMatchGame>& Games);
	void SetMatch(struct FTourMatch& MatchData);
};

// Class TAGame.GFxData_TourDependentMatch_TA
// 0x0008 (0x00E0 - 0x00E8)
class UGFxData_TourDependentMatch_TA : public UGFxData_TourBracketMatch_TA
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x00E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourDependentMatch_TA");
		}

		return uClassPointer;
	};

	void HandleRetrievedBracketForDependentMatch(struct FTourBracket& Bracket, struct FTourMatch& Match);
	void UpdateDependentMatch(class UTourEventMatch_TA* TourEventMatch, struct FTourMatch& Match);
	void eventOnRemoved();
};

// Class TAGame.__GFxData_TourEvent_TA__HandleBracketRetrieved_0D3BA8D04F749C7E4B4843BBE46FB508
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_TourEvent_TA__HandleBracketRetrieved_0D3BA8D04F749C7E4B4843BBE46FB508 : public UObject
{
public:
	unsigned long long                                 OpponentTeamId;                                   		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_TourEvent_TA__HandleBracketRetrieved_0D3BA8D04F749C7E4B4843BBE46FB508");
		}

		return uClassPointer;
	};

	bool __GFxData_TourEvent_TA__HandleBracketRetrieved_0D3BA8D04F749C7E4B4843BBE46FB508(struct FTourTeam T);
};

// Class TAGame.GFxData_TourEvent_TA
// 0x0084 (0x0098 - 0x011C)
class UGFxData_TourEvent_TA : public UGFxDataSingleton_X
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UOnlineGameTourMatchmaking_TA*               TourMatchmaking;                                  		// 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FString                                     Title;                                            		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long long                                 Id;                                               		// 0x00B8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 ScheduleID;                                       		// 0x00C0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                SecondsRemaining;                                 		// 0x00C8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 GenerateBracketTime;                              		// 0x00D0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      Status;                                           		// 0x00D8 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 LocalTeamID;                                      		// 0x00E0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Round;                                            		// 0x00E8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TotalRounds;                                      		// 0x00EC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     NextOpponent;                                     		// 0x00F0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long long                                 EndGameWarningEpochTime;                          		// 0x0100 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 EndGameEpochTime;                                 		// 0x0108 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	class UTourSettings_TA*                            ActiveTournament;                                 		// 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                MatchID;                                          		// 0x0118 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourEvent_TA");
		}

		return uClassPointer;
	};

	void __GFxData_TourEvent_TA__OnShellSet_9520F07044DAE967EAA2EABA20794A30(class UTourCheckInWindowWatcher_TA* W, class UTourSettings_TA* T);
	void __GFxData_TourEvent_TA__OnShellSet_3937DFAD4668863F3DFA098166862346(class UTourList_TA* _);
	void __GFxData_TourEvent_TA__OnShellSet_C36BF9384898FB56925C3F830565F256(class UTourSubscriptions_TA* S, unsigned long long T);
	bool __GFxData_TourEvent_TA__GetNextStartingTournament_6FE3CBDE4BC811A49A7DE2A8F3DBE4FF(class UTourSettings_TA* T);
	int __GFxData_TourEvent_TA__GetNextStartingTournament_F96853C242606165BBD4F3874FB5E68D(class UTourSettings_TA* L, class UTourSettings_TA* R);
	class UTourSettings_TA* GetNextStartingTournament();
	void ReadyForNextMatch();
	void ConditionalStepRound();
	void Deactivate();
	void HandleGameDataSelected(int PlaylistId, int MutatorIndex);
	void HandleGRISpawned(class AGRI_X* GRI);
	void HandleDependentMatchUpdated(class UTourEventMatch_TA* TourEventMatch, struct FTourMatch& Match);
	bool HasBracketDetails();
	void HandleBracketRetrieved(struct FTourBracket& Bracket);
	void HandleNextMatchReady(class UTourEventMatch_TA* TourEventMatch, struct FTourMatch& InMatch);
	void HandleStartTimeElapsed(class UTourEvent_TA* InTourEvent);
	void OnTournamentCancelled();
	void HandleTourDeactivated(class UTourEvent_TA* TourEvent, class UError* Error);
	void HandleTourActivated(class UOnlineGameTournaments_TA* InTournaments, class UTourEvent_TA* TourEvent);
	unsigned char DetermineStatus();
	void QueueUpdate();
	void Update();
	void Clear();
	void eventOnShellSet();
};

// Class TAGame.__GFxData_TourPlatforms_TA__InitPlatformGroups_44D6CC294690E5BAB44D83B6DB0057F6
// 0x0001 (0x0060 - 0x0061)
class U__GFxData_TourPlatforms_TA__InitPlatformGroups_44D6CC294690E5BAB44D83B6DB0057F6 : public UObject
{
public:
	unsigned char                                      PlayerPlatform;                                   		// 0x0060 (0x0001) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_TourPlatforms_TA__InitPlatformGroups_44D6CC294690E5BAB44D83B6DB0057F6");
		}

		return uClassPointer;
	};

	bool __GFxData_TourPlatforms_TA__InitPlatformGroups_44D6CC294690E5BAB44D83B6DB0057F6(struct FCrossplayGroup G);
};

// Class TAGame.GFxData_TourPlatforms_TA
// 0x0030 (0x0098 - 0x00C8)
class UGFxData_TourPlatforms_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FGFxTourPlatformGroup>               Groups;                                           		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UOnlineSubsystem*                            OnlineSub;                                        		// 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FScriptDelegate                             __EventSelectionChange__Delegate;                 		// 0x00B0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourPlatforms_TA");
		}

		return uClassPointer;
	};

	bool __GFxData_TourPlatforms_TA__CreateGFxGroup_4C08173443019F86CC865F9BE368CA30(unsigned char P);
	bool __GFxData_TourPlatforms_TA__GetSelectedPlatforms_A6BF92104C5C4F81AE220AAAFBCF026F(struct FGFxTourPlatformGroup P);
	void SetSelected(int Row, unsigned long bSelected);
	void SelectRow(int Row);
	int FindPlatformIndex(TArray<unsigned char>& InPlatforms);
	bool CompareOnlinePlatforms(TArray<unsigned char> Right, TArray<unsigned char>& Left);
	struct FString BuildPlatformLabel(TArray<unsigned char> Group);
	TArray<unsigned char> GetSelectedPlatforms();
	void SetSelectedPlatforms(TArray<unsigned char>& SelectedPlatforms);
	struct FGFxTourPlatformGroup CreateGFxGroup(struct FCrossplayGroup CrossplayGroup);
	void InitPlatformGroups(class UCrossplayConfig_X* CrossplayConfig);
	void eventOnShellSet();
	void EventSelectionChange(class UGFxData_TourPlatforms_TA* GFxPlatforms, TArray<unsigned char> NewPlatforms);
};

// Class TAGame.__GFxData_TourRegistration_TA__Register_9E4AB5B3461259EDE9918D83EA5B28F3
// 0x0008 (0x0060 - 0x0068)
class U__GFxData_TourRegistration_TA__Register_9E4AB5B3461259EDE9918D83EA5B28F3 : public UObject
{
public:
	unsigned long long                                 TournamentID;                                     		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_TourRegistration_TA__Register_9E4AB5B3461259EDE9918D83EA5B28F3");
		}

		return uClassPointer;
	};

	void __GFxData_TourRegistration_TA__Register_9E4AB5B3461259EDE9918D83EA5B28F3(class UError* E);
};

// Class TAGame.GFxData_TourRegistration_TA
// 0x0008 (0x0098 - 0x00A0)
class UGFxData_TourRegistration_TA : public UGFxDataSingleton_X
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourRegistration_TA");
		}

		return uClassPointer;
	};

	void __GFxData_TourRegistration_TA__Register_B867A8C3412EF8A83488DCB7A7D780E6(class UTourSettings_TA* T);
	void OnRegistrationComplete();
	void HandleError(class UError* Error, unsigned long long TournamentID);
	void Register(unsigned long long TournamentID);
};

// Class TAGame.__GFxData_TourSearch_TA__FindPrivate_4B1BE19F4E54487BA46C0E8912C59DAA
// 0x0020 (0x0060 - 0x0080)
class U__GFxData_TourSearch_TA__FindPrivate_4B1BE19F4E54487BA46C0E8912C59DAA : public UObject
{
public:
	struct FTourPrivateCredentials                     Credentials;                                      		// 0x0060 (0x0020) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_TourSearch_TA__FindPrivate_4B1BE19F4E54487BA46C0E8912C59DAA");
		}

		return uClassPointer;
	};

	void __GFxData_TourSearch_TA__FindPrivate_4B1BE19F4E54487BA46C0E8912C59DAA(class URPC_TourFindPrivate_TA* RPC);
};

// Class TAGame.GFxData_TourSearch_TA
// 0x0070 (0x0098 - 0x0108)
class UGFxData_TourSearch_TA : public UGFxDataSingleton_X
{
public:
	class UTourConfig_TA*                              Config;                                           		// 0x0098 (0x0008) [0x0000000000000000]               
	struct FString                                     Text;                                             		// 0x00A0 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                RankMin;                                          		// 0x00B0 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	int                                                RankMax;                                          		// 0x00B4 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	int                                                GameMode;                                         		// 0x00B8 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	TArray<struct FGFxRegion>                          Regions;                                          		// 0x00C0 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                TeamSize;                                         		// 0x00D0 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	int                                                BracketSize;                                      		// 0x00D4 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	unsigned long                                      bShowIneligibleRank : 1;                          		// 0x00D8 (0x0004) [0x0000000040000001] [0x00000001] (CPF_Edit | CPF_EditInlineNotify)
	class UGFxTourList_TA*                             GFxTourList;                                      		// 0x00E0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UTourList_TA*                                TourList;                                         		// 0x00E8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UProfile_TA*                                 Profile;                                          		// 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UAsyncTask*                                  SearchTask;                                       		// 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UTournamentSettingsSave_TA*                  TournamentSave;                                   		// 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourSearch_TA");
		}

		return uClassPointer;
	};

	void __GFxData_TourSearch_TA__OnShellSet_DD60A3CD433EFE6BA286AA852C94BA4C(class UGFxData_Regions_TA* R);
	void __GFxData_TourSearch_TA__Search_F2923316478E7B0B158F2699B622F275(class URPC_TourGetPublic_TA* RPC);
	int __GFxData_TourSearch_TA__HandleSearchResults_0433095543F42EC8239742B348F77F35(class UTourSettings_TA* L, class UTourSettings_TA* R);
	void ResetSearch();
	void HandlePrivateSearchResults(class UTourSettings_TA* Tournament, struct FTourPrivateCredentials Credentials);
	void FindPrivate(struct FString Title, struct FString Password);
	void SetShowIneligibleRank(unsigned long bValue);
	void SetBracketSize(int InBracketSize);
	void SetTeamSize(int InTeamSize);
	void SetRankMax(int InRankMax);
	void SetRankMin(int InRankMin);
	void SetGameMode(int InGameMode);
	void SetText(struct FString InText);
	void SetRegionSelection(int Row, unsigned long bSelected);
	void OnSearchComplete();
	void HandleSearchResults(TArray<class UTourSettings_TA*>& Results);
	void HandleError(class UError* Error);
	void Search();
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.RPC_TourFindPrivate_TA
// 0x0070 (0x00E8 - 0x0158)
class URPC_TourFindPrivate_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FTourPrivateCredentials                     Credentials;                                      		// 0x0130 (0x0020) [0x0000000000400000] (CPF_NeedCtorLink)
	class UTourSettings_TA*                            Tournament;                                       		// 0x0150 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourFindPrivate_TA");
		}

		return uClassPointer;
	};

	class URPC_TourFindPrivate_TA* SetCredentials(struct FTourPrivateCredentials& InCredentials);
	class URPC_TourFindPrivate_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.__GFxData_Wallet_TA__GetCurrencyRow_8A8439F64F48FA17BFF2869EFC8BDA29
// 0x0004 (0x0060 - 0x0064)
class U__GFxData_Wallet_TA__GetCurrencyRow_8A8439F64F48FA17BFF2869EFC8BDA29 : public UObject
{
public:
	int                                                InCurrencyID;                                     		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__GFxData_Wallet_TA__GetCurrencyRow_8A8439F64F48FA17BFF2869EFC8BDA29");
		}

		return uClassPointer;
	};

	bool __GFxData_Wallet_TA__GetCurrencyRow_8A8439F64F48FA17BFF2869EFC8BDA29(class UGFxData_WalletCurrency_TA* C);
};

// Class TAGame.GFxData_WalletCurrency_TA
// 0x0034 (0x0094 - 0x00C8)
class UGFxData_WalletCurrency_TA : public UGFxDataRow_X
{
public:
	int                                                CurrencyID;                                       		// 0x0098 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	unsigned char                                      Type;                                             		// 0x009C (0x0001) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	class UTexture*                                    SmallImage;                                       		// 0x00A0 (0x0008) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	class UTexture*                                    LargeImage;                                       		// 0x00A8 (0x0008) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	int                                                Amount;                                           		// 0x00B0 (0x0004) [0x0000000040000001] (CPF_Edit | CPF_EditInlineNotify)
	struct FString                                     LocalizedName;                                    		// 0x00B8 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_WalletCurrency_TA");
		}

		return uClassPointer;
	};

	void Update(struct FCurrency InCurrency);
	void Init(struct FCurrency InCurrency);
};

// Class TAGame.GFxData_Wallet_TA
// 0x0018 (0x0098 - 0x00B0)
class UGFxData_Wallet_TA : public UGFxDataSingleton_X
{
public:
	class UWallet_TA*                                  Wallet;                                           		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<class UGFxData_WalletCurrency_TA*>          Currencies;                                       		// 0x00A0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Wallet_TA");
		}

		return uClassPointer;
	};

	void __GFxData_Wallet_TA__HandleWalletUpdated_862EECC740E9EA3B23B70AB8D0FC1CFA(struct FCurrency C);
	int GetCurrencyIndex(int InCurrencyID);
	void OnWalletUpdated();
	class UGFxData_WalletCurrency_TA* GetCurrencyRow(int InCurrencyID);
	void GetWallet();
	void HandleWalletCurrencyDataUpdated(class UWallet_TA* InWallet, int InCurrencyID);
	void HandleWalletCurrencyUpdated(class UWallet_TA* InWallet, int InCurrencyID);
	void HandleWalletUpdated(class UWallet_TA* InWallet);
	void CreateCurrency(struct FCurrency InCurrency);
	void OnWalletSet(class UWallet_TA* InWallet);
	void eventOnShellSet();
};

// Class TAGame.__Mutator_Robin_TA__Construct_1BF0EEE146504AB5F1F22CA663EA202A
// 0x0008 (0x0060 - 0x0068)
class U__Mutator_Robin_TA__Construct_1BF0EEE146504AB5F1F22CA663EA202A : public UObject
{
public:
	class ACarComponent_TA*                            Override;                                         		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__Mutator_Robin_TA__Construct_1BF0EEE146504AB5F1F22CA663EA202A");
		}

		return uClassPointer;
	};

	bool __Mutator_Robin_TA__Construct_1BF0EEE146504AB5F1F22CA663EA202A(class ACarComponent_TA* Original);
};

// Class TAGame.Mutator_Robin_TA
// 0x0028 (0x0060 - 0x0088)
class UMutator_Robin_TA : public UObject
{
public:
	struct FStickyForceData                            StickyForce;                                      		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FAutoFlipData                               AutoFlip;                                         		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UVehicleSim_TA*                              VehicleSim;                                       		// 0x0070 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	TArray<class ACarComponent_TA*>                    OverrideCarComponents;                            		// 0x0078 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_Robin_TA");
		}

		return uClassPointer;
	};

	void eventConstruct();
};

// Class TAGame.__OnlineGameDLC_TA__GetDlcIdFromName_154653D042C46AB4AA5D1494A21E4ED1
// 0x0008 (0x0060 - 0x0068)
class U__OnlineGameDLC_TA__GetDlcIdFromName_154653D042C46AB4AA5D1494A21E4ED1 : public UObject
{
public:
	struct FName                                       DLCName;                                          		// 0x0060 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__OnlineGameDLC_TA__GetDlcIdFromName_154653D042C46AB4AA5D1494A21E4ED1");
		}

		return uClassPointer;
	};

	bool __OnlineGameDLC_TA__GetDlcIdFromName_154653D042C46AB4AA5D1494A21E4ED1(class UDLCPack_TA* D);
};

// Class TAGame.OnlineGameDLC_TA
// 0x0000 (0x00D8 - 0x00D8)
class UOnlineGameDLC_TA : public UOnlineGameDLC_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineGameDLC_TA");
		}

		return uClassPointer;
	};

	struct FString GetDlcIdFromName(struct FName DLCName, unsigned char PlatformType);
};

// Class TAGame.__ProductOverride_ParticleSystemColorParameter_TA__ApplyToObject_2E5C7B6F4C658E4D26699383AF759E7C
// 0x0018 (0x0060 - 0x0078)
class U__ProductOverride_ParticleSystemColorParameter_TA__ApplyToObject_2E5C7B6F4C658E4D26699383AF759E7C : public UObject
{
public:
	class UISetParameter*                              ParamTarget;                                      		// 0x0060 (0x0010) [0x0000000000000000]               
	unsigned char                                      UnknownData00[0x8];                               		// 0x0068 (0x0008) FIX WRONG SIZE OF PREVIOUS PROPERTY
	class UProductAttribute_PaintSettings_TA*          PaintSetting;                                     		// 0x0070 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ProductOverride_ParticleSystemColorParameter_TA__ApplyToObject_2E5C7B6F4C658E4D26699383AF759E7C");
		}

		return uClassPointer;
	};

	void __ProductOverride_ParticleSystemColorParameter_TA__ApplyToObject_2E5C7B6F4C658E4D26699383AF759E7C(struct FPaintColorParameterOverride O);
};

// Class TAGame.ProductOverride_ParticleSystemColorParameter_TA
// 0x0018 (0x0060 - 0x0078)
class UProductOverride_ParticleSystemColorParameter_TA : public UProductOverride_TA
{
public:
	TArray<struct FPaintColorParameterOverride>        ParameterOverrides;                               		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long                                      bUseParentEmissiveMultiplier : 1;                 		// 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	float                                              PaintEmissiveMultiplier;                          		// 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductOverride_ParticleSystemColorParameter_TA");
		}

		return uClassPointer;
	};

	struct FLinearColor GetPaintToApply(class UProductAttribute_PaintSettings_TA* PaintSetting, struct FPaintColorParameterOverride& CurPaintParam);
	class UProductAttribute_PaintSettings_TA* GetPaintSettings();
	void ApplyToObject(class UObject* Target);
};

// Class TAGame.ShopAdsConfig_TA
// 0x0010 (0x0078 - 0x0088)
class UShopAdsConfig_TA : public UOnlineConfig_X
{
public:
	TArray<struct FShopAdData>                         Ads;                                              		// 0x0078 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ShopAdsConfig_TA");
		}

		return uClassPointer;
	};

	void HandleImageLoaded(struct FString URL, class UTexture2DDynamic* Texture);
	void Apply();
};

// Class TAGame.__ShopAdsConfig_TA__Apply_20D612124E2B8265AE3E729E67DD23C6
// 0x0068 (0x0060 - 0x00C8)
class U__ShopAdsConfig_TA__Apply_20D612124E2B8265AE3E729E67DD23C6 : public UObject
{
public:
	struct FShopAdData                                 Data;                                             		// 0x0060 (0x0068) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ShopAdsConfig_TA__Apply_20D612124E2B8265AE3E729E67DD23C6");
		}

		return uClassPointer;
	};

	void __ShopAdsConfig_TA__Apply_09B8F57F4274E8191EA253AB51CDBFC5(class UTexture2DDynamic* Texture);
	void __ShopAdsConfig_TA__Apply_37DC53C247548A4A1D91729C36C4126D(class UTexture2DDynamic* Texture);
	void __ShopAdsConfig_TA__Apply_20D612124E2B8265AE3E729E67DD23C6(class UTexture2DDynamic* Texture);
};

// Class TAGame.__ShopsService_Local_TA__GetAllShops_C7A71BB042FD012443AB488255FD2F00
// 0x0028 (0x0060 - 0x0088)
class U__ShopsService_Local_TA__GetAllShops_C7A71BB042FD012443AB488255FD2F00 : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FShopData>                           Shops;                                            		// 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ShopsService_Local_TA__GetAllShops_C7A71BB042FD012443AB488255FD2F00");
		}

		return uClassPointer;
	};

	void __ShopsService_Local_TA__GetAllShops_C7A71BB042FD012443AB488255FD2F00();
};

// Class TAGame.ShopsService_Local_TA
// 0x0004 (0x0060 - 0x0064)
class UShopsService_Local_TA : public UShopsService_TA
{
public:
	float                                              ServiceDelay;                                     		// 0x0060 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ShopsService_Local_TA");
		}

		return uClassPointer;
	};

	class UAsyncTask* QueueTask(class UError* Error);
	class UAsyncTask* Purchase(struct FUniqueNetId PlayerID, int CostID, int ShopID, int DiscountID, int Count, struct FScriptDelegate SuccessCallback, struct FScriptDelegate FailedCallback);
	class UAsyncTask* GetCrateShop(int CrateID, struct FScriptDelegate Callback, struct FScriptDelegate FailedCallback);
	class UAsyncTask* GetShopCatalogue(int ShopID, struct FScriptDelegate Callback, struct FScriptDelegate FailedCallback);
	class UAsyncTask* GetAllShops(struct FScriptDelegate Callback, struct FScriptDelegate FailedCallback);
};

// Class TAGame.__ShopsService_Local_TA__GetCrateShop_13D2C0934435A4D612D90B977121FAB2
// 0x0028 (0x0060 - 0x0088)
class U__ShopsService_Local_TA__GetCrateShop_13D2C0934435A4D612D90B977121FAB2 : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FShopItem>                           Items;                                            		// 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ShopsService_Local_TA__GetCrateShop_13D2C0934435A4D612D90B977121FAB2");
		}

		return uClassPointer;
	};

	void __ShopsService_Local_TA__GetCrateShop_13D2C0934435A4D612D90B977121FAB2();
};

// Class TAGame.__ShopsService_Local_TA__GetShopCatalogue_E0B0AE5C4468FDD02166BB94567C5B39
// 0x0028 (0x0060 - 0x0088)
class U__ShopsService_Local_TA__GetShopCatalogue_E0B0AE5C4468FDD02166BB94567C5B39 : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FShopItem>                           Items;                                            		// 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ShopsService_Local_TA__GetShopCatalogue_E0B0AE5C4468FDD02166BB94567C5B39");
		}

		return uClassPointer;
	};

	void __ShopsService_Local_TA__GetShopCatalogue_E0B0AE5C4468FDD02166BB94567C5B39();
};

// Class TAGame.__ShopsService_Local_TA__Purchase_B9EA727E42BB6B863416C4B27215BE68
// 0x0018 (0x0060 - 0x0078)
class U__ShopsService_Local_TA__Purchase_B9EA727E42BB6B863416C4B27215BE68 : public UObject
{
public:
	struct FScriptDelegate                             SuccessCallback;                                  		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ShopsService_Local_TA__Purchase_B9EA727E42BB6B863416C4B27215BE68");
		}

		return uClassPointer;
	};

	void __ShopsService_Local_TA__Purchase_B9EA727E42BB6B863416C4B27215BE68();
};

// Class TAGame.__ShopsService_Local_TA__QueueTask_EFA787B5428401095296059D384DA69A
// 0x0010 (0x0060 - 0x0070)
class U__ShopsService_Local_TA__QueueTask_EFA787B5428401095296059D384DA69A : public UObject
{
public:
	class UAsyncTask*                                  Task;                                             		// 0x0060 (0x0008) [0x0000000000000000]               
	class UError*                                      Error;                                            		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ShopsService_Local_TA__QueueTask_EFA787B5428401095296059D384DA69A");
		}

		return uClassPointer;
	};

	void __ShopsService_Local_TA__QueueTask_EFA787B5428401095296059D384DA69A();
};

// Class TAGame.__ShopsService_PsyNet_TA__GetAllShops_7C3D5ADD411EEB333FB6F890B4FB0722
// 0x0030 (0x0060 - 0x0090)
class U__ShopsService_PsyNet_TA__GetAllShops_7C3D5ADD411EEB333FB6F890B4FB0722 : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             FailedCallback;                                   		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ShopsService_PsyNet_TA__GetAllShops_7C3D5ADD411EEB333FB6F890B4FB0722");
		}

		return uClassPointer;
	};

	void __ShopsService_PsyNet_TA__GetAllShops_6B4457BC441CBCF510DDE6A05CC65A6B(class URPC_X* RPC);
	void __ShopsService_PsyNet_TA__GetAllShops_7C3D5ADD411EEB333FB6F890B4FB0722(class URPC_GetAllShops_TA* RPC);
};

// Class TAGame.RPC_GetAllShops_TA
// 0x0010 (0x00E8 - 0x00F8)
class URPC_GetAllShops_TA : public URPC_X
{
public:
	TArray<struct FShopData>                           Shops;                                            		// 0x00E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_GetAllShops_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ShopsService_PsyNet_TA
// 0x0000 (0x0060 - 0x0060)
class UShopsService_PsyNet_TA : public UShopsService_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ShopsService_PsyNet_TA");
		}

		return uClassPointer;
	};

	class UAsyncTask* Purchase(struct FUniqueNetId PlayerID, int CostID, int ShopID, int DiscountID, int Count, struct FScriptDelegate SuccessCallback, struct FScriptDelegate FailedCallback);
	class UAsyncTask* GetCrateShop(int CrateID, struct FScriptDelegate Callback, struct FScriptDelegate FailedCallback);
	class UAsyncTask* GetShopCatalogue(int ShopID, struct FScriptDelegate Callback, struct FScriptDelegate FailedCallback);
	class UAsyncTask* GetAllShops(struct FScriptDelegate Callback, struct FScriptDelegate FailedCallback);
};

// Class TAGame.__ShopsService_PsyNet_TA__GetCrateShop_082B58994104B80804E51C89DAC2EAB5
// 0x0030 (0x0060 - 0x0090)
class U__ShopsService_PsyNet_TA__GetCrateShop_082B58994104B80804E51C89DAC2EAB5 : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             FailedCallback;                                   		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ShopsService_PsyNet_TA__GetCrateShop_082B58994104B80804E51C89DAC2EAB5");
		}

		return uClassPointer;
	};

	void __ShopsService_PsyNet_TA__GetCrateShop_47DCEBFD4D40236B1F168ABE2A75D4FD(class URPC_X* RPC);
	void __ShopsService_PsyNet_TA__GetCrateShop_082B58994104B80804E51C89DAC2EAB5(class URPC_GetCrateShop_TA* RPC);
};

// Class TAGame.RPC_GetCrateShop_TA
// 0x001C (0x00E8 - 0x0104)
class URPC_GetCrateShop_TA : public URPC_X
{
public:
	int                                                CrateID;                                          		// 0x00E8 (0x0004) [0x0000000000000000]               
	TArray<struct FShopItem>                           ShopItems;                                        		// 0x00F0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                ShopID;                                           		// 0x0100 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_GetCrateShop_TA");
		}

		return uClassPointer;
	};

	class URPC_GetCrateShop_TA* SetShopID(int InCrateID);
};

// Class TAGame.__ShopsService_PsyNet_TA__GetShopCatalogue_6BFCAD1540FD309593D8B5807E1ACF1A
// 0x0030 (0x0060 - 0x0090)
class U__ShopsService_PsyNet_TA__GetShopCatalogue_6BFCAD1540FD309593D8B5807E1ACF1A : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             FailedCallback;                                   		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ShopsService_PsyNet_TA__GetShopCatalogue_6BFCAD1540FD309593D8B5807E1ACF1A");
		}

		return uClassPointer;
	};

	void __ShopsService_PsyNet_TA__GetShopCatalogue_BEEBB0FF4B361D7BB51A39803A3086DD(class URPC_X* RPC);
	void __ShopsService_PsyNet_TA__GetShopCatalogue_6BFCAD1540FD309593D8B5807E1ACF1A(class URPC_GetShopCatalogue_TA* RPC);
};

// Class TAGame.RPC_GetShopCatalogue_TA
// 0x0018 (0x00E8 - 0x0100)
class URPC_GetShopCatalogue_TA : public URPC_X
{
public:
	int                                                ShopID;                                           		// 0x00E8 (0x0004) [0x0000000000000000]               
	TArray<struct FShopItem>                           ShopItems;                                        		// 0x00F0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_GetShopCatalogue_TA");
		}

		return uClassPointer;
	};

	class URPC_GetShopCatalogue_TA* SetShopID(int InShopID);
};

// Class TAGame.__ShopsService_PsyNet_TA__Purchase_2F12C78C454542E0545825BF4B0DA7BB
// 0x0030 (0x0060 - 0x0090)
class U__ShopsService_PsyNet_TA__Purchase_2F12C78C454542E0545825BF4B0DA7BB : public UObject
{
public:
	struct FScriptDelegate                             SuccessCallback;                                  		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             FailedCallback;                                   		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__ShopsService_PsyNet_TA__Purchase_2F12C78C454542E0545825BF4B0DA7BB");
		}

		return uClassPointer;
	};

	void __ShopsService_PsyNet_TA__Purchase_8CC3B8974EA98F27794BC6A7F3A9A70F(class URPC_X* RPC);
	void __ShopsService_PsyNet_TA__Purchase_2F12C78C454542E0545825BF4B0DA7BB(class URPC_PurchaseItemFromShop_TA* RPC);
};

// Class TAGame.RPC_PurchaseItemFromShop_TA
// 0x0080 (0x00E8 - 0x0168)
class URPC_PurchaseItemFromShop_TA : public URPC_X
{
public:
	int                                                ShopItemCostID;                                   		// 0x00E8 (0x0004) [0x0000000000000000]               
	int                                                ShopID;                                           		// 0x00EC (0x0004) [0x0000000000000000]               
	int                                                ShopDiscountID;                                   		// 0x00F0 (0x0004) [0x0000000000000000]               
	struct FUniqueNetId                                PlayerID;                                         		// 0x00F8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                Count;                                            		// 0x0140 (0x0004) [0x0000000000000000]               
	TArray<struct FOnlineProductData>                  ProductData;                                      		// 0x0148 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FCurrency>                           CurrencyData;                                     		// 0x0158 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_PurchaseItemFromShop_TA");
		}

		return uClassPointer;
	};

	class URPC_PurchaseItemFromShop_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
	class URPC_PurchaseItemFromShop_TA* SetCount(int InCount);
	class URPC_PurchaseItemFromShop_TA* SetShopID(int InShopID);
	class URPC_PurchaseItemFromShop_TA* SetCostID(int InCostID, int InDiscountID);
};

// Class TAGame.__TourBracketSimulator_TA__RoundStep_841ED6B24C039B5E0A289688ED6A87B8
// 0x0004 (0x0060 - 0x0064)
class U__TourBracketSimulator_TA__RoundStep_841ED6B24C039B5E0A289688ED6A87B8 : public UObject
{
public:
	int                                                BracketRound;                                     		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourBracketSimulator_TA__RoundStep_841ED6B24C039B5E0A289688ED6A87B8");
		}

		return uClassPointer;
	};

	bool __TourBracketSimulator_TA__RoundStep_841ED6B24C039B5E0A289688ED6A87B8(struct FTourMatch M);
};

// Class TAGame.TourBracketSimulator_TA
// 0x0000 (0x0060 - 0x0060)
class UTourBracketSimulator_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourBracketSimulator_TA");
		}

		return uClassPointer;
	};

	int __TourBracketSimulator_TA__GetEarliestUnifinishedRound_84B959EF4E3E1EDD14D218883FE3C727(struct FTourMatch M);
	bool __TourBracketSimulator_TA__GetEarliestUnifinishedRound_1B11F7E440157EC05C93168AA92104CB(struct FTourMatch M);
	int __TourBracketSimulator_TA__RoundStep_3E5AC4A046FA7F5ABCB71E90F0A93318(struct FTourMatch M);
	void GameSet(int MatchID, int GameIndex, int Team0Score, int Team1Score, int GameTimeSeconds, unsigned long bOverTime, int WinningTeamIdx, struct FTourBracket& Bracket);
	void GameStep(int MatchID, int GameIndex, int WinningTeamIdx, struct FTourBracket& Bracket);
	void AdvanceWinner(int FromMatchID, int WinningTeamIdx, struct FTourBracket& Bracket);
	int PickWinner(int Team0Chance, int Team1Chance);
	void InternalStepMatchGames(int MatchID, int Team0Games, int Team1Games, struct FTourBracket& Bracket);
	void MatchStep(int MatchID, int Team0Games, int Team1Games, struct FTourBracket& Bracket);
	void GetRandScore(int MaxScore, int& Score0, int& Score1);
	void RoundStep(int SeriesLength, struct FTourBracket& Bracket);
	int GetEarliestUnifinishedRound(TArray<struct FTourMatch>& Matches);
	int MaxWorkaround(int A, int B);
};

// Class TAGame.__TourService_PsyNet_TA__CheckIn_A286FF4746E03A7070B9AA80F7C112A4
// 0x0050 (0x0060 - 0x00B0)
class U__TourService_PsyNet_TA__CheckIn_A286FF4746E03A7070B9AA80F7C112A4 : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	class UTourSettings_TA*                            TourSettings;                                     		// 0x0078 (0x0008) [0x0000000000000000]               
	struct FCustomMatchTeamSettings                    Settings;                                         		// 0x0080 (0x0020) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        AllTeamMemberIDs;                                 		// 0x00A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourService_PsyNet_TA__CheckIn_A286FF4746E03A7070B9AA80F7C112A4");
		}

		return uClassPointer;
	};

	void __TourService_PsyNet_TA__CheckIn_A286FF4746E03A7070B9AA80F7C112A4(class URPC_TourCheckIn_TA* RPC);
};

// Class TAGame.RPC_TourCheckIn_TA
// 0x00B8 (0x00E8 - 0x01A0)
class URPC_TourCheckIn_TA : public URPC_X
{
public:
	unsigned long long                                 TournamentID;                                     		// 0x00E8 (0x0008) [0x0000000000000000]               
	struct FUniqueNetId                                PlayerID;                                         		// 0x00F0 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FUniqueLobbyId                              PartyID;                                          		// 0x0138 (0x0010) [0x0000000000000000]               
	struct FCustomMatchTeamSettings                    Settings;                                         		// 0x0148 (0x0020) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        LocalTeamMembers;                                 		// 0x0168 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        TeamMembers;                                      		// 0x0178 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 TeamID;                                           		// 0x0188 (0x0008) [0x0000000000000000]               
	struct FString                                     TeamName;                                         		// 0x0190 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourCheckIn_TA");
		}

		return uClassPointer;
	};

	class URPC_TourCheckIn_TA* SetTeamID(unsigned long long InTeamID);
	class URPC_TourCheckIn_TA* SetTeamMembers(TArray<struct FUniqueNetId>& InTeamMembers);
	class URPC_TourCheckIn_TA* SetLocalTeamMembers(TArray<struct FUniqueNetId>& InLocalTeamMembers);
	class URPC_TourCheckIn_TA* SetTeamSettings(struct FCustomMatchTeamSettings& InSettings);
	class URPC_TourCheckIn_TA* SetPartyId(struct FUniqueLobbyId InPartyId);
	class URPC_TourCheckIn_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
	class URPC_TourCheckIn_TA* SetTournamentID(unsigned long long InTournamentID);
};

// Class TAGame.TourService_PsyNet_TA
// 0x0000 (0x0108 - 0x0108)
class UTourService_PsyNet_TA : public UTourService_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourService_PsyNet_TA");
		}

		return uClassPointer;
	};

	struct FTourPlayer __TourService_PsyNet_TA__BuildTeam_5A117AE549E07C020E74C88E23C5E13E(struct FUniqueNetId Id);
	class UAsyncTask* StartMatchmaking(struct FUniqueNetId PlayerID, struct FScriptDelegate Callback);
	class UAsyncTask* GetMatchDetails(unsigned long long TournamentID, int MatchID, struct FScriptDelegate Callback);
	class UAsyncTask* GetMatch(struct FUniqueNetId PlayerID, unsigned long long TournamentID, struct FScriptDelegate Callback);
	class UAsyncTask* GetBracket(struct FUniqueNetId PlayerID, unsigned long long TournamentID, struct FScriptDelegate Callback);
	struct FTourTeam BuildTeam(unsigned long long TeamID, struct FString FinalizedTeamName, struct FCustomMatchTeamSettings Settings, TArray<struct FUniqueNetId> Players);
	class UAsyncTask* CheckIn(struct FUniqueNetId PlayerID, struct FUniqueLobbyId PartyID, class UTourSettings_TA* TourSettings, struct FCustomMatchTeamSettings Settings, TArray<struct FUniqueNetId> LocalTeamMemberIDs, TArray<struct FUniqueNetId> AllTeamMemberIDs, unsigned long long TeamID, struct FScriptDelegate Callback);
	class UAsyncTask* RegisterTournament(struct FUniqueNetId PlayerID, unsigned long long TournamentID, struct FTourPrivateCredentials Credentials, struct FScriptDelegate Callback);
	class UAsyncTask* CreateTournament(struct FUniqueNetId PlayerID, struct FTourCreateSettings Settings, struct FScriptDelegate Callback);
};

// Class TAGame.__TourService_PsyNet_TA__CreateTournament_3E3C62E047A62262F9EB5E90A53F795C
// 0x0018 (0x0060 - 0x0078)
class U__TourService_PsyNet_TA__CreateTournament_3E3C62E047A62262F9EB5E90A53F795C : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourService_PsyNet_TA__CreateTournament_3E3C62E047A62262F9EB5E90A53F795C");
		}

		return uClassPointer;
	};

	void __TourService_PsyNet_TA__CreateTournament_3E3C62E047A62262F9EB5E90A53F795C(class URPC_TourCreate_TA* RPC);
};

// Class TAGame.RPC_TourCreate_TA
// 0x0088 (0x00E8 - 0x0170)
class URPC_TourCreate_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FTourCreateSettings                         Settings;                                         		// 0x0130 (0x0038) [0x0000000000400000] (CPF_NeedCtorLink)
	class UTourSettings_TA*                            Tournament;                                       		// 0x0168 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourCreate_TA");
		}

		return uClassPointer;
	};

	class URPC_TourCreate_TA* SetSettings(struct FTourCreateSettings& InSettings);
	class URPC_TourCreate_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.__TourService_PsyNet_TA__GetBracket_5F48F741482D7D8AD2F3F6B6C4DD783C
// 0x0018 (0x0060 - 0x0078)
class U__TourService_PsyNet_TA__GetBracket_5F48F741482D7D8AD2F3F6B6C4DD783C : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourService_PsyNet_TA__GetBracket_5F48F741482D7D8AD2F3F6B6C4DD783C");
		}

		return uClassPointer;
	};

	void __TourService_PsyNet_TA__GetBracket_5F48F741482D7D8AD2F3F6B6C4DD783C(class URPC_TourGetBracket_TA* RPC);
};

// Class TAGame.RPC_TourGetBracket_TA
// 0x00C8 (0x00E8 - 0x01B0)
class URPC_TourGetBracket_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 TournamentID;                                     		// 0x0130 (0x0008) [0x0000000000000000]               
	struct FTourBracket                                Bracket;                                          		// 0x0138 (0x0078) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourGetBracket_TA");
		}

		return uClassPointer;
	};

	class URPC_TourGetBracket_TA* SetTournamentID(unsigned long long InTournamentID);
	class URPC_TourGetBracket_TA* SetPlayerID(struct FUniqueNetId& InPlayerId);
};

// Class TAGame.__TourService_PsyNet_TA__GetMatch_78BDE572484A3366D6A686A13B2E066C
// 0x0018 (0x0060 - 0x0078)
class U__TourService_PsyNet_TA__GetMatch_78BDE572484A3366D6A686A13B2E066C : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourService_PsyNet_TA__GetMatch_78BDE572484A3366D6A686A13B2E066C");
		}

		return uClassPointer;
	};

	void __TourService_PsyNet_TA__GetMatch_78BDE572484A3366D6A686A13B2E066C(class URPC_TourGetMatch_TA* RPC);
};

// Class TAGame.RPC_TourGetMatch_TA
// 0x0080 (0x00E8 - 0x0168)
class URPC_TourGetMatch_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 TournamentID;                                     		// 0x0130 (0x0008) [0x0000000000000000]               
	struct FTourMatch                                  Match;                                            		// 0x0138 (0x0030) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourGetMatch_TA");
		}

		return uClassPointer;
	};

	class URPC_TourGetMatch_TA* SetTournamentID(unsigned long long InTournamentID);
	class URPC_TourGetMatch_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.__TourService_PsyNet_TA__GetMatchDetails_DE674B904CFAA3F16B804186AF160D08
// 0x0018 (0x0060 - 0x0078)
class U__TourService_PsyNet_TA__GetMatchDetails_DE674B904CFAA3F16B804186AF160D08 : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourService_PsyNet_TA__GetMatchDetails_DE674B904CFAA3F16B804186AF160D08");
		}

		return uClassPointer;
	};

	void __TourService_PsyNet_TA__GetMatchDetails_DE674B904CFAA3F16B804186AF160D08(class URPC_TourGetMatchDetails_TA* RPC);
};

// Class TAGame.RPC_TourGetMatchDetails_TA
// 0x0020 (0x00E8 - 0x0108)
class URPC_TourGetMatchDetails_TA : public URPC_X
{
public:
	unsigned long long                                 TournamentID;                                     		// 0x00E8 (0x0008) [0x0000000000000000]               
	int                                                MatchID;                                          		// 0x00F0 (0x0004) [0x0000000000000000]               
	TArray<struct FTourMatchTeamDetails>               TeamStats;                                        		// 0x00F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourGetMatchDetails_TA");
		}

		return uClassPointer;
	};

	class URPC_TourGetMatchDetails_TA* SetMatchID(int InMatchID);
	class URPC_TourGetMatchDetails_TA* SetTournamentID(unsigned long long InTournamentID);
};

// Class TAGame.__TourService_PsyNet_TA__RegisterTournament_3C3E1D2F44B2052B71596B9D434E55A8
// 0x0018 (0x0060 - 0x0078)
class U__TourService_PsyNet_TA__RegisterTournament_3C3E1D2F44B2052B71596B9D434E55A8 : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourService_PsyNet_TA__RegisterTournament_3C3E1D2F44B2052B71596B9D434E55A8");
		}

		return uClassPointer;
	};

	void __TourService_PsyNet_TA__RegisterTournament_3C3E1D2F44B2052B71596B9D434E55A8(class URPC_TourRegister_TA* RPC);
};

// Class TAGame.RPC_TourRegister_TA
// 0x0078 (0x00E8 - 0x0160)
class URPC_TourRegister_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 TournamentID;                                     		// 0x0130 (0x0008) [0x0000000000000000]               
	struct FTourPrivateCredentials                     Credentials;                                      		// 0x0138 (0x0020) [0x0000000000400000] (CPF_NeedCtorLink)
	class UTourSettings_TA*                            Tournament;                                       		// 0x0158 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourRegister_TA");
		}

		return uClassPointer;
	};

	class URPC_TourRegister_TA* SetCredentials(struct FTourPrivateCredentials& InCredentials);
	class URPC_TourRegister_TA* SetTournamentID(unsigned long long InTournamentID);
	class URPC_TourRegister_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.__TourService_PsyNet_TA__StartMatchmaking_9A1D3BBC49100DE8C4E44A9DCAEEC65C
// 0x0018 (0x0060 - 0x0078)
class U__TourService_PsyNet_TA__StartMatchmaking_9A1D3BBC49100DE8C4E44A9DCAEEC65C : public UObject
{
public:
	struct FScriptDelegate                             Callback;                                         		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TourService_PsyNet_TA__StartMatchmaking_9A1D3BBC49100DE8C4E44A9DCAEEC65C");
		}

		return uClassPointer;
	};

	void __TourService_PsyNet_TA__StartMatchmaking_9A1D3BBC49100DE8C4E44A9DCAEEC65C(class URPC_X* RPC);
};

// Class TAGame.__TwoFactorAuthentication_TA__Reauthenticate_C40FF8DE44A6BA3ED61DE2AB621F39DE
// 0x0030 (0x0060 - 0x0090)
class U__TwoFactorAuthentication_TA__Reauthenticate_C40FF8DE44A6BA3ED61DE2AB621F39DE : public UObject
{
public:
	struct FScriptDelegate                             OnSuccess;                                        		// 0x0060 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             OnFail;                                           		// 0x0078 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.__TwoFactorAuthentication_TA__Reauthenticate_C40FF8DE44A6BA3ED61DE2AB621F39DE");
		}

		return uClassPointer;
	};

	void ____TwoFactorAuthentication_TA__Reauthenticate_C40FF8DE44A6BA3ED61DE2AB621F39DE____TwoFactorAuthentication_TA__Reauthenticate_6894B9C848E8A79A4D21C29937ADC6B2_50544CB94A3108CBF20BBFA675F2D3C8(class URPC_X* _);
	void __TwoFactorAuthentication_TA__Reauthenticate_6894B9C848E8A79A4D21C29937ADC6B2(unsigned long bSuccess, struct FString AuthTicket);
	void __TwoFactorAuthentication_TA__Reauthenticate_C40FF8DE44A6BA3ED61DE2AB621F39DE(class URPC_X* _);
};

// Class TAGame.RPC_UpdateTwoFactorStatus_TA
// 0x0010 (0x00E8 - 0x00F8)
class URPC_UpdateTwoFactorStatus_TA : public URPC_X
{
public:
	struct FString                                     EpicAuthTicket;                                   		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_UpdateTwoFactorStatus_TA");
		}

		return uClassPointer;
	};

	class URPC_UpdateTwoFactorStatus_TA* SetEpicAuthTicket(struct FString InEpicAuthTicket);
};

// Class TAGame._UserBugReportTypes_TA
// 0x0000 (0x0060 - 0x0060)
class U_UserBugReportTypes_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame._UserBugReportTypes_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.Achievement_TA
// 0x0008 (0x0060 - 0x0068)
class UAchievement_TA : public UObject
{
public:
	unsigned char                                      Type;                                             		// 0x0060 (0x0001) [0x0000000000000001] (CPF_Edit)    
	int                                                LocalId;                                          		// 0x0064 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Achievement_TA");
		}

		return uClassPointer;
	};

	bool ShouldRegister();
};

// Class TAGame.Achievement_AG_FarFarAway_TA
// 0x0000 (0x0068 - 0x0068)
class UAchievement_AG_FarFarAway_TA : public UAchievement_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Achievement_AG_FarFarAway_TA");
		}

		return uClassPointer;
	};

	bool UpdateDistanceDriven(class UAchievementManager_TA* Manager, class UUpdateDistanceDrivenTimer_TA* Timer);
	void Update_FarFarAway(class UUpdateDistanceDrivenTimer_TA* Timer, class UAchievementManager_TA* Manager, class UAchievementSave_TA* SaveData);
	void HandleCarRemoved(class UAchievementManager_TA* Manager, class ACar_TA* Car);
	void HandleCarAdded(class UAchievementManager_TA* Manager, class ACar_TA* Car, class UAchievementSave_TA* SaveData);
	void CheckUnlock(class UUpdateDistanceDrivenTimer_TA* Timer, class UAchievementManager_TA* Manager, class UAchievement_AG_FarFarAway_TA* Achievement);
	bool IsAchieved(class UAchievementManager_TA* Manager);
	bool ShouldRegister();
};

// Class TAGame.UpdateDistanceDrivenTimer_TA
// 0x0004 (0x0060 - 0x0064)
class UUpdateDistanceDrivenTimer_TA : public UObject
{
public:
	int                                                KMDriven;                                         		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.UpdateDistanceDrivenTimer_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.AchievementSystem_TA
// 0x0000 (0x0060 - 0x0060)
class UAchievementSystem_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AchievementSystem_TA");
		}

		return uClassPointer;
	};

	void CheckWonMatch(class UMatchWinner_TA* Winner, class UAchievementManager_TA* Manager, class APlayerReplicationInfo* PRI);
	void UpdateStat(class UAchievementManager_TA* Manager, struct FName StatName, int Count);
	void UpdateProgress(class UAchievementManager_TA* Manager, class UAchievement_TA* Achievement);
	void UnlockAchievement(class UAchievementManager_TA* Manager, class UAchievement_TA* Achievement);
	bool ConditionalUnlock(class UAchievementManager_TA* Manager, class UAchievement_TA* Achievement, unsigned long bAchieved);
	void InitManager(class UAchievementClassCollection_TA* Collection, class UAchievementManager_TA* Manager);
	void InitSystem(class UEngine* Engine);
};

// Class TAGame.Achievement_AG_Stocked_TA
// 0x0000 (0x0068 - 0x0068)
class UAchievement_AG_Stocked_TA : public UAchievement_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Achievement_AG_Stocked_TA");
		}

		return uClassPointer;
	};

	void CheckUnlock(class UAchievementManager_TA* Manager, class UAchievement_AG_Stocked_TA* Achievement, class URandomItemsDroppedEvent_TA* DropEvent);
	int RequiredDrops();
	bool IsAchieved(class UAchievementManager_TA* Manager);
};

// Class TAGame.Achievement_AG_SuperVictorious_TA
// 0x0000 (0x0068 - 0x0068)
class UAchievement_AG_SuperVictorious_TA : public UAchievement_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Achievement_AG_SuperVictorious_TA");
		}

		return uClassPointer;
	};

	void CheckUnlock(class UAchievementManager_TA* Manager, class UAchievement_AG_SuperVictorious_TA* Achievement, class UAchievementsGameEventWon_TA* Event);
	bool IsAchieved(class UAchievementManager_TA* Manager);
};

// Class TAGame.AchievementsGameEventWon_TA
// 0x0000 (0x0060 - 0x0060)
class UAchievementsGameEventWon_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AchievementsGameEventWon_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.Achievement_AG_TheStreak_TA
// 0x0000 (0x0068 - 0x0068)
class UAchievement_AG_TheStreak_TA : public UAchievement_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Achievement_AG_TheStreak_TA");
		}

		return uClassPointer;
	};

	void GameLost(class UAchievementManager_TA* Manager, class UAchievement_AG_TheStreak_TA* Achievement, class UAchievementsGameEventLost_TA* Event);
	void GameWon(class UAchievementManager_TA* Manager, class UAchievement_AG_TheStreak_TA* Achievement, class UAchievementsGameEventWon_TA* Event);
	bool IsAchieved(class UAchievementManager_TA* Manager);
};

// Class TAGame.AchievementsGameEventLost_TA
// 0x0000 (0x0060 - 0x0060)
class UAchievementsGameEventLost_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AchievementsGameEventLost_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.Achievement_AG_Virtuoso_TA
// 0x0000 (0x0068 - 0x0068)
class UAchievement_AG_Virtuoso_TA : public UAchievement_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Achievement_AG_Virtuoso_TA");
		}

		return uClassPointer;
	};

	void CheckUnlock(class UAchievementManager_TA* Manager, class UAchievement_AG_Virtuoso_TA* Achievement, class UAchievementUnlockedEvent_TA* UnlockEvent);
	bool IsAchieved(class UAchievementManager_TA* Manager);
	bool ShouldRegister();
};

// Class TAGame.Achievement_AG_Winner_TA
// 0x0000 (0x0068 - 0x0068)
class UAchievement_AG_Winner_TA : public UAchievement_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Achievement_AG_Winner_TA");
		}

		return uClassPointer;
	};

	void CheckUnlock(class UAchievementManager_TA* Manager, class UAchievement_AG_Winner_TA* Achievement, class UAchievementsGameEventWon_TA* Event);
	bool IsAchieved(class UAchievementManager_TA* Manager);
};

// Class TAGame.AchievementClassCollection_TA
// 0x0010 (0x0060 - 0x0070)
class UAchievementClassCollection_TA : public UObject
{
public:
	TArray<class UClass*>                              Classes;                                          		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AchievementClassCollection_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ActiveGameState_TA
// 0x0000 (0x0060 - 0x0060)
class UActiveGameState_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ActiveGameState_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.AIController_Breakout_TA
// 0x0010 (0x07C0 - 0x07D0)
class AAIController_Breakout_TA : public AAIController_Soccar_TA
{
public:
	struct FVector                                     ClosestEnemyGoalLocation;                         		// 0x07C0 (0x000C) [0x0000000000000000]               
	int                                                DefaultSoccarSize;                                		// 0x07CC (0x0004) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AIController_Breakout_TA");
		}

		return uClassPointer;
	};

	void GetGoalProxy(class UBTProxyType* Type, struct FAICachedGoalInfo GoalInfo, struct FAIProxyData& OutData);
	void GetBallProxy(struct FAIProxyData& OutData);
	void Init(class AGameEvent_TA* InGameEvent);
};

// Class TAGame.AimControl_TA
// 0x0274 (0x0060 - 0x02D4)
class UAimControl_TA : public UObject
{
public:
	int                                                LevelCap;                                         		// 0x0060 (0x0004) [0x0000000000000000]               
	struct FAimAssistSettings                          GroundBoost;                                      		// 0x0064 (0x0034) [0x0000000000000000]               
	struct FAimAssistSettings                          BoostSteer;                                       		// 0x0098 (0x0034) [0x0000000000000000]               
	struct FAimAssistSettings                          Throttle;                                         		// 0x00CC (0x0034) [0x0000000000000000]               
	struct FAimAssistSettings                          Steer;                                            		// 0x0100 (0x0034) [0x0000000000000000]               
	struct FAimAssistSettings                          Jump;                                             		// 0x0134 (0x0034) [0x0000000000000000]               
	struct FAimAssistSettings                          Dodge;                                            		// 0x0168 (0x0034) [0x0000000000000000]               
	struct FAimAssistSettings                          AirTilt;                                          		// 0x019C (0x0034) [0x0000000000000000]               
	struct FAimAssistSettings                          Handbrake;                                        		// 0x01D0 (0x0034) [0x0000000000000000]               
	struct FAimAssistSettings                          Aerial;                                           		// 0x0204 (0x0034) [0x0000000000000000]               
	struct FAimAssistSettings                          AerialJump;                                       		// 0x0238 (0x0034) [0x0000000000000000]               
	struct FAimAssistSettings                          AerialBoost;                                      		// 0x026C (0x0034) [0x0000000000000000]               
	struct FAimAssistSettings                          FlipOver;                                         		// 0x02A0 (0x0034) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AimControl_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.AnimNotify_PlayAKSound_TA
// 0x000C (0x0068 - 0x0074)
class UAnimNotify_PlayAKSound_TA : public UAnimNotify_Scripted
{
public:
	class UAkSoundCue*                                 SFX_SoundCue;                                     		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bPlayInReverse : 1;                               		// 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AnimNotify_PlayAKSound_TA");
		}

		return uClassPointer;
	};

	void eventNotify(class AActor* Owner, class UAnimNodeSequence* AnimSeqInstigator);
};

// Class TAGame.AnimNotify_TriggerTurntableEvent_TA
// 0x000C (0x0068 - 0x0074)
class UAnimNotify_TriggerTurntableEvent_TA : public UAnimNotify_Scripted
{
public:
	struct FName                                       TurntableEventName;                               		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bPlayInReverse : 1;                               		// 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AnimNotify_TriggerTurntableEvent_TA");
		}

		return uClassPointer;
	};

	void eventNotify(class AActor* Owner, class UAnimNodeSequence* AnimSeqInstigator);
};

// Class TAGame.ApplyVelocityHitHandler_TA
// 0x000C (0x0150 - 0x015C)
class UApplyVelocityHitHandler_TA : public UExplosionHitHandler_TA
{
public:
	struct FVector                                     VelocityToApply;                                  		// 0x0150 (0x000C) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ApplyVelocityHitHandler_TA");
		}

		return uClassPointer;
	};

	void ApplyImpulse(class ACar_TA* CarHit, struct FVector HitLocation, float DamageScale, struct FContactInformation& ContactInfo);
};

// Class TAGame.BallCamTarget_Knockout_TA
// 0x0008 (0x00C4 - 0x00CC)
class UBallCamTarget_Knockout_TA : public UBallCamTarget_TA
{
public:
	int                                                Team;                                             		// 0x00C8 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BallCamTarget_Knockout_TA");
		}

		return uClassPointer;
	};

	void SetTeam(class APlayerReplicationInfo* PRI);
	void InitFromPRI(class AVehicle_TA* Vehicle);
	void eventDetached();
	void eventAttached();
};

// Class TAGame.BlogTileConfig_X
// 0x0038 (0x0060 - 0x0098)
class UBlogTileConfig_X : public UObject
{
public:
	class UTexture2D*                                  LocalImage;                                       		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FString                                     Title;                                            		// 0x0068 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     DescriptionHeader;                                		// 0x0078 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     Description;                                      		// 0x0088 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BlogTileConfig_X");
		}

		return uClassPointer;
	};

};

// Class TAGame.BlueprintErrors_TA
// 0x0010 (0x0080 - 0x0090)
class UBlueprintErrors_TA : public UErrorList
{
public:
	class UErrorType*                                  BlueprintNotEnoughCurrency;                       		// 0x0080 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  BlueprintPriceMismatch;                           		// 0x0088 (0x0008) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BlueprintErrors_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.BreakoutFloor_TA
// 0x0000 (0x0288 - 0x0288)
class ABreakoutFloor_TA : public AStaticMeshActor
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BreakoutFloor_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.BTC_AIPlayerIndex
// 0x0010 (0x008C - 0x009C)
class UBTC_AIPlayerIndex : public UBTCondition
{
public:
	int                                                IndexGreaterThan;                                 		// 0x0090 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                IndexLessThan;                                    		// 0x0094 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                IndexEqualTo;                                     		// 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_AIPlayerIndex");
		}

		return uClassPointer;
	};

	bool eventGetResult();
	void HandleMembersChanged(class ATeam_TA* Team, class APRI_TA* PRI);
	void eventOnInit();
};

// Class TAGame.BTC_GameInfoType
// 0x001C (0x008C - 0x00A8)
class UBTC_GameInfoType : public UBTCondition
{
public:
	TArray<class UClass*>                              ValidGameInfoClasses;                             		// 0x0090 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class AGameInfo_TA*                                CurrentGameInfo;                                  		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_GameInfoType");
		}

		return uClassPointer;
	};

	bool eventGetResult();
	void eventOnInit();
};

// Class TAGame.BTC_GameScore
// 0x0010 (0x008C - 0x009C)
class UBTC_GameScore : public UBTCondition
{
public:
	float                                              ScoreDeltaGreaterThan;                            		// 0x0090 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ScoreDeltaLessThan;                               		// 0x0094 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                ScoreDelta;                                       		// 0x0098 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_GameScore");
		}

		return uClassPointer;
	};

	bool eventGetResult();
	void HandleGoalScored(class AGameEvent_Soccar_TA* GameEvent, class ABall_TA* Ball, class UGoal_TA* Goal, int ScoreIndex, int AssistIdx);
	void eventOnInit();
};

// Class TAGame.BTC_TargetNumberSatisfying
// 0x0014 (0x008C - 0x00A0)
class UBTC_TargetNumberSatisfying : public UBTCondition
{
public:
	class UBTTarget*                                   Targets;                                          		// 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                TargetsGreaterThan;                               		// 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                TargetsLessThan;                                  		// 0x009C (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_TargetNumberSatisfying");
		}

		return uClassPointer;
	};

	bool eventGetResult();
	void eventOnInit();
};

// Class TAGame.Camera_Edit_TA
// 0x0010 (0x07A0 - 0x07B0)
class ACamera_Edit_TA : public ACamera_TA
{
public:
	struct FName                                       CameraMode;                                       		// 0x07A0 (0x0008) [0x0000000000000000]               
	class UCameraState_Edit_TA*                        CurrentCameraState;                               		// 0x07A8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Camera_Edit_TA");
		}

		return uClassPointer;
	};

	void UpdateCameraState();
	void eventUpdateCamera(float DeltaTime);
	void InstanceCameraStates();
};

// Class TAGame.CameraState_Edit_TA
// 0x0004 (0x0098 - 0x009C)
class UCameraState_Edit_TA : public UCameraState_TA
{
public:
	unsigned long                                      bLocalMovement : 1;                               		// 0x0098 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_Edit_TA");
		}

		return uClassPointer;
	};

	void UpdateFlyPOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void BeginCameraState();
	class UCameraState_X* GetProxyCameraState();
	bool AllowSwivel();
};

// Class TAGame.Camera_GameEditor_TA
// 0x0010 (0x07A0 - 0x07B0)
class ACamera_GameEditor_TA : public ACamera_TA
{
public:
	struct FName                                       CameraMode;                                       		// 0x07A0 (0x0008) [0x0000000000000000]               
	class UCameraState_GameEditor_TA*                  CurrentCameraState;                               		// 0x07A8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Camera_GameEditor_TA");
		}

		return uClassPointer;
	};

	void UpdateCameraState();
	void eventUpdateCamera(float DeltaTime);
	void InstanceCameraStates();
};

// Class TAGame.CameraState_GameEditor_TA
// 0x0000 (0x0098 - 0x0098)
class UCameraState_GameEditor_TA : public UCameraState_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_GameEditor_TA");
		}

		return uClassPointer;
	};

	void UpdateFlyPOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void BeginCameraState();
	class UCameraState_X* GetProxyCameraState();
	bool AllowSwivel();
};

// Class TAGame.CameraState_BallCamInverted_TA
// 0x0018 (0x0240 - 0x0258)
class UCameraState_BallCamInverted_TA : public UCameraState_BallCam_TA
{
public:
	struct FViewTargetTransitionParams                 StartBlendParams;                                 		// 0x0240 (0x0010) [0x0000000000000000]               
	unsigned long                                      bAllowBlendTimeOverride : 1;                      		// 0x0250 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	float                                              DelayFromSpawn;                                   		// 0x0254 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_BallCamInverted_TA");
		}

		return uClassPointer;
	};

	void UpdateFocusWorldOffset(float DeltaTime);
	struct FViewTargetTransitionParams GetStartBlendParams(class UCameraState_X* PreviousState);
	void OverrideBlendParams(struct FViewTargetTransitionParams& Params);
	void UpdateValidPOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	bool ShouldExecute();
	void EndCameraState();
	void BeginCameraState();
};

// Class TAGame.CameraState_CarInverted_TA
// 0x0018 (0x01C0 - 0x01D8)
class UCameraState_CarInverted_TA : public UCameraState_Car_TA
{
public:
	struct FViewTargetTransitionParams                 StartBlendParams;                                 		// 0x01C0 (0x0010) [0x0000000000000000]               
	unsigned long                                      bAllowBlendTimeOverride : 1;                      		// 0x01D0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	float                                              DelayFromSpawn;                                   		// 0x01D4 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_CarInverted_TA");
		}

		return uClassPointer;
	};

	void UpdateGroundPOV(float DeltaTime, struct FCameraOrientation& OutPOV, struct FRotator& OutRotatorNoBlend);
	void UpdateFocusWorldOffset(float DeltaTime);
	void UpdateViewOffset();
	struct FViewTargetTransitionParams GetStartBlendParams(class UCameraState_X* PreviousState);
	void OverrideBlendParams(struct FViewTargetTransitionParams& Params);
	bool ShouldExecute();
	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
};

// Class TAGame.CameraState_BasketballLiveReplay_TA
// 0x0004 (0x012C - 0x0130)
class UCameraState_BasketballLiveReplay_TA : public UCameraState_LiveReplay_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_BasketballLiveReplay_TA");
		}

		return uClassPointer;
	};

	struct FVector GetCameraBaseLocation(struct FVector CameraFocus);
};

// Class TAGame.CameraState_BreakoutLiveReplay_TA
// 0x0008 (0x012C - 0x0134)
class UCameraState_BreakoutLiveReplay_TA : public UCameraState_LiveReplay_TA
{
public:
	float                                              GoalVerticalOffset;                               		// 0x0130 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_BreakoutLiveReplay_TA");
		}

		return uClassPointer;
	};

	struct FVector GetCameraBaseLocation(struct FVector CameraFocus);
};

// Class TAGame.CameraState_CameraTrack_TA
// 0x0034 (0x00B4 - 0x00E8)
class UCameraState_CameraTrack_TA : public UCameraState_Replay_TA
{
public:
	class UReplay_TA*                                  Replay;                                           		// 0x00B8 (0x0008) [0x0000000000000000]               
	unsigned char                                      FlyType;                                          		// 0x00C0 (0x0001) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bFlying : 1;                                      		// 0x00C4 (0x0004) [0x0000000000000000] [0x00000001] 
	float                                              LastReplayTime;                                   		// 0x00C8 (0x0004) [0x0000000000000000]               
	struct FRotator                                    AccumulatedLook;                                  		// 0x00CC (0x000C) [0x0000000000000000]               
	struct FVector                                     AccumulatedMove;                                  		// 0x00D8 (0x000C) [0x0000000000000000]               
	float                                              LastFOV;                                          		// 0x00E4 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_CameraTrack_TA");
		}

		return uClassPointer;
	};

	void SetFlying(unsigned long bFly);
	bool AllowFlyingWhenPaused();
	bool AllowFlyingWhenMoving();
	bool AllowFlying();
	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void BeginCameraState();
};

// Class TAGame.CameraState_Countdown_TA
// 0x0038 (0x0180 - 0x01B8)
class UCameraState_Countdown_TA : public UCameraState_DirectorProxy_TA
{
public:
	int                                                MaxCarsShown;                                     		// 0x0180 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TimePerCar;                                       		// 0x0184 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bSwitchTeamsEveryCar : 1;                         		// 0x0188 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	TArray<class ACar_TA*>                             ShownCars;                                        		// 0x0190 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class ACar_TA*                                     CurrentCar;                                       		// 0x01A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACar_TA*                                     NextCar;                                          		// 0x01A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                LastTeam;                                         		// 0x01B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastChangeCarTime;                                		// 0x01B4 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_Countdown_TA");
		}

		return uClassPointer;
	};

	bool __CameraState_Countdown_TA__FindNextCar_C150C3EC4827F7AB70043FB7CD9C54F4(struct FCarData D);
	bool __CameraState_Countdown_TA__FindNextCar_500264964BDA0F8D042A11B24AA54AEE(class ACar_TA* C);
	void UpdateTextureStreaming();
	void UpdateNextCar();
	class ACar_TA* FindNextCar();
	bool ShouldKeepExecuting();
	bool ShouldExecute();
	void EndCameraState();
	void BeginCameraState();
};

// Class TAGame.CameraState_CustomFocus_TA
// 0x0020 (0x01C0 - 0x01E0)
class UCameraState_CustomFocus_TA : public UCameraState_Car_TA
{
public:
	float                                              RotationRate;                                     		// 0x01C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PitchScale;                                       		// 0x01C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PitchFocusZFactor;                                		// 0x01C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PitchExtentMin;                                   		// 0x01CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PitchExtentMax;                                   		// 0x01D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class ACustomFocusTarget_TA*                       FocusTarget;                                      		// 0x01D8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_CustomFocus_TA");
		}

		return uClassPointer;
	};

	void UpdateFocus(float DeltaTime, struct FCameraOrientation& OutPOV);
	void UpdateFocusWorldOffset(float DeltaTime);
	void UpdateAirAndGroundCamera(float DeltaTime, struct FCameraOrientation& OutPOV, struct FRotator& OutRotatorNoBlend);
	void UpdateRotationModifiers(float DeltaTime, struct FCameraOrientation& OutPOV);
	bool ShouldExecute();
	void Init(class ACamera_X* InCam);
};

// Class TAGame.CustomFocusTarget_TA
// 0x0000 (0x0268 - 0x0268)
class ACustomFocusTarget_TA : public AActor
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CustomFocusTarget_TA");
		}

		return uClassPointer;
	};

	struct FVector GetFocusLocation(class ACar_TA* ForCar);
};

// Class TAGame.CameraState_DirectorBallCam_TA
// 0x001C (0x0240 - 0x025C)
class UCameraState_DirectorBallCam_TA : public UCameraState_BallCam_TA
{
public:
	struct FProfileCameraSettings                      ForcedCameraSettings;                             		// 0x0240 (0x001C) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_DirectorBallCam_TA");
		}

		return uClassPointer;
	};

	struct FProfileCameraSettings GetProfileCameraSettings();
};

// Class TAGame.CameraState_DirectorCountdownRotate_TA
// 0x0020 (0x01B8 - 0x01D8)
class UCameraState_DirectorCountdownRotate_TA : public UCameraState_Countdown_TA
{
public:
	float                                              FOV;                                              		// 0x01B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Distance;                                         		// 0x01BC (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    InitialRotation;                                  		// 0x01C0 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    RotationSpeed;                                    		// 0x01CC (0x000C) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_DirectorCountdownRotate_TA");
		}

		return uClassPointer;
	};

	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
};

// Class TAGame.CameraState_DirectorCountdownTailPass_TA
// 0x0020 (0x01B8 - 0x01D8)
class UCameraState_DirectorCountdownTailPass_TA : public UCameraState_Countdown_TA
{
public:
	float                                              DistanceFromCar;                                  		// 0x01B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    InitialRotation;                                  		// 0x01BC (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    RotationSpeed;                                    		// 0x01C8 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              FOV;                                              		// 0x01D4 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_DirectorCountdownTailPass_TA");
		}

		return uClassPointer;
	};

	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
};

// Class TAGame.CameraState_DirectorGoalScorer_TA
// 0x0010 (0x0180 - 0x0190)
class UCameraState_DirectorGoalScorer_TA : public UCameraState_DirectorProxy_TA
{
public:
	float                                              Distance;                                         		// 0x0180 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FOV;                                              		// 0x0184 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class ACar_TA*                                     FocusCar;                                         		// 0x0188 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_DirectorGoalScorer_TA");
		}

		return uClassPointer;
	};

	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	bool ShouldKeepExecuting();
	bool ShouldExecute();
	void HandlePlayerScored(class AGameEvent_Soccar_TA* InGameEvent, class APRI_TA* Scorer);
	void EndCameraState();
	void BeginCameraState();
	void ShutDown();
	void Init(class ACamera_X* InCamera);
};

// Class TAGame.CameraState_DirectorKickoff_TA
// 0x0024 (0x0180 - 0x01A4)
class UCameraState_DirectorKickoff_TA : public UCameraState_DirectorProxy_TA
{
public:
	float                                              Distance;                                         		// 0x0180 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    RotationOffset;                                   		// 0x0184 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              FOV;                                              		// 0x0190 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FViewTargetTransitionParams                 BlendToParams;                                    		// 0x0194 (0x0010) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_DirectorKickoff_TA");
		}

		return uClassPointer;
	};

	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	struct FViewTargetTransitionParams GetEndBlendParams(class UCameraState_X* NewState);
	bool ShouldKeepExecuting();
};

// Class TAGame.CameraState_DirectorMoving_TA
// 0x0064 (0x0180 - 0x01E4)
class UCameraState_DirectorMoving_TA : public UCameraState_DirectorProxy_TA
{
public:
	struct FVector                                     StartOffset;                                      		// 0x0180 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     EndOffset;                                        		// 0x018C (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    StartRotation;                                    		// 0x0198 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    EndRotation;                                      		// 0x01A4 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FViewTargetTransitionParams                 PanBlend;                                         		// 0x01B0 (0x0010) [0x0000000000000001] (CPF_Edit)    
	float                                              StartFOV;                                         		// 0x01C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              EndFOV;                                           		// 0x01C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      LoopType;                                         		// 0x01C8 (0x0001) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     CachedStart;                                      		// 0x01CC (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     CachedEnd;                                        		// 0x01D8 (0x000C) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_DirectorMoving_TA");
		}

		return uClassPointer;
	};

	float GetRawPercent(float inTime);
	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void Init(class ACamera_X* InCamera);
};

// Class TAGame.CameraState_IntroMenu_TA
// 0x004C (0x008C - 0x00D8)
class UCameraState_IntroMenu_TA : public UCameraState_X
{
public:
	float                                              FOV;                                              		// 0x0090 (0x0004) [0x0000000000000000]               
	struct FVector                                     Offset;                                           		// 0x0094 (0x000C) [0x0000000000000000]               
	float                                              BlendRate;                                        		// 0x00A0 (0x0004) [0x0000000000000000]               
	class ASkeletalMeshActorMAT_IntroCar_TA*           Focus;                                            		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<class ASkeletalMeshActorMAT_IntroCar_TA*>   FocusActors;                                      		// 0x00B0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventFocusChanged__Delegate;                    		// 0x00C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_IntroMenu_TA");
		}

		return uClassPointer;
	};

	int FocusActorSort(class ASkeletalMeshActorMAT_IntroCar_TA* A, class ASkeletalMeshActorMAT_IntroCar_TA* B);
	class ASkeletalMeshActorMAT_IntroCar_TA* GetInitialCarFocus();
	void SetupFocusActors();
	void SetFocus(class ASkeletalMeshActorMAT_IntroCar_TA* NewFocus);
	void ShiftFocus(int Direction);
	void ShiftLeftFocus();
	void ShiftRightFocus();
	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void BeginCameraState();
	void EventFocusChanged(class UCameraState_IntroMenu_TA* CameraState);
};

// Class TAGame.SkeletalMeshActorMAT_IntroCar_TA
// 0x0018 (0x03D0 - 0x03E8)
class ASkeletalMeshActorMAT_IntroCar_TA : public ASkeletalMeshActorMAT_Products_TA
{
public:
	int                                                ViewIndex;                                        		// 0x03D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    AngleOffset;                                      		// 0x03D4 (0x000C) [0x0000000000000001] (CPF_Edit)    
	class UIntroCarTemplates_TA*                       IntroCarsTemplates;                               		// 0x03E0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SkeletalMeshActorMAT_IntroCar_TA");
		}

		return uClassPointer;
	};

	bool __SkeletalMeshActorMAT_IntroCar_TA__PostBeginPlay_8FEC0D7B4DBF6FD3A0BE00B07A5F04A7(struct FEditorIntroCar IntroCar);
	void eventPostBeginPlay();
};

// Class TAGame.CameraState_Lobby_TA
// 0x004C (0x008C - 0x00D8)
class UCameraState_Lobby_TA : public UCameraState_X
{
public:
	unsigned long                                      bInitDefaultPOV : 1;                              		// 0x0090 (0x0004) [0x0000000000000000] [0x00000001] 
	TArray<struct FCameraSettings>                     TeamSettings;                                     		// 0x0098 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              FadeInDuration;                                   		// 0x00A8 (0x0004) [0x0000000000000000]               
	struct FCameraOrientation                          DefaultCamera;                                    		// 0x00AC (0x002C) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_Lobby_TA");
		}

		return uClassPointer;
	};

	bool InitDefaultPOV();
	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	bool ShouldKeepExecuting();
	struct FViewTargetTransitionParams GetEndBlendParams(class UCameraState_X* NewState);
	bool ShouldExecute();
};

// Class TAGame.CameraState_LobbyFocus_TA
// 0x0050 (0x008C - 0x00DC)
class UCameraState_LobbyFocus_TA : public UCameraState_X
{
public:
	float                                              XOffsetDistance;                                  		// 0x0090 (0x0004) [0x0000000000000000]               
	float                                              CameraOffsetPitch;                                		// 0x0094 (0x0004) [0x0000000000000000]               
	TArray<float>                                      AngleOffsets;                                     		// 0x0098 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class ACar_TA*                                     TargetCar;                                        		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FCameraOrientation                          TargetCamera;                                     		// 0x00B0 (0x002C) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_LobbyFocus_TA");
		}

		return uClassPointer;
	};

	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void SetTarget(class ACar_TA* Target);
	void HandleSelectedFocusChanged(class UPreMatchLobby_TA* PreMatchLobby);
	void SetupTargetCamera();
	bool ShouldKeepExecuting();
	struct FViewTargetTransitionParams GetEndBlendParams(class UCameraState_X* NewState);
	void BeginCameraState();
	bool ShouldExecute();
	void Init(class ACamera_X* InCamera);
};

// Class TAGame.CameraState_MenuCamActor_TA
// 0x000C (0x020C - 0x0218)
class UCameraState_MenuCamActor_TA : public UCameraState_CamActor_X
{
public:
	struct FName                                       CameraTag;                                        		// 0x0210 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_MenuCamActor_TA");
		}

		return uClassPointer;
	};

	bool ShouldExecute();
	void Init(class ACamera_X* InCamera);
};

// Class TAGame.CameraState_PodiumSpotlight_TA
// 0x003C (0x008C - 0x00C8)
class UCameraState_PodiumSpotlight_TA : public UCameraState_X
{
public:
	float                                              ArcT;                                             		// 0x0090 (0x0004) [0x0000000000000000]               
	float                                              CameraDistance;                                   		// 0x0094 (0x0004) [0x0000000000000000]               
	float                                              CameraOffsetYaw;                                  		// 0x0098 (0x0004) [0x0000000000000000]               
	float                                              CameraOffsetPitch;                                		// 0x009C (0x0004) [0x0000000000000000]               
	float                                              XOffsetDistanceStart;                             		// 0x00A0 (0x0004) [0x0000000000000000]               
	float                                              XOffsetDistanceEnd;                               		// 0x00A4 (0x0004) [0x0000000000000000]               
	float                                              XOffsetDollySpeed;                                		// 0x00A8 (0x0004) [0x0000000000000000]               
	float                                              DefaultFOV;                                       		// 0x00AC (0x0004) [0x0000000000000000]               
	float                                              FadeInDuration;                                   		// 0x00B0 (0x0004) [0x0000000000000000]               
	TArray<struct FCachedPodiumCar>                    Cars;                                             		// 0x00B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_PodiumSpotlight_TA");
		}

		return uClassPointer;
	};

	void UpdateCarLocations(class AGameEvent_TA* GameEvent);
	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void BeginCameraState();
	bool ShouldExecute();
};

// Class TAGame.CameraState_PrePodiumSpotlight_TA
// 0x0014 (0x008C - 0x00A0)
class UCameraState_PrePodiumSpotlight_TA : public UCameraState_X
{
public:
	float                                              ElapsedTime;                                      		// 0x0090 (0x0004) [0x0000000000000000]               
	unsigned long                                      bFadeOut : 1;                                     		// 0x0094 (0x0004) [0x0000000000000000] [0x00000001] 
	float                                              FadeOutDelay;                                     		// 0x0098 (0x0004) [0x0000000000000000]               
	float                                              FadeOutDuration;                                  		// 0x009C (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_PrePodiumSpotlight_TA");
		}

		return uClassPointer;
	};

	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	bool ShouldExecute();
};

// Class TAGame.CameraState_StadiumSide_TA
// 0x0138 (0x0180 - 0x02B8)
class UCameraState_StadiumSide_TA : public UCameraState_DirectorProxy_TA
{
public:
	struct FVector                                     TrackOffset;                                      		// 0x0180 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     TrackSize;                                        		// 0x018C (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           TrackProximityOffsetSide;                         		// 0x0198 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              TrackProximityOffsetLerp;                         		// 0x01B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           FocusLerp;                                        		// 0x01B8 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           TrackLerpSide;                                    		// 0x01D0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           TrackLerpForward;                                 		// 0x01E8 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           CarDistWeight;                                    		// 0x0200 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           GoalDistWeight;                                   		// 0x0218 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              BallPredictionTime;                               		// 0x0230 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinFOV;                                           		// 0x0234 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxFOV;                                           		// 0x0238 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SmoothFOVLerp;                                    		// 0x023C (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     TrackCenter;                                      		// 0x0240 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     TrackRight;                                       		// 0x024C (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     TrackForward;                                     		// 0x0258 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     TrackStart;                                       		// 0x0264 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     TrackEnd;                                         		// 0x0270 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     FieldStart;                                       		// 0x027C (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     FieldEnd;                                         		// 0x0288 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     SmoothedFocus;                                    		// 0x0294 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     SmoothedFieldPct;                                 		// 0x02A0 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              SmoothedFOV;                                      		// 0x02AC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              SmoothedProximityOffsetSide;                      		// 0x02B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bCut : 1;                                         		// 0x02B4 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_StadiumSide_TA");
		}

		return uClassPointer;
	};

	void UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV);
	void InitFieldTrackValues();
	void BeginCameraState();
	void Init(class ACamera_X* InCamera);
};

// Class TAGame.CameraStateSelector_Priority_TA
// 0x0014 (0x0088 - 0x009C)
class UCameraStateSelector_Priority_TA : public UCameraStateSelector_TA
{
public:
	TArray<struct FStateParams>                        PriorityStates;                                   		// 0x0088 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long                                      bSelectFirst : 1;                                 		// 0x0098 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraStateSelector_Priority_TA");
		}

		return uClassPointer;
	};

	class UCameraState_X* SelectState(class UCameraState_X* InCurrentState);
	void SetActive();
	void Init(class ACamera_X* InCamera);
};

// Class TAGame.CameraStateSelector_Sequence_TA
// 0x0008 (0x0088 - 0x0090)
class UCameraStateSelector_Sequence_TA : public UCameraStateSelector_TA
{
public:
	unsigned long                                      bResetIndexOnActive : 1;                          		// 0x0088 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	int                                                StateIdx;                                         		// 0x008C (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraStateSelector_Sequence_TA");
		}

		return uClassPointer;
	};

	int GetNextStateIndex();
	class UCameraState_X* SelectState(class UCameraState_X* InCurrentState);
	void SetActive();
};

// Class TAGame.CameraStateSelector_RandomSequence_TA
// 0x0004 (0x0090 - 0x0094)
class UCameraStateSelector_RandomSequence_TA : public UCameraStateSelector_Sequence_TA
{
public:
	unsigned long                                      bReshuffleOnActive : 1;                           		// 0x0090 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraStateSelector_RandomSequence_TA");
		}

		return uClassPointer;
	};

	void Reshuffle();
	void SetActive();
	void Init(class ACamera_X* InCamera);
};

// Class TAGame.Car_Freeplay_TA
// 0x0010 (0x0B20 - 0x0B30)
class ACar_Freeplay_TA : public ACar_TA
{
public:
	TArray<struct FLinearColor>                        CarColors;                                        		// 0x0B20 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Car_Freeplay_TA");
		}

		return uClassPointer;
	};

	void SetCarColor(class UCarMeshComponentBase_TA* InMesh, unsigned long bSetTeamColor, unsigned long bSetCustomColor);
	void HandleAllAssetsLoaded(class UProductLoader_TA* Loader);
	int GetLoadoutTeamIndex();
	bool HasTeam();
	void InitFX();
};

// Class TAGame.CarJointSpinner_TA
// 0x0038 (0x00A4 - 0x00DC)
class UCarJointSpinner_TA : public UActorComponent_X
{
public:
	struct FName                                       ControlName;                                      		// 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              IdleSpeed;                                        		// 0x00B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DrivingSpeed;                                     		// 0x00B4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BoostSpeed;                                       		// 0x00B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     RotationAxis;                                     		// 0x00BC (0x000C) [0x0000000000000001] (CPF_Edit)    
	class ACar_TA*                                     Car;                                              		// 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USkelControlSingleBone*                      Control;                                          		// 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              Speed;                                            		// 0x00D8 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarJointSpinner_TA");
		}

		return uClassPointer;
	};

	void eventTick(float DeltaTime);
	void eventAttached();
};

// Class TAGame.ChallengeFilter_Default_TA
// 0x0000 (0x0060 - 0x0060)
class UChallengeFilter_Default_TA : public UChallengeFilter_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ChallengeFilter_Default_TA");
		}

		return uClassPointer;
	};

	TArray<class UChallenge_TA*> FilterChallenges(TArray<class UChallenge_TA*>& AllChallenges);
};

// Class TAGame.ChallengeFilter_Progress_TA
// 0x0000 (0x0060 - 0x0060)
class UChallengeFilter_Progress_TA : public UChallengeFilter_Default_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ChallengeFilter_Progress_TA");
		}

		return uClassPointer;
	};

	TArray<class UChallenge_TA*> FilterChallenges(TArray<class UChallenge_TA*>& AllChallenges);
};

// Class TAGame.CheatStayAsParty_TA
// 0x0000 (0x0060 - 0x0060)
class UCheatStayAsParty_TA : public UCheatObject_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CheatStayAsParty_TA");
		}

		return uClassPointer;
	};

	void PartyUpInjectVote();
	void PartyUpVote();
	void PartyUpDumpActive();
};

// Class TAGame.CheckoutErrors_TA
// 0x0028 (0x0080 - 0x00A8)
class UCheckoutErrors_TA : public UErrorList
{
public:
	class UErrorType*                                  MtxConfigDisabled;                                		// 0x0080 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  SystemOverlayDisabled;                            		// 0x0088 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  TransactionInProgress;                            		// 0x0090 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  InvalidNumberOfItemsInCart;                       		// 0x0098 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  InvalidItemsInCart;                               		// 0x00A0 (0x0008) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CheckoutErrors_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_ClubInviteNotification_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_ClubInviteNotification_TA : public UGFxData_Notification_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ClubInviteNotification_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ClubsConfig_TA
// 0x0010 (0x0078 - 0x0088)
class UClubsConfig_TA : public UOnlineConfig_X
{
public:
	int                                                TagLengthMin;                                     		// 0x0078 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TagLengthMax;                                     		// 0x007C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                NameLengthMin;                                    		// 0x0080 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                NameLengthMax;                                    		// 0x0084 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ClubsConfig_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.CollisionTestTrack_TA
// 0x0008 (0x0268 - 0x0270)
class ACollisionTestTrack_TA : public AActor
{
public:
	class UCollisionTestComponent_TA*                  CollisionTestComponent;                           		// 0x0268 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CollisionTestTrack_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.EndRoundComponent_TrainingEditor_TA
// 0x0000 (0x00B0 - 0x00B0)
class UEndRoundComponent_TrainingEditor_TA : public UEndRoundComponent_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EndRoundComponent_TrainingEditor_TA");
		}

		return uClassPointer;
	};

	void HandleBallHitGroundTimeout();
	void HandleBallHitGround(class ABall_TA* Ball, struct FVector HitLoc, struct FVector HitNorm);
};

// Class TAGame.EpicFriendsConverterConfig_TA
// 0x000C (0x0078 - 0x0084)
class UEpicFriendsConverterConfig_TA : public UOnlineConfig_X
{
public:
	float                                              DaysBetweenPrompts;                               		// 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SecondsBetweenInvites;                            		// 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                MaxNumberOfAttemptsPerUser;                       		// 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EpicFriendsConverterConfig_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.EventsPageConfig_TA
// 0x0060 (0x0078 - 0x00D8)
class UEventsPageConfig_TA : public UOnlineConfig_X
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x0078 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FString                                     URL;                                              		// 0x0080 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     ButtonTextureURL_Default;                         		// 0x0090 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     ButtonTextureURL_Hover;                           		// 0x00A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     ButtonTextureURL_Click;                           		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UTexture*                                    ButtonTexture_Default;                            		// 0x00C0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	class UTexture*                                    ButtonTexture_Hover;                              		// 0x00C8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	class UTexture*                                    ButtonTexture_Click;                              		// 0x00D0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EventsPageConfig_TA");
		}

		return uClassPointer;
	};

	void __EventsPageConfig_TA__SyncTextures_4227918E4432C589C074DBA6F9F63755(class UTexture2DDynamic* Texture);
	void __EventsPageConfig_TA__SyncTextures_F42593F440E3ADB3D03E07902FBB6392(class UTexture2DDynamic* Texture);
	void __EventsPageConfig_TA__SyncTextures_8138187E4C750F8CED5E398D0ACA1AB6(class UTexture2DDynamic* Texture);
	void SyncTextures();
};

// Class TAGame.FreeToPlayConfig_TA
// 0x0004 (0x0078 - 0x007C)
class UFreeToPlayConfig_TA : public UOnlineConfig_X
{
public:
	unsigned long                                      bRequireOnlineSubscription : 1;                   		// 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FreeToPlayConfig_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_FriendRequestNotification_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_FriendRequestNotification_TA : public UGFxData_Notification_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_FriendRequestNotification_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.FXActor_TrainingEditor_TA
// 0x0038 (0x0328 - 0x0360)
class AFXActor_TrainingEditor_TA : public AFXActor_X
{
public:
	float                                              AdjustSpeedStateRemoveDelay;                      		// 0x0328 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 AkBallSpeedDirectionChange;                       		// 0x0330 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UFXActorEvent_X*                             SimulatingBallState;                              		// 0x0338 (0x0008) [0x0000000000000000]               
	class UFXActorEvent_X*                             AdjustingSpeedState;                              		// 0x0340 (0x0008) [0x0000000000000000]               
	class UFXActorEvent_X*                             PlaytestingState;                                 		// 0x0348 (0x0008) [0x0000000000000000]               
	class AGameEvent_TrainingEditor_TA*                GameEvent;                                        		// 0x0350 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              PrevLaunchSpeed;                                  		// 0x0358 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              PrevLaunchSpeedSign;                              		// 0x035C (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FXActor_TrainingEditor_TA");
		}

		return uClassPointer;
	};

	void AdjustSpeedStateEnd();
	void HandleLaunchVelocityChange(class ABall_GameEditor_TA* InBall);
	void HandleBallReset(class ABall_GameEditor_TA* InBall);
	void HandleBallFire(class ABall_GameEditor_TA* InBall);
	void HandlePlaytestStarted(class AGameEvent_TrainingEditor_TA* InGameEvent);
	void HandleGameStateChange(class AGameEvent_TA* InGameEvent);
	void HandleBallRemoved(class AGameEvent_Soccar_TA* InGameEvent, class ABall_TA* Ball);
	void HandleBallAdded(class AGameEvent_Soccar_TA* InGameEvent, class ABall_TA* Ball);
	void PostBeginPlay();
};

// Class TAGame.FXTrait_PreviewParticle_TA
// 0x0010 (0x0060 - 0x0070)
class UFXTrait_PreviewParticle_TA : public UFXAttachmentTraitBase_X
{
public:
	class UParticleSystem*                             ParticlePreview;                                  		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UParticleSystem*                             OldParticle;                                      		// 0x0068 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FXTrait_PreviewParticle_TA");
		}

		return uClassPointer;
	};

	void DisablePreview(class AFXActor_X* _, class UFXActorEvent_X* __);
	void EnablePreview(class AFXActor_X* _, class UFXActorEvent_X* __);
	void eventInit();
};

// Class TAGame.GameEvent_Football_TA
// 0x0034 (0x0C58 - 0x0C8C)
class AGameEvent_Football_TA : public AGameEvent_Soccar_TA
{
public:
	int                                                LastScoredTeamIndex;                              		// 0x0C58 (0x0004) [0x0000000000000000]               
	struct FVector                                     GoalPlayerSpawnOffset;                            		// 0x0C5C (0x000C) [0x0000000000000002] (CPF_Const)   
	struct FVector                                     BallKickOffDirection;                             		// 0x0C68 (0x000C) [0x0000000000000002] (CPF_Const)   
	struct FVector                                     BallKickOffTorque;                                		// 0x0C74 (0x000C) [0x0000000000000002] (CPF_Const)   
	float                                              BallKickOffScale;                                 		// 0x0C80 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              SpawnRadiusCheck;                                 		// 0x0C84 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              KickoffDelay;                                     		// 0x0C88 (0x0004) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_Football_TA");
		}

		return uClassPointer;
	};

	void StartKickoff();
	bool __GameEvent_Football_TA__GetBallSpawnGoal_8CC3845D49F4AE4D4ADB518D7DF07881(class UGoal_TA* Goal);
	bool ShouldDoKickOff();
	int GetGoalScorePoints(class ABall_TA* Ball, class APRI_TA* ScorerPRI, class UGoal_TA* Goal);
	class UGoal_TA* GetBallSpawnGoal();
	bool CarFitsAtLocation(struct FVector DesiredLocation);
	struct FVector CalculateSpawnLocation(struct FVector StartLocation, struct FRotator StartRotation, int SpawnLocationIndex);
	bool GetSpawnOrientation(class AController* ForPlayer, struct FVector& out_Location, struct FRotator& out_Rotation);
	bool GetBallSpawnOrientation(struct FVector& out_Location, struct FRotator& out_Rotation);
	void HandleGoalScored(class AGameEvent_Soccar_TA* GameEvent, class ABall_TA* Ball, class UGoal_TA* Goal, int ScoreIndex, int AssistIdx);
	void eventConstruct();
};

// Class TAGame.GameEvent_FTE_TA
// 0x0008 (0x0C58 - 0x0C60)
class AGameEvent_FTE_TA : public AGameEvent_Soccar_TA
{
public:
	int                                                MaxTimeToShowInstructions;                        		// 0x0C58 (0x0004) [0x0000000000000002] (CPF_Const)   
	int                                                InvalidTeamNum;                                   		// 0x0C5C (0x0004) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_FTE_TA");
		}

		return uClassPointer;
	};

	void __GameEvent_FTE_TA__SubmitMatchComplete_A77FF6FC47A6D22144D0D2AFF0F18E5D(class APRI_TA* PRI);
	void SubmitMatchComplete();
	void EndGame();
};

// Class TAGame.GameEvent_GodBall_TA
// 0x0030 (0x0C58 - 0x0C88)
class AGameEvent_GodBall_TA : public AGameEvent_Soccar_TA
{
public:
	int                                                LastScoredTeamIndex;                              		// 0x0C58 (0x0004) [0x0000000000000000]               
	struct FVector                                     GoalBallSpawnOffset;                              		// 0x0C5C (0x000C) [0x0000000000000002] (CPF_Const)   
	struct FVector                                     GoalPlayerSpawnOffset;                            		// 0x0C68 (0x000C) [0x0000000000000002] (CPF_Const)   
	struct FVector                                     BallKickOffDirection;                             		// 0x0C74 (0x000C) [0x0000000000000002] (CPF_Const)   
	float                                              BallKickOffScale;                                 		// 0x0C80 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              SpawnRadiusCheck;                                 		// 0x0C84 (0x0004) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameEvent_GodBall_TA");
		}

		return uClassPointer;
	};

	bool __GameEvent_GodBall_TA__GetBallSpawnGoal_55DB26AD49B413872C47C5AF6A4E2705(class UGoal_TA* Goal);
	class UGoal_TA* GetBallSpawnGoal();
	bool CarFitsAtLocation(struct FVector DesiredLocation);
	struct FVector CalculateSpawnLocation(struct FVector StartLocation, struct FRotator StartRotation, int SpawnLocationIndex);
	bool GetSpawnOrientation(class AController* ForPlayer, struct FVector& out_Location, struct FRotator& out_Rotation);
	bool GetBallSpawnOrientation(struct FVector& out_Location, struct FRotator& out_Rotation);
	void HandleGoalScored(class AGameEvent_Soccar_TA* GameEvent, class ABall_TA* Ball, class UGoal_TA* Goal, int ScoreIndex, int AssistIdx);
	void eventConstruct();
};

// Class TAGame.GameInfo_CollisionTest_TA
// 0x002C (0x04D8 - 0x0504)
class AGameInfo_CollisionTest_TA : public AGameInfoBase_TA
{
public:
	TArray<class UCollisionTestComponent_TA*>          TestComponents;                                   		// 0x04D8 (0x0010) [0x0000000004482008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	class UCollisionTestComponent_TA*                  CurrentTest;                                      		// 0x04E8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	int                                                CurrentIndex;                                     		// 0x04F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class AActor*                                      CurrentActor;                                     		// 0x04F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bRepeat : 1;                                      		// 0x0500 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_CollisionTest_TA");
		}

		return uClassPointer;
	};

	class AActor* SpawnActor(class UCollisionTestComponent_TA* Test, float Alpha);
	class AActor* SpawnActorFromTest(class UCollisionTestComponent_TA* Test);
	void SkipTest();
	void Repeat(int Index);
	void SkipTo(int Index);
	void Skip(int Steps);
	void FireNext();
	void StartNextTest();
	void FindTestActors();
	void SetStadiumColors();
	void GenericPlayerInitialization(class AController* C);
	class APlayerController* SpawnPlayerController(struct FVector SpawnLocation, struct FRotator SpawnRotation);
	void InitGame(struct FString Options, struct FString& ErrorMessage);
};

// Class TAGame.GameInfo_GameEditor_TA
// 0x0000 (0x0550 - 0x0550)
class AGameInfo_GameEditor_TA : public AGameInfo_Soccar_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_GameEditor_TA");
		}

		return uClassPointer;
	};

	void RestartGameEvent();
	void PlayerResetTraining();
	void SetupPlayer(class APlayerController* NewPlayer);
	void eventPostLogin(class APlayerController* NewPlayer);
	void eventPostBeginPlay();
};

// Class TAGame.GameInfo_TrainingEditor_TA
// 0x0004 (0x0550 - 0x0554)
class AGameInfo_TrainingEditor_TA : public AGameInfo_GameEditor_TA
{
public:
	unsigned long                                      bCanExportMatinee : 1;                            		// 0x0550 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_TrainingEditor_TA");
		}

		return uClassPointer;
	};

	void SetupPlayer(class APlayerController* NewPlayer);
	void OnCreateCurrentGame();
};

// Class TAGame.GFxData_AdHoc_TA
// 0x0002 (0x0098 - 0x009A)
class UGFxData_AdHoc_TA : public UGFxDataSingleton_X
{
public:
	unsigned char                                      AdHocDesiredState;                                		// 0x0098 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      AdHocState;                                       		// 0x0099 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_AdHoc_TA");
		}

		return uClassPointer;
	};

	void HandleDisabledFail(class UError* Error);
	void HandleDisabledSuccess();
	void DisableAdHoc();
	void OnEnabledError();
	void OnEnabled();
	void HandleEnabledFail(class UError* Error);
	void HandleEnabledSuccess();
	void EnableAdHoc();
};

// Class TAGame.GFxData_AutoTour_CompletedResults_TA
// 0x00BC (0x0094 - 0x0150)
class UGFxData_AutoTour_CompletedResults_TA : public UGFxDataRow_X
{
public:
	class UPsyNet_X*                                   PsyNet;                                           		// 0x0098 (0x0008) [0x0000000000000000]               
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAutoTourConfig_TA*                          Config;                                           		// 0x00A8 (0x0008) [0x0000000000000000]               
	class UAutoTour_TA*                                AutoTour;                                         		// 0x00B0 (0x0008) [0x0000000000000000]               
	unsigned long long                                 CycleID;                                          		// 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                WeekIndex;                                        		// 0x00C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bEliminatedFirstRound : 1;                        		// 0x00C4 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bWeeksResultsChanged : 1;                         		// 0x00C4 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bReceivedResults : 1;                             		// 0x00C4 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bFailedToRetrieveResults : 1;                     		// 0x00C4 (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	struct FTournamentResult                           NewTournamentResult;                              		// 0x00C8 (0x0010) [0x0000000000002000] (CPF_Transient)
	TArray<struct FTournamentResult>                   OldWeeklyResults;                                 		// 0x00D8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FTournamentResult>                   NewWeeklyResults;                                 		// 0x00E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FShopCurrencyInfo>                   CurrencyRewards;                                  		// 0x00F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FShopCurrencyInfo>                   OldWeeklyCurrencies;                              		// 0x0108 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FShopCurrencyInfo>                   WeeklyCurrencies;                                 		// 0x0118 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FShopCurrencyInfo>                   FinalCurrencies;                                  		// 0x0128 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long long                                 TournamentID;                                     		// 0x0138 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 ScheduleID;                                       		// 0x0140 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 RejoinTournamentTime;                             		// 0x0148 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_AutoTour_CompletedResults_TA");
		}

		return uClassPointer;
	};

	void __GFxData_AutoTour_CompletedResults_TA__Init_33DDF5074CF6FC0C4574859FE541E3FF(class URPC_X* RPC);
	void __GFxData_AutoTour_CompletedResults_TA__Init_832B64DC4B92DCBBF6A02284ECF6C8EA(class URPC_AutoTour_GetCompletedResult_TA* RPC);
	void __GFxData_AutoTour_CompletedResults_TA__Init_6DB40DC240A9E790C2448289590F9EE5(class UPsyNetService_AutoTourCompletedResultReceived_TA* Service);
	void __GFxData_AutoTour_CompletedResults_TA__HandleFailedToRetrieveResults_A3A65CCB4F6C613848DD7D8FB629B798(class URPC_X* RPC);
	void __GFxData_AutoTour_CompletedResults_TA__HandleFailedToRetrieveResults_34BD93B34539EBCE67CBE39B86A76F5F(class URPC_AutoTour_GetCompletedResult_TA* RPC);
	int __GFxData_AutoTour_CompletedResults_TA__UpdateTournamentResults_1E3F53FA49BF1AF8DAE298BF0E31EE3D(struct FTournamentResult A, struct FTournamentResult B);
	int __GFxData_AutoTour_CompletedResults_TA__UpdateTournamentResults_02D493CC4DBB4E3EE7B367AF318A37B9(struct FTournamentResult A, struct FTournamentResult B);
	bool __GFxData_AutoTour_CompletedResults_TA__HasEligibleRejoinTournament_32F7CE12491A599B6030EF9FAA3DF279(class UGFxData_AutoTour_TourCard_TA* T);
	bool HasEligibleRejoinTournament();
	TArray<struct FShopCurrencyInfo> GetFinalCurrencies();
	TArray<struct FShopCurrencyInfo> GetWeeklyCurrencies();
	TArray<struct FShopCurrencyInfo> GetOldWeeklyCurrencies();
	TArray<struct FShopCurrencyInfo> GetCurrencyRewards();
	TArray<struct FTournamentResult> GetNewResults();
	TArray<struct FTournamentResult> GetOldResults();
	struct FTournamentResult GetNewTournamentResult();
	bool UpdateTournamentResults(struct FTournamentResult Result, TArray<struct FTournamentResult>& InOldWeeklyResults);
	void SetEndOfTournamentData(struct FTournamentEndData Data);
	void OnFailedToRetrieveResults(class UError* InError);
	void HandleFailedToRetrieveResults();
	void Init(class UTournamentCompletedEvent_TA* InTournamentCompletedEvent);
};

// Class TAGame.RPC_AutoTour_GetCompletedResult_TA
// 0x00C0 (0x00E8 - 0x01A8)
class URPC_AutoTour_GetCompletedResult_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 TournamentID;                                     		// 0x0130 (0x0008) [0x0000000000000000]               
	struct FTournamentEndData                          EndOfTournamentData;                              		// 0x0138 (0x0070) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_AutoTour_GetCompletedResult_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PsyNetService_AutoTourCompletedResultReceived_TA
// 0x0070 (0x0090 - 0x0100)
class UPsyNetService_AutoTourCompletedResultReceived_TA : public UPsyNetClientService_X
{
public:
	struct FTournamentEndData                          EndOfTournamentData;                              		// 0x0090 (0x0070) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_AutoTourCompletedResultReceived_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_AutoTour_TA
// 0x0090 (0x0098 - 0x0128)
class UGFxData_AutoTour_TA : public UGFxDataSingleton_X
{
public:
	class UAutoTourConfig_TA*                          Config;                                           		// 0x0098 (0x0008) [0x0000000000000000]               
	struct FString                                     ScheduleRegionLabel;                              		// 0x00A0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                NumWeeksInCycle;                                  		// 0x00B0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                CycleScore;                                       		// 0x00B4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                CurrencyID;                                       		// 0x00B8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bDisplayCompletedTourResults : 1;                 		// 0x00BC (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	TArray<class UGFxData_AutoTour_TourCard_TA*>       TourCards;                                        		// 0x00C0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UGFxData_AutoTour_Week_TA*>           Weeks;                                            		// 0x00D0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UGFxData_AutoTour_CompletedResults_TA*       EndOfTournamentResults;                           		// 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     TournamentBanMessage;                             		// 0x00E8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     PartyMembersTournamentBanned;                     		// 0x00F8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPsyNet_X*                                   PsyNet;                                           		// 0x0108 (0x0008) [0x0000000000000000]               
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0110 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAutoTourConfig_TA*                          AutoTourConfig;                                   		// 0x0118 (0x0008) [0x0000000000000000]               
	class UAutoTour_TA*                                AutoTour;                                         		// 0x0120 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_AutoTour_TA");
		}

		return uClassPointer;
	};

	void __GFxData_AutoTour_TA__HandleAutoTourNotFound_8F026CEF4CCE2A3DC37E9A98DEC5BA5F();
	void __GFxData_AutoTour_TA__HandleAutoTourNotFound_2DC045F3438FB1425A5A1D9CF454DBC5(class UGFxModal_X* Modal);
	void EndCompletedTourResultScreen();
	void HandleTournamentCompleted(class UAutoTour_TA* AutoTourGroup, class UGFxData_AutoTour_TA* GFxAutoTour, class APlayerController_Menu_TA* _, class UTournamentCompletedEvent_TA* InTourCompletedEvent);
	TArray<int> GetMaxTierScores();
	void AutoTourResultsUpdated();
	void HandleCycleUpdated();
	void HandleRegionUpdated();
	void HandleSchedulesUpdated();
	void HandleAutoTourNotFound(class UPsyNetService_AutoTourNotFound_TA* Service);
	void HandleBannedPartyMembers(class UPsyNetService_AutoTourReceiveBannedPartyMembers_TA* Service);
	void HandleReceivedBan(class UPsyNetService_AutoTourReceiveBan_TA* Service);
	void HandleConfigChanged();
	void hide();
	bool IsInformationOutOfDate();
	void Show();
	void HandleGRISpawned(class AGRI_X* GRI);
	void eventOnShellSet();
};

// Class TAGame.GFxModal_CurrencyMessage_TA
// 0x0000 (0x00C8 - 0x00C8)
class UGFxModal_CurrencyMessage_TA : public UGFxModal_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxModal_CurrencyMessage_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_AutoTour_Week_TA
// 0x001C (0x0094 - 0x00B0)
class UGFxData_AutoTour_Week_TA : public UGFxDataRow_X
{
public:
	int                                                Score;                                            		// 0x0098 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FTournamentResult>                   Results;                                          		// 0x00A0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_AutoTour_Week_TA");
		}

		return uClassPointer;
	};

	int __GFxData_AutoTour_Week_TA__Init_B5CE7DE14F03A14629248C9E2D69CFE1(int Sum, struct FTournamentResult Result);
	int __GFxData_AutoTour_Week_TA__Init_7080526B4850D961E53BFD9AA8F2C86D(struct FTournamentResult A, struct FTournamentResult B);
	TArray<struct FTournamentResult> GetResults();
	void Init(TArray<struct FTournamentResult>& InResults);
};

// Class TAGame.PsyNetService_AutoTourNotFound_TA
// 0x0000 (0x0090 - 0x0090)
class UPsyNetService_AutoTourNotFound_TA : public UPsyNetClientService_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_AutoTourNotFound_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PsyNetService_AutoTourReceiveBannedPartyMembers_TA
// 0x0010 (0x0090 - 0x00A0)
class UPsyNetService_AutoTourReceiveBannedPartyMembers_TA : public UPsyNetClientService_X
{
public:
	TArray<struct FUniqueNetId>                        BannedTeamMembers;                                		// 0x0090 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_AutoTourReceiveBannedPartyMembers_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PsyNetService_AutoTourReceiveBan_TA
// 0x0008 (0x0090 - 0x0098)
class UPsyNetService_AutoTourReceiveBan_TA : public UPsyNetClientService_X
{
public:
	int                                                AutoTournamentBanSeconds;                         		// 0x0090 (0x0004) [0x0000000000000000]               
	int                                                MatchmakingBanSeconds;                            		// 0x0094 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_AutoTourReceiveBan_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_CarColors_TA
// 0x0060 (0x0098 - 0x00F8)
class UGFxData_CarColors_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FGFxTeamColor>                       Custom;                                           		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FGFxTeamColor>                       Team0;                                            		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FGFxTeamColor>                       Team1;                                            		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FGFxTeamColor>                       Clubs;                                            		// 0x00C8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FGFxTeamColor>                       PlayerBanners;                                    		// 0x00D8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FGFxTeamColor>                       PlayerVanity;                                     		// 0x00E8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_CarColors_TA");
		}

		return uClassPointer;
	};

	void Init();
	void eventOnShellSet();
};

// Class TAGame.GFxData_ChallengeObject_TA
// 0x0004 (0x0094 - 0x0098)
class UGFxData_ChallengeObject_TA : public UGFxDataRow_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ChallengeObject_TA");
		}

		return uClassPointer;
	};

	void eventOnRemoved();
	void HandleChallengeObjectRemoved(class UListenObject_TA* Challenge);
	void SetChallengeProxy(class UListenObject_TA* Challenge);
};

// Class TAGame.GFxData_ChallengeBase_TA
// 0x0030 (0x0098 - 0x00C8)
class UGFxData_ChallengeBase_TA : public UGFxData_ChallengeObject_TA
{
public:
	class UGFxData_ChallengeReward_TA*                 GFxReward;                                        		// 0x0098 (0x0008) [0x0000000000000000]               
	TArray<class UGFxData_ChallengeCurrency_TA*>       GFxCurrency;                                      		// 0x00A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UGFxData_ChallengeRequirement_TA*>    GFxRequirement;                                   		// 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UGFxModal_X*                                 ModalProcessing;                                  		// 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ChallengeBase_TA");
		}

		return uClassPointer;
	};

	void __GFxData_ChallengeBase_TA__OnRemoved_1C735C1E4215B02D8E7B6EA5590A4A3D(class UGFxData_ChallengeRequirement_TA* R);
	void __GFxData_ChallengeBase_TA__OnRemoved_63BF22E84CBC3F886601C68F549E34EB(class UGFxData_ChallengeCurrency_TA* C);
	class UChallenge_TA* GetChallengeProxy();
	bool IsAvailable();
	void TimeElapsed();
	void HandleRewardCollected(class UChallengeManager_TA* Manager, class UChallenge_TA* Challenge, struct FOnlineReward& Reward);
	void HandleRewardsRequestComplete(class URPC_Challenge_RequestReward_TA* RPC);
	void CollectRewards();
	void ClearNewInfoIcon();
	void CloseProcessingModal();
	void eventOnRemoved();
	void SetChallengeProxy(class UListenObject_TA* Challenge);
};

// Class TAGame.GFxData_ChallengeRequirement_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_ChallengeRequirement_TA : public UGFxData_ChallengeObject_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ChallengeRequirement_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_ChallengeCurrency_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_ChallengeCurrency_TA : public UGFxData_ChallengeObject_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ChallengeCurrency_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_Challenge_RequestReward_TA
// 0x004C (0x00E8 - 0x0134)
class URPC_Challenge_RequestReward_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                Id;                                               		// 0x0130 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_Challenge_RequestReward_TA");
		}

		return uClassPointer;
	};

	class URPC_Challenge_RequestReward_TA* SetChallengeID(int ChallengeID);
	class URPC_Challenge_RequestReward_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.GFxData_ChallengeReward_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_ChallengeReward_TA : public UGFxData_ChallengeObject_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ChallengeReward_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_Challenge_TA
// 0x0000 (0x00C8 - 0x00C8)
class UGFxData_Challenge_TA : public UGFxData_ChallengeBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Challenge_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_ChallengeBucket_TA
// 0x0000 (0x00C8 - 0x00C8)
class UGFxData_ChallengeBucket_TA : public UGFxData_ChallengeBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ChallengeBucket_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_ChallengeFolder_TA
// 0x005C (0x0094 - 0x00F0)
class UGFxData_ChallengeFolder_TA : public UGFxDataRow_X
{
public:
	unsigned long                                      bSelected : 1;                                    		// 0x0098 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bNotifyNewInfo : 1;                               		// 0x0098 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bNormalRewardsAvailable : 1;                      		// 0x0098 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
	unsigned long                                      bPremiumRewardsAvailable : 1;                     		// 0x0098 (0x0004) [0x0000000040000000] [0x00000008] (CPF_EditInlineNotify)
	class UGFxData_ChallengeFolder_TA*                 GFxParentFolder;                                  		// 0x00A0 (0x0008) [0x0000000000000000]               
	TArray<class UGFxData_ChallengeFolder_TA*>         GFxSubFolders;                                    		// 0x00A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UClass*                                      SubFolderClass;                                   		// 0x00B8 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __EventSelected__Delegate;                        		// 0x00C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventRefreshed__Delegate;                       		// 0x00D8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ChallengeFolder_TA");
		}

		return uClassPointer;
	};

	void __GFxData_ChallengeFolder_TA__RemoveSubFolders_0CE8B53C462B79A780A8DE8DFE6B9097(class UGFxData_ChallengeFolder_TA* Folder);
	void __GFxData_ChallengeFolder_TA__CreateSubFolders_A1197E384E95DD5B6CF08BB4DE6F2F75(class UChallengeFolder_TA* Folder);
	bool __GFxData_ChallengeFolder_TA__RefreshNotifies_3A12838E42CC150E0588609ED1050812(class UChallenge_TA* C);
	bool __GFxData_ChallengeFolder_TA__RefreshNotifies_41668459484D8AB4BC256AB0A1515B0C(class UChallenge_TA* C);
	bool __GFxData_ChallengeFolder_TA__RefreshNotifies_47DBD7FF4CD7C933C297D395E5A4C3AF(class UChallenge_TA* C);
	class UChallengeManager_TA* GetChallengeManager();
	void RefreshNotifies(TArray<class UChallenge_TA*> Challenges);
	TArray<class UChallenge_TA*> GetSortedChallenges(class UClass* Filter);
	class UChallengeFolder_TA* GetFolderProxy();
	void CreateSubFolders();
	void RemoveSubFolders();
	class UGFxData_ChallengeFolder_TA* AddSubFolder(class UClass* FolderClass, class UChallengeFolder_TA* ChallengeFolder);
	void HandleSubFolderRefreshed(class UGFxData_ChallengeFolder_TA* GFxFolder);
	void HandleSubFolderSelected(class UGFxData_ChallengeFolder_TA* GFxFolder);
	void Unselect();
	void Select();
	void SetFolderProxy(class UChallengeFolder_TA* ChallengeFolder);
	void eventOnRemoved();
	void EventRefreshed(class UGFxData_ChallengeFolder_TA* GFxFolder);
	void EventSelected(class UGFxData_ChallengeFolder_TA* GFxFolder);
};

// Class TAGame.GFxData_ChallengeManager_TA
// 0x0040 (0x0098 - 0x00D8)
class UGFxData_ChallengeManager_TA : public UGFxDataSingleton_X
{
public:
	struct FString                                     ActiveFolderCodeName;                             		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned char                                      ActiveChallengeFilter;                            		// 0x00A8 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	class UChallengeManager_TA*                        ChallengeManager;                                 		// 0x00B0 (0x0008) [0x0000000000000000]               
	TArray<class UGFxData_ChallengePage_TA*>           GFxChallengePages;                                		// 0x00B8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UClass*>                              ChallengeFilters;                                 		// 0x00C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ChallengeManager_TA");
		}

		return uClassPointer;
	};

	bool IsRewardAvailable(int ChallengeID);
	bool TriggerCompletedChallengeNotification(int ChallengeID);
	void HandlePageSelected(class UGFxData_ChallengeFolder_TA* GFxFolder);
	void RemovePages();
	class UGFxData_ChallengePage_TA* CreatePage(class UChallengeFolder_TA* Page, class UClass* ChallengeFilter);
	void SetActiveFolder(struct FString FolderCodeName, unsigned char ChallengeFilter);
	void HandleChallengesSynced(class UChallengeDefaultManager_TA* ChallengeDefaultManager);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.GFxData_ChallengePage_TA
// 0x0008 (0x00F0 - 0x00F8)
class UGFxData_ChallengePage_TA : public UGFxData_ChallengeFolder_TA
{
public:
	class UClass*                                      ChallengeFilter;                                  		// 0x00F0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ChallengePage_TA");
		}

		return uClassPointer;
	};

	void __GFxData_ChallengePage_TA__CreateSubFolders_3F28EB344D9A5FF87374788A1E477608();
	TArray<class UChallenge_TA*> GetSortedChallenges(class UClass* Filter);
	void CreateSubFolders();
	void RemoveGFxChallengeData();
	class UGFxData_ChallengeFolder_TA* AddSubFolder(class UClass* FolderClass, class UChallengeFolder_TA* ChallengeFolder);
	void Select();
	void eventOnRemoved();
};

// Class TAGame.GFxData_ChallengeTab_TA
// 0x001C (0x00F0 - 0x010C)
class UGFxData_ChallengeTab_TA : public UGFxData_ChallengeFolder_TA
{
public:
	class UChallengeManager_TA*                        ChallengeManager;                                 		// 0x00F0 (0x0008) [0x0000000000000000]               
	int                                                TotalNormalChallenges;                            		// 0x00F8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                CompletedNormalChallenges;                        		// 0x00FC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TotalPremiumChallenges;                           		// 0x0100 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                CompletedPremiumChallenges;                       		// 0x0104 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bHasVisibleChallenges : 1;                        		// 0x0108 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ChallengeTab_TA");
		}

		return uClassPointer;
	};

	void __GFxData_ChallengeTab_TA__OnShellSet_751227464344C793EDB53F90325E726A(class UChallengeManager_TA* Manager);
	void __GFxData_ChallengeTab_TA__OnShellSet_FB68935B490C74809F17229140EB51B2(class UChallengeManager_TA* Manager, class UChallenge_TA* Challenge, struct FOnlineReward& Reward);
	void __GFxData_ChallengeTab_TA__OnShellSet_A58CE95E4E1B412E7C2901895D51CCCB(class UChallengeManager_TA* Manager, class UChallenge_TA* Challenge);
	void __GFxData_ChallengeTab_TA__OnShellSet_CF3E0C124E3D8B84345494B626CF00EC(class UChallengeManager_TA* Manager, class UChallenge_TA* Challenge);
	void __GFxData_ChallengeTab_TA__RefreshChallenges_2E65334E451D6E17132316962CBDBAD3(class UChallenge_TA* C);
	bool __GFxData_ChallengeTab_TA__RefreshNotifies_1C61F4F4414CB1E23B1E1ABB368B6667(class UChallenge_TA* C);
	bool HasBucketChallenge();
	void RefreshNotifies(TArray<class UChallenge_TA*> Challenges);
	TArray<class UChallenge_TA*> GetSortedChallenges(class UClass* Filter);
	void RemoveGFxChallengeData();
	void AddGFxChallenge(class UChallenge_TA* Challenge);
	void HandleChallengeAdded(class UChallengeManager_TA* Manager, class UChallenge_TA* Challenge);
	void RefreshChallenges();
	void Select();
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.GFxData_ChinaPaymentBrowser_TA
// 0x0010 (0x0098 - 0x00A8)
class UGFxData_ChinaPaymentBrowser_TA : public UGFxDataSingleton_X
{
public:
	class UUIConfig_TA*                                UIConfig;                                         		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UUrlConfig_X*                                UrlConfig;                                        		// 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ChinaPaymentBrowser_TA");
		}

		return uClassPointer;
	};

	void CloseHardCurrencyBrowser();
	void OpenHardCurrencyBrowser(int BrowserWidth, int BrowserHeight);
	void eventOnShellSet();
};

// Class TAGame.GFxData_ClientPerformanceStats_TA
// 0x0004 (0x0098 - 0x009C)
class UGFxData_ClientPerformanceStats_TA : public UGFxDataSingleton_X
{
public:
	unsigned long                                      bIsGameRecordingEnabled : 1;                      		// 0x0098 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ClientPerformanceStats_TA");
		}

		return uClassPointer;
	};

	void eventOnShellSet();
};

// Class TAGame.PsyNetService_ClubsInvite_TA
// 0x0000 (0x0090 - 0x0090)
class UPsyNetService_ClubsInvite_TA : public UPsyNetClientService_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_ClubsInvite_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_ClubServerBrowser_TA
// 0x001C (0x0098 - 0x00B4)
class UGFxData_ClubServerBrowser_TA : public UGFxDataSingleton_X
{
public:
	class UOnlineClubServerList_X*                     ServerList;                                       		// 0x0098 (0x0008) [0x0000000000000000]               
	TArray<struct FGFxClubServer>                      Servers;                                          		// 0x00A0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long                                      bRefreshing : 1;                                  		// 0x00B0 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ClubServerBrowser_TA");
		}

		return uClassPointer;
	};

	void JoinServer(int RowNumber);
	void OnRefreshed(struct FString Error);
	struct FGFxClubServer CreateGFxClubServer(class UClubServerResult_X* Server);
	void UpdateGFxServers(class UError* Error);
	void Refresh();
};

// Class TAGame.GFxData_ConnectionStats_TA
// 0x0008 (0x0098 - 0x00A0)
class UGFxData_ConnectionStats_TA : public UGFxDataSingleton_X
{
public:
	class UConnectionQualityConfig_TA*                 ConnectionQualityConfig;                          		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ConnectionStats_TA");
		}

		return uClassPointer;
	};

	void AcceptedHelpModal(class UGFxModal_X* Modal);
	void CheckConnectionQualityHelp();
	void HandleTrackerAttached(class APlayerController_TA* PC, class UClientConnectionTracker_TA* Tracker);
	void HandleControllerReceived(class UPlayer* InPlayer);
	void HandleGRISpawned(class AGRI_X* GRI);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.GFxData_CrumbTrails_TA
// 0x0018 (0x0098 - 0x00B0)
class UGFxData_CrumbTrails_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FCrumbTrailName>                     TrailNames;                                       		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UCrumbTrails_TA*                             CrumbsMgr;                                        		// 0x00A8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_CrumbTrails_TA");
		}

		return uClassPointer;
	};

	struct FCrumbTrailName __GFxData_CrumbTrails_TA__UpdateCrumbsNames_2ADAF6504177E121C059B7A44D7B71F6(struct FName N);
	bool CanActivateTrail(struct FName TrailId);
	void ActivateTrail(struct FName TrailId);
	void UpdateCrumbsNames();
	void HandleCrumbChange(class UCrumbTrails_TA* CrumTrails);
	void HandleSaveAdded(class UCrumbTrailSave_TA* InSave);
	void eventOnShellSet();
};

// Class TAGame.GFxData_CustomTeams_TA
// 0x0060 (0x0098 - 0x00F8)
class UGFxData_CustomTeams_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FGFxCustomTeamSettings>              Settings;                                         		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned char                                      SettingsType;                                     		// 0x00A8 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FGFxTeamColor>                       TeamColors;                                       		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FGFxTeamColor>                       CustomColors;                                     		// 0x00C0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class ULocalPlayer_TA*                             TAPlayer;                                         		// 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                PreviewTeam;                                      		// 0x00D8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UCarPreviewSet_TA*                           PreviewSet;                                       		// 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FClubColorSet                               PreviewColors[0x2] ;                              		// 0x00E8 (0x0010) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_CustomTeams_TA");
		}

		return uClassPointer;
	};

	bool InMainMenu();
	void UpdateCarColors(class ACarPreviewActor_TA* PreviewActor, unsigned long bClubColors);
	void HandleSetProfile(class ACarPreviewActor_TA* Car);
	void RestoreStadiumColors();
	void InitStadiumColors();
	void ResetPreviewColors();
	void SetCustomColorID(int Team, int ColorID);
	void PreviewCustomColorID(int Team, int ColorID);
	void SetTeamColorID(int Team, int ColorID);
	void PreviewTeamColorID(int Team, int ColorID);
	void ClearTeamName(int Team);
	void SetTeamName(int Team, struct FString TeamName);
	void SetSettingsType(unsigned char Type);
	void SaveColors(int Team);
	void InitPreviewColors();
	void InitColorTables();
	struct FGFxCustomTeamSettings CreateTeamSettings(int TeamIdx);
	void InitTeamSettings();
	void eventOnShellSet();
};

// Class TAGame.GFxData_EventsPageBrowser_TA
// 0x0018 (0x0098 - 0x00B0)
class UGFxData_EventsPageBrowser_TA : public UGFxDataSingleton_X
{
public:
	unsigned long                                      bShowButton : 1;                                  		// 0x0098 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	class UUIConfig_TA*                                UIConfig;                                         		// 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UEventsPageConfig_TA*                        EventsConfig;                                     		// 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_EventsPageBrowser_TA");
		}

		return uClassPointer;
	};

	void Close();
	void Open(int BrowserWidth, int BrowserHeight);
	void HandleEventsConfigChanged();
};

// Class TAGame.PsyNetService_FaceItReservationFound_TA
// 0x00B8 (0x0090 - 0x0148)
class UPsyNetService_FaceItReservationFound_TA : public UPsyNetClientService_X
{
public:
	struct FCheckReservationResponse                   Reservation;                                      		// 0x0090 (0x0080) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FFaceItMatchInfo                            MatchInfo;                                        		// 0x0110 (0x0038) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_FaceItReservationFound_TA");
		}

		return uClassPointer;
	};

	struct FServerReservationData GetReservation();
};

// Class TAGame.PsyNetService_FaceItSearchStarted_TA
// 0x0004 (0x0090 - 0x0094)
class UPsyNetService_FaceItSearchStarted_TA : public UPsyNetClientService_X
{
public:
	int                                                PartnerID;                                        		// 0x0090 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PsyNetService_FaceItSearchStarted_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_FreeToPlayRewards_TA
// 0x001C (0x0098 - 0x00B4)
class UGFxData_FreeToPlayRewards_TA : public UGFxDataSingleton_X
{
public:
	unsigned char                                      LegacyStatus;                                     		// 0x0098 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FCompensationItem>                   CompensationItems;                                		// 0x00A0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long                                      bIsLegacySet : 1;                                 		// 0x00B0 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_FreeToPlayRewards_TA");
		}

		return uClassPointer;
	};

	void __GFxData_FreeToPlayRewards_TA__HandleSaveDataLoaded_D9047CA14B7A164BE4B79ABD58DDB046(class UOnlineStorageSyncManager_TA* _);
	struct FCompensationItem ConvertToProductDrop(struct FOnlineProductData InProductData);
	void NotifyStatusChange();
	void HandleSyncSuccess();
	void HandleSaveDataLoaded(class USaveGameManager_TA* Manager, class USaveData_TA* MySaveData, class UError* Error);
	void eventOnShellSet();
};

// Class TAGame.GFxData_PersonaGroup_TA
// 0x001D (0x0094 - 0x00B1)
class UGFxData_PersonaGroup_TA : public UGFxDataRow_X
{
public:
	struct FString                                     GroupTitle;                                       		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                GroupId;                                          		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bPsyNetGroup : 1;                                 		// 0x00AC (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned char                                      GroupOrigin;                                      		// 0x00B0 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PersonaGroup_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_IntroCarSelect_TA
// 0x0020 (0x0098 - 0x00B8)
class UGFxData_IntroCarSelect_TA : public UGFxDataSingleton_X
{
public:
	class UGFxModal_X*                                 ModalProcessing;                                  		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     CarBodyName;                                      		// 0x00A0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UGFxData_FirstTimeExperience_TA*             FTE;                                              		// 0x00B0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_IntroCarSelect_TA");
		}

		return uClassPointer;
	};

	void CarsInPosition();
	void ToggleCarSelectMode(unsigned long bEnable);
	void SelectCar();
	void HandleFocusChanged(class UCameraState_IntroMenu_TA* CameraState);
	void ShiftFocusLeft();
	void ShiftFocusRight();
	class UCameraState_IntroMenu_TA* GetCameraState();
	void SetCameraState(struct FName StateName);
	void HandleIntroCarsInPosition(class AGameInfo_GFxMenu_TA* GameInfoMenu);
	void eventOnShellSet();
};

// Class TAGame.SeqEvent_CarSelectStart_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_CarSelectStart_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_CarSelectStart_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_KismetOverlay_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_KismetOverlay_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_KismetOverlay_TA");
		}

		return uClassPointer;
	};

	void DisableKismetOverlay(struct FString UIOverlay);
	void EnableKismetOverlay(struct FString UIOverlay);
	void ToggleOverlay(struct FString UIOverlayName, unsigned long bToggleOn);
};

// Class TAGame.GFxData_LanBrowser_TA
// 0x0010 (0x0098 - 0x00A8)
class UGFxData_LanBrowser_TA : public UGFxDataSingleton_X
{
public:
	class ULanBrowser_X*                               LanBrowser;                                       		// 0x0098 (0x0008) [0x0000000000000000]               
	class UAsyncTask*                                  GetServerListTask;                                		// 0x00A0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_LanBrowser_TA");
		}

		return uClassPointer;
	};

	void __GFxData_LanBrowser_TA__Refresh_33E9ABE2400661E04986D8BBEC6EC420(class UError* _);
	void __GFxData_LanBrowser_TA__Refresh_50376F724BFEE7C72260378C1C7D74A9(class UError* Error);
	void CreateServerGFxData(class ULanServerRecord_X* Server);
	void OnRefreshed();
	void OnRefreshError();
	void HandleServers(TArray<class ULanServerRecord_X*> Records);
	void Refresh();
};

// Class TAGame.GFxData_LanServer_TA
// 0x0084 (0x0094 - 0x0118)
class UGFxData_LanServer_TA : public UGFxDataRow_X
{
public:
	struct FString                                     SanitizedOwnerName;                               		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UTexture*                                    OwnerAvatar;                                      		// 0x00A8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     OwnerPlatform;                                    		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     LocalizedMapName;                                 		// 0x00C0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     SanitizedServerName;                              		// 0x00D0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     ServerId;                                         		// 0x00E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                ServerBuildID;                                    		// 0x00F0 (0x0004) [0x0000000000000000]               
	class UOnlineGame_X*                               OnlineGame;                                       		// 0x00F8 (0x0008) [0x0000000000000000]               
	class UOnlineSubsystem*                            OnlineSubsystem;                                  		// 0x0100 (0x0008) [0x0000000000000000]               
	class UOnlineGameWordFilter_X*                     WorldFilter;                                      		// 0x0108 (0x0008) [0x0000000000000000]               
	class ULanBrowser_X*                               LanBrowser;                                       		// 0x0110 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_LanServer_TA");
		}

		return uClassPointer;
	};

	void Connect(struct FString Password);
	struct FString GetJoinOptions(struct FString Password);
	void HandleGetAvatar(struct FUniqueNetId InPlayerId, class UTexture* InAvatar, struct FString OnlinePlayerName);
	void LoadAvatar(struct FUniqueNetId PlayerID);
	void HandleServerNameSanitized(struct FString Original, struct FString Sanitized);
	void SanitizeServerName(struct FString InServerName);
	void HandlePlayerNameSanitized(struct FString Original, struct FString Sanitized);
	void SanitizeOwnerName(struct FUniqueNetId InPlayerId, struct FString InPlayerName);
	struct FString GetLocalizedMapName(struct FName MapID);
	void SetData(class ULanServerRecord_X* Server);
};

// Class TAGame.GFxData_LanMatch_TA
// 0x0025 (0x0098 - 0x00BD)
class UGFxData_LanMatch_TA : public UGFxDataSingleton_X
{
public:
	struct FString                                     ServerName;                                       		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Password;                                         		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                SelectedMaxPlayerCount;                           		// 0x00B8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      SettingsType;                                     		// 0x00BC (0x0001) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_LanMatch_TA");
		}

		return uClassPointer;
	};

	void CreateMatch();
	void UpdateCustomMatchSettings();
	void SetPassword(struct FString InPassword);
	void SetServerName(struct FString InServerName);
	void SetSelectedMaxPlayerCount(int MaxPlayerCount);
	class UProfile_TA* GetProfile();
	void SetCustomMatchSettings(struct FCustomMatchSettings& InSettings);
	struct FCustomMatchSettings GetCustomMatchSettings();
	void eventOnShellSet();
	class UOnlineGame_TA* GetOnlineGame();
};

// Class TAGame.GFxData_LegacyStatus_TA
// 0x0002 (0x0098 - 0x009A)
class UGFxData_LegacyStatus_TA : public UGFxDataSingleton_X
{
public:
	unsigned char                                      LegacyStatus;                                     		// 0x0098 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      LegacySetState;                                   		// 0x0099 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_LegacyStatus_TA");
		}

		return uClassPointer;
	};

	void __GFxData_LegacyStatus_TA__HandleSaveDataLoaded_FCE5B54E40552A17A4A74484A0CD2374(class UOnlineStorageSyncManager_TA* _);
	bool LegacyStatusSet();
	void HandleLegacyOnlineSet();
	void OnLegacyCheckComplete(class URPC_GetLegacyStatus_TA* RPC);
	void HandlePsyNetConnection();
	void HandleEpicError(class UEpicLogin_X* EpicLogin, class UErrorType* Error);
	void HandleLoginResult(class UOnlinePlayerAuthentication_X* Auth);
	void HandleSaveDataLoaded(class USaveGameManager_TA* Manager, class USaveData_TA* MySaveData, class UError* Error);
	unsigned char GetSetState();
	bool HasAllowableAuthError(class UOnlinePlayerAuthentication_X* Auth);
	void eventOnShellSet();
};

// Class TAGame.RPC_GetLegacyStatus_TA
// 0x0019 (0x00E8 - 0x0101)
class URPC_GetLegacyStatus_TA : public URPC_X
{
public:
	int                                                LegacyStatus;                                     		// 0x00E8 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<struct FOnlineProductData>                  Products;                                         		// 0x00F0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned char                                      ProcessedLegacyStatus;                            		// 0x0100 (0x0001) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_GetLegacyStatus_TA");
		}

		return uClassPointer;
	};

	void eventOnSuccess();
};

// Class TAGame.GFxData_LoadoutSets_TA
// 0x00D0 (0x0098 - 0x0168)
class UGFxData_LoadoutSets_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FGFxLoadoutSet>                      LoadoutSets;                                      		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UProfile_TA*                                 Profile;                                          		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FLoadoutData                                RandomLoadouts[0x2] ;                             		// 0x00B0 (0x0080) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UProductLoader_TA*                           RandomLoadoutLoader;                              		// 0x0130 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UProductLoader_TA*                           PreviousLoadoutSetLoader;                         		// 0x0138 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UProductLoader_TA*                           NextLoadoutSetLoader;                             		// 0x0140 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class ULoadoutSequencer_TA*                        LoadoutSequencer;                                 		// 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UProductSlot_TA*                             SavedSlot;                                        		// 0x0150 (0x0008) [0x0000000000002000] (CPF_Transient)
	int                                                PreviousBodyProductID;                            		// 0x0158 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UProfileLoadoutSave_TA*                      LoadoutSave;                                      		// 0x0160 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_LoadoutSets_TA");
		}

		return uClassPointer;
	};

	class ACarPreviewActor_TA* GetCarPreview();
	void FinishRandomization();
	void UpdatePreviewLoadout();
	int GetPreviewTeam();
	void SetPreviewTeam(int Team);
	void SetEditingLoadoutSet(int Index);
	void RandomizeComplete();
	void HandleLoadoutSequenceComplete(class ULoadoutSequencer_TA* Sequencer);
	void RandomizePreset(int Index);
	void SetupNextRandomLoadoutSlot(int SlotIndex, struct FLoadoutData& Loadouts);
	void SetupNextRandomLoadout(struct FLoadoutData& Loadouts);
	bool HasPresetNamed(struct FString NewName);
	void RenamePreset(int Index, struct FString NewName);
	void DeletePreset(int Index);
	void CreatePreset();
	bool CanCreatePreset();
	void EquipPreset(int Index);
	void HandleEquippedLoadoutSetsChanged(class ULoadout_TA* InLoadout);
	void ClearLoaderCache(class UProductLoader_TA* Loader);
	void HandleLoadoutLoaded(class UProductLoader_TA* Loader);
	void PreloadLoadout(struct FLoadoutData Loadout, class UProductLoader_TA* Loader);
	void PreloadNextPrevLoadoutSets(int Index);
	void InitLoadoutSets();
	void OnEventProductArchived(struct FProductHashID HashID);
	void HandleArchiveSaveLoaded(class UProductsArchiveSave_TA* InArchiveSave);
	void HandleLoadoutSaveLoaded(class UProfileLoadoutSave_TA* InLoadoutSave);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.LoadoutSequencer_TA
// 0x00B8 (0x0060 - 0x0118)
class ULoadoutSequencer_TA : public UObject
{
public:
	TArray<struct FSequenceData>                       SlotSequence;                                     		// 0x0060 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long                                      bDebug : 1;                                       		// 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class ACarPreviewActor_TA*                         PreviewActor;                                     		// 0x0078 (0x0008) [0x0000000000000000]               
	struct FLoadoutData                                FinalLoadout;                                     		// 0x0080 (0x0040) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FLoadoutData                                CurrentLoadout;                                   		// 0x00C0 (0x0040) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSequenceComplete__Delegate;                		// 0x0100 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.LoadoutSequencer_TA");
		}

		return uClassPointer;
	};

	void Finish();
	class AActor* GetTimerObject();
	void QueueNextSlot(float Delay);
	void EquipNextSlot();
	void OnSequenceComplete();
	void HandleProductLoaded(struct FAssetLoadResult Result);
	void QueueSlot(class UProductSlot_TA* Slot, float AnimDelay);
	void Start(class ACarPreviewActor_TA* InPreviewActor, struct FScriptDelegate Callback, struct FLoadoutData& InLoadout);
	void SequencerLog(struct FString LogStr);
	void EventSequenceComplete(class ULoadoutSequencer_TA* Sequencer);
};

// Class TAGame.GFxData_MapPrefs_TA
// 0x0058 (0x0098 - 0x00F0)
class UGFxData_MapPrefs_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FGFxPlaylistType>                    PlaylistTypes;                                    		// 0x0098 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FGFxMapType>                         MapTypes;                                         		// 0x00A8 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FGFxMapPlaylist>                     Playlists;                                        		// 0x00B8 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FGFxMapPreference>                   Maps;                                             		// 0x00C8 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UMapPrefsConfig_X*                           MapPrefsConfig;                                   		// 0x00D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMapPrefsSave_TA*                            MapPrefsSave;                                     		// 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMapsConfig_TA*                              MapsConfig;                                       		// 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_MapPrefs_TA");
		}

		return uClassPointer;
	};

	void __GFxData_MapPrefs_TA__OnShellSet_ED0474784C5C1C25346E2EAB97DF2A74(class UMapPrefsSave_TA* Save);
	TArray<class UMapData_TA*> __GFxData_MapPrefs_TA__InitMapPrefs_5C7AA02045340E50756F62BB8FD95FF4(class UGameSettingPlaylist_X* Playlist);
	bool __GFxData_MapPrefs_TA__InitMapPrefs_A7242D9E4267C3F9B26D20BD14805BCF(class UGameSettingPlaylist_X* Playlist);
	class UProfile_TA* GetProfile();
	TArray<class UMapData_TA*> FilterAndSortMaps(TArray<class UMapData_TA*> UnsortedMaps);
	void SavePrefs(struct FPlaylistMapPrefs Prefs);
	void SetMapPreference(struct FName PlaylistId, struct FName MapID, unsigned char Preference);
	void SetPlaylistOverrideGlobal(struct FName PlaylistId, unsigned long bOverride);
	struct FName GetMapType(class UMapData_TA* Map);
	void AddPlaylistMapPrefs(struct FName PlaylistId, TArray<class UMapData_TA*> PlaylistMaps);
	void AddPlaylistData(struct FName PlaylistId, struct FName PlaylistTypeID, struct FString PlaylistLabel, TArray<class UMapData_TA*> PlaylistMaps);
	TArray<class UMapData_TA*> GetGlobalMaps();
	struct FString GetGlobalLabel();
	void InitMapPrefs();
	void HandleMapsConfigChange();
	void InitMapTypes();
	void InitPlaylistTypes();
	void eventOnShellSet();
};

// Class TAGame.GFxData_MapSelection_TA
// 0x0040 (0x0098 - 0x00D8)
class UGFxData_MapSelection_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FGFxMapSelectionData>                Selections;                                       		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FScriptDelegate                             __EventMapListChange__Delegate;                   		// 0x00A8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventSelectionChange__Delegate;                 		// 0x00C0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_MapSelection_TA");
		}

		return uClassPointer;
	};

	struct FGFxMapSelectionData __GFxData_MapSelection_TA__HandleMapListChanged_84640F74419401F135720FB9441B0782(struct FGFxMapData M);
	struct FName __GFxData_MapSelection_TA__GetDisabledMaps_B68A9E7447DECF85EB40EA87ADFE7CDB(struct FGFxMapSelectionData MapItem);
	bool __GFxData_MapSelection_TA__GetDisabledMaps_132C545D4FC042F76E4465A01651AE56(struct FGFxMapSelectionData MapItem);
	void SetSelected(int Row, unsigned long bSelected);
	void SetDisabledMaps(TArray<struct FName>& MapNames);
	TArray<struct FName> GetDisabledMaps();
	void HandleMapListChanged(class UGFxData_Map_TA* GFxMaps);
	void eventOnShellSet();
	void EventSelectionChange(class UGFxData_MapSelection_TA* GFxMapSelection, struct FName MapName, unsigned long bSelected);
	void EventMapListChange(class UGFxData_MapSelection_TA* GFxMapSelection);
};

// Class TAGame.GFxData_MatchAdmin_TA
// 0x0010 (0x0098 - 0x00A8)
class UGFxData_MatchAdmin_TA : public UGFxDataSingleton_X
{
public:
	unsigned long                                      bMatchAdmin : 1;                                  		// 0x0098 (0x0004) [0x0000000040002000] [0x00000001] (CPF_Transient | CPF_EditInlineNotify)
	class APRI_TA*                                     PlayerPRI;                                        		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_MatchAdmin_TA");
		}

		return uClassPointer;
	};

	void SetPaused(unsigned long bNewPause);
	void SetScoreAndTime(int NewScoreTeam0, int NewScoreTeam1, int SecondsRemaining, unsigned long bOverTime, unsigned long bRestartRound);
	void HandleMatchAdmin(class APRI_TA* PRI);
	void HandlePRIReceived(class APlayerController_X* PC_X);
	class APlayerController_TA* GetPlayerController();
	void eventOnRemoved();
	void OnShellSet();
};

// Class TAGame.GFxData_MicroEvent_TA
// 0x0014 (0x0098 - 0x00AC)
class UGFxData_MicroEvent_TA : public UGFxDataSingleton_X
{
public:
	class UMicroEventConfig_TA*                        MicroEventConfig;                                 		// 0x0098 (0x0008) [0x0000000000000000]               
	class UMicroEvent_TA*                              MicroEvent;                                       		// 0x00A0 (0x0008) [0x0000000000000000]               
	unsigned long                                      bIsActive : 1;                                    		// 0x00A8 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_MicroEvent_TA");
		}

		return uClassPointer;
	};

	void UpdateActiveStatus();
	void UpdateActiveEvent();
	void HandleConfigChanged();
};

// Class TAGame.RPC_MicroTransactions_GetCatalog_TA
// 0x0070 (0x00E8 - 0x0158)
class URPC_MicroTransactions_GetCatalog_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FName                                       Category;                                         		// 0x0130 (0x0008) [0x0000000000000000]               
	TArray<struct FMTCatalogInfo>                      MTXProducts;                                      		// 0x0138 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     Currency;                                         		// 0x0148 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_MicroTransactions_GetCatalog_TA");
		}

		return uClassPointer;
	};

	struct FName CategoryToName(unsigned char InCategory);
	class URPC_MicroTransactions_GetCatalog_TA* SetCategory(unsigned char InCategory);
	class URPC_MicroTransactions_GetCatalog_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_MicroTransactions_StartPurchase_TA
// 0x0068 (0x00E8 - 0x0150)
class URPC_MicroTransactions_StartPurchase_TA : public URPC_X
{
public:
	struct FString                                     Language;                                         		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FUniqueNetId                                PlayerID;                                         		// 0x00F8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FMTCartItem>                         CartItems;                                        		// 0x0140 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_MicroTransactions_StartPurchase_TA");
		}

		return uClassPointer;
	};

	class URPC_MicroTransactions_StartPurchase_TA* SetLanguage(struct FString InLanguage);
	class URPC_MicroTransactions_StartPurchase_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
	class URPC_MicroTransactions_StartPurchase_TA* SetCartItems(TArray<struct FMTCartItem> InCartItems);
};

// Class TAGame.SeqEvent_MTXGarageBlueprintPreview_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_MTXGarageBlueprintPreview_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_MTXGarageBlueprintPreview_TA");
		}

		return uClassPointer;
	};

	void SetRevealRarity(unsigned char InRarity);
};

// Class TAGame.RPC_MicroTransactions_FinalizePurchase_TA
// 0x0088 (0x00E8 - 0x0170)
class URPC_MicroTransactions_FinalizePurchase_TA : public URPC_X
{
public:
	unsigned long long                                 OrderId;                                          		// 0x00E8 (0x0008) [0x0000000000000000]               
	unsigned long                                      Authorized : 1;                                   		// 0x00F0 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FUniqueNetId                                PlayerID;                                         		// 0x00F8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FOnlineProductData>                  Products;                                         		// 0x0140 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FCurrency>                           Currencies;                                       		// 0x0150 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FCurrency>                           WalletCurrencies;                                 		// 0x0160 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_MicroTransactions_FinalizePurchase_TA");
		}

		return uClassPointer;
	};

	class URPC_MicroTransactions_FinalizePurchase_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
	class URPC_MicroTransactions_FinalizePurchase_TA* SetAuthorized(unsigned long bAuthorized);
	class URPC_MicroTransactions_FinalizePurchase_TA* SetOrderID(unsigned long long InOrderID);
};

// Class TAGame.RPC_MicroTransactions_UnlockContainer_TA
// 0x0078 (0x00E8 - 0x0160)
class URPC_MicroTransactions_UnlockContainer_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long long>                         InstanceIDs;                                      		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<unsigned long long>                         KeyInstanceIDs;                                   		// 0x0140 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FOnlineProductData>                  Drops;                                            		// 0x0150 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_MicroTransactions_UnlockContainer_TA");
		}

		return uClassPointer;
	};

	class URPC_MicroTransactions_UnlockContainer_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
	class URPC_MicroTransactions_UnlockContainer_TA* SetKeyIDs(TArray<unsigned long long>& InKeyIDs);
	class URPC_MicroTransactions_UnlockContainer_TA* SetContainerIDs(TArray<unsigned long long>& InContainerIDs);
};

// Class TAGame.GFxData_Notification_AchievementProgress_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_Notification_AchievementProgress_TA : public UGFxData_Notification_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Notification_AchievementProgress_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.Notification_AchievementProgress_TA
// 0x0018 (0x0110 - 0x0128)
class UNotification_AchievementProgress_TA : public UNotification_TA
{
public:
	int                                                Id;                                               		// 0x0110 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class UTexture*                                    Icon;                                             		// 0x0118 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	float                                              Progress;                                         		// 0x0120 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	float                                              MaxProgress;                                      		// 0x0124 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Notification_AchievementProgress_TA");
		}

		return uClassPointer;
	};

	class UNotification_TA* SetTitle(struct FString InTitle);
	class UNotification_AchievementProgress_TA* SetMaxProgress(float InMaxProgress);
	class UNotification_AchievementProgress_TA* SetProgress(float InProgress);
	class UNotification_AchievementProgress_TA* SetIcon(class UTexture* InIcon);
	class UNotification_AchievementProgress_TA* SetID(int InID);
};

// Class TAGame.GFxData_Notification_AchievementUnlocked_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_Notification_AchievementUnlocked_TA : public UGFxData_Notification_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Notification_AchievementUnlocked_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.Notification_AchievementUnlocked_TA
// 0x0010 (0x0110 - 0x0120)
class UNotification_AchievementUnlocked_TA : public UNotification_TA
{
public:
	int                                                Id;                                               		// 0x0110 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Points;                                           		// 0x0114 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class UTexture*                                    Icon;                                             		// 0x0118 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Notification_AchievementUnlocked_TA");
		}

		return uClassPointer;
	};

	class UNotification_TA* SetTitle(struct FString InTitle);
	class UNotification_AchievementUnlocked_TA* SetIcon(class UTexture* InIcon);
	class UNotification_AchievementUnlocked_TA* SetPoints(int InPoints);
	class UNotification_AchievementUnlocked_TA* SetID(int InID);
};

// Class TAGame.GFxData_PlatformAuth_TA
// 0x0020 (0x0098 - 0x00B8)
class UGFxData_PlatformAuth_TA : public UGFxDataSingleton_X
{
public:
	struct FString                                     SuccessTitle;                                     		// 0x0098 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     SuccessBody;                                      		// 0x00A8 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PlatformAuth_TA");
		}

		return uClassPointer;
	};

	void __GFxData_PlatformAuth_TA__RequestAccountAuthorization_BF83A65D419B3CD450519498CBE2903D(class UError* Error);
	void AlertSuccess();
	void HandleAuthSuccess(struct FString AuthToken);
	void RequestAccountAuthorization();
};

// Class TAGame.RPC_PlatformAuth_TA
// 0x0010 (0x00E8 - 0x00F8)
class URPC_PlatformAuth_TA : public URPC_X
{
public:
	struct FString                                     NintendoAccountID;                                		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_PlatformAuth_TA");
		}

		return uClassPointer;
	};

	class UErrorType* eventOverrideErrorType(class UErrorType* ErrorType);
	class URPC_PlatformAuth_TA* SetAuthToken(struct FString Token);
};

// Class TAGame.PlayerReportConfig_TA
// 0x0010 (0x0078 - 0x0088)
class UPlayerReportConfig_TA : public UOnlineConfig_X
{
public:
	TArray<struct FPlayerReportReason>                 Reasons;                                          		// 0x0078 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerReportConfig_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_PreMatchLobby_TA
// 0x0008 (0x0098 - 0x00A0)
class UGFxData_PreMatchLobby_TA : public UGFxDataSingleton_X
{
public:
	class UPreMatchLobby_TA*                           PreMatchLobby;                                    		// 0x0098 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PreMatchLobby_TA");
		}

		return uClassPointer;
	};

	void Highlight_Horizontal(int Direction);
	void Highlight_Vertical(int Direction);
	void ToggleFocus();
	void eventOnShellSet();
};

// Class TAGame.GFxData_ProductLevelUpgrade_TA
// 0x0028 (0x0098 - 0x00C0)
class UGFxData_ProductLevelUpgrade_TA : public UGFxDataSingleton_X
{
public:
	int                                                ProductLevel;                                     		// 0x0098 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 ProductInstanceID;                                		// 0x00A0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FProductLevelData>                   Levels;                                           		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UGFxModal_X*                                 ModalProcessing;                                  		// 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ProductLevelUpgrade_TA");
		}

		return uClassPointer;
	};

	class UProfile_TA* GetProfile();
	void OnProductUpgradeFailed();
	void OnProductUpgradeComplete();
	void HandleLevelUpgradeComplete(class URPC_ProductUpgradeLevel_TA* RPC);
	void UpgradeToLevel(int DesiredLevel);
	void InitProductData(struct FProductHashID HashID);
};

// Class TAGame.RPC_ProductUpgradeLevel_TA
// 0x0078 (0x00E8 - 0x0160)
class URPC_ProductUpgradeLevel_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 InstanceID;                                       		// 0x0130 (0x0008) [0x0000000000000000]               
	int                                                DesiredLevel;                                     		// 0x0138 (0x0004) [0x0000000000000000]               
	TArray<struct FOnlineProductData>                  ReceivedProducts;                                 		// 0x0140 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UOnlineProduct_TA*>                   Products;                                         		// 0x0150 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_ProductUpgradeLevel_TA");
		}

		return uClassPointer;
	};

	void eventOnComplete();
	class URPC_ProductUpgradeLevel_TA* SetDesiredLevel(int Level);
	class URPC_ProductUpgradeLevel_TA* SetInstanceID(unsigned long long Id);
	class URPC_ProductUpgradeLevel_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.GFxData_PsyTag_TA
// 0x0058 (0x0098 - 0x00F0)
class UGFxData_PsyTag_TA : public UGFxDataSingleton_X
{
public:
	struct FString                                     PsyTagName;                                       		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                PsyTagCode;                                       		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class URPC_SearchPsyTag_X*                         SearchRPC;                                        		// 0x00B0 (0x0008) [0x0000000000000000]               
	unsigned long                                      bSearching : 1;                                   		// 0x00B8 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bShowPsyTags : 1;                                 		// 0x00B8 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	int                                                SearchPage;                                       		// 0x00BC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     SearchName;                                       		// 0x00C0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                SearchCode;                                       		// 0x00D0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class UOnlinePlayerAuthentication_X*               PlayerAuth;                                       		// 0x00D8 (0x0008) [0x0000000000000000]               
	TArray<struct FGFxPsyTagSearchResult>              SearchResults;                                    		// 0x00E0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PsyTag_TA");
		}

		return uClassPointer;
	};

	void __GFxData_PsyTag_TA__SendSearchRPC_9EDB6CFA416BF5A02F9EDEBDCE482561(class URPC_X* _);
	struct FGFxPsyTagSearchResult __GFxData_PsyTag_TA__HandleSearchComplete_BAD399634BC2B4C61AE0FEAAB92B64A7(class UPsyTagSearchResult_X* Player);
	void OnSearchComplete(struct FString Error);
	void CreatePsyTagPersona(class UPsyTagSearchResult_X* Result);
	void HandleSearchComplete();
	void SendSearchRPC();
	void SearchNextPage();
	void Search(struct FString TagName, int TagCode);
	void OnTagClaimComplete(struct FString Error);
	void SetPsyTag(struct FPsyTag PsyTag);
	void HandlePsyTagClaimComplete(class UPsyTagCheckResult_X* CheckResult, class UError* TaskError);
	void ClaimTag(struct FString TagName);
	void HandleGameplaySettings(class UGameplaySettingsSave_TA* Save);
	void HandleLoginChanged(class UOnlinePlayerAuthentication_X* Auth);
	void eventOnShellSet();
};

// Class TAGame.GFxData_QuickChatBindings_TA
// 0x0058 (0x0098 - 0x00F0)
class UGFxData_QuickChatBindings_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FLocalizedQuickChat>                 AllQuickChats;                                    		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FLocalizedQuickChatBinding>          Bindings;                                         		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FName>                               QuickChats;                                       		// 0x00B8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FName>                               PostGameQuickChats;                               		// 0x00C8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FName>                               PreGameQuickChats;                                		// 0x00D8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UProfileQuickChatSave_TA*                    QuickChatSave;                                    		// 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_QuickChatBindings_TA");
		}

		return uClassPointer;
	};

	struct FLocalizedQuickChat __GFxData_QuickChatBindings_TA__OnShellSet_EAD06CA54EF35B44F9C246BAC2865FC7(struct FName QID);
	struct FLocalizedQuickChat __GFxData_QuickChatBindings_TA__OnShellSet_4507BCAA4E3C76852E2F919997C8BE4B(struct FName QID);
	struct FLocalizedQuickChat __GFxData_QuickChatBindings_TA__OnShellSet_B8C1F7A544F86DFCEBB0C0A1C4E93E55(struct FName QID);
	int SortQuickChat(struct FName Value1, struct FName Value2);
	void GenerateBindings();
	void OnBindingsReset();
	void ResetBindings();
	void ChangeBinding(int Index, struct FName Message);
	void HandleSaveLoaded(class UProfileQuickChatSave_TA* InSave);
	void OnShellSet();
};

// Class TAGame.GFxData_RedeemCodes_TA
// 0x0028 (0x0098 - 0x00C0)
class UGFxData_RedeemCodes_TA : public UGFxDataSingleton_X
{
public:
	class UAsyncTask*                                  RedeemTask;                                       		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     RedeemingTitleString;                             		// 0x00A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     RedeemingBodyString;                              		// 0x00B0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_RedeemCodes_TA");
		}

		return uClassPointer;
	};

	void __GFxData_RedeemCodes_TA__Redeem_0F7B90C94B8E13A96CA757A6960460F0(class UError* _);
	void __GFxData_RedeemCodes_TA__Redeem_7C6ECB514D106E8C5E67ECB7872D0AD4(class URPC_RedeemCode_TA* RPC);
	void __GFxData_RedeemCodes_TA__Redeem_47C3EA7F4C04E5ABF963F4AA743BBE08(class URPC_RedeemCode_TA* RPC);
	void Redeem(struct FString InCode);
};

// Class TAGame.RPC_RedeemCode_TA
// 0x0068 (0x00E8 - 0x0150)
class URPC_RedeemCode_TA : public URPC_X
{
public:
	struct FString                                     Code;                                             		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FUniqueNetId                                PlayerID;                                         		// 0x00F8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FOnlineProductData>                  Drops;                                            		// 0x0140 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_RedeemCode_TA");
		}

		return uClassPointer;
	};

	class UErrorType* eventOverrideErrorType(class UErrorType* ErrorType);
	class URPC_RedeemCode_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
	class URPC_RedeemCode_TA* SetCode(struct FString InCode);
};

// Class TAGame.GFxData_RewardDrop_TA
// 0x0008 (0x0098 - 0x00A0)
class UGFxData_RewardDrop_TA : public UGFxDataSingleton_X
{
public:
	class UObjectProvider*                             RewardDrops;                                      		// 0x0098 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_RewardDrop_TA");
		}

		return uClassPointer;
	};

	void __GFxData_RewardDrop_TA__OnShellSet_5F346E8E449B42FC8649BCA46F62191E(class UObject* _);
	void OnAllDropsHandled();
	void OnReceivedDrop();
	void ClearDrops();
	void GetNextDrop();
	bool HasDrops();
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.GFxData_RewardDrop_XP_TA
// 0x0004 (0x00A0 - 0x00A4)
class UGFxData_RewardDrop_XP_TA : public UGFxData_RewardDrop_TA
{
public:
	unsigned long                                      bCanDropOnlineRewards : 1;                        		// 0x00A0 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_RewardDrop_XP_TA");
		}

		return uClassPointer;
	};

	void __GFxData_RewardDrop_XP_TA__OnShellSet_B6E8438C454EBA0BFA1113927EA330EA(class AGameEvent_Soccar_TA* SoccarGame);
	void __GFxData_RewardDrop_XP_TA__OnShellSet_3B60AA7C477F5F157561ADBDCB9D24C0();
	void SetTotalGainedRTPC(float Value);
	void SetBarPercentageRTPC(float Value);
	void eventOnShellSet();
};

// Class TAGame.GFxData_RewardDrops_TA
// 0x00AC (0x0098 - 0x0144)
class UGFxData_RewardDrops_TA : public UGFxDataSingleton_X
{
public:
	struct FName                                       RewardName;                                       		// 0x0098 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Total;                                            		// 0x00A0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Base;                                             		// 0x00A4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                BaseLevel;                                        		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                Level;                                            		// 0x00AC (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	TArray<struct FGFxLevelThreshold>                  LevelThresholds;                                  		// 0x00B0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FOnlineXPModifier>                   Modifiers;                                        		// 0x00C0 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UObjectProvider*                             RewardDrops;                                      		// 0x00D0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	TArray<struct FName>                               PremiumModifierNames;                             		// 0x00D8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FName>                               PenaltyModifierNames;                             		// 0x00E8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<struct FName>                               PromoModifierNames;                               		// 0x00F8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FName                                       WeeklyCapReached;                                 		// 0x0108 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FString                                     RewardModifiers_SectionName;                      		// 0x0110 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FString                                     RewardModifiers_PackageName;                      		// 0x0120 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FName                                       WeeklyCap;                                        		// 0x0130 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       RestXP;                                           		// 0x0138 (0x0008) [0x0000000000000002] (CPF_Const)   
	unsigned long                                      bCanDropOnlineRewards : 1;                        		// 0x0140 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_RewardDrops_TA");
		}

		return uClassPointer;
	};

	void __GFxData_RewardDrops_TA__OnShellSet_35C091A54F709D87600F36B5A9287A0F(class AGameEvent_Soccar_TA* SoccarGame);
	void __GFxData_RewardDrops_TA__OnShellSet_D9503BA445A21514FD6728A456C9DC3A();
	void __GFxData_RewardDrops_TA__OnShellSet_F0BC499E42AD09673F8EA7BEDDC2217B(class UObject* _);
	bool ShouldShowRewards();
	void SetBarPercentageRTPC(float Value);
	void SetTotalGainedRTPC(float Value);
	void OnAllRewardsHandled();
	void SetAllRewardsHandled();
	void GetNextReward();
	void OnReceivedReward();
	bool HasRewards();
	struct FString LocalizeModifier(struct FOnlineXPModifier Modifier);
	void UpdateXPReward(class URewardDrop_XP_TA* XP);
	void UpdateRewardData();
	void OnRewardAddedToQueue();
	void eventOnShellSet();
};

// Class TAGame.GFxData_RocketPass_TA
// 0x00A8 (0x0098 - 0x0140)
class UGFxData_RocketPass_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FRocketPassProduct>                  FreeRewards;                                      		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FRocketPassProduct>                  PremiumRewards;                                   		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FRocketPassProduct>                  PrestigeRewards;                                  		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FRocketPassXPReward>                 PremiumXPRewards;                                 		// 0x00C8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FRocketPassCurrencyReward>           PremiumCurrencyRewards;                           		// 0x00D8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long long                                 StartTime;                                        		// 0x00E8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long long                                 EndTime;                                          		// 0x00F0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	class UOnlineProductStoreSet_TA*                   RocketPassSet;                                    		// 0x00F8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UAsyncTask*                                  PendingMasterTask;                                		// 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     RegionRestrictedPurchaseTiers;                    		// 0x0108 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FName                                       MainMenuName;                                     		// 0x0118 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       RocketPassMenuName;                               		// 0x0120 (0x0008) [0x0000000000000002] (CPF_Const)   
	unsigned long                                      bHideMainMenuButton : 1;                          		// 0x0128 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	class URocketPass_TA*                              RocketPass;                                       		// 0x0130 (0x0008) [0x0000000000002001] (CPF_Edit | CPF_Transient)
	class URocketPassConfig_TA*                        RocketPassConfig;                                 		// 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_RocketPass_TA");
		}

		return uClassPointer;
	};

	void __GFxData_RocketPass_TA__HandleRocketPassChange_CB2DAE314A9D96E64EF02281B11B27CA();
	void __GFxData_RocketPass_TA__HandleRocketPassChange_DABA40954ADE923930C5F1A0882B8522();
	void __GFxData_RocketPass_TA__HandleRocketPassChange_1307F18040342AE42D2E4A8B1F2AC37D();
	void __GFxData_RocketPass_TA__GetRocketPassData_2F2CADBE48AED46E77C11B9D740373B5();
	void HandleError(class UError* InError);
	void OnCanOpenMenu();
	void GetRocketPassData();
	void HandlePrivilegeCheck(class UPrivilegeCheck_X* PrivilegeCheck);
	void OpenMenu();
	void RequestPrestigeRewards();
	void UpdateRewards(TArray<struct FRocketPassRewardData>& RewardData, TArray<struct FRocketPassProduct>& OutProducts, TArray<struct FRocketPassXPReward>& OutXPRewards, TArray<struct FRocketPassCurrencyReward>& OutCurrencyRewards);
	void PurchaseTiers(TArray<unsigned long long> KeyInstanceIDs, int PurchasableID);
	void PurchasePremium(TArray<unsigned long long> KeyInstanceIDs, int PurchasableID);
	void HandleRocketPassConfigChange();
	void HandleRocketPassInfoChanged(class URocketPass_TA* InRocketPass);
	void HandleTopMenuChanged(struct FName PrevMenu, struct FName NewMenu);
	void HandleRocketPassChange(class URocketPass_TA* InRocketPass);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.GFxData_SchematicTradeIn_TA
// 0x0030 (0x0098 - 0x00C8)
class UGFxData_SchematicTradeIn_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FSchematicResourceData>              Schematics;                                       		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UGFxModal_X*                                 ModalProcessing;                                  		// 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     InvalidProductString;                             		// 0x00B0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	int                                                MinResources;                                     		// 0x00C0 (0x0004) [0x0000000000000000]               
	int                                                MaxResources;                                     		// 0x00C4 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_SchematicTradeIn_TA");
		}

		return uClassPointer;
	};

	class UProfile_TA* GetProfile();
	int GetRemainingResources();
	bool IsProcessingTrade();
	void OnSchematicTradeInFailed();
	void OnSchematicTradeInComplete();
	void HandleTradeInComplete(class URPC_SchematicsTradeIn_TA* RPC);
	void SetSchematicResource(unsigned long long ProductInstance, int Amount);
	void IncrementSchematicResource(unsigned long long ProductInstance, int Amount);
	void RemoveSchematic(unsigned long long ProductInstance);
	bool AddSchematic(unsigned long long ProductInstance);
	void TradeIn(unsigned long long InContainerInstanceID);
};

// Class TAGame.RPC_SchematicsTradeIn_TA
// 0x00A0 (0x00E8 - 0x0188)
class URPC_SchematicsTradeIn_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 CrateID;                                          		// 0x0130 (0x0008) [0x0000000000000000]               
	TArray<struct FSchematicResourceData>              Schematics;                                       		// 0x0138 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FOnlineProductData>                  Drops;                                            		// 0x0148 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FOnlineProductData>                  CrateDrops;                                       		// 0x0158 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<unsigned long long>                         ConsumedInstanceIDs;                              		// 0x0168 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UOnlineProduct_TA*>                   Products;                                         		// 0x0178 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_SchematicsTradeIn_TA");
		}

		return uClassPointer;
	};

	void eventOnComplete();
	class URPC_SchematicsTradeIn_TA* SetSchematics(TArray<struct FSchematicResourceData>& InSchematics);
	class URPC_SchematicsTradeIn_TA* SetCrateID(unsigned long long InCrateID);
	class URPC_SchematicsTradeIn_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.GFxData_ShopAds_TA
// 0x0008 (0x0098 - 0x00A0)
class UGFxData_ShopAds_TA : public UGFxDataSingleton_X
{
public:
	class UShopAdsConfig_TA*                           Config;                                           		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ShopAds_TA");
		}

		return uClassPointer;
	};

	void HandleConfigChanged();
};

// Class TAGame.ShopItemExpirationHelper_TA
// 0x0028 (0x0060 - 0x0088)
class UShopItemExpirationHelper_TA : public UObject
{
public:
	TArray<unsigned long long>                         ShopItemExpirations;                              		// 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventShopItemExpired__Delegate;                 		// 0x0070 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ShopItemExpirationHelper_TA");
		}

		return uClassPointer;
	};

	unsigned long long __ShopItemExpirationHelper_TA__UpdateExpirations_9F1407F84042ADED97ABBFBD6B7DA806(struct FShopItem Item);
	bool __ShopItemExpirationHelper_TA__UpdateExpirations_0E54141F4AE431D236FF269901AD0D5B(struct FShopItem Item);
	void HandleItemExpired();
	void UpdateExpirationTimer();
	void UpdateExpirations(TArray<struct FShopItem>& ShopItems);
	void ClearShopItems();
	void SetShopItems(TArray<struct FShopItem> ShopItems);
	void EventShopItemExpired(class UShopItemExpirationHelper_TA* ShopExpirationHelper);
};

// Class TAGame.ShopsConfig_TA
// 0x0018 (0x0078 - 0x0090)
class UShopsConfig_TA : public UOnlineConfig_X
{
public:
	int                                                DebugShopID;                                      		// 0x0078 (0x0004) [0x0000000000000000]               
	unsigned long                                      bEnableShopMetrics : 1;                           		// 0x007C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bHideMainMenuButton : 1;                          		// 0x007C (0x0004) [0x0000000000000000] [0x00000002] 
	TArray<struct FString>                             ShopTypesForOwnedTracking;                        		// 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ShopsConfig_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ShopAutoLoadHelper_TA
// 0x0048 (0x0060 - 0x00A8)
class UShopAutoLoadHelper_TA : public UObject
{
public:
	int                                                SyncRequestRange;                                 		// 0x0060 (0x0004) [0x0000000000004000] (CPF_Config)  
	class URetryDelayer_X*                             AutoLoadDelayer;                                  		// 0x0068 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UAsyncTask*                                  AutoLoadAsyncTask;                                		// 0x0070 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<struct FShopItem>                           AutoLoadedItems;                                  		// 0x0078 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UShopItemExpirationHelper_TA*                AutoLoadExpirationHelper;                         		// 0x0088 (0x0008) [0x0000000000000000]               
	unsigned long long                                 MinEndDateOffset;                                 		// 0x0090 (0x0008) [0x0000000000000000]               
	unsigned long long                                 MaxEndDateOffset;                                 		// 0x0098 (0x0008) [0x0000000000000000]               
	unsigned long long                                 RandomEndDateOffset;                              		// 0x00A0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ShopAutoLoadHelper_TA");
		}

		return uClassPointer;
	};

	void __ShopAutoLoadHelper_TA__Construct_3908CC44442F519B63234F910C18E699(class UShopItemExpirationHelper_TA* _);
	void __ShopAutoLoadHelper_TA__Construct_E0D7949646FA734DBCDCC7A32FBD65C5(class UShopItemExpirationHelper_TA* _);
	void __ShopAutoLoadHelper_TA__CheckAutoLoadSucceeded_7C1C727C440721857BDB4E91EF96C0D6(class UError* _);
	bool __ShopAutoLoadHelper_TA__HasExpiredItems_4F0B3E0B4F42AC200F6726AC58CE24D9(struct FShopItem Item);
	bool __ShopAutoLoadHelper_TA__HasExpiredItems_6734C4164E62EAD43939A1A4DAE680CE(struct FShopItem Item);
	void OnLoadedChanged();
	void OnAutoReloadChanged();
	void RefreshAutoLoadedItems();
	bool LoadInProgress();
	bool HasExpiredItems(TArray<struct FShopItem>& InItems);
	TArray<struct FShopItem> ApplyEndDateOffset(unsigned long long Offset, TArray<struct FShopItem>& InItems);
	void HandleShopItemExpired();
	void HandleAutoLoadAbandoned();
	void HandleAutoLoadFailed(class UError* Error);
	void CheckAutoLoadSucceeded(TArray<struct FShopItem> InAutoLoadedItems);
	void AutoLoadCatalogue();
	TArray<struct FShopItem> GetShopItems();
	void eventConstruct();
};

// Class TAGame.ShopMetrics_TA
// 0x0014 (0x0080 - 0x0094)
class UShopMetrics_TA : public UMetricsGroup_X
{
public:
	TArray<struct FShopTabData>                        CurrentShopTabMetrics;                            		// 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                CurrentBrowseSourceID;                            		// 0x0090 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ShopMetrics_TA");
		}

		return uClassPointer;
	};

	void ShopSessionEnded(int BrowseSourceID, TArray<struct FShopTabData> ShopTabMetrics);
	void PreviewedShopItem(int ShopItemID);
	void ShopIDChanged(int FromShopID, int NewShopID);
};

// Class TAGame.RPC_GetSpecialEventCurrencyRewards_TA
// 0x0068 (0x00E8 - 0x0150)
class URPC_GetSpecialEventCurrencyRewards_TA : public URPC_SpecialEventBase_TA
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<int>                                        EventIDs;                                         		// 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FSpecialEventStore>                  EventStores;                                      		// 0x0140 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_GetSpecialEventCurrencyRewards_TA");
		}

		return uClassPointer;
	};

	class URPC_GetSpecialEventCurrencyRewards_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
	class URPC_GetSpecialEventCurrencyRewards_TA* SetEventIDs(TArray<int> InEventIDs);
};

// Class TAGame.GFxData_SupportACreator_TA
// 0x0038 (0x0098 - 0x00D0)
class UGFxData_SupportACreator_TA : public UGFxDataSingleton_X
{
public:
	struct FString                                     CreatorCode;                                      		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long long                                 ExpirationDate;                                   		// 0x00A8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned char                                      SupportType;                                      		// 0x00B0 (0x0001) [0x0000000040000000] (CPF_EditInlineNotify)
	class UGFxModal_X*                                 ProcessingModal;                                  		// 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	TArray<struct FString>                             CreatorIcons;                                     		// 0x00C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_SupportACreator_TA");
		}

		return uClassPointer;
	};

	void __GFxData_SupportACreator_TA__GetSupportedCreator_C6A4A8444BC166C9C9B31EBC017DE0F2(class URPC_SupportACreator_Get_TA* RPC);
	void __GFxData_SupportACreator_TA__OnClearSupportACreator_0A29E7CB4F0F646C4E00C687C0BF67F4(class URPC_X* RPC);
	void __GFxData_SupportACreator_TA__OnClearSupportACreator_EE7CCFAE40EBD230E622119B7FC7279D(class URPC_SupportACreator_Clear_TA* RPC);
	void __GFxData_SupportACreator_TA__OnSetSupportACreator_13B7F1DB4F913EAB6D374AAE095461B6(class URPC_X* RPC);
	void __GFxData_SupportACreator_TA__OnSetSupportACreator_F612C7A845FA5894861C46BE979CE81F(class URPC_SupportACreator_Set_TA* RPC);
	void OnClearSupportACreatorFail();
	void HandleClearSupportACreatorFail(class UError* Error);
	void OnSetSupportACreatorFail();
	void HandleSetSupportACreatorFail(class UError* Error);
	void OnClearSupportACreatorSuccess();
	void HandleClearSupportACreatorSuccess();
	void OnSetSupportACreatorSuccess();
	struct FString GetIconName(unsigned char InSupportType);
	void HandleSetSupportACreatorSuccess(class URPC_SupportACreator_Set_TA* RPC);
	void OnSetSupportACreator(struct FString InCreatorCode);
	void OnClearSupportACreator();
	void SetSupportACreator(struct FString InCreatorCode, unsigned long bCanceled);
	void OpenSupportACreator();
	void GetSupportedCreator();
	void ClearModal(class UGFxModal_X* Modal);
	void HandlePsyNetLogin();
	void eventOnShellSet();
};

// Class TAGame.RPC_SupportACreator_Get_TA
// 0x0028 (0x00E8 - 0x0110)
class URPC_SupportACreator_Get_TA : public URPC_X
{
public:
	struct FString                                     CreatorCode;                                      		// 0x00E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long long                                 ExpirationTime;                                   		// 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     SupportType;                                      		// 0x0100 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_SupportACreator_Get_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_SupportACreator_Clear_TA
// 0x0000 (0x00E8 - 0x00E8)
class URPC_SupportACreator_Clear_TA : public URPC_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_SupportACreator_Clear_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_SupportACreator_Set_TA
// 0x0030 (0x00E8 - 0x0118)
class URPC_SupportACreator_Set_TA : public URPC_X
{
public:
	struct FString                                     CreatorCode;                                      		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long                                      Success : 1;                                      		// 0x00F8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long long                                 ExpirationTime;                                   		// 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     SupportType;                                      		// 0x0108 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_SupportACreator_Set_TA");
		}

		return uClassPointer;
	};

	class URPC_SupportACreator_Set_TA* SetCreatorCode(struct FString InCreatorCode);
};

// Class TAGame.SupportACreatorErrors_TA
// 0x0008 (0x0080 - 0x0088)
class USupportACreatorErrors_TA : public UErrorList
{
public:
	class UErrorType*                                  InvalidSupportACreatorCode;                       		// 0x0080 (0x0008) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SupportACreatorErrors_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.TourBracketSync_TA
// 0x0068 (0x0060 - 0x00C8)
class UTourBracketSync_TA : public UObject
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              PollIntervalSeconds;                              		// 0x0068 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FUniqueNetId                                PlayerID;                                         		// 0x0070 (0x0048) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UTourSettings_TA*                            Settings;                                         		// 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UAsyncTask*                                  GetBracketTask;                                   		// 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourBracketSync_TA");
		}

		return uClassPointer;
	};

	void __TourBracketSync_TA__SendRequest_A9322BD04C4EB908B9CBC296457A0400(class UError* _);
	void SendRequest();
	void Deactivate();
	void Start(struct FUniqueNetId InPlayerId, class UTourSettings_TA* InSettings);
};

// Class TAGame.GFxData_TourBracketLeaderboard_TA
// 0x0040 (0x0098 - 0x00D8)
class UGFxData_TourBracketLeaderboard_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FTourPlacementInfo>                  TeamGoals;                                        		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FTourPlacementInfo>                  PlayerGoals;                                      		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FTourPlacementInfo>                  PlayerAssists;                                    		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FTourPlacementInfo>                  PlayerSaves;                                      		// 0x00C8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourBracketLeaderboard_TA");
		}

		return uClassPointer;
	};

	void Update(struct FTourLeaderboard& Leaderboard);
};

// Class TAGame.GFxData_TourBracketGame_TA
// 0x0024 (0x0094 - 0x00B8)
class UGFxData_TourBracketGame_TA : public UGFxDataRow_X
{
public:
	int                                                MatchID;                                          		// 0x0098 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                GameNum;                                          		// 0x009C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TeamScore0;                                       		// 0x00A0 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                TeamScore1;                                       		// 0x00A4 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	int                                                GameTimeSeconds;                                  		// 0x00A8 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bOverTime : 1;                                    		// 0x00AC (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long long                                 WinnerTeam;                                       		// 0x00B0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourBracketGame_TA");
		}

		return uClassPointer;
	};

	void SetGame(int InMatchID, int InGameNum, struct FTourMatchGame& MatchGame);
};

// Class TAGame.GFxData_TourCheckInError_TA
// 0x0008 (0x0098 - 0x00A0)
class UGFxData_TourCheckInError_TA : public UGFxDataSingleton_X
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourCheckInError_TA");
		}

		return uClassPointer;
	};

	void EndUpdate();
	void BeginUpdate(unsigned long long TournamentID);
};

// Class TAGame.GFxData_TourConfig_TA
// 0x0008 (0x0098 - 0x00A0)
class UGFxData_TourConfig_TA : public UGFxDataSingleton_X
{
public:
	class UTourConfig_TA*                              Config;                                           		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourConfig_TA");
		}

		return uClassPointer;
	};

	void HandleConfigChange();
};

// Class TAGame.GFxData_TourDependentGame_TA
// 0x0000 (0x00B8 - 0x00B8)
class UGFxData_TourDependentGame_TA : public UGFxData_TourBracketGame_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourDependentGame_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_TourDependentTeam_TA
// 0x0000 (0x00B8 - 0x00B8)
class UGFxData_TourDependentTeam_TA : public UGFxData_TourBracketTeam_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourDependentTeam_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_TourDetails_TA
// 0x0054 (0x0098 - 0x00EC)
class UGFxData_TourDetails_TA : public UGFxDataSingleton_X
{
public:
	class UTourSettings_TA*                            Settings;                                         		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineProductStoreSet_TA*                   OnlineProductSet;                                 		// 0x00A0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UTourDetailsSync_TA*                         DetailsSync;                                      		// 0x00A8 (0x0008) [0x0000000000000000]               
	class UTourSettings_TA*                            TourSettings;                                     		// 0x00B0 (0x0008) [0x0000000000000000]               
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x00B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	TArray<struct FGFxTournamentReward>                Rewards;                                          		// 0x00C0 (0x0010) [0x0000000040400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UTexture*                                    CreatorAvatar;                                    		// 0x00D0 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
	struct FString                                     CreatorPlatform;                                  		// 0x00D8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long                                      bRegistered : 1;                                  		// 0x00E8 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bAdmin : 1;                                       		// 0x00E8 (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
	unsigned long                                      bCanCheckIn : 1;                                  		// 0x00E8 (0x0004) [0x0000000040000000] [0x00000004] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourDetails_TA");
		}

		return uClassPointer;
	};

	unsigned long long __GFxData_TourDetails_TA__LogTournamentNotFound_3A1B10BC49740EB39FDB15ADF7A21DEA(class UTourSettings_TA* T);
	void __GFxData_TourDetails_TA__Update_8EE0D9204DA904F5177453911E5398C8(struct FUniqueNetId InPlayerId, class UTexture* InAvatar, struct FString OnlinePlayerName);
	TArray<int> GetSeriesRoundLengths();
	void HandleSubscriptionChanged(class UTourSubscriptions_TA* Subscriptions, unsigned long long TournamentID);
	void UpdateCheckInWindow();
	void HandleTourAdded(class UTourSettings_TA* NewSettings);
	void HandleCheckInWindowChange(class UTourCheckInWindowWatcher_TA* Watcher, class UTourSettings_TA* InSettings);
	void HandleRewardsComplete(unsigned long long TournamentID, TArray<struct FTourReward> InRewards);
	void HandleError(class UError* Error);
	void MenuClosed();
	bool Update(unsigned long long TournamentID);
	void LogTournamentNotFound(unsigned long long TournamentID);
	void SetProxy(class UObject* InProxyObject);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.TourDetailsSync_TA
// 0x0068 (0x0060 - 0x00C8)
class UTourDetailsSync_TA : public UObject
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              PollIntervalSeconds;                              		// 0x0068 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FUniqueNetId                                PlayerID;                                         		// 0x0070 (0x0048) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UTourSettings_TA*                            Settings;                                         		// 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UAsyncTask*                                  GetBracketTask;                                   		// 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourDetailsSync_TA");
		}

		return uClassPointer;
	};

	void __TourDetailsSync_TA__SendRequest_3BD435914D91C98778A54791BF49CD84(class UError* _);
	bool __TourDetailsSync_TA__UpdateTeamsRegistered_071338644F47052B13E952BE2AF05C51(struct FTourTeam T);
	void UpdateTeamsRegistered(struct FTourBracket& Bracket);
	void HandleGetBracket(struct FTourBracket& Bracket);
	void SendRequest();
	void Deactivate();
	void Start(struct FUniqueNetId InPlayerId, class UTourSettings_TA* InSettings);
};

// Class TAGame.RPC_TourGetPublic_TA
// 0x00C8 (0x00E8 - 0x01B0)
class URPC_TourGetPublic_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FTourSearchSettings                         Search;                                           		// 0x0130 (0x0060) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FUniqueNetId>                        TeamMembers;                                      		// 0x0190 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<class UTourSettings_TA*>                    Tournaments;                                      		// 0x01A0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourGetPublic_TA");
		}

		return uClassPointer;
	};

	class URPC_TourGetPublic_TA* SetTeamMembers(TArray<struct FUniqueNetId> InTeamMembers);
	class URPC_TourGetPublic_TA* SetSettings(struct FTourSearchSettings& InSettings);
	class URPC_TourGetPublic_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.GFxData_TourSearchResult_TA
// 0x0000 (0x00B0 - 0x00B0)
class UGFxData_TourSearchResult_TA : public UGFxData_TourSubscription_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourSearchResult_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_TourSpectate_TA
// 0x0048 (0x0098 - 0x00E0)
class UGFxData_TourSpectate_TA : public UGFxDataSingleton_X
{
public:
	class UOnlineGameTournaments_TA*                   Tournaments;                                      		// 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FString                                     MatchNotAvailable;                                		// 0x00A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     SearchingTitle;                                   		// 0x00B0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     SearchingBody;                                    		// 0x00C0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UAsyncTask*                                  ActiveTask;                                       		// 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long long                                 PendingTourID;                                    		// 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourSpectate_TA");
		}

		return uClassPointer;
	};

	void HandleJoinGameComplete(unsigned long bSuccess, struct FString FailReason);
	void __GFxData_TourSpectate_TA__StartJoin_22D2BD8847335A7B222F54AFB505D1FC();
	void __GFxData_TourSpectate_TA__HandleGetMatchServer_33A2E26B41C4E772FBAA5E92903F4E46();
	class UOnlineGameJoinGame_X* GetJoinGame();
	void HandleSearchError(struct FString msg);
	void HandleGetMatchServer(struct FServerReservationData Reservation);
	void HandleError(class UError* Error);
	void StartJoin(unsigned long long TournamentID, int MatchID);
};

// Class TAGame.GFxData_TourStatus_TA
// 0x0008 (0x0098 - 0x00A0)
class UGFxData_TourStatus_TA : public UGFxDataSingleton_X
{
public:
	class UTourStatus_TA*                              Status;                                           		// 0x0098 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TourStatus_TA");
		}

		return uClassPointer;
	};

	void eventOnShellSet();
};

// Class TAGame.GFxData_TrainingMode_TA
// 0x017C (0x0094 - 0x0210)
class UGFxData_TrainingMode_TA : public UGFxDataRow_X
{
public:
	unsigned char                                      Status;                                           		// 0x0098 (0x0001) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	struct FString                                     SanitizedTrainingModeName;                        		// 0x00A0 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     SanitizedCreatorName;                             		// 0x00B0 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     Tags;                                             		// 0x00C0 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned long                                      bOwned : 1;                                       		// 0x00D0 (0x0004) [0x0000000040002000] [0x00000001] (CPF_Transient | CPF_EditInlineNotify)
	unsigned long                                      bFavorited : 1;                                   		// 0x00D0 (0x0004) [0x0000000040002000] [0x00000002] (CPF_Transient | CPF_EditInlineNotify)
	unsigned long                                      bOutOfDate : 1;                                   		// 0x00D0 (0x0004) [0x0000000040002000] [0x00000004] (CPF_Transient | CPF_EditInlineNotify)
	unsigned long                                      bPerfectCompleted : 1;                            		// 0x00D0 (0x0004) [0x0000000040002000] [0x00000008] (CPF_Transient | CPF_EditInlineNotify)
	struct FString                                     PublishedTime;                                    		// 0x00D8 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FString                                     UpdatedAtTime;                                    		// 0x00E8 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                ShotsCompleted;                                   		// 0x00F8 (0x0004) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	struct FString                                     CreatorPlatform;                                  		// 0x0100 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	class UTexture*                                    CreatorAvatar;                                    		// 0x0110 (0x0008) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	struct FString                                     SaveDataFilename;                                 		// 0x0118 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     SavingFilename;                                   		// 0x0128 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     AutoplayName;                                     		// 0x0138 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class USaveData_GameEditor_Training_TA*            SaveData;                                         		// 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     OpenTrainingMapBaseCmd;                           		// 0x0150 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FString                                     OutOfDateMessage;                                 		// 0x0160 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     DownloadingTrainingModeTitleMessage;              		// 0x0170 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FString                                     DownloadingTrainingModeBodyMessage;               		// 0x0180 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UGFxModal_X*                                 ModalProcessing;                                  		// 0x0190 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventTrainingModeDownloadPlay__Delegate;        		// 0x0198 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTrainingModeFavorited__Delegate;           		// 0x01B0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTrainingModeLoaded__Delegate;              		// 0x01C8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTrainingModeSaved__Delegate;               		// 0x01E0 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventTrainingModeWordFilterError__Delegate;     		// 0x01F8 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TrainingMode_TA");
		}

		return uClassPointer;
	};

	void __GFxData_TrainingMode_TA__HandleSaveError_E0F21B1A47352B47AF68E29590C5FF40(class UGFxModal_X* _);
	void UpdateOutOfDate(unsigned long long OnlineUpdatedAt);
	void HandleUnpublish(class URPC_TrainingEditor_DeleteTrainingData_TA* RPC);
	void OnDelete(unsigned char CurrentTab);
	void ForceDelete(struct FString FilePath);
	void HandleDispose();
	void AddToFavorites();
	void LoadFile(struct FString Filename, struct FName inMapName, unsigned long bInPlaytest);
	void Play(struct FName inMapName, unsigned long bInPlaytest);
	void HandleDownloadAndPlayResults(class URPC_TrainingEditor_GetTrainingData_TA* RPC);
	void HandleDownload(class URPC_TrainingEditor_GetTrainingData_TA* RPC);
	void HandleUpdateTrainingData(class URPC_TrainingEditor_UpdateTrainingData_TA* RPC);
	void HandleAddTrainingData(class URPC_TrainingEditor_AddTrainingData_TA* RPC);
	void HandleSubmit(class UPrivilegeCheck_X* PrivilegeCheck);
	void Submit();
	void HandleCreatorNameSanitized(struct FString DesiredName, struct FString SanitizedName);
	void HandleTrainingModeNameSanitized(struct FString DesiredName, struct FString SanitizedName);
	void RefreshFromSaveData();
	void OnDataLoaded(struct FLoadObjectResult Result);
	void HandleSanitizeError(struct FString OriginalPhrase, class UError* Error);
	void SetTrainingModeFromSave(struct FString Filename);
	void HandleGetAvatar(struct FUniqueNetId InPlayerId, class UTexture* InAvatar, struct FString OnlinePlayerName);
	void SetTrainingMode(class UTrainingEditorData_TA* InTrainingData);
	void UpdateUITimes();
	void SetTrainingModeFromRPC(class UTrainingEditorData_TA* ResultData);
	void HandleAutoplay(struct FSaveObjectResult Result);
	void HandleSaveResult(struct FSaveObjectResult Result);
	void OnRetrySaveSaveData(class UGFxModal_X* Modal);
	void HandleSaveError(struct FSaveObjectResult Result);
	void SaveTrainingMode(struct FString Filename, class UTrainingEditorData_TA* NewTrainingData, unsigned long bInOwned, unsigned long bAutoPlay);
	void DisplayError(class UError* Error);
	class UTrainingEditorMetrics_TA* GetTrainingMetrics();
	void eventOnShellSet();
	void EventTrainingModeWordFilterError(class UGFxData_TrainingMode_TA* OutTrainingMode, class UError* Error);
	void EventTrainingModeSaved(class UGFxData_TrainingMode_TA* OutTrainingMode, unsigned long bSuccess);
	void EventTrainingModeLoaded(class UGFxData_TrainingMode_TA* OutTrainingMode, unsigned long bSuccess);
	void EventTrainingModeFavorited(class UGFxData_TrainingMode_TA* OutTrainingMode, unsigned long bAdded);
	void EventTrainingModeDownloadPlay(class UGFxData_TrainingMode_TA* OutTrainingMode, struct FString Code, struct FString Filename);
};

// Class TAGame.RPC_TrainingEditor_DeleteTrainingData_TA
// 0x0010 (0x00E8 - 0x00F8)
class URPC_TrainingEditor_DeleteTrainingData_TA : public URPC_X
{
public:
	struct FString                                     Code;                                             		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TrainingEditor_DeleteTrainingData_TA");
		}

		return uClassPointer;
	};

	class URPC_TrainingEditor_DeleteTrainingData_TA* SetTrainingModeCode(struct FString InCode);
};

// Class TAGame.RPC_TrainingEditor_GetTrainingData_TA
// 0x0018 (0x00E8 - 0x0100)
class URPC_TrainingEditor_GetTrainingData_TA : public URPC_X
{
public:
	struct FString                                     Code;                                             		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UTrainingEditorData_TA*                      TrainingData;                                     		// 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TrainingEditor_GetTrainingData_TA");
		}

		return uClassPointer;
	};

	class URPC_TrainingEditor_GetTrainingData_TA* SetTrainingModeID(struct FString InTrainingModeCode);
};

// Class TAGame.GFxData_TrainingModeConstants_TA
// 0x0038 (0x0098 - 0x00D0)
class UGFxData_TrainingModeConstants_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FTrainingModeDifficulty>             Difficulties;                                     		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FTrainingModeType>                   Types;                                            		// 0x00A8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FTrainingModeTag>                    Tags;                                             		// 0x00B8 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	struct FName                                       DefaultMap;                                       		// 0x00C8 (0x0008) [0x0000000040000000] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TrainingModeConstants_TA");
		}

		return uClassPointer;
	};

	struct FName GetValidatedMap(struct FName MapName);
	void InitTags();
	void OnShellSet();
};

// Class TAGame.GFxData_TrainingModeBrowser_TA
// 0x00C8 (0x0098 - 0x0160)
class UGFxData_TrainingModeBrowser_TA : public UGFxDataSingleton_X
{
public:
	struct FSearchCacheData                            CachedOnlineSearchResults[0x2] ;                  		// 0x0098 (0x0030) [0x0000000000400000] (CPF_NeedCtorLink)
	class URPC_X*                                      PendingRPC;                                       		// 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CachedSearchDuration;                             		// 0x00D0 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              CachedFavoriteTimeoutTime;                        		// 0x00D4 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<struct FFavoritedFileMetaData>              FavoritedFilesMetaData;                           		// 0x00D8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	unsigned long                                      bFavoritesLoaded : 1;                             		// 0x00E8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bErrorModalOpen : 1;                              		// 0x00E8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	float                                              CachedFavoriteDuration;                           		// 0x00EC (0x0004) [0x0000000000000002] (CPF_Const)   
	TArray<struct FCachedDownloadedFile>               CachedDownloadedFiles;                            		// 0x00F0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<struct FString>                             LoadingFiles;                                     		// 0x0100 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FString                                     DownloadedFilename;                               		// 0x0110 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	int                                                MaxCachedDownloadedFiles;                         		// 0x0120 (0x0004) [0x0000000000000002] (CPF_Const)   
	class USaveData_GameEditor_Training_TA*            TrainingSaveData;                                 		// 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventFavoritesLoaded__Delegate;                 		// 0x0130 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __EventAllTrainingFilesLoaded__Delegate;          		// 0x0148 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TrainingModeBrowser_TA");
		}

		return uClassPointer;
	};

	class UGFxData_TrainingMode_TA* DebugGetTrainingModeByIdx(int Index);
	class UGFxData_TrainingMode_TA* DebugGetTrainingModeByName(struct FString TM_Name);
	struct FString GetDownloadedFilename();
	void DeleteTrainingMode(int InRowIndex, unsigned char CurrentTab);
	void DeleteTrainingModeData(class UGFxData_TrainingMode_TA* TrainingMode, unsigned char CurrentTab);
	void OnTrainingModesReady();
	void SetTrainingFiles(TArray<struct FString> Files, unsigned long bLoadingFavorites);
	void HandleHeaders(TArray<struct FString> Files, unsigned char Result);
	void HandleFavoritesLoaded(class UGFxData_TrainingModeBrowser_TA* B);
	void GetLocalTrainingFiles(unsigned long bLoadingFavorites);
	void HandleTrainingModeDownloadPlay(class UGFxData_TrainingMode_TA* OutTrainingMode, struct FString InCode, struct FString Filename);
	void HandleTrainingModeFavorited(class UGFxData_TrainingMode_TA* OutTrainingMode, unsigned long bAdded);
	int GetFavoriteIndex(struct FString Id);
	bool IsFavorited(struct FString InGuid);
	void HandleBrowseResults(class URPC_TrainingEditor_BrowseTrainingData_TA* RPC);
	void HandleSearchByCode(class URPC_TrainingEditor_GetTrainingData_TA* RPC);
	void OnSearchCodeResults(unsigned long bSuccess);
	void HandleOnlineHeaders(TArray<struct FString> LocalFiles, unsigned char Result, unsigned long bFeaturedOnly);
	void HandleLoadFeaturedHeaders(TArray<struct FString> LocalFiles, unsigned char Result);
	void HandleLoadAllPublicHeaders(TArray<struct FString> LocalFiles, unsigned char Result);
	bool LoadIfFavorited(class UGFxData_TrainingMode_TA* GFxTrainingData, struct FGuid InGuid);
	void RepopulateFromCache(unsigned long bFeaturedOnly);
	void GetSearchResults(struct FString Code, unsigned long bForceRefresh, unsigned long bFeaturedOnly);
	class APlayerControllerBase_TA* GetPlayerController();
	void HandleAllFavoritesLoaded(class UGFxData_TrainingModeBrowser_TA* TrainingModeBrowser);
	void ResetTrainingList();
	void HandleDownloadResults(class URPC_TrainingEditor_GetTrainingData_TA* RPC);
	void HandleListPlayerTrainingData(class URPC_TrainingEditor_ListPlayerTrainingData_TA* RPC);
	void SyncTrainingModes();
	void HandleListPlayerTrainingDataTimestamp(class URPC_TrainingEditor_ListPlayerTrainingDataTimestamp_TA* RPC);
	void EvaluateUpdateAtTimes();
	void SetFavoriteUpdatedAtTime(struct FString InCode, unsigned long long InUpdatedAt);
	void SyncFavoritedModes();
	void HandleTrainingModeWordFilterError(class UGFxData_TrainingMode_TA* OutTrainingMode, class UError* Error);
	void HandleLocalTrainingModeLoaded(class UGFxData_TrainingMode_TA* OutTrainingMode, unsigned long bSuccess);
	void HandleTrainingModeLoaded(class UGFxData_TrainingMode_TA* OutTrainingMode, unsigned long bSuccess);
	void HandleDownloadedTrainingModeSaved(class UGFxData_TrainingMode_TA* OutTrainingMode, unsigned long bSuccess);
	void HandleLocalTrainingModeSaved(class UGFxData_TrainingMode_TA* OutTrainingMode, unsigned long bSuccess);
	void CreateNew(struct FString NewName, unsigned char NewType, unsigned char NewDifficulty, struct FName MapName, TArray<int> Tags);
	void HandleErrorClosed(class UGFxModal_X* Modal);
	void DisplayError(class UError* Error);
	class UTrainingEditorMetrics_TA* GetTrainingMetrics();
	void NotifyWhenFavoritesLoaded(struct FScriptDelegate Callback);
	void HandleFavorites(TArray<struct FString> Files, unsigned char Result);
	void HandlePsyNetLogin(class UOnlinePlayer_X* OnlinePlayer);
	void OnShellSet();
	void EventAllTrainingFilesLoaded(class UGFxData_TrainingModeBrowser_TA* Browser);
	void EventFavoritesLoaded(class UGFxData_TrainingModeBrowser_TA* Browser);
};

// Class TAGame.RPC_TrainingEditor_UpdateTrainingData_TA
// 0x0008 (0x00E8 - 0x00F0)
class URPC_TrainingEditor_UpdateTrainingData_TA : public URPC_X
{
public:
	class UTrainingEditorData_TA*                      TrainingData;                                     		// 0x00E8 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TrainingEditor_UpdateTrainingData_TA");
		}

		return uClassPointer;
	};

	class URPC_TrainingEditor_UpdateTrainingData_TA* SetTrainingData(class UTrainingEditorData_TA*& InTrainingData);
};

// Class TAGame.RPC_TrainingEditor_AddTrainingData_TA
// 0x0018 (0x00E8 - 0x0100)
class URPC_TrainingEditor_AddTrainingData_TA : public URPC_X
{
public:
	class UTrainingEditorData_TA*                      TrainingData;                                     		// 0x00E8 (0x0008) [0x0000000000000000]               
	struct FString                                     Code;                                             		// 0x00F0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TrainingEditor_AddTrainingData_TA");
		}

		return uClassPointer;
	};

	class URPC_TrainingEditor_AddTrainingData_TA* SetTrainingData(class UTrainingEditorData_TA*& InTrainingData);
};

// Class TAGame.RPC_TrainingEditor_ListPlayerTrainingDataTimestamp_TA
// 0x0020 (0x00E8 - 0x0108)
class URPC_TrainingEditor_ListPlayerTrainingDataTimestamp_TA : public URPC_X
{
public:
	TArray<struct FString>                             Codes;                                            		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FCodeTimePair>                       TrainingData;                                     		// 0x00F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TrainingEditor_ListPlayerTrainingDataTimestamp_TA");
		}

		return uClassPointer;
	};

	class URPC_TrainingEditor_ListPlayerTrainingDataTimestamp_TA* SetCodes(TArray<struct FString>& InCodes);
};

// Class TAGame.RPC_TrainingEditor_BrowseTrainingData_TA
// 0x0018 (0x00E8 - 0x0100)
class URPC_TrainingEditor_BrowseTrainingData_TA : public URPC_X
{
public:
	unsigned long                                      bFeaturedOnly : 1;                                		// 0x00E8 (0x0004) [0x0000000000000000] [0x00000001] 
	TArray<class UTrainingEditorData_TA*>              TrainingData;                                     		// 0x00F0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TrainingEditor_BrowseTrainingData_TA");
		}

		return uClassPointer;
	};

	class URPC_TrainingEditor_BrowseTrainingData_TA* SetFeaturedOnly(unsigned long bInFeaturedOnly);
};

// Class TAGame.RPC_TrainingEditor_ListPlayerTrainingData_TA
// 0x0010 (0x00E8 - 0x00F8)
class URPC_TrainingEditor_ListPlayerTrainingData_TA : public URPC_X
{
public:
	TArray<struct FString>                             Codes;                                            		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TrainingEditor_ListPlayerTrainingData_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_TrainingModeEditor_TA
// 0x0060 (0x0098 - 0x00F8)
class UGFxData_TrainingModeEditor_TA : public UGFxDataSingleton_X
{
public:
	class AGameEvent_TrainingEditor_TA*                MyGameEvent;                                      		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FString                                     SanitizedTrainingModeName;                        		// 0x00A0 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FEditorRoundData>                    RoundData;                                        		// 0x00B0 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	int                                                CurrentRound;                                     		// 0x00C0 (0x0004) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	TArray<struct FTrainingModeTag>                    Tags;                                             		// 0x00C8 (0x0010) [0x0000000040402000] (CPF_Transient | CPF_NeedCtorLink | CPF_EditInlineNotify)
	unsigned char                                      Editing;                                          		// 0x00D8 (0x0001) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	float                                              BallStartSpeed;                                   		// 0x00DC (0x0004) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	float                                              BallScreenPosX;                                   		// 0x00E0 (0x0004) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	float                                              BallScreenPosY;                                   		// 0x00E4 (0x0004) [0x0000000040002000] (CPF_Transient | CPF_EditInlineNotify)
	unsigned long                                      bOwned : 1;                                       		// 0x00E8 (0x0004) [0x0000000040002000] [0x00000001] (CPF_Transient | CPF_EditInlineNotify)
	unsigned long                                      bNoEditor : 1;                                    		// 0x00E8 (0x0004) [0x0000000040002000] [0x00000002] (CPF_Transient | CPF_EditInlineNotify)
	unsigned long                                      bUnsavedChanges : 1;                              		// 0x00E8 (0x0004) [0x0000000040002000] [0x00000004] (CPF_Transient | CPF_EditInlineNotify)
	class UGFxModal_X*                                 ModalProcessing;                                  		// 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_TrainingModeEditor_TA");
		}

		return uClassPointer;
	};

	void Save();
	void HandleSaveResult(unsigned long bSuccess);
	void HandleUnsavedChanges(unsigned long bInUnsavedChanges);
	void DuplicateRound(int Index);
	void ReorderRound(int FromIndex, int ToIndex);
	void StopEditingRound();
	void EditCurrentRound();
	void RestartSequence();
	void TestSequence();
	void TestCurrentRound();
	void CreateRound();
	void HandleRoundTimeChanged(class AGameEvent_TrainingEditor_TA* InGameEvent);
	void HandleRoundChanged(class AGameEvent_TrainingEditor_TA* InGameEvent);
	void SetGameEvent(class AGameEvent_TrainingEditor_TA* InGameEvent);
	void HandleNameSanitized(struct FString DesiredName, struct FString SanitizedName);
	void UpdateTrainingData();
	void SetRoundTimeLimit(int Time);
	void DeleteRound(int RoundToDelete);
	void SetActiveRound(int NewRound);
	void SetMetaData(struct FString NewName, unsigned char NewType, unsigned char NewDifficulty, TArray<int> NewTags);
	void HandlePRIReceived(class APlayerController_X* PC_X);
	class APlayerController_TA* GetPlayerController();
	void OnShellSet();
};

// Class TAGame.GFxData_UIConfig_TA
// 0x0008 (0x0098 - 0x00A0)
class UGFxData_UIConfig_TA : public UGFxDataSingleton_X
{
public:
	int                                                MaxCurrencyTradeAmount;                           		// 0x0098 (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	unsigned long                                      bAprilFoolsRankedIcons : 1;                       		// 0x009C (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	unsigned long                                      bAprilFoolsPlaylistImages : 1;                    		// 0x009C (0x0004) [0x0000000040000000] [0x00000002] (CPF_EditInlineNotify)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_UIConfig_TA");
		}

		return uClassPointer;
	};

	void __GFxData_UIConfig_TA__OnShellSet_E97F01274FE66337A4BEE5AF8ECFB083(class URPC_ProductsTradeAllowed_TA* RPC);
	unsigned char FindXPTier(int XPAmount);
	void EndAprilFools();
	void StartAprilFools();
	void HandleAprilConfigRemoved(class UAprilConfig_X* Config);
	void HandleAprilConfig(class UAprilConfig_X* Config);
	void HandleUIConfig(class UUIConfig_TA* Config);
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.GFxData_ViewMetrics_TA
// 0x0010 (0x0098 - 0x00A8)
class UGFxData_ViewMetrics_TA : public UGFxDataSingleton_X
{
public:
	unsigned long                                      bRecordingMetrics : 1;                            		// 0x0098 (0x0004) [0x0000000040000000] [0x00000001] (CPF_EditInlineNotify)
	int                                                ActiveViewID;                                     		// 0x009C (0x0004) [0x0000000040000000] (CPF_EditInlineNotify)
	class UViewMetricsConfig_TA*                       Config;                                           		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ViewMetrics_TA");
		}

		return uClassPointer;
	};

	class UViewMetrics_TA* GetMetricObject();
	void EndMetrics();
	void AddInteraction(int InteractableID, struct FName InteractableDescriptor);
	void SetActiveView(int ViewId);
	void StartMetrics(int SourceID, struct FName ViewDescriptor);
	void eventOnRemoved();
};

// Class TAGame.ViewMetrics_TA
// 0x001C (0x0080 - 0x009C)
class UViewMetrics_TA : public UMetricsGroup_X
{
public:
	TArray<struct FViewData>                           Metrics;                                          		// 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                SourceID;                                         		// 0x0090 (0x0004) [0x0000000000000000]               
	struct FName                                       Descriptor;                                       		// 0x0094 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ViewMetrics_TA");
		}

		return uClassPointer;
	};

	void MenuInteractionSessionCompleted(int ViewSourceID, struct FName ViewDescriptor, TArray<struct FViewData> ViewMetrics);
	void AddInteraction(int InteractableID, struct FName InteractableDescriptor);
	void ViewChanged(int ExitedViewID, int EnteredViewID);
	void StartMetrics(int InSourceID, struct FName ViewDescriptor);
};

// Class TAGame.ViewMetricsConfig_TA
// 0x0010 (0x0078 - 0x0088)
class UViewMetricsConfig_TA : public UOnlineConfig_X
{
public:
	TArray<struct FName>                               DisabledViews;                                    		// 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ViewMetricsConfig_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_Workshop_TA
// 0x0030 (0x0098 - 0x00C8)
class UGFxData_Workshop_TA : public UGFxDataSingleton_X
{
public:
	TArray<struct FDownloadedWorkshopData>             Items;                                            		// 0x0098 (0x0010) [0x0000000040400000] (CPF_NeedCtorLink | CPF_EditInlineNotify)
	TArray<struct FUniqueNetId>                        RetrievedNetIds;                                  		// 0x00A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     ItemRemoved;                                      		// 0x00B8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Workshop_TA");
		}

		return uClassPointer;
	};

	struct FUniqueNetId __GFxData_Workshop_TA__HandleWorkshopData_CA3FA96548F93437F95F4ABB4CEA354F(struct FDownloadedWorkshopData Item);
	void OnAvatarPersonaHandler(struct FUniqueNetId PlayerNetId, class UTexture* Avatar, struct FString OnlinePlayerName);
	void OnEventImageDownloaded(struct FOnlineImageDownload Image);
	void HandleWorkshopData(unsigned long bSuccess, TArray<struct FDownloadedWorkshopData>& WorkshopItems);
	void LoadWorkshopMap(struct FString& FullPath);
	void LoadAllWorkshopMapData();
};

// Class TAGame.GFxData_WorldSelection_TA
// 0x0008 (0x0098 - 0x00A0)
class UGFxData_WorldSelection_TA : public UGFxDataSingleton_X
{
public:
	class APlayerControllerBase_TA*                    Player;                                           		// 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_WorldSelection_TA");
		}

		return uClassPointer;
	};

	void SetSelectionUpdate(unsigned long bUpdate);
	void SetWorldSelection(unsigned long bTurnOn);
	void eventOnShellSet();
};

// Class TAGame.GFxHUD_GameEditor_TA
// 0x0010 (0x0510 - 0x0520)
class AGFxHUD_GameEditor_TA : public AGFxHUD_TA
{
public:
	class UGFxData_TrainingModeEditor_TA*              EditorData;                                       		// 0x0510 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AGameEvent_TrainingEditor_TA*                TrainingGameEvent;                                		// 0x0518 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxHUD_GameEditor_TA");
		}

		return uClassPointer;
	};

	void UpdateCarData();
	void SetGameEvent(class AGameEvent_TA* InGameEvent);
	void InitGFx();
};

// Class TAGame.Goal_Hoops_TA
// 0x0024 (0x01C0 - 0x01E4)
class UGoal_Hoops_TA : public UGoal_TA
{
public:
	class AActor*                                      Backboard;                                        		// 0x01C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              Radius;                                           		// 0x01C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     BackboardLocation;                                		// 0x01CC (0x000C) [0x0000000000000000]               
	struct FVector                                     BackboardDirection;                               		// 0x01D8 (0x000C) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Goal_Hoops_TA");
		}

		return uClassPointer;
	};

	void Init();
};

// Class TAGame.HauntedBallTrapTrigger_TA
// 0x0068 (0x0270 - 0x02D8)
class AHauntedBallTrapTrigger_TA : public ADynamicMeshActor_TA
{
public:
	class ALensFlareSource*                            LensFlare;                                        		// 0x0270 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                TeamIndex;                                        		// 0x0278 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AGoalVolume_TA*                              GoalVolume;                                       		// 0x0280 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              TrapResetTime;                                    		// 0x0288 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinLensFlareColorValue;                           		// 0x028C (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       MICParamName;                                     		// 0x0290 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMaterialInstanceConstant*                   MIC_TrapVolumeMat;                                		// 0x0298 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMaterialInstanceConstant*                   MIC_TrapOutlineMat;                               		// 0x02A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bIsActive : 1;                                    		// 0x02A8 (0x0004) [0x0000000000000000] [0x00000001] 
	class ABall_Haunted_TA*                            HauntedBall;                                      		// 0x02B0 (0x0008) [0x0000000000000000]               
	class AGameEvent_Soccar_TA*                        SoccarEvent;                                      		// 0x02B8 (0x0008) [0x0000000000000000]               
	class UParticleSystemComponent*                    BeamPSC;                                          		// 0x02C0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UParticleSystem*                             BeamPSArchetype;                                  		// 0x02C8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       BeamPSParam;                                      		// 0x02D0 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.HauntedBallTrapTrigger_TA");
		}

		return uClassPointer;
	};

	void SetTimeInGoalValues(float Value);
	void ResetTrap();
	void SetTrapVisuals(unsigned long bInIsActive);
	void SetTrapActivity(unsigned long bInIsActive);
	bool GetIsTrapActive();
	void HandleIsTrappedChanged(class ABall_Haunted_TA* Ball, unsigned long bInIsTrapped, class UGoal_TA* Goal);
	void HandleLastTeamTouchChanged(class ABall_Haunted_TA* Ball, unsigned char InLastTeamTouch);
	void HandleDeactivatedGoalIndexChanged();
	void HandleBallAdded(class AGameEvent_Soccar_TA* GameEvent, class ABall_Haunted_TA* Ball);
	void HandleGameEventRemoved(class AGameEvent_TA* GameEvent);
	void HandleGameEventAdded(class AGameEvent_Soccar_TA* GameEvent);
	void eventTick(float DeltaTime);
	void eventDestroyed();
	void eventPostBeginPlay();
};

// Class TAGame.HUDActor_TA
// 0x0020 (0x0268 - 0x0288)
class AHUDActor_TA : public AActor
{
public:
	class AHUD*                                        HUD;                                              		// 0x0268 (0x0008) [0x0000000000000000]               
	struct FScriptDelegate                             __RenderDelegate__Delegate;                       		// 0x0270 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.HUDActor_TA");
		}

		return uClassPointer;
	};

	class AHUDActor_TA* Create(class AHUD* InHUD, struct FScriptDelegate InRenderDelegate);
	void eventDestroyed();
	void Init(class AHUD* InHUD);
	void eventPostRenderFor(class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir);
	void RenderDelegate(class UCanvas* Canvas);
};

// Class TAGame.IdleAction_TA
// 0x0000 (0x0060 - 0x0060)
class UIdleAction_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IdleAction_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.IdleSystem_TA
// 0x0000 (0x0060 - 0x0060)
class UIdleSystem_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IdleSystem_TA");
		}

		return uClassPointer;
	};

	float GetLastActiveTime(class UNetConnection* Connection);
	void UpdateIdle(class UIdleTimer_TA* Timer, class AWorldInfo* WorldInfo, class UIdleFeature_TA* Feature, class UIdlePlayer_TA* IdlePlayer, class UNetConnection* Connection, class APlayerController_TA* PC);
	void InitIdleStartTime(class AWorldInfo* WorldInfo, class UActiveGameState_TA* GameState, class UIdlePlayer_TA* IdlePlayer);
	void AddIdleConnection(class UIdleFeature_TA* Feature, class UNetConnection* Connection);
	void StopIdleTimer(class UIdleFeature_TA* Feature, class UActiveGameState_TA* GameState);
	void StartIdleTimer(class UIdleFeature_TA* Feature, class UActiveGameState_TA* GameState);
};

// Class TAGame.IdlePlayer_TA
// 0x0004 (0x0060 - 0x0064)
class UIdlePlayer_TA : public UObject
{
public:
	float                                              StartTime;                                        		// 0x0060 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IdlePlayer_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.IdleWarning_TA
// 0x0000 (0x0268 - 0x0268)
class AIdleWarning_TA : public AOwnerReplicatedActor_ORS
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IdleWarning_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.IdleTimer_TA
// 0x0000 (0x0060 - 0x0060)
class UIdleTimer_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IdleTimer_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.IdleBanSystem_TA
// 0x0000 (0x0060 - 0x0060)
class UIdleBanSystem_TA : public UIdleSystem_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IdleBanSystem_TA");
		}

		return uClassPointer;
	};

	void PerformIdleAction(class UIdleBanFeature_TA* Feature, class UIdleAction_TA* Action, class UIdlePlayer_TA* IdlePlayer, class UNetConnection* Connection, class APlayerController_TA* PC);
};

// Class TAGame.IdleKickSystem_TA
// 0x0000 (0x0060 - 0x0060)
class UIdleKickSystem_TA : public UIdleSystem_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.IdleKickSystem_TA");
		}

		return uClassPointer;
	};

	void HideIdleWarning(class UGFxData_LocalPlayer_TA* GFxData, class AIdleWarning_TA* Warning);
	void ShowIdleWarning(class UGFxData_LocalPlayer_TA* GFxData, class AIdleWarning_TA* Warning);
	void PerformIdleAction(class UIdleKickFeature_TA* Feature, class UIdleAction_TA* Action, class UIdlePlayer_TA* IdlePlayer, class UNetConnection* Connection, class APlayerController_TA* PC);
};

// Class TAGame.InMapScoreboard_TA
// 0x0094 (0x0268 - 0x02FC)
class AInMapScoreboard_TA : public AActor
{
public:
	class AStaticMeshActor*                            StaticMesh;                                       		// 0x0268 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMaterialInstanceConstant*                   MaterialInstance;                                 		// 0x0270 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                MaterialIndex;                                    		// 0x0278 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                TeamIndex;                                        		// 0x027C (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           GoalAnimation;                                    		// 0x0280 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              GoDuration;                                       		// 0x0298 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       GoSwitch;                                         		// 0x029C (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       GoalXPos;                                         		// 0x02A4 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       CountdownSwitch;                                  		// 0x02AC (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       CountdownToggle;                                  		// 0x02B4 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       ScoreToggle;                                      		// 0x02BC (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       ScoreParam;                                       		// 0x02C4 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       CountdownValueParam;                              		// 0x02CC (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                LastCountdownTime;                                		// 0x02D4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ReplayCountdownTime;                              		// 0x02D8 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bHasReplayCountdownTime : 1;                      		// 0x02DC (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class AGameEvent_Soccar_TA*                        GameEvent;                                        		// 0x02E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       LastState;                                        		// 0x02E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMaterialInstanceConstant*                   MIC;                                              		// 0x02F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              GoalTime;                                         		// 0x02F8 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.InMapScoreboard_TA");
		}

		return uClassPointer;
	};

	void HandleReplayGoalScored(class AGameEvent_Soccar_TA* InEvent, unsigned char ScoredOnTeam);
	void HideGo();
	void ShowGo();
	void HideCountdown();
	void ShowCountdown();
	void HideScore();
	void ShowScore();
	void UpdateScore(unsigned long bNoReplay);
	void DisableAllSwitches();
	void HandleCountdownTimeUpdated(class AGameEvent_TA* InEvent, int Seconds);
	void HandleGameStateChanged(class AGameEvent_TA* InEvent);
	void HandleScoreUpdated(class ATeam_TA* Team);
	void HandleTeams(class AGameEvent_Team_TA* G);
	void SetUpEvents();
	void HandleGameEvent(class AGameEvent_Soccar_TA* SoccarGame);
	void eventPostBeginPlay();
};

// Class TAGame.ItemPoolCycle_TA
// 0x0020 (0x0070 - 0x0090)
class UItemPoolCycle_TA : public UItemPool_TA
{
public:
	TArray<class ASpecialPickup_TA*>                   RemainingItems;                                   		// 0x0070 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class ASpecialPickup_TA*                           LastDispensedItem;                                		// 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ASpecialPickup_TA*                           DemolishedItem;                                   		// 0x0088 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ItemPoolCycle_TA");
		}

		return uClassPointer;
	};

	void OnCarDestroyedWithItem(class ACar_TA* Car);
	void RefillPool();
	void ApplyItemToCar(class ACar_TA* Car, class ASpecialPickup_TA* Item);
	void GiveItem(class ACar_TA* Car);
	bool GiveItemForRespawn(class ACar_TA* Car);
	void OnNewRound();
	void OnInit();
};

// Class TAGame.ItemPoolSelection_TA
// 0x0038 (0x0070 - 0x00A8)
class UItemPoolSelection_TA : public UItemPool_TA
{
public:
	int                                                ConcurrentItemCount;                              		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bPreviewItems : 1;                                		// 0x0074 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	TArray<class ASpecialPickup_TA*>                   LastDispensedItems;                               		// 0x0078 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class ASpecialPickup_TA*>                   DemolishedItems;                                  		// 0x0088 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int                                                OriginalPickupCooldownSeconds;                    		// 0x0098 (0x0004) [0x0000000000002000] (CPF_Transient)
	int                                                CooldownSecondsAtPreviousGoal;                    		// 0x009C (0x0004) [0x0000000000002000] (CPF_Transient)
	class ASpecialPickup_TA*                           ActivePickup;                                     		// 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ItemPoolSelection_TA");
		}

		return uClassPointer;
	};

	void OnCarDestroyedWithItem(class ACar_TA* Car);
	void ApplyItemsToCar(class ACar_TA* Car, TArray<class ASpecialPickup_TA*>& ApplyItems);
	void HandleItemDeactivated(class ACar_TA* Car, class ASpecialPickup_TA* Item);
	void HandleItemActivated(class ACar_TA* Car, class ASpecialPickup_TA* Item);
	void AddItemToSlot(class ASpecialPickup_TA* Item, int SlotIndex, class ACar_TA* Car);
	void RollItems(class ACar_TA* Car);
	void GiveItem(class ACar_TA* Car);
	bool PreviewItem(class ACar_TA* Car);
	bool GiveItemForRespawn(class ACar_TA* Car);
	int GetConcurrentItemCount();
	void OnGoalScored();
	void OnNewRound();
	void OnInit();
};

// Class TAGame.ItemPoolWeightMultiplier_TA
// 0x0018 (0x0070 - 0x0088)
class UItemPoolWeightMultiplier_TA : public UItemPool_TA
{
public:
	int                                                PickWeightMultiplier;                             		// 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bResetWeightsOnGoal : 1;                          		// 0x0074 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class ASpecialPickup_TA*                           LastDispensedItem;                                		// 0x0078 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ASpecialPickup_TA*                           DemolishedItem;                                   		// 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ItemPoolWeightMultiplier_TA");
		}

		return uClassPointer;
	};

	void OnCarDestroyedWithItem(class ACar_TA* Car);
	void ApplyItemToCar(class ACar_TA* Car, class ASpecialPickup_TA* Item);
	void GiveItem(class ACar_TA* Car);
	bool GiveItemForRespawn(class ACar_TA* Car);
	void ResetItemWeights();
	void OnNewRound();
	void OnInit();
};

// Class TAGame.MaxTimeEndGame_TA
// 0x0000 (0x0060 - 0x0060)
class UMaxTimeEndGame_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MaxTimeEndGame_TA");
		}

		return uClassPointer;
	};

	int __MaxTimeEndGame_TA__GetWinningTeam_D61E003C487227344DEFAE9308332F2C(class ATeam_TA* T);
	int __MaxTimeEndGame_TA__GetWinningTeam_408ACA874E15B690EE601CB4255DDB91(int Sum, class APRI_TA* PRI);
	class ATeam_TA* GetWinningTeam(class AGameEvent_Soccar_TA* GameEvent, unsigned char& TieBreakDecision);
};

// Class TAGame.MaxTimeSystem_TA
// 0x0000 (0x0060 - 0x0060)
class UMaxTimeSystem_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MaxTimeSystem_TA");
		}

		return uClassPointer;
	};

	void RemovedMaxTimeWarningData(class UGFxData_TourEvent_TA* GFxData_TourEvent, class AMaxTimeWarningData_TA* _);
	void UpdateMaxTimeWarningData(class UGFxData_TourEvent_TA* GFxData_TourEvent, class AMaxTimeWarningData_TA* MaxTimeWarningData);
	void HandleWarningMessage(class AGameEvent_Soccar_TA* GameEvent, class UMaxTimeWarning_TA* MaxTimeWarningData);
	void ReceivedMaxTimeEndGame(class UMaxTimeComponent_TA* MaxTimeComponent, class AGameEvent_Soccar_TA* GameEvent, class UMaxTimeEndGame_TA* MaxTimeEndGame);
	void ClearMaxTimeSystem(class UMaxTimeComponent_TA* MaxTimeComponent, class AGameEvent_Soccar_TA* GameEvent);
	void OnGameFinished(class UMaxTimeComponent_TA* MaxTimeComponent, class AGameEvent_Soccar_TA* GameEvent, class UGameEventFinishedState_TA* _);
	void StartMaxTimer(class UMaxTimeComponent_TA* MaxTimeComponent, class UGameEventMatchActive_TA* GameEventMatchActive, class AGameEvent_Soccar_TA* GameEvent);
};

// Class TAGame.MaxTimeWarningData_TA
// 0x0010 (0x0270 - 0x0280)
class AMaxTimeWarningData_TA : public AReplicatedActor_ORS
{
public:
	unsigned long long                                 EndGameEpochTime;                                 		// 0x0270 (0x0008) [0x0000000000000020] (CPF_Net)     
	unsigned long long                                 EndGameWarningEpochTime;                          		// 0x0278 (0x0008) [0x0000000000000020] (CPF_Net)     
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MaxTimeWarningData_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.MaxTimeWarning_TA
// 0x0000 (0x0060 - 0x0060)
class UMaxTimeWarning_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MaxTimeWarning_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.MenuSequence_PremiumGarage_TA
// 0x000C (0x00A8 - 0x00B4)
class UMenuSequence_PremiumGarage_TA : public UMenuSequence_TA
{
public:
	float                                              FadeTime;                                         		// 0x00A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FadeOutDelay;                                     		// 0x00AC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TurnTableYawOffset;                               		// 0x00B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MenuSequence_PremiumGarage_TA");
		}

		return uClassPointer;
	};

	class UShowroomMetrics_TA* GetShowroomMetrics();
	void LeaveFadeOut();
	void HandleLeaveComplete();
	void EnterFadeOut();
	void HandleEnterComplete();
	void LeaveSequence(class UMenuSequence_TA* NextSequence);
	void EnterSequence(class UMenuSequence_TA* PrevSequence);
};

// Class TAGame.MenuSequence_PremiumGarageReveal_TA
// 0x000C (0x00B4 - 0x00C0)
class UMenuSequence_PremiumGarageReveal_TA : public UMenuSequence_PremiumGarage_TA
{
public:
	struct FName                                       FinishCameraState;                                		// 0x00B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MenuSequence_PremiumGarageReveal_TA");
		}

		return uClassPointer;
	};

	void FinishReveal();
	void LeaveSequence(class UMenuSequence_TA* NextSequence);
	void EnterSequence(class UMenuSequence_TA* PrevSequence);
};

// Class TAGame.Mutator_Attachment_TA
// 0x0014 (0x0064 - 0x0078)
class UMutator_Attachment_TA : public UMutator_TA
{
public:
	class ASpecialAttachment_TA*                       AttachmentArchetype;                              		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class ASpecialAttachment_TA*                       Team1AttachmentArchetype;                         		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_Attachment_TA");
		}

		return uClassPointer;
	};

	void SetupAttachment(class ACar_TA* Car);
	void MutateObject(class UObject* O);
};

// Class TAGame.SpecialAttachment_TA
// 0x0038 (0x07A0 - 0x07D8)
class ASpecialAttachment_TA : public ARBActor_TA
{
public:
	struct FVector                                     Offset;                                           		// 0x07A0 (0x000C) [0x0000000000000001] (CPF_Edit)    
	class UStaticMeshComponent*                        StaticMesh;                                       		// 0x07B0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	float                                              BallHitMultiplier;                                		// 0x07B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CarHitMultiplier;                                 		// 0x07BC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CarHitVerticalMultiplier;                         		// 0x07C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CarHitTorque;                                     		// 0x07C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bUseCarsBump : 1;                                 		// 0x07C8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bDemolishOnHit : 1;                               		// 0x07C8 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bDemolishTeam : 1;                                		// 0x07C8 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	class ACar_TA*                                     AttachedCar;                                      		// 0x07D0 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialAttachment_TA");
		}

		return uClassPointer;
	};

	bool IsValidBump(float Speed, class ACar_TA* Car, struct FVector HitLocation, struct FVector HitNormal);
	void OnHitCar(class ACar_TA* Car, struct FVector HitLocation, struct FVector HitNormal);
	void OnHitBall(class ABall_TA* Ball, struct FVector HitLocation, struct FVector HitNormal);
	void eventOnRigidBodyCollision(struct FAccumulatedRigidBodyCollision Collision);
	void HandleDemolish(class ACar_TA* InCar, struct FDemolishData Data);
	void AttachToCar(class ACar_TA* InCar, unsigned char InSocket);
	void eventDestroyed();
};

// Class TAGame.Mutator_Audio_TA
// 0x000C (0x0064 - 0x0070)
class UMutator_Audio_TA : public UMutator_TA
{
public:
	struct FName                                       AudioSoundMode;                                   		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_Audio_TA");
		}

		return uClassPointer;
	};

	void Init(class AGameEvent_TA* GameEvent);
};

// Class TAGame.Mutator_Bots_TA
// 0x0008 (0x0064 - 0x006C)
class UMutator_Bots_TA : public UMutator_TA
{
public:
	unsigned long                                      bRandomizedBotLoadouts : 1;                       		// 0x0068 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_Bots_TA");
		}

		return uClassPointer;
	};

	void Init(class AGameEvent_TA* GameEvent);
};

// Class TAGame.Mutator_GameEvent_TA
// 0x001C (0x0064 - 0x0080)
class UMutator_GameEvent_TA : public UMutator_TA
{
public:
	class AStatFactory_TA*                             StatFactoryArchetype;                             		// 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AAIController_TA*                            BotArchetype;                                     		// 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UEndRoundComponent_TA*                       EndRoundComponentArchetype;                       		// 0x0078 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_GameEvent_TA");
		}

		return uClassPointer;
	};

	void Init(class AGameEvent_TA* GameEvent);
};

// Class TAGame.Mutator_Loadout_TA
// 0x0014 (0x0064 - 0x0078)
class UMutator_Loadout_TA : public UMutator_TA
{
public:
	TArray<class UProduct_TA*>                         Products;                                         		// 0x0068 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_Loadout_TA");
		}

		return uClassPointer;
	};

	void __Mutator_Loadout_TA__Init_F7508F3C4013C67A4F9B7B92FB738288(class AGameEvent_TA* _, class APRI_TA* PRI);
	void __Mutator_Loadout_TA__Init_859CE6A6440F236EDD9E9DA0ACEBDEEC(class AGameEvent_TA* _, class APRI_TA* PRI);
	void HandleLoadoutRequested(struct FLoadoutData& OutLoadout, struct FLoadoutAttributesArray& OutAttributes);
	void Init(class AGameEvent_TA* GameEvent);
};

// Class TAGame.PlayerSpawnConfig_TA
// 0x0004 (0x0060 - 0x0064)
class UPlayerSpawnConfig_TA : public UObject
{
public:
	int                                                RespawnDelaySeconds;                              		// 0x0060 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerSpawnConfig_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PlayerSpawnState_TA
// 0x0000 (0x0060 - 0x0060)
class UPlayerSpawnState_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerSpawnState_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PlayerSpawnSystem_TA
// 0x0000 (0x0060 - 0x0060)
class UPlayerSpawnSystem_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerSpawnSystem_TA");
		}

		return uClassPointer;
	};

	void CreateReplicatedSpawnTicket(class AController* C, float RespawnDelaySeconds);
	void CreateSpawnTicket(class AController* C, class APRI_TA* PRI, float RespawnDelaySeconds);
	void TickRespawnDisplay(class UGameTick* Tick, class AReplicatedRespawnTicket_TA* Ticket, class AGFxHUD_TA* HUD);
	void HandleCarDemolished(class UPlayerSpawnFeature_TA* Feature, class AController* C, class APRI_TA* PRI, class UDemolishedCar_TA* Car);
	void HandlePlayerSpawned(class UPlayerSpawnFeature_TA* Feature, class AController* C, class APawn* P);
	void TickSpawn(class UGameTick* Tick, class UPlayerSpawnFeature_TA* Feature, class UPlayerSpawnTicket_TA* Ticket);
	void HandleBotReplacementCleared(class AReplicatedRespawnTicket_TA* Ticket, class UBotReplacement_TA* Replacement);
	void HandleBotReplacementSet(class UPlayerSpawnFeature_TA* Feature, class UPlayerSpawnTicket_TA* Ticket, class UBotReplacement_TA* Replacement);
	void HandlePlayerSpawnStop(class UPlayerSpawnFeature_TA* Feature, class AController* C);
	void HandlePlayerSpawnStart(class UPlayerSpawnFeature_TA* Feature, class AController* C, class APRI_TA* PRI);
	void HandleSpawnStop(class UPlayerSpawnState_TA* State, class UPlayerSpawnFeature_TA* Feature);
	void HandleSpawnStart(class UPlayerSpawnConfig_TA* Config, class UPlayerSpawnState_TA* State, class AGameEvent_TA* GameEvent);
};

// Class TAGame.ReplicatedRespawnTicket_TA
// 0x0008 (0x0268 - 0x0270)
class AReplicatedRespawnTicket_TA : public AOwnerReplicatedActor_ORS
{
public:
	float                                              SecondsRemaining;                                 		// 0x0268 (0x0004) [0x0000000000000020] (CPF_Net)     
	int                                                DisplaySeconds;                                   		// 0x026C (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ReplicatedRespawnTicket_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PlayerSpawnTicket_TA
// 0x0014 (0x0060 - 0x0074)
class UPlayerSpawnTicket_TA : public UObject
{
public:
	class AController*                                 Controller;                                       		// 0x0060 (0x0008) [0x0000000000000000]               
	class APRI_TA*                                     PRI;                                              		// 0x0068 (0x0008) [0x0000000000000000]               
	float                                              SecondsRemaining;                                 		// 0x0070 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerSpawnTicket_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductOverride_DisableSkelControl_TA
// 0x0008 (0x0060 - 0x0068)
class UProductOverride_DisableSkelControl_TA : public UProductOverride_TA
{
public:
	struct FName                                       SkelControlToDisable;                             		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductOverride_DisableSkelControl_TA");
		}

		return uClassPointer;
	};

	void ApplyToObject(class UObject* Target);
};

// Class TAGame.ProductOverride_ParticleSystemComponent_TA
// 0x0008 (0x0060 - 0x0068)
class UProductOverride_ParticleSystemComponent_TA : public UProductOverride_TA
{
public:
	class UParticleSystem*                             ParticleSystem;                                   		// 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductOverride_ParticleSystemComponent_TA");
		}

		return uClassPointer;
	};

	void ApplyToObject(class UObject* Target);
};

// Class TAGame.ProductOverride_ParticleSystemParameterBase_TA
// 0x0000 (0x0060 - 0x0060)
class UProductOverride_ParticleSystemParameterBase_TA : public UProductOverride_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductOverride_ParticleSystemParameterBase_TA");
		}

		return uClassPointer;
	};

	void ApplyToParticleSystem(class UISetParameter* ParameterTarget);
	void ApplyToObject(class UObject* Target);
};

// Class TAGame.ProductOverride_ParticleSystemFloatParameter_TA
// 0x000C (0x0060 - 0x006C)
class UProductOverride_ParticleSystemFloatParameter_TA : public UProductOverride_ParticleSystemParameterBase_TA
{
public:
	struct FFloatParamPair                             FloatParameter;                                   		// 0x0060 (0x000C) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductOverride_ParticleSystemFloatParameter_TA");
		}

		return uClassPointer;
	};

	void ApplyToParticleSystem(class UISetParameter* ParameterTarget);
};

// Class TAGame.ProductOverride_ParticleSystemNameParameter_TA
// 0x0010 (0x0060 - 0x0070)
class UProductOverride_ParticleSystemNameParameter_TA : public UProductOverride_ParticleSystemParameterBase_TA
{
public:
	struct FNameParamPair                              NameParameter;                                    		// 0x0060 (0x0010) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductOverride_ParticleSystemNameParameter_TA");
		}

		return uClassPointer;
	};

	void ApplyToParticleSystem(class UISetParameter* ParameterTarget);
};

// Class TAGame.ProductOverride_ParticleSystemVectorParameter_TA
// 0x0014 (0x0060 - 0x0074)
class UProductOverride_ParticleSystemVectorParameter_TA : public UProductOverride_ParticleSystemParameterBase_TA
{
public:
	struct FVectorParamPair                            VectorParameter;                                  		// 0x0060 (0x0014) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductOverride_ParticleSystemVectorParameter_TA");
		}

		return uClassPointer;
	};

	void ApplyToParticleSystem(class UISetParameter* ParameterTarget);
};

// Class TAGame.ProductOverride_StopAttachmentBehaviors_TA
// 0x0010 (0x0060 - 0x0070)
class UProductOverride_StopAttachmentBehaviors_TA : public UProductOverride_TA
{
public:
	TArray<class UClass*>                              BehaviorsToZeroOut;                               		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductOverride_StopAttachmentBehaviors_TA");
		}

		return uClassPointer;
	};

	void __ProductOverride_StopAttachmentBehaviors_TA__ApplyToObject_99012718465926312F3717A6608CEA6F(class UAttachmentBehavior_TA* A);
	bool CanZeroOutCurrentAttachment(class UAttachmentBehavior_TA* AttachmentToCheck);
	void ApplyToObject(class UObject* Target);
};

// Class TAGame.ProductOverride_WheelAttachment_TA
// 0x0010 (0x0060 - 0x0070)
class UProductOverride_WheelAttachment_TA : public UProductOverride_TA
{
public:
	TArray<struct FWheelAttachment>                    AttachmentsToOverride;                            		// 0x0060 (0x0010) [0x0000000000480001] (CPF_Edit | CPF_Component | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductOverride_WheelAttachment_TA");
		}

		return uClassPointer;
	};

	class USkeletalMeshComponent* GetSkeletalMeshComponentOfWheel(class UObject* Target);
	void ApplyToObject(class UObject* Target);
};

// Class TAGame.ProductOverride_WheelOverrides_TA
// 0x0020 (0x0060 - 0x0080)
class UProductOverride_WheelOverrides_TA : public UProductOverride_TA
{
public:
	TArray<unsigned char>                              WheelsToChange;                                   		// 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	TArray<class UProductOverride_TA*>                 OverridesToApply;                                 		// 0x0070 (0x0010) [0x0000000004400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductOverride_WheelOverrides_TA");
		}

		return uClassPointer;
	};

	void __ProductOverride_WheelOverrides_TA__ApplyOverridesToMeshComp_D21C3FC6447F78FED677A48D44AD8EDB(struct FAttachment X);
	void ApplyOverridesToMeshComp(class UMeshComponent* MeshComp);
	void ApplySideOverrides(class UMeshComponent* MeshComp, class UCarMeshComponent_TA* CarMeshComp);
	void ApplyToObject(class UObject* Target);
};

// Class TAGame.RocketPassErrors_TA
// 0x0030 (0x0080 - 0x00B0)
class URocketPassErrors_TA : public UErrorList
{
public:
	class UErrorType*                                  InvalidRocketPass;                                		// 0x0080 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  RocketPassNotActive;                              		// 0x0088 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  InvalidKey;                                       		// 0x0090 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  PlayerAlreadyPremium;                             		// 0x0098 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  DoesNotOwnPremium;                                		// 0x00A0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  PurchasableNotFound;                              		// 0x00A8 (0x0008) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RocketPassErrors_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_BanSelf_TA
// 0x0028 (0x00E8 - 0x0110)
class URPC_BanSelf_TA : public URPC_X
{
public:
	int                                                DurationSeconds;                                  		// 0x00E8 (0x0004) [0x0000000000000000]               
	struct FString                                     ReasonID;                                         		// 0x00F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     BanType;                                          		// 0x0100 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_BanSelf_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_Challenge_ResetAllProgress_TA
// 0x0048 (0x00E8 - 0x0130)
class URPC_Challenge_ResetAllProgress_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_Challenge_ResetAllProgress_TA");
		}

		return uClassPointer;
	};

	class URPC_Challenge_ResetAllProgress_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_Challenge_ResetChallengeProgress_TA
// 0x004C (0x00E8 - 0x0134)
class URPC_Challenge_ResetChallengeProgress_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                ChallengeID;                                      		// 0x0130 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_Challenge_ResetChallengeProgress_TA");
		}

		return uClassPointer;
	};

	class URPC_Challenge_ResetChallengeProgress_TA* SetChallengeID(int InChallengeID);
	class URPC_Challenge_ResetChallengeProgress_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_Challenge_SetProgress_TA
// 0x0050 (0x00E8 - 0x0138)
class URPC_Challenge_SetProgress_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                ChallengeID;                                      		// 0x0130 (0x0004) [0x0000000000000000]               
	int                                                Count;                                            		// 0x0134 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_Challenge_SetProgress_TA");
		}

		return uClassPointer;
	};

	class URPC_Challenge_SetProgress_TA* SetCount(int InCount);
	class URPC_Challenge_SetProgress_TA* SetChallengeID(int InChallengeID);
	class URPC_Challenge_SetProgress_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_DebugAddXP_TA
// 0x0070 (0x00E8 - 0x0158)
class URPC_DebugAddXP_TA : public URPC_X
{
public:
	int                                                XPToAdd;                                          		// 0x00E8 (0x0004) [0x0000000000000000]               
	struct FUniqueNetId                                PlayerID;                                         		// 0x00F0 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FXPInfo                                     XPInfoResponse;                                   		// 0x0138 (0x0020) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_DebugAddXP_TA");
		}

		return uClassPointer;
	};

	class URPC_DebugAddXP_TA* SetXPAmount(int InXPToAdd);
	class URPC_DebugAddXP_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_DebugSetXP_TA
// 0x0070 (0x00E8 - 0x0158)
class URPC_DebugSetXP_TA : public URPC_X
{
public:
	int                                                XPToSet;                                          		// 0x00E8 (0x0004) [0x0000000000000000]               
	struct FUniqueNetId                                PlayerID;                                         		// 0x00F0 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FXPInfo                                     XPInfoResponse;                                   		// 0x0138 (0x0020) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_DebugSetXP_TA");
		}

		return uClassPointer;
	};

	class URPC_DebugSetXP_TA* SetXPAmount(int InXPToSet);
	class URPC_DebugSetXP_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_GetSpecialEventCurrency_TA
// 0x0068 (0x00E8 - 0x0150)
class URPC_GetSpecialEventCurrency_TA : public URPC_SpecialEventBase_TA
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                EventID;                                          		// 0x0130 (0x0004) [0x0000000000000000]               
	struct FEventCurrencyData                          EventCurrency;                                    		// 0x0138 (0x0018) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_GetSpecialEventCurrency_TA");
		}

		return uClassPointer;
	};

	class URPC_GetSpecialEventCurrency_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
	class URPC_GetSpecialEventCurrency_TA* SetEventID(int InEventID);
};

// Class TAGame.RPC_GetSpecialEvents_TA
// 0x0010 (0x00E8 - 0x00F8)
class URPC_GetSpecialEvents_TA : public URPC_SpecialEventBase_TA
{
public:
	TArray<struct FSpecialEventData>                   Events;                                           		// 0x00E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_GetSpecialEvents_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_ProductsDebugAddProduct_TA
// 0x00A8 (0x00E8 - 0x0190)
class URPC_ProductsDebugAddProduct_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                ProductID;                                        		// 0x0130 (0x0004) [0x0000000000000000]               
	int                                                SeriesID;                                         		// 0x0134 (0x0004) [0x0000000000000000]               
	int                                                TradeHoldTimestamp;                               		// 0x0138 (0x0004) [0x0000000000000000]               
	TArray<struct FAddProductAttribute>                Attributes;                                       		// 0x0140 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FOnlineProductData                          Product;                                          		// 0x0150 (0x0038) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UOnlineProduct_TA*                           OnlineProduct;                                    		// 0x0188 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_ProductsDebugAddProduct_TA");
		}

		return uClassPointer;
	};

	void eventOnSuccess();
	class URPC_ProductsDebugAddProduct_TA* SetSpecialEdition(int SpecialEditionID);
	class URPC_ProductsDebugAddProduct_TA* SetBlueprintCost(int Cost);
	class URPC_ProductsDebugAddProduct_TA* SetBlueprint(int BlueprintID);
	class URPC_ProductsDebugAddProduct_TA* SetPainted(int PaintID);
	class URPC_ProductsDebugAddProduct_TA* SetTeamEdition(int TeamEditionId);
	class URPC_ProductsDebugAddProduct_TA* SetCertified(int CertifiedId);
	class URPC_ProductsDebugAddProduct_TA* SetRentalLength(int RentalLengthDays);
	class URPC_ProductsDebugAddProduct_TA* SetExpirationTime(unsigned long long ExpirationTime);
	class URPC_ProductsDebugAddProduct_TA* SetTradeHoldTimeStamp(int InTradeHoldTimestamp);
	class URPC_ProductsDebugAddProduct_TA* SetSeriesID(int InSeriesID);
	class URPC_ProductsDebugAddProduct_TA* SetProductID(int InProductID);
	class URPC_ProductsDebugAddProduct_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_ProductsDebugAddRandom_TA
// 0x0070 (0x00E8 - 0x0158)
class URPC_ProductsDebugAddRandom_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                Count;                                            		// 0x0130 (0x0004) [0x0000000000000000]               
	int                                                SeriesID;                                         		// 0x0134 (0x0004) [0x0000000000000000]               
	TArray<struct FOnlineProductData>                  Drops;                                            		// 0x0138 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UOnlineProduct_TA*>                   Products;                                         		// 0x0148 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_ProductsDebugAddRandom_TA");
		}

		return uClassPointer;
	};

	void eventOnSuccess();
	class URPC_ProductsDebugAddRandom_TA* SetSeriesID(int InSeriesID);
	class URPC_ProductsDebugAddRandom_TA* SetCount(int InCount);
	class URPC_ProductsDebugAddRandom_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_ProductsDebugSetCertified_TA
// 0x00B0 (0x00E8 - 0x0198)
class URPC_ProductsDebugSetCertified_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 InstanceID;                                       		// 0x0130 (0x0008) [0x0000000000000000]               
	int                                                CertifiedStatID;                                  		// 0x0138 (0x0004) [0x0000000000000000]               
	int                                                CertifiedValue;                                   		// 0x013C (0x0004) [0x0000000000000000]               
	struct FOnlineProductData                          Product;                                          		// 0x0140 (0x0038) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UOnlineProduct_TA*                           OnlineProduct;                                    		// 0x0178 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventCertifiedComplete__Delegate;               		// 0x0180 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_ProductsDebugSetCertified_TA");
		}

		return uClassPointer;
	};

	void eventOnComplete();
	class URPC_ProductsDebugSetCertified_TA* NotifyCertifiedComplete(struct FScriptDelegate Callback);
	class URPC_ProductsDebugSetCertified_TA* SetCertifiedValue(int InCertifiedValue);
	class URPC_ProductsDebugSetCertified_TA* SetCertifiedStatID(int InCertifiedStatID);
	class URPC_ProductsDebugSetCertified_TA* SetInstanceID(unsigned long long InInstanceId);
	class URPC_ProductsDebugSetCertified_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
	void EventCertifiedComplete(class UOnlineProduct_TA* NewProduct);
};

// Class TAGame.RPC_ProductsDebugSetEdition_TA
// 0x00B0 (0x00E8 - 0x0198)
class URPC_ProductsDebugSetEdition_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 InstanceID;                                       		// 0x0130 (0x0008) [0x0000000000000000]               
	int                                                EditionID;                                        		// 0x0138 (0x0004) [0x0000000000000000]               
	struct FOnlineProductData                          Product;                                          		// 0x0140 (0x0038) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UOnlineProduct_TA*                           OnlineProduct;                                    		// 0x0178 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventEditionComplete__Delegate;                 		// 0x0180 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_ProductsDebugSetEdition_TA");
		}

		return uClassPointer;
	};

	void eventOnComplete();
	class URPC_ProductsDebugSetEdition_TA* NotifyEditionComplete(struct FScriptDelegate Callback);
	class URPC_ProductsDebugSetEdition_TA* SetEditionID(int InEditionID);
	class URPC_ProductsDebugSetEdition_TA* SetInstanceID(unsigned long long InInstanceId);
	class URPC_ProductsDebugSetEdition_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
	void EventEditionComplete(class UOnlineProduct_TA* NewProduct);
};

// Class TAGame.RPC_ProductsDebugSetPainted_TA
// 0x00B0 (0x00E8 - 0x0198)
class URPC_ProductsDebugSetPainted_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 InstanceID;                                       		// 0x0130 (0x0008) [0x0000000000000000]               
	int                                                PaintID;                                          		// 0x0138 (0x0004) [0x0000000000000000]               
	struct FOnlineProductData                          Product;                                          		// 0x0140 (0x0038) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UOnlineProduct_TA*                           OnlineProduct;                                    		// 0x0178 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __EventPaintedComplete__Delegate;                 		// 0x0180 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_ProductsDebugSetPainted_TA");
		}

		return uClassPointer;
	};

	void eventOnComplete();
	class URPC_ProductsDebugSetPainted_TA* NotifyPaintedComplete(struct FScriptDelegate Callback);
	class URPC_ProductsDebugSetPainted_TA* SetPaintID(int InPaintID);
	class URPC_ProductsDebugSetPainted_TA* SetInstanceID(unsigned long long InInstanceId);
	class URPC_ProductsDebugSetPainted_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
	void EventPaintedComplete(class UOnlineProduct_TA* NewProduct);
};

// Class TAGame.RPC_PsyNetSetVanity_TA
// 0x0010 (0x00E8 - 0x00F8)
class URPC_PsyNetSetVanity_TA : public URPC_X
{
public:
	TArray<struct FVanityLoadout>                      VanityLoadouts;                                   		// 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_PsyNetSetVanity_TA");
		}

		return uClassPointer;
	};

	class URPC_PsyNetSetVanity_TA* AddVanityInfo(class UPlayerVanity_TA* Vanity, int InType);
};

// Class TAGame.RPC_SelectIntroCar_TA
// 0x0070 (0x00E8 - 0x0158)
class URPC_SelectIntroCar_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	int                                                TemplateIndex;                                    		// 0x0130 (0x0004) [0x0000000000000000]               
	TArray<struct FOnlineProductData>                  ProductData;                                      		// 0x0138 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	TArray<class UOnlineProduct_TA*>                   ProcessedProducts;                                		// 0x0148 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_SelectIntroCar_TA");
		}

		return uClassPointer;
	};

	void eventOnComplete();
	class URPC_SelectIntroCar_TA* SetSelectedIndex(int InTemplateIndex);
	class URPC_SelectIntroCar_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_TourGetRewards_TA
// 0x0060 (0x00E8 - 0x0148)
class URPC_TourGetRewards_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long long                                 TournamentID;                                     		// 0x0130 (0x0008) [0x0000000000000000]               
	TArray<struct FTourReward>                         Rewards;                                          		// 0x0138 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourGetRewards_TA");
		}

		return uClassPointer;
	};

	class URPC_TourGetRewards_TA* SetTournamentID(unsigned long long InTournamentID);
	class URPC_TourGetRewards_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.RPC_TourStartMatchmaking_TA
// 0x0048 (0x00E8 - 0x0130)
class URPC_TourStartMatchmaking_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_TourStartMatchmaking_TA");
		}

		return uClassPointer;
	};

	class URPC_TourStartMatchmaking_TA* SetPlayerID(struct FUniqueNetId& InPlayerId);
};

// Class TAGame.RPC_UploadXP_TA
// 0x0050 (0x00E8 - 0x0138)
class URPC_UploadXP_TA : public URPC_X
{
public:
	struct FUniqueNetId                                PlayerID;                                         		// 0x00E8 (0x0048) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              XPTotal;                                          		// 0x0130 (0x0004) [0x0000000000000000]               
	int                                                XpLevel;                                          		// 0x0134 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_UploadXP_TA");
		}

		return uClassPointer;
	};

	class URPC_UploadXP_TA* SetXPLevel(int InXPLevel);
	class URPC_UploadXP_TA* SetXPTotal(float InXPTotal);
	class URPC_UploadXP_TA* SetPlayerID(struct FUniqueNetId InPlayerId);
};

// Class TAGame.ScrollComponent_TA
// 0x0074 (0x00A4 - 0x0118)
class UScrollComponent_TA : public UActorComponent_X
{
public:
	unsigned long                                      bGrabbed : 1;                                     		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	unsigned long                                      bDeterminedSnapStopLocation : 1;                  		// 0x00A8 (0x0004) [0x0000000000000000] [0x00000002] 
	float                                              Momentum;                                         		// 0x00AC (0x0004) [0x0000000000000000]               
	int                                                ActiveSnapIndex;                                  		// 0x00B0 (0x0004) [0x0000000000000000]               
	float                                              GrabbedMoveSpeed;                                 		// 0x00B4 (0x0004) [0x0000000000000000]               
	float                                              MaxMomentum;                                      		// 0x00B8 (0x0004) [0x0000000000000000]               
	float                                              LastMomentum;                                     		// 0x00BC (0x0004) [0x0000000000000000]               
	float                                              MinStopMomentum;                                  		// 0x00C0 (0x0004) [0x0000000000000000]               
	float                                              FallOffSpeed;                                     		// 0x00C4 (0x0004) [0x0000000000000002] (CPF_Const)   
	struct FVector                                     ScrollDirection;                                  		// 0x00C8 (0x000C) [0x0000000000000000]               
	struct FVector                                     StartPoint;                                       		// 0x00D4 (0x000C) [0x0000000000000000]               
	float                                              TotalDistance;                                    		// 0x00E0 (0x0004) [0x0000000000000000]               
	float                                              SnapDistance;                                     		// 0x00E4 (0x0004) [0x0000000000000000]               
	int                                                TotalSnaps;                                       		// 0x00E8 (0x0004) [0x0000000000000000]               
	struct FVector                                     StopSnapLocation;                                 		// 0x00EC (0x000C) [0x0000000000000000]               
	float                                              SnapBlendSpeed;                                   		// 0x00F8 (0x0004) [0x0000000000000000]               
	float                                              ShiftSnapBlendSpeed;                              		// 0x00FC (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             __EventSnapIndexChanged__Delegate;                		// 0x0100 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ScrollComponent_TA");
		}

		return uClassPointer;
	};

	bool MoveInDirection(struct FVector MoveDirection);
	void SetSnapLocation(int SnapIndex, float BlendSpeed);
	struct FVector GetSnapIndexLocation(int SnapIndex);
	int CalculateSnapIndex();
	void DetermineSnapStopLocation();
	void SetActiveSnapIndex(int NewIndex);
	int ClampSnapIndex(int Index);
	void MoveToSnapIndex(int Index);
	void ShiftVerticalToSnap(int Direction);
	bool FinishMovement(float DeltaTime);
	void UpdateLocation(float DeltaTime, float Input, unsigned long bGamepad);
	float CalculateMomentumFalloff(float DeltaTime);
	float DetermineMoveSpeed(float DeltaTime, float Input, unsigned long bGamepad);
	void SetGrabbed(unsigned long bGrab);
	void StopMovement();
	void SetScrollPoints(struct FVector InStartPoint, float InSnapDistance, int InTotalSnaps, float InTotalDistance);
	void eventTick(float DeltaTime);
	void eventBeginPlay();
	void EventSnapIndexChanged(class UScrollComponent_TA* ScrollComponent, int PreviousSnapIndex);
};

// Class TAGame.SeqAct_AttachAssetToCar_TA
// 0x0020 (0x0160 - 0x0180)
class USeqAct_AttachAssetToCar_TA : public USequenceAction
{
public:
	class UStaticMesh*                                 StaticMeshToAttach;                               		// 0x0160 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class USkeletalMesh*                               SkeletalMeshToAttach;                             		// 0x0168 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UParticleSystem*                             ParticleSystemToAttach;                           		// 0x0170 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       BoneToAttachTo;                                   		// 0x0178 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_AttachAssetToCar_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_CheckRotationAngle_TA
// 0x0045 (0x0178 - 0x01BD)
class USeqAct_CheckRotationAngle_TA : public USeqAct_Latent
{
public:
	class AActor*                                      Actor;                                            		// 0x0178 (0x0008) [0x0000000000000000]               
	class AActor*                                      CheckActor;                                       		// 0x0180 (0x0008) [0x0000000000000000]               
	float                                              RotationAngle;                                    		// 0x0188 (0x0004) [0x0000000000000000]               
	struct FRotator                                    LastRotation;                                     		// 0x018C (0x000C) [0x0000000000000000]               
	float                                              LastDirection;                                    		// 0x0198 (0x0004) [0x0000000000000000]               
	struct FVector                                     CheckAxis;                                        		// 0x019C (0x000C) [0x0000000000000000]               
	struct FVector                                     TurnAxis;                                         		// 0x01A8 (0x000C) [0x0000000000000000]               
	float                                              MaxRotationAngle;                                 		// 0x01B4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bResetOnDirectionChange : 1;                      		// 0x01B8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned char                                      AxisDirection;                                    		// 0x01BC (0x0001) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_CheckRotationAngle_TA");
		}

		return uClassPointer;
	};

	struct FVector GetTurnAxis();
	struct FVector GetCheckAxis();
	bool eventUpdate(float DeltaTime);
	void eventActivated();
};

// Class TAGame.SeqAct_CompleteFTECheckpoint_TA
// 0x0010 (0x0160 - 0x0170)
class USeqAct_CompleteFTECheckpoint_TA : public USequenceAction
{
public:
	struct FString                                     CheckpointName;                                   		// 0x0160 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_CompleteFTECheckpoint_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_Counter_TA
// 0x0004 (0x0160 - 0x0164)
class USeqAct_Counter_TA : public USequenceAction
{
public:
	int                                                MaxCount;                                         		// 0x0160 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_Counter_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_CreateAttachComponent_TA
// 0x0010 (0x0160 - 0x0170)
class USeqAct_CreateAttachComponent_TA : public USequenceAction
{
public:
	class AActor*                                      AttachTo;                                         		// 0x0160 (0x0008) [0x0000000000000000]               
	class UActorComponent_X*                           AttachingComponent;                               		// 0x0168 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_CreateAttachComponent_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_DisableForceInFXActor_TA
// 0x0008 (0x0160 - 0x0168)
class USeqAct_DisableForceInFXActor_TA : public USequenceAction
{
public:
	class AFXActor_X*                                  InFXActor;                                        		// 0x0160 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_DisableForceInFXActor_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_GameURLHasOption_TA
// 0x0010 (0x0160 - 0x0170)
class USeqAct_GameURLHasOption_TA : public USequenceAction
{
public:
	struct FString                                     Option;                                           		// 0x0160 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_GameURLHasOption_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_GetFTEState_TA
// 0x0014 (0x0160 - 0x0174)
class USeqAct_GetFTEState_TA : public USequenceAction
{
public:
	struct FString                                     CheckpointName;                                   		// 0x0160 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long                                      bIsActive : 1;                                    		// 0x0170 (0x0004) [0x0000000000000000] [0x00000001] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_GetFTEState_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_GetGameBall_TA
// 0x0008 (0x0160 - 0x0168)
class USeqAct_GetGameBall_TA : public USequenceAction
{
public:
	class UObject*                                     Ball;                                             		// 0x0160 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_GetGameBall_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_GetPlayerCar_TA
// 0x0018 (0x0160 - 0x0178)
class USeqAct_GetPlayerCar_TA : public USequenceAction
{
public:
	struct FString                                     PlayerName;                                       		// 0x0160 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class AActor*                                      FoundActor;                                       		// 0x0170 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_GetPlayerCar_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_GetRarityColor_TA
// 0x003C (0x0160 - 0x019C)
class USeqAct_GetRarityColor_TA : public USequenceAction
{
public:
	TArray<struct FVector>                             RarityColorsPrime;                                		// 0x0160 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	TArray<struct FVector>                             RarityColorsChina;                                		// 0x0170 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	unsigned long                                      bRandomize : 1;                                   		// 0x0180 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned char                                      MinimumRandomQuality;                             		// 0x0184 (0x0001) [0x0000000000000001] (CPF_Edit)    
	int                                                ColorIdx;                                         		// 0x0188 (0x0004) [0x0000000000000000]               
	struct FVector                                     OutColor;                                         		// 0x018C (0x000C) [0x0000000000002000] (CPF_Transient)
	int                                                LastRandomIdx;                                    		// 0x0198 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_GetRarityColor_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_GetTeamScore_TA
// 0x0008 (0x0160 - 0x0168)
class USeqAct_GetTeamScore_TA : public USequenceAction
{
public:
	int                                                TeamIndex;                                        		// 0x0160 (0x0004) [0x0000000000000000]               
	int                                                TeamScore;                                        		// 0x0164 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_GetTeamScore_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_InstanceMaterial_TA
// 0x0024 (0x0160 - 0x0184)
class USeqAct_InstanceMaterial_TA : public USequenceAction
{
public:
	class UMaterialInstanceConstant*                   MaterialInstance;                                 		// 0x0160 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class ASkeletalMeshActor*                          SK;                                               		// 0x0168 (0x0008) [0x0000000000000000]               
	class AStaticMeshActor*                            SM;                                               		// 0x0170 (0x0008) [0x0000000000000000]               
	class UMaterialInstanceConstant*                   InstancedMaterial;                                		// 0x0178 (0x0008) [0x0000000000000000]               
	int                                                MatIndex;                                         		// 0x0180 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_InstanceMaterial_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_IsTargetInPlayerCameraView
// 0x0014 (0x0178 - 0x018C)
class USeqAct_IsTargetInPlayerCameraView : public USeqAct_Latent
{
public:
	class AActor*                                      Instigator;                                       		// 0x0178 (0x0008) [0x0000000000000000]               
	class AActor*                                      Target;                                           		// 0x0180 (0x0008) [0x0000000000000000]               
	float                                              MaxConeAngle;                                     		// 0x0188 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_IsTargetInPlayerCameraView");
		}

		return uClassPointer;
	};

	bool eventUpdate(float DeltaTime);
};

// Class TAGame.SeqAct_LoadMap_TA
// 0x0010 (0x0160 - 0x0170)
class USeqAct_LoadMap_TA : public USequenceAction
{
public:
	struct FString                                     Map;                                              		// 0x0160 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_LoadMap_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_LookAtActor_TA
// 0x0018 (0x0178 - 0x0190)
class USeqAct_LookAtActor_TA : public USeqAct_Latent
{
public:
	class AActor*                                      Actor;                                            		// 0x0178 (0x0008) [0x0000000000000000]               
	class AActor*                                      ActorToLookAt;                                    		// 0x0180 (0x0008) [0x0000000000000000]               
	float                                              InterpSpeed;                                      		// 0x0188 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bConstantInterpSpeed : 1;                         		// 0x018C (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bUpdating : 1;                                    		// 0x018C (0x0004) [0x0000000000000000] [0x00000002] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_LookAtActor_TA");
		}

		return uClassPointer;
	};

	void SetActorRotation(struct FRotator NewRotation);
	bool eventUpdate(float DeltaTime);
	void eventActivated();
};

// Class TAGame.SeqAct_MatchCountdown_TA
// 0x0004 (0x0160 - 0x0164)
class USeqAct_MatchCountdown_TA : public USequenceAction
{
public:
	int                                                CountdownTime;                                    		// 0x0160 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_MatchCountdown_TA");
		}

		return uClassPointer;
	};

	void HandleCountdown();
	void eventActivated();
};

// Class TAGame.SeqAct_MoveActor_TA
// 0x0018 (0x0178 - 0x0190)
class USeqAct_MoveActor_TA : public USeqAct_Latent
{
public:
	class AActor*                                      Actor;                                            		// 0x0178 (0x0008) [0x0000000000000000]               
	class AActor*                                      MoveTransform;                                    		// 0x0180 (0x0008) [0x0000000000000000]               
	float                                              InterpSpeed;                                      		// 0x0188 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bConstantInterpSpeed : 1;                         		// 0x018C (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bMove : 1;                                        		// 0x018C (0x0004) [0x0000000000000000] [0x00000002] 
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_MoveActor_TA");
		}

		return uClassPointer;
	};

	bool eventUpdate(float DeltaTime);
	void eventActivated();
};

// Class TAGame.SeqAct_ReinitPhys_TA
// 0x0008 (0x0160 - 0x0168)
class USeqAct_ReinitPhys_TA : public USequenceAction
{
public:
	class AActor*                                      RBObj;                                            		// 0x0160 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_ReinitPhys_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_RotateActor_TA
// 0x001C (0x0178 - 0x0194)
class USeqAct_RotateActor_TA : public USeqAct_Latent
{
public:
	class AActor*                                      Actor;                                            		// 0x0178 (0x0008) [0x0000000000000000]               
	class AActor*                                      RotateTransform;                                  		// 0x0180 (0x0008) [0x0000000000000000]               
	float                                              InterpSpeed;                                      		// 0x0188 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bConstantInterpSpeed : 1;                         		// 0x018C (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bUpdating : 1;                                    		// 0x018C (0x0004) [0x0000000000000000] [0x00000002] 
	float                                              RotateTolerance;                                  		// 0x0190 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_RotateActor_TA");
		}

		return uClassPointer;
	};

	void SetActorRotation(struct FRotator NewRotation);
	bool eventUpdate(float DeltaTime);
	void eventActivated();
};

// Class TAGame.SeqAct_SetBreakoutBallCharge_TA
// 0x0010 (0x0160 - 0x0170)
class USeqAct_SetBreakoutBallCharge_TA : public USequenceAction
{
public:
	class AActor*                                      BallObj;                                          		// 0x0160 (0x0008) [0x0000000000000000]               
	int                                                Charge;                                           		// 0x0168 (0x0004) [0x0000000000000000]               
	int                                                Team;                                             		// 0x016C (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetBreakoutBallCharge_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_SetBreakoutTileDamage_TA
// 0x000C (0x0160 - 0x016C)
class USeqAct_SetBreakoutTileDamage_TA : public USequenceAction
{
public:
	class AActor*                                      PlatformObj;                                      		// 0x0160 (0x0008) [0x0000000000000000]               
	int                                                Damage;                                           		// 0x0168 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetBreakoutTileDamage_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_SetGreenScreen_TA
// 0x0010 (0x0160 - 0x0170)
class USeqAct_SetGreenScreen_TA : public USequenceAction
{
public:
	struct FLinearColor                                ColorToUse;                                       		// 0x0160 (0x0010) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetGreenScreen_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_SetMatInstVectorParam_TA
// 0x001C (0x0160 - 0x017C)
class USeqAct_SetMatInstVectorParam_TA : public USequenceAction
{
public:
	class UMaterialInstanceConstant*                   MatInst;                                          		// 0x0160 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       ParamName;                                        		// 0x0168 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     VectorValue;                                      		// 0x0170 (0x000C) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetMatInstVectorParam_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_SetMeshMaterialScalarParameter_TA
// 0x0024 (0x0160 - 0x0184)
class USeqAct_SetMeshMaterialScalarParameter_TA : public USequenceAction
{
public:
	TArray<class UObject*>                             MeshList;                                         		// 0x0160 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FString                                     ParamName;                                        		// 0x0170 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              ScalarValue;                                      		// 0x0180 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetMeshMaterialScalarParameter_TA");
		}

		return uClassPointer;
	};

	void __SeqAct_SetMeshMaterialScalarParameter_TA__Activated_FF69E869486777191FA47989DB6F10B2(class UObject* Mesh);
	void eventActivated();
};

// Class TAGame.SeqAct_SetNameplate_TA
// 0x0018 (0x0160 - 0x0178)
class USeqAct_SetNameplate_TA : public USequenceAction
{
public:
	class AActor*                                      Instigator;                                       		// 0x0160 (0x0008) [0x0000000000000000]               
	struct FString                                     LocalizedPlayerName;                              		// 0x0168 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetNameplate_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_SetPostProcess_TA
// 0x0014 (0x0160 - 0x0174)
class USeqAct_SetPostProcess_TA : public USequenceAction
{
public:
	TArray<class UPostProcessChain*>                   Chains;                                           		// 0x0160 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	unsigned long                                      bReplaceCurrentChain : 1;                         		// 0x0170 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetPostProcess_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_SetReplayCamera_TA
// 0x002C (0x0160 - 0x018C)
class USeqAct_SetReplayCamera_TA : public USequenceAction
{
public:
	struct FString                                     FocusActor;                                       		// 0x0160 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FVector                                     LocationOffset;                                   		// 0x0170 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    Rotation;                                         		// 0x017C (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              FOV;                                              		// 0x0188 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetReplayCamera_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_SetSkelMATLoadout_TA
// 0x0014 (0x0160 - 0x0174)
class USeqAct_SetSkelMATLoadout_TA : public USequenceAction
{
public:
	class ASkeletalMeshActorMAT_Products_TA*           ActorMAT;                                         		// 0x0160 (0x0008) [0x0000000000000000]               
	class UObject*                                     ControllerOrPawn;                                 		// 0x0168 (0x0008) [0x0000000000000000]               
	int                                                LoadoutIndex;                                     		// 0x0170 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetSkelMATLoadout_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_SetTutorialTip_TA
// 0x0020 (0x0160 - 0x0180)
class USeqAct_SetTutorialTip_TA : public USequenceAction
{
public:
	struct FString                                     Tip;                                              		// 0x0160 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	TArray<struct FName>                               ActionNames;                                      		// 0x0170 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SetTutorialTip_TA");
		}

		return uClassPointer;
	};

	struct FString GetStringWithMergedActions();
	void eventActivated();
};

// Class TAGame.SeqAct_SpawnActor_TA
// 0x0018 (0x0160 - 0x0178)
class USeqAct_SpawnActor_TA : public USequenceAction
{
public:
	class AActor*                                      ActorArchetype;                                   		// 0x0160 (0x0008) [0x0000000000000000]               
	class AActor*                                      Transform;                                        		// 0x0168 (0x0008) [0x0000000000000000]               
	class AActor*                                      SpawnedActor;                                     		// 0x0170 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_SpawnActor_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_TermPhys_TA
// 0x0008 (0x0160 - 0x0168)
class USeqAct_TermPhys_TA : public USequenceAction
{
public:
	class AActor*                                      RBObj;                                            		// 0x0160 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_TermPhys_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_ToggleUIOverlay_TA
// 0x0010 (0x0160 - 0x0170)
class USeqAct_ToggleUIOverlay_TA : public USequenceAction
{
public:
	struct FString                                     UIOverlayName;                                    		// 0x0160 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_ToggleUIOverlay_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqCond_CompareString_TA
// 0x0028 (0x0140 - 0x0168)
class USeqCond_CompareString_TA : public USequenceCondition
{
public:
	unsigned long                                      bIgnoreCase : 1;                                  		// 0x0140 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	struct FString                                     StringA;                                          		// 0x0148 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     StringB;                                          		// 0x0158 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqCond_CompareString_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqEvent_CarSpawned_TA
// 0x0014 (0x017C - 0x0190)
class USeqEvent_CarSpawned_TA : public USequenceEvent
{
public:
	struct FString                                     PlayerName;                                       		// 0x0180 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_CarSpawned_TA");
		}

		return uClassPointer;
	};

	void TriggerFor(class ACar_TA* Car);
	void HandleVehicleSetup(class ACar_TA* Car);
	void HandleCarSet(class APRI_TA* PRI);
	void eventRegisterEvent();
};

// Class TAGame.SeqEvent_CarTouchBall_TA
// 0x0008 (0x017C - 0x0184)
class USeqEvent_CarTouchBall_TA : public USequenceEvent
{
public:
	unsigned long                                      bOneTouchOnly : 1;                                		// 0x0180 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_CarTouchBall_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqEvent_GarageComplexState_TA
// 0x0024 (0x017C - 0x01A0)
class USeqEvent_GarageComplexState_TA : public USequenceEvent
{
public:
	struct FString                                     GarageState;                                      		// 0x0180 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FString                                     PreviousGarageState;                              		// 0x0190 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_GarageComplexState_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqEvent_MainMenuSwitched_TA
// 0x0005 (0x017C - 0x0181)
class USeqEvent_MainMenuSwitched_TA : public USequenceEvent
{
public:
	unsigned char                                      PrevBackground;                                   		// 0x0180 (0x0001) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_MainMenuSwitched_TA");
		}

		return uClassPointer;
	};

	void __SeqEvent_MainMenuSwitched_TA__RegisterEvent_36199CFC4040C3D9DB926588151525BA(class UUIConfig_TA* Config);
	void __SeqEvent_MainMenuSwitched_TA__RegisterEvent_E99034BD4A6FD1F6BBF092AB5D4712CF(class UUIConfig_TA* Config);
	void HandleMenuBGChange();
	void eventRegisterEvent();
};

// Class TAGame.ShopErrors_TA
// 0x0020 (0x0080 - 0x00A0)
class UShopErrors_TA : public UErrorList
{
public:
	class UErrorType*                                  ShopItemBadData;                                  		// 0x0080 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  ShopItemDiscountBadData;                          		// 0x0088 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  ShopSyncedBadData;                                		// 0x0090 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  ShopNotEnoughCurrency;                            		// 0x0098 (0x0008) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ShopErrors_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SkillDecayFeature_TA
// 0x0000 (0x0060 - 0x0060)
class USkillDecayFeature_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SkillDecayFeature_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SkillDecaySystem_TA
// 0x0000 (0x0060 - 0x0060)
class USkillDecaySystem_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SkillDecaySystem_TA");
		}

		return uClassPointer;
	};

	int __SkillDecaySystem_TA__CheckForSkillDecay_EF7B67924FFC746A72FBB381A2B084C9(class UGameSettingPlaylist_X* P);
	bool __SkillDecaySystem_TA__CheckForSkillDecay_2916FA7842467458A96E74AB6B78A1A4(class UGameSettingPlaylist_X* P);
	void SetPlaylistSkillSaveData(class UPlaylistSkillDataSave_TA* SkillSave, struct FPlaylistSkillData& Data);
	struct FPlaylistSkillData GetPlaylistSkillData(class UPlaylistSkillDataSave_TA* SkillSave, int Playlist);
	void CheckForSkillDecay(class ULocalPlayer_TA* LocalPlayer, class UPlaylistSkillDataSave_TA* SkillSave, class USyncedSkillData_X* Skill, class UDownloadedPlaylistsData_X* DownloadedPlaylists);
	void HandlePartyJoined(class USkillDecayFeature_TA* Feature, class ULocalPlayer_TA* LocalPlayer, class UPlaylistSkillDataSave_TA* SkillSave, class USyncedSkillData_X* Skill, class UDownloadedPlaylistsData_X* DownloadedPlaylists, class UPartyJoinedEvent_X* PartyJoinedEvent);
	void HandleViewingMatchmaking(class USkillDecayFeature_TA* Feature, class ULocalPlayer_TA* LocalPlayer, class UPlaylistSkillDataSave_TA* SkillSave, class USyncedSkillData_X* Skill, class UDownloadedPlaylistsData_X* DownloadedPlaylists, class UViewingMatchmaking_TA* ViewingMatchmaking);
	void InitSkillDecaySystem(class ULocalPlayer_TA* Player);
};

// Class TAGame.SpecialEventErrors_TA
// 0x0030 (0x0080 - 0x00B0)
class USpecialEventErrors_TA : public UErrorList
{
public:
	class UErrorType*                                  EventNotFound;                                    		// 0x0080 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  EventStoreCurrencyExpired;                        		// 0x0088 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  EventStorePurchaseError;                          		// 0x0090 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  EventStoreNotEnoughCurrency;                      		// 0x0098 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  EventStoreLimitReached;                           		// 0x00A0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UErrorType*                                  EventStoreDisabled;                               		// 0x00A8 (0x0008) [0x0000000000000002] (CPF_Const)   
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialEventErrors_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SpecialPickup_Attachment_TA
// 0x0010 (0x0350 - 0x0360)
class ASpecialPickup_Attachment_TA : public ASpecialPickup_TA
{
public:
	class ASpecialAttachment_TA*                       AttachmentArchetype;                              		// 0x0350 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class ASpecialAttachment_TA*                       Attachment;                                       		// 0x0358 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_Attachment_TA");
		}

		return uClassPointer;
	};

	void PickupEnd();
	void PickupStart();
};

// Class TAGame.SpecialPickup_BallCarSpring_TA
// 0x0008 (0x0530 - 0x0538)
class ASpecialPickup_BallCarSpring_TA : public ASpecialPickup_Spring_TA
{
public:
	struct FName                                       SpringMeshDistanceParam;                          		// 0x0530 (0x0008) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_BallCarSpring_TA");
		}

		return uClassPointer;
	};

	void ScaleSpringMeshToLocation(struct FVector NewLocation, struct FVector TargetLocation);
};

// Class TAGame.SpecialPickup_BallVelcro_TA
// 0x00A8 (0x0350 - 0x03F8)
class ASpecialPickup_BallVelcro_TA : public ASpecialPickup_TA
{
public:
	struct FVector                                     BallOffset;                                       		// 0x0350 (0x000C) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bUseRealOffset : 1;                               		// 0x035C (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bHit : 1;                                         		// 0x035C (0x0004) [0x0000000000002020] [0x00000002] (CPF_Net | CPF_Transient)
	unsigned long                                      bBroken : 1;                                      		// 0x035C (0x0004) [0x0000000000002020] [0x00000004] (CPF_Net | CPF_Transient)
	float                                              AfterHitDuration;                                 		// 0x0360 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UStaticMesh*                                 Mesh;                                             		// 0x0368 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           MeshScaleCurve;                                   		// 0x0370 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           HitMeshScaleCurve;                                		// 0x0388 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           BrokenScaleCurve;                                 		// 0x03A0 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              PostBreakDuration;                                		// 0x03B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 BallHitSFX;                                       		// 0x03C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              MinBreakForce;                                    		// 0x03C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinBreakTime;                                     		// 0x03CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CheckLastTouchRate;                               		// 0x03D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UStaticMeshComponent*                        SMC;                                              		// 0x03D8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class ABall_TA*                                    WeldedBall;                                       		// 0x03E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              OldBallMass;                                      		// 0x03E8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              AttachTime;                                       		// 0x03EC (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              LastTouchCheckTime;                               		// 0x03F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              BreakTime;                                        		// 0x03F4 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_BallVelcro_TA");
		}

		return uClassPointer;
	};

	void __SpecialPickup_BallVelcro_TA__HandleHitBall_BC35479D4352AC03A0D3D08B8FC279DC(class ABall_TA* B);
	bool DisableBallImpactForces();
	void DoBreak();
	void HandleCollision(class ARBActor_TA* RBActor, struct FAccumulatedRigidBodyCollision Collision);
	void HandleCarTouch(class ABall_TA* InBall, class ACar_TA* InCar, unsigned char HitType);
	void PickupEnd();
	void OnBallHit();
	void HandleHitBall(class ACar_TA* InCar, class ABall_TA* InBall, struct FVector HitLocation, struct FVector HitNormal);
	void PickupTick(float DeltaTime);
	void TickPickupFX(float DeltaTime);
	void RemovePickupFX();
	void InitPickupFX();
	void PickupStart();
	void eventReplicatedEvent(struct FName EventName);
};

// Class TAGame.SpecialPickup_Batarang_TA
// 0x0008 (0x0538 - 0x0540)
class ASpecialPickup_Batarang_TA : public ASpecialPickup_BallLasso_TA
{
public:
	float                                              SpinSpeed;                                        		// 0x0538 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CurRotation;                                      		// 0x053C (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_Batarang_TA");
		}

		return uClassPointer;
	};

	void UpdateVisual(float DeltaTime);
};

// Class TAGame.SpecialPickup_BoostMod_TA
// 0x000C (0x0350 - 0x035C)
class ASpecialPickup_BoostMod_TA : public ASpecialPickup_TA
{
public:
	unsigned long                                      bUnlimitedBoost : 1;                              		// 0x0350 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	float                                              BoostStrength;                                    		// 0x0354 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OldBoostStrength;                                 		// 0x0358 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_BoostMod_TA");
		}

		return uClassPointer;
	};

	void PickupEnd();
	void PickupStart();
};

// Class TAGame.SpecialPickup_BoostOverride_TA
// 0x0038 (0x0388 - 0x03C0)
class ASpecialPickup_BoostOverride_TA : public ASpecialPickup_Targeted_TA
{
public:
	class AFXActor_X*                                  OtherCarFXArchetype;                              		// 0x0388 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 BoostSFX;                                         		// 0x0390 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UParticleSystem*                             BeamPS;                                           		// 0x0398 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              AddVelocityZ;                                     		// 0x03A0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UParticleSystemComponent*                    BeamPSC;                                          		// 0x03A8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class AFXActor_X*                                  OtherCarFX;                                       		// 0x03B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACar_TA*                                     OtherCar;                                         		// 0x03B8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_BoostOverride_TA");
		}

		return uClassPointer;
	};

	void PickupEnd();
	void RemovePickupFX();
	void InitPickupFX();
	void OnTargetChanged();
	void PickupStart();
};

// Class TAGame.SpecialPickup_CarFreeze_TA
// 0x0020 (0x0388 - 0x03A8)
class ASpecialPickup_CarFreeze_TA : public ASpecialPickup_Targeted_TA
{
public:
	class AFXActor_X*                                  OtherCarFXArchetype;                              		// 0x0388 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              TireFrictionScale;                                		// 0x0390 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AddAngularVelocity;                               		// 0x0394 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_X*                                  OtherCarFX;                                       		// 0x0398 (0x0008) [0x0000000000000000]               
	class ACar_TA*                                     OtherCar;                                         		// 0x03A0 (0x0008) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_CarFreeze_TA");
		}

		return uClassPointer;
	};

	void RemovePickupFX();
	void InitPickupFX();
	void PickupEnd();
	void PickupStart();
};

// Class TAGame.SpecialPickup_CarGravity_TA
// 0x0014 (0x0350 - 0x0364)
class ASpecialPickup_CarGravity_TA : public ASpecialPickup_TA
{
public:
	float                                              GravityScale;                                     		// 0x0350 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     AddedForce;                                       		// 0x0354 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              OrigGravityScale;                                 		// 0x0360 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_CarGravity_TA");
		}

		return uClassPointer;
	};

	void PickupTick(float DeltaTime);
	void PickupEnd();
	void PickupStart();
};

// Class TAGame.SpecialPickup_CarLaunch_TA
// 0x0004 (0x0350 - 0x0354)
class ASpecialPickup_CarLaunch_TA : public ASpecialPickup_TA
{
public:
	float                                              LaunchVelocity;                                   		// 0x0350 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_CarLaunch_TA");
		}

		return uClassPointer;
	};

	void PickupStart();
};

// Class TAGame.SpecialPickup_CarSpeed_TA
// 0x0040 (0x0350 - 0x0390)
class ASpecialPickup_CarSpeed_TA : public ASpecialPickup_TA
{
public:
	float                                              SpeedMultiplier;                                  		// 0x0350 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxLinearSpeedMultiplier;                         		// 0x0354 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FInterpCurveFloat                           DriveTorqueCurve;                                 		// 0x0358 (0x0018) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              OriginalTorque;                                   		// 0x0370 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              OriginalMaxLinearSpeed;                           		// 0x0374 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FInterpCurveFloat                           OriginalDriveTorqueCurve;                         		// 0x0378 (0x0018) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_CarSpeed_TA");
		}

		return uClassPointer;
	};

	void PickupEnd();
	void PickupStart();
};

// Class TAGame.SpecialPickup_Demolish_TA
// 0x0004 (0x0350 - 0x0354)
class ASpecialPickup_Demolish_TA : public ASpecialPickup_TA
{
public:
	unsigned char                                      DemolishTarget;                                   		// 0x0350 (0x0001) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      DemolishSpeed;                                    		// 0x0351 (0x0001) [0x0000000000000001] (CPF_Edit)    
	unsigned char                                      OldTarget;                                        		// 0x0352 (0x0001) [0x0000000000002000] (CPF_Transient)
	unsigned char                                      OldSpeed;                                         		// 0x0353 (0x0001) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_Demolish_TA");
		}

		return uClassPointer;
	};

	void PickupEnd();
	void PickupStart();
};

// Class TAGame.SpecialPickup_Football_TA
// 0x0074 (0x0350 - 0x03C4)
class ASpecialPickup_Football_TA : public ASpecialPickup_TA
{
public:
	class UAkSoundCue*                                 BallHitSFX;                                       		// 0x0350 (0x0008) [0x0000000000000000]               
	class UAkSoundCue*                                 DeactivateSFX;                                    		// 0x0358 (0x0008) [0x0000000000000000]               
	float                                              AttachTime;                                       		// 0x0360 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              DetachTime;                                       		// 0x0364 (0x0004) [0x0000000000002000] (CPF_Transient)
	TArray<struct FThrowSetting>                       ThrowSettings;                                    		// 0x0368 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FVector                                     AttachOffset;                                     		// 0x0378 (0x000C) [0x0000000000000000]               
	float                                              CarFumbleForce;                                   		// 0x0384 (0x0004) [0x0000000000000000]               
	float                                              DoubleJumpUpForce;                                		// 0x0388 (0x0004) [0x0000000000000000]               
	float                                              DemolishUpForce;                                  		// 0x038C (0x0004) [0x0000000000000000]               
	float                                              MinBreakTime;                                     		// 0x0390 (0x0004) [0x0000000000000000]               
	float                                              MinAttachTime;                                    		// 0x0394 (0x0004) [0x0000000000000000]               
	float                                              CheckLastTouchRate;                               		// 0x0398 (0x0004) [0x0000000000000000]               
	float                                              OutOfBoundsZ;                                     		// 0x039C (0x0004) [0x0000000000000000]               
	class ABall_TA*                                    WeldedBall;                                       		// 0x03A0 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              LastTouchCheckTime;                               		// 0x03A8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class ABall_TA*                                    PendingBall;                                      		// 0x03B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     PendingBallDodge;                                 		// 0x03B8 (0x000C) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_Football_TA");
		}

		return uClassPointer;
	};

	void __SpecialPickup_Football_TA__OnWeldedBallChanged_F76292A94311C4B7EB70CCBDA0B880CD(class ACarComponent_Boost_TA* BoostComponent);
	bool IsDrivingOutOfBounds();
	bool DisableBallImpactForces();
	void DeactivationFX();
	void HandleBallExplode(class ABall_TA* Ball);
	bool GetShouldHideActivateUI();
	void DetachBall();
	bool GetWasRecentlyAttached();
	void HandleCarTouch(class ABall_TA* InBall, class ACar_TA* InCar, unsigned char HitType);
	void FumbleBall(float UpwardForce);
	void HandleDemolish(class ACar_TA* Victim, struct FDemolishData Data);
	void HandleCarDoubleJump(class ACarComponent_DoubleJump_TA* DoubleJumpComponent);
	struct FThrowSetting BlendThrowSettings(unsigned char ThrowTypeA, unsigned char ThrowTypeB, float Alpha);
	void ApplyThrow(class ABall_TA* Ball, struct FThrowSetting Setting, struct FVector ThrowDirection);
	void ThrowPendingBall();
	void HandleCarDodged(class ACarComponent_Dodge_TA* DodgeComponent);
	void HandleCollision(class ARBActor_TA* RBActor, struct FAccumulatedRigidBodyCollision Collision);
	void HandleHitBall(class ACar_TA* InCar, class ABall_TA* InBall, struct FVector HitLocation, struct FVector HitNormal);
	void OnWeldedBallChanged();
	void PickupTick(float DeltaTime);
	void PickupEnd();
	void PickupStart();
	void eventReplicatedEvent(struct FName VarName);
};

// Class TAGame.SpecialPickup_HandbrakeOverride_TA
// 0x0008 (0x0388 - 0x0390)
class ASpecialPickup_HandbrakeOverride_TA : public ASpecialPickup_Targeted_TA
{
public:
	class ACar_TA*                                     OtherCar;                                         		// 0x0388 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_HandbrakeOverride_TA");
		}

		return uClassPointer;
	};

	void PickupEnd();
	void PickupStart();
};

// Class TAGame.SpecialPickup_HitForce_TA
// 0x0038 (0x0350 - 0x0388)
class ASpecialPickup_HitForce_TA : public ASpecialPickup_TA
{
public:
	unsigned long                                      bBallForce : 1;                                   		// 0x0350 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bCarForce : 1;                                    		// 0x0350 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	unsigned long                                      bDemolishCars : 1;                                		// 0x0350 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	float                                              BallHitForce;                                     		// 0x0354 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CarHitForce;                                      		// 0x0358 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_TA*                                 BallHitFXArchetype;                               		// 0x0360 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_TA*                                 CarHitFXArchetype;                                		// 0x0368 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 HitSFX;                                           		// 0x0370 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              MinFXTime;                                        		// 0x0378 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OrigBallHitForce;                                 		// 0x037C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              OrigCarHitForce;                                  		// 0x0380 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastFXTime;                                       		// 0x0384 (0x0004) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_HitForce_TA");
		}

		return uClassPointer;
	};

	void PickupEnd();
	void HandleCollision(class ARBActor_TA* RB, struct FAccumulatedRigidBodyCollision Collision);
	void HandleCollisionFX(class ARBActor_TA* RB, struct FAccumulatedRigidBodyCollision Collision);
	void PickupStart();
};

// Class TAGame.SpecialPickup_Inflate_TA
// 0x0010 (0x0388 - 0x0398)
class ASpecialPickup_Inflate_TA : public ASpecialPickup_Targeted_TA
{
public:
	float                                              ScaleMultiplier;                                  		// 0x0388 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              GravityMultiplier;                                		// 0x038C (0x0004) [0x0000000000000001] (CPF_Edit)    
	class ACar_TA*                                     OtherCar;                                         		// 0x0390 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_Inflate_TA");
		}

		return uClassPointer;
	};

	void PickupEnd();
	void OnTargetChanged();
	void PickupStart();
};

// Class TAGame.SpecialPickup_Rugby_TA
// 0x0060 (0x0350 - 0x03B0)
class ASpecialPickup_Rugby_TA : public ASpecialPickup_TA
{
public:
	class UStaticMesh*                                 Mesh;                                             		// 0x0350 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 BallHitSFX;                                       		// 0x0358 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkSoundCue*                                 DeactivateSFX;                                    		// 0x0360 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              AttachTime;                                       		// 0x0368 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              MinDetachTime;                                    		// 0x036C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinBreakTime;                                     		// 0x0370 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinBreakForce;                                    		// 0x0374 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CheckLastTouchRate;                               		// 0x0378 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              KickOffActivationDelay;                           		// 0x037C (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UStaticMeshComponent*                        SMC;                                              		// 0x0380 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class ABall_TA*                                    WeldedBall;                                       		// 0x0388 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              LastTouchCheckTime;                               		// 0x0390 (0x0004) [0x0000000000002000] (CPF_Transient)
	unsigned long                                      bBallWelded : 1;                                  		// 0x0394 (0x0004) [0x0000000000002020] [0x00000001] (CPF_Net | CPF_Transient)
	struct FScriptDelegate                             __bBallWelded__ChangeNotify;                      		// 0x0398 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_Rugby_TA");
		}

		return uClassPointer;
	};

	void __SpecialPickup_Rugby_TA__HandleBallWeldedChanged_32344453454AEA44E541D482A3374331(class ACarComponent_Boost_TA* BoostComponent);
	void __bBallWelded__ChangeNotifyFunc();
	bool DisableBallImpactForces();
	void DeactivationFX();
	void HandleBallExploded(class ABall_TA* Ball);
	bool GetShouldHideActivateUI();
	void DoBreak();
	bool GetWasRecentlyAttached();
	void HandleCarTouch(class ABall_TA* InBall, class ACar_TA* InCar, unsigned char HitType);
	void HandleHitBall(class ACar_TA* InCar, class ABall_TA* InBall, struct FVector HitLocation, struct FVector HitNormal);
	void HandleBallWeldedChanged();
	void HandleCollision(class ARBActor_TA* RBActor, struct FAccumulatedRigidBodyCollision Collision);
	void PickupTick(float DeltaTime);
	void RemovePickupFX();
	void PickupEnd();
	void InitPickupFX();
	void PickupStart();
	bool GetCanDetach();
	bool TryActivate(class ARBActor_TA* TargetOverride);
};

// Class TAGame.SpecialPickup_Swapper_TA
// 0x0028 (0x0388 - 0x03B0)
class ASpecialPickup_Swapper_TA : public ASpecialPickup_Targeted_TA
{
public:
	class AFXActor_TA*                                 OwnCarFX;                                         		// 0x0388 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_TA*                                 OtherCarFX;                                       		// 0x0390 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              AddVelocityZ;                                     		// 0x0398 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AFXActor_TA*                                 OtherFX;                                          		// 0x03A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACar_TA*                                     OtherCar;                                         		// 0x03A8 (0x0008) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_Swapper_TA");
		}

		return uClassPointer;
	};

	void PickupEnd();
	void InitPickupFX();
	void OnTargetChanged();
	void PickupStart();
};

// Class TAGame.SpecialPickup_TimeBomb_TA
// 0x0020 (0x0350 - 0x0370)
class ASpecialPickup_TimeBomb_TA : public ASpecialPickup_TA
{
public:
	float                                              Radius;                                           		// 0x0350 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AlmostReadyDuration;                              		// 0x0354 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              StartMatSpeed;                                    		// 0x0358 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AlmostReadyMatSpeed;                              		// 0x035C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ImpulseForce;                                     		// 0x0360 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CarVerticalForce;                                 		// 0x0364 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CarTorque;                                        		// 0x0368 (0x0004) [0x0000000000000001] (CPF_Edit)    
	unsigned long                                      bDemolish : 1;                                    		// 0x036C (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	unsigned long                                      bImpulse : 1;                                     		// 0x036C (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SpecialPickup_TimeBomb_TA");
		}

		return uClassPointer;
	};

	void PickupEnd();
	void AlmostReady();
	void PickupStart();
};

// Class TAGame.SplineCameraTrack_TA
// 0x0000 (0x02D8 - 0x02D8)
class ASplineCameraTrack_TA : public ASplineActor
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SplineCameraTrack_TA");
		}

		return uClassPointer;
	};

	class ASplineActor* GetBestNode(struct FVector FromLocation);
	struct FVector GetLocationOnSpline(struct FVector FromLocation, float ExtraDistance);
};

// Class TAGame.SplineFocusTarget_TA
// 0x000C (0x0268 - 0x0274)
class ASplineFocusTarget_TA : public ACustomFocusTarget_TA
{
public:
	class ASplineCameraTrack_TA*                       Spline;                                           		// 0x0268 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              DistanceAhead;                                    		// 0x0270 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SplineFocusTarget_TA");
		}

		return uClassPointer;
	};

	struct FVector GetFocusLocation(class ACar_TA* ForCar);
};

// Class TAGame.StasisExplosionHandler_TA
// 0x0010 (0x0150 - 0x0160)
class UStasisExplosionHandler_TA : public UExplosionHitHandler_TA
{
public:
	struct FVector                                     VelocityToApply;                                  		// 0x0150 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              SlowDownTime;                                     		// 0x015C (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StasisExplosionHandler_TA");
		}

		return uClassPointer;
	};

	void ApplyImpulse(class ACar_TA* CarHit, struct FVector HitLocation, float DamageScale, struct FContactInformation& ContactInfo);
};

// Class TAGame.StatFactory_Basketball_TA
// 0x000C (0x0458 - 0x0464)
class AStatFactory_Basketball_TA : public AStatFactory_TA
{
public:
	class UStatEvent_TA*                               HoopsSwishGoal;                                   		// 0x0458 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              RedZoneHeightScale;                               		// 0x0460 (0x0004) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatFactory_Basketball_TA");
		}

		return uClassPointer;
	};

	bool IsSwishGoal(class UGoal_TA* Goal, class ABall_TA* Ball, int ScoreIndex);
	void OnGoalScored(class AGameEvent_Soccar_TA* InGameEvent, class ABall_TA* Ball, class UGoal_TA* Goal, int ScoreIndex, int AssistIndex);
	class UGoal_TA* FindShotGoal(class ABall_TA* Ball);
	bool IsInRedZone(class UGoal_TA* Goal, class ABall_TA* Ball);
};

// Class TAGame.StatFactory_Breakout_TA
// 0x0034 (0x0458 - 0x048C)
class AStatFactory_Breakout_TA : public AStatFactory_TA
{
public:
	class UStatEvent_TA*                               BreakoutDamage;                                   		// 0x0458 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UStatEvent_TA*                               BreakoutDamageLarge;                              		// 0x0460 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int                                                BreakoutSaveDamageThreshold;                      		// 0x0468 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int                                                BreakoutDamageLargeThreshold;                     		// 0x046C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ShotGoalTimestep;                                 		// 0x0470 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AGameEvent_Breakout_TA*                      BreakoutEvent;                                    		// 0x0478 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     FieldCenter;                                      		// 0x0480 (0x000C) [0x0000000000002000] (CPF_Transient)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatFactory_Breakout_TA");
		}

		return uClassPointer;
	};

	float GetHitDistanceToGoal(class ABall_TA* Ball, struct FBallHitInfo Hit, class UGoal_TA* Goal);
	class UGoal_TA* CalculateShotGoal(class UGoal_TA* GoalToTest, class ABall_TA* Ball, float ArriveTime);
	class UGoal_TA* FindShotGoal(class ABall_TA* Ball);
	void HandleBallAppliedDamage(class ABall_Breakout_TA* Ball, struct FAppliedBreakoutDamage Damage);
	void HandlePlatformDamaged(class ABreakOutActor_Platform_TA* Platform, class APRI_TA* PRI, class ABall_TA* Ball);
	void UnregisterBall(class APawn_X* Ball);
	void RegisterBall(class ABall_TA* Ball);
	void SetGameEvent(class AGameEvent_Soccar_TA* InGameEvent);
	bool IsInRedZone(class UGoal_TA* Goal, class ABall_TA* Ball);
};

// Class TAGame.StatFactory_HauntedBall_TA
// 0x0004 (0x0458 - 0x045C)
class AStatFactory_HauntedBall_TA : public AStatFactory_TA
{
public:
	float                                              EpicSaveTime;                                     		// 0x0458 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StatFactory_HauntedBall_TA");
		}

		return uClassPointer;
	};

	bool IsEpicSave(class ABall_TA* Ball, struct FBallHitInfo Hit, class UGoal_TA* Goal);
	bool IsBallBehindGoal(class ABall_TA* Ball, class UGoal_TA* Goal);
	class UGoal_TA* FindShotGoal(class ABall_TA* Ball);
};

// Class TAGame.StaticMeshActor_TA
// 0x0008 (0x0268 - 0x0270)
class AStaticMeshActor_TA : public AActor
{
public:
	class UStaticMeshComponent*                        StaticMeshComponent;                              		// 0x0268 (0x0008) [0x00000000040A000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StaticMeshActor_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.StaticMeshRBActor_TA
// 0x0044 (0x07A0 - 0x07E4)
class AStaticMeshRBActor_TA : public ARBActor_TA
{
public:
	class UStaticMeshComponent*                        StaticMesh;                                       		// 0x07A0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	unsigned char                                      ApplyCollisionForceFrom;                          		// 0x07A8 (0x0001) [0x0000000000000001] (CPF_Edit)    
	float                                              TouchBounceForce;                                 		// 0x07AC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              SpeedBounchForceMultiplier;                       		// 0x07B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     LinearConstraintsLower;                           		// 0x07B4 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     LinearConstraintsUpper;                           		// 0x07C0 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     AngularConstraintsLower;                          		// 0x07CC (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     AngularConstraintsUpper;                          		// 0x07D8 (0x000C) [0x0000000000000001] (CPF_Edit)    
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.StaticMeshRBActor_TA");
		}

		return uClassPointer;
	};

	void eventOnRigidBodyCollision(struct FAccumulatedRigidBodyCollision Collision);
	void eventDestroyed();
	void eventPostBeginPlay();
};

// Class TAGame.TMetricsShared_TA
// 0x0008 (0x0060 - 0x0068)
class UTMetricsShared_TA : public UObject
{
public:
	float                                              PreLoadMapTime;                                   		// 0x0060 (0x0004) [0x0000000000000000]               
	float                                              LevelLoadTime;                                    		// 0x0064 (0x0004) [0x0000000000000000]               
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TMetricsShared_TA");
		}

		return uClassPointer;
	};

	struct FString GetGameStateName(class AGameEvent_TA* GameEvent);
	struct FString GetGameMode(class AGameEvent_TA* GameEvent);
	void HandleConnectionTimedOut(class APlayerController* PC);
	void HandleMatchEnded(class AGameEvent_Soccar_TA* GameEvent);
	void HandleMatchStarted(class AGameEvent_TA* GameEvent);
	void HandlePostLoadMap();
	void HandlePreLoadMap(struct FString MapName);
	void InitShared();
};

// Class TAGame.TourSeeder_TA
// 0x0000 (0x0060 - 0x0060)
class UTourSeeder_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourSeeder_TA");
		}

		return uClassPointer;
	};

	TArray<unsigned long long> GetSeedingForRound(int Rounds);
	TArray<unsigned long long> Append(TArray<unsigned long long> A, TArray<unsigned long long>& B);
	TArray<unsigned long long> PairSeeds(TArray<struct FTeamSeeds> Seeds);
	TArray<unsigned long long> SeedTeams(TArray<unsigned long long> Teams);
};

// Class TAGame.Tutorial_AirTilt_TA
// 0x0010 (0x0248 - 0x0258)
class UTutorial_AirTilt_TA : public UTutorial_TA
{
public:
	struct FString                                     ToggleAirRollString;                              		// 0x0248 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Tutorial_AirTilt_TA");
		}

		return uClassPointer;
	};

	void AddKeyNameFromAction(struct FName ActionName, TArray<struct FString>& KeyList);
	struct FString GetMergedAirRollString();
	struct FString GetUIReadableString(struct FString Key);
	void HandleCarHitWorld(class ACar_TA* Car, class AActor* HitActor, struct FVector HitNormal);
	void HandleCarLanded(class ACar_TA* Car);
	void HandleVehicleSetup(class AGameEvent_Tutorial_TA* InGameEvent, class ACar_TA* Car);
};

// Class TAGame.VehiclePickup_Item_TA
// 0x0018 (0x02F0 - 0x0308)
class AVehiclePickup_Item_TA : public AVehiclePickup_TA
{
public:
	TArray<class ASpecialPickup_TA*>                   ItemArchetypes;                                   		// 0x02F0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class AFXActor_X*                                  ReplicatedFXActorArchetype;                       		// 0x0300 (0x0008) [0x0000000000000020] (CPF_Net)     
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.VehiclePickup_Item_TA");
		}

		return uClassPointer;
	};

	void Pickup(class ACar_TA* Car);
	bool CanPickup(class ACar_TA* Car);
	void SetFXActorArchetype(class AFXActor_X* InArchetype);
	void eventReplicatedEvent(struct FName VarName);
};

// Class TAGame.GameInfo_Items_TA
// 0x0000 (0x0550 - 0x0550)
class AGameInfo_Items_TA : public AGameInfo_Soccar_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_Items_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GameInfo_Hockey_TA
// 0x0000 (0x0550 - 0x0550)
class AGameInfo_Hockey_TA : public AGameInfo_Soccar_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_Hockey_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GameInfo_GodBall_TA
// 0x0000 (0x0550 - 0x0550)
class AGameInfo_GodBall_TA : public AGameInfo_Soccar_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_GodBall_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.TurnTableActor_GarageComplex_TA
// 0x0000 (0x0358 - 0x0358)
class ATurnTableActor_GarageComplex_TA : public ATurnTableActor_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TurnTableActor_GarageComplex_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.UnreplicatedRBActor_TA
// 0x0004 (0x07E4 - 0x07E8)
class AUnreplicatedRBActor_TA : public AStaticMeshRBActor_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.UnreplicatedRBActor_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.TourServerInfo_AutoTour_TA
// 0x0000 (0x0080 - 0x0080)
class UTourServerInfo_AutoTour_TA : public UTourServerInfo_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourServerInfo_AutoTour_TA");
		}

		return uClassPointer;
	};

	struct FString GetTieBreakerRules(struct FTourServerSettings& InSettings);
};

// Class TAGame.TourBracketGenerator_TA
// 0x0000 (0x0060 - 0x0060)
class UTourBracketGenerator_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.TourBracketGenerator_TA");
		}

		return uClassPointer;
	};

	void PrintBracketTree(TArray<struct FTourMatchNode>& Tree);
	struct FTourLeaderboard CreateLeaderboard();
	TArray<struct FTourMatch> NodesToMatches(TArray<struct FTourMatchNode>& Nodes);
	struct FTourMatchNode CreateNode(int MatchID);
	struct FQWORDPair MakeQWORDPair(unsigned long long A, unsigned long long B);
	TArray<unsigned long long> AddByes(TArray<unsigned long long> Teams);
	TArray<unsigned long long> CreateTeamIDs(int TeamNum);
	TArray<struct FTourMatchNode> BuildBracketTree(int NumTeams);
	TArray<struct FTourPlayer> CreatePlayers(int TeamSize, int PlayerCount);
	TArray<struct FTourTeam> CreateTeams(int TeamCount, int TeamSize);
	struct FTourBracket Generate(unsigned long long TourID, int TeamsRegistered, int TeamSize);
};

// Class TAGame.Team_Freeplay_TA
// 0x0000 (0x0498 - 0x0498)
class ATeam_Freeplay_TA : public ATeam_Soccar_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Team_Freeplay_TA");
		}

		return uClassPointer;
	};

	void GetColors(struct FLinearColor& OutFontColor, TArray<struct FLinearColor>& OutColors);
};

// Class TAGame.SeqEvent_StartHighlightReel_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_StartHighlightReel_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_StartHighlightReel_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqEvent_ShowGarageComplex_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_ShowGarageComplex_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_ShowGarageComplex_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqEvent_PreviewMusicStingerVisualizer_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_PreviewMusicStingerVisualizer_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_PreviewMusicStingerVisualizer_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqEvent_IntroMenu_TA
// 0x0004 (0x017C - 0x0180)
class USeqEvent_IntroMenu_TA : public USequenceEvent
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqEvent_IntroMenu_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.SeqAct_MainMenuSwitch_TA
// 0x0000 (0x0160 - 0x0160)
class USeqAct_MainMenuSwitch_TA : public USequenceAction
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_MainMenuSwitch_TA");
		}

		return uClassPointer;
	};

	int eventGetObjClassVersion();
	void eventActivated();
};

// Class TAGame.SeqAct_IsCrateRouletteEnabled_TA
// 0x0000 (0x0160 - 0x0160)
class USeqAct_IsCrateRouletteEnabled_TA : public USequenceAction
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_IsCrateRouletteEnabled_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_IntroMenuCarsInPosition_TA
// 0x0000 (0x0160 - 0x0160)
class USeqAct_IntroMenuCarsInPosition_TA : public USequenceAction
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_IntroMenuCarsInPosition_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_HighlightReelFinished_TA
// 0x0018 (0x0160 - 0x0178)
class USeqAct_HighlightReelFinished_TA : public USequenceAction
{
public:
	struct FScriptDelegate                             __EventHighlightReelFinished__Delegate;           		// 0x0160 (0x0018) [0x0000000000400000] (CPF_NeedCtorLink)
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_HighlightReelFinished_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
	void EventHighlightReelFinished(class USeqAct_HighlightReelFinished_TA* Act);
};

// Class TAGame.SeqAct_GetPlaylistType_TA
// 0x0000 (0x0160 - 0x0160)
class USeqAct_GetPlaylistType_TA : public USequenceAction
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_GetPlaylistType_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_GetEffectIntensity_TA
// 0x0000 (0x0160 - 0x0160)
class USeqAct_GetEffectIntensity_TA : public USequenceAction
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_GetEffectIntensity_TA");
		}

		return uClassPointer;
	};

	class APlayerControllerBase_TA* GetPrimaryPlayerController();
	void eventActivated();
};

// Class TAGame.SeqAct_GetEdition_TA
// 0x0000 (0x0160 - 0x0160)
class USeqAct_GetEdition_TA : public USequenceAction
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_GetEdition_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_ExitToMainMenu_TA
// 0x0000 (0x0160 - 0x0160)
class USeqAct_ExitToMainMenu_TA : public USequenceAction
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_ExitToMainMenu_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SeqAct_DemoCar_TA
// 0x0000 (0x0160 - 0x0160)
class USeqAct_DemoCar_TA : public USequenceAction
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SeqAct_DemoCar_TA");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class TAGame.SaveDataMetrics_TA
// 0x0000 (0x0080 - 0x0080)
class USaveDataMetrics_TA : public UMetricsGroup_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.SaveDataMetrics_TA");
		}

		return uClassPointer;
	};

	void ReconcileXP(int OnlineXP, int LocalXP);
	void RecordReconcileXP(int OnlineXP, int LocalXP);
};

// Class TAGame.RPC_PsyNetGetAvatars_TA
// 0x0000 (0x0128 - 0x0128)
class URPC_PsyNetGetAvatars_TA : public URPC_PsyNetGetVanities_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_PsyNetGetAvatars_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_DecaySkill_TA
// 0x0000 (0x00E8 - 0x00E8)
class URPC_DecaySkill_TA : public URPC_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_DecaySkill_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RPC_DebugUnlinkPrimaryAccount_TA
// 0x0000 (0x00E8 - 0x00E8)
class URPC_DebugUnlinkPrimaryAccount_TA : public URPC_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RPC_DebugUnlinkPrimaryAccount_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.RequestPartyUpEvent_TA
// 0x0000 (0x0060 - 0x0060)
class URequestPartyUpEvent_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.RequestPartyUpEvent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductEquipProfileSlots_TA
// 0x0000 (0x0060 - 0x0060)
class UProductEquipProfileSlots_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductEquipProfileSlots_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAttribute_BonusCrate_TA
// 0x0000 (0x0080 - 0x0080)
class UProductAttribute_BonusCrate_TA : public UProductAttribute_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAttribute_BonusCrate_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.ProductAsset_Currency_TA
// 0x0000 (0x00F8 - 0x00F8)
class UProductAsset_Currency_TA : public UProductAsset_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ProductAsset_Currency_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.PlayerInput_GameEditor_TA
// 0x0000 (0x04C8 - 0x04C8)
class UPlayerInput_GameEditor_TA : public UPlayerInput_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerInput_GameEditor_TA");
		}

		return uClassPointer;
	};

	void OnActiveBindingsChanged();
};

// Class TAGame.PlayerInput_Edit_TA
// 0x0000 (0x04C8 - 0x04C8)
class UPlayerInput_Edit_TA : public UPlayerInput_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.PlayerInput_Edit_TA");
		}

		return uClassPointer;
	};

	void OnActiveBindingsChanged();
};

// Class TAGame.OnlineGameVersion_TA
// 0x0004 (0x009C - 0x00A0)
class UOnlineGameVersion_TA : public UOnlineGameVersion_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.OnlineGameVersion_TA");
		}

		return uClassPointer;
	};

	void __OnlineGameVersion_TA__OnInit_A125AE504F3C09FFA113429BF8119506(class UOnlineGameTourMatchmaking_TA* TourMatch);
	void __OnlineGameVersion_TA__OnInit_EC1B9D2E473EAB8DA6BCDEB2D8AFEB02(class UOnlineGameTourMatchmaking_TA* _, class UError* Error);
	void OnInit();
};

// Class TAGame.NameplateComponentMatinee_TA
// 0x0000 (0x00E0 - 0x00E0)
class UNameplateComponentMatinee_TA : public UNameplateComponent_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.NameplateComponentMatinee_TA");
		}

		return uClassPointer;
	};

	struct FString GetPlayerName();
};

// Class TAGame.Mutator_PhysicsLogPlayback_TA
// 0x0004 (0x0064 - 0x0068)
class UMutator_PhysicsLogPlayback_TA : public UMutator_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.Mutator_PhysicsLogPlayback_TA");
		}

		return uClassPointer;
	};

	void __Mutator_PhysicsLogPlayback_TA__Init_8233308F430F7D0F03507D8F1E047B42(class UGoal_TA* G);
	void Init(class AGameEvent_TA* GameEvent);
};

// Class TAGame.MatchType_PhysicsLogPlayback_TA
// 0x0000 (0x00A8 - 0x00A8)
class UMatchType_PhysicsLogPlayback_TA : public UMatchType_Tutorial_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchType_PhysicsLogPlayback_TA");
		}

		return uClassPointer;
	};

	bool AutoSpectate(class AController* NewPlayer);
	bool ShouldAutoSelectTeam(class AController* NewPlayer);
};

// Class TAGame.MenuSequence_PremiumGarageSnap_TA
// 0x0004 (0x00B4 - 0x00B8)
class UMenuSequence_PremiumGarageSnap_TA : public UMenuSequence_PremiumGarage_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MenuSequence_PremiumGarageSnap_TA");
		}

		return uClassPointer;
	};

	void LeaveSequence(class UMenuSequence_TA* NextSequence);
	void EnterSequence(class UMenuSequence_TA* PrevSequence);
};

// Class TAGame.MenuSequence_MusicStingers_TA
// 0x0000 (0x00A8 - 0x00A8)
class UMenuSequence_MusicStingers_TA : public UMenuSequence_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MenuSequence_MusicStingers_TA");
		}

		return uClassPointer;
	};

	void LeaveSequence(class UMenuSequence_TA* NextSequence);
	void EnterSequence(class UMenuSequence_TA* PrevSequence);
};

// Class TAGame.MaxTimeState_TA
// 0x0000 (0x0060 - 0x0060)
class UMaxTimeState_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MaxTimeState_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.MatchType_AdHoc_TA
// 0x0000 (0x00A8 - 0x00A8)
class UMatchType_AdHoc_TA : public UMatchType_Private_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.MatchType_AdHoc_TA");
		}

		return uClassPointer;
	};

	struct FName GetMatchTypeName();
};

// Class TAGame.LocalizationConfig_TA
// 0x0000 (0x0088 - 0x0088)
class ULocalizationConfig_TA : public ULocalizationConfig_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.LocalizationConfig_TA");
		}

		return uClassPointer;
	};

	void Apply();
};

// Class TAGame.GoalVolume_Hoops_TA
// 0x0000 (0x02B0 - 0x02B0)
class AGoalVolume_Hoops_TA : public AGoalVolume_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GoalVolume_Hoops_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxModal_Warning_TA
// 0x0000 (0x00C8 - 0x00C8)
class UGFxModal_Warning_TA : public UGFxModal_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxModal_Warning_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GFxData_XP_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_XP_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_XP_TA");
		}

		return uClassPointer;
	};

	void HandleSaveDataLoaded(class UClientXPSave_TA* XPSave);
	void eventOnShellSet();
};

// Class TAGame.GFxData_RocketPassBundleContainer_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_RocketPassBundleContainer_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_RocketPassBundleContainer_TA");
		}

		return uClassPointer;
	};

	void eventOnShellSet();
};

// Class TAGame.GFxData_RegionRestrictions_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_RegionRestrictions_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_RegionRestrictions_TA");
		}

		return uClassPointer;
	};

	bool IsRestricted(unsigned char Restriction);
};

// Class TAGame.GFxData_PrivacyPolicy_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_PrivacyPolicy_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PrivacyPolicy_TA");
		}

		return uClassPointer;
	};

	bool RequiresAcceptance();
	void Accepted();
};

// Class TAGame.GFxData_PremiumGarage_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_PremiumGarage_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PremiumGarage_TA");
		}

		return uClassPointer;
	};

	class UProfile_TA* GetProfile();
};

// Class TAGame.GFxData_PlayerReport_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_PlayerReport_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_PlayerReport_TA");
		}

		return uClassPointer;
	};

	void eventOnShellSet();
};

// Class TAGame.GFxData_MusicStingers_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_MusicStingers_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_MusicStingers_TA");
		}

		return uClassPointer;
	};

	void ShowToast(struct FProductHashID HashID);
	void UpdateStingerHashID(class UProductAsset_MusicStingers_TA* Stinger);
	void HandleArenaSoundManagerSet(class UArenaSoundManager_TA* ArenaSoundManager);
	void eventOnShellSet();
};

// Class TAGame.GFxData_Eula_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_Eula_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_Eula_TA");
		}

		return uClassPointer;
	};

	bool RequiresAcceptance();
	void Accepted();
};

// Class TAGame.GFxData_DateTime_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_DateTime_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_DateTime_TA");
		}

		return uClassPointer;
	};

	struct FDateTimeStruct AddSeconds(struct FDateTimeStruct InDateTime, int Amount);
	struct FDateTimeStruct AddMinutes(struct FDateTimeStruct InDateTime, int Amount);
	struct FDateTimeStruct AddHours(struct FDateTimeStruct InDateTime, int Amount);
	struct FDateTimeStruct AddDays(struct FDateTimeStruct InDateTime, int Amount);
	struct FDateTimeStruct AddMonths(struct FDateTimeStruct InDateTime, int Amount);
	struct FDateTimeStruct AddYears(struct FDateTimeStruct InDateTime, int Amount);
	struct FDateTimeStruct UtcToLocalTime(unsigned long long UtcSeconds);
	int UtcSecondsUntil(unsigned long long UtcSeconds);
	struct FDateTimeStruct UtcNow();
	struct FDateTimeStruct Now();
};

// Class TAGame.GFxData_ClubsConfig_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_ClubsConfig_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_ClubsConfig_TA");
		}

		return uClassPointer;
	};

	void HandleClubConfigChanged(class UClubsConfig_TA* Config);
	void eventOnShellSet();
};

// Class TAGame.GFxData_BanMessage_TA
// 0x0004 (0x0094 - 0x0098)
class UGFxData_BanMessage_TA : public UGFxDataRow_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_BanMessage_TA");
		}

		return uClassPointer;
	};

	class UBanMessage_X* GetBanMessage();
	bool IsPermanentlyBanned();
	bool IsBanned();
	TArray<struct FString> GetCitations();
	int GetSecondsRemaining();
	void HandleBanEnded(class UBanMessage_X* BanMessage);
	void SetMessage(class UBanMessage_X* BanMessage);
};

// Class TAGame.GFxData_BanManager_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_BanManager_TA : public UGFxDataSingleton_X
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_BanManager_TA");
		}

		return uClassPointer;
	};

	void OnBanMessagesSynced();
	void HandleSyncedBanStatus(class UBanSync_TA* BanSync);
	void RemoveBanMessages();
	void eventOnRemoved();
	void eventOnShellSet();
};

// Class TAGame.GFxData_AchievementDropGroup_TA
// 0x0000 (0x0098 - 0x0098)
class UGFxData_AchievementDropGroup_TA : public UGFxData_ItemDropGroup_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GFxData_AchievementDropGroup_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.AchievementDropGroup_TA
// 0x0004 (0x00CC - 0x00D0)
class UAchievementDropGroup_TA : public UCompleteTaskDropGroup_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.AchievementDropGroup_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GameInfo_Transition_TA
// 0x0000 (0x04D8 - 0x04D8)
class AGameInfo_Transition_TA : public AGameInfoBase_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_Transition_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.GameInfo_FTE_TA
// 0x0000 (0x0550 - 0x0550)
class AGameInfo_FTE_TA : public AGameInfo_Soccar_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_FTE_TA");
		}

		return uClassPointer;
	};

	void eventPostBeginPlay();
};

// Class TAGame.GameInfo_Football_TA
// 0x0000 (0x0550 - 0x0550)
class AGameInfo_Football_TA : public AGameInfo_Soccar_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.GameInfo_Football_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.FXActor_GarageComplexRow_TA
// 0x0000 (0x0360 - 0x0360)
class AFXActor_GarageComplexRow_TA : public AFXActor_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FXActor_GarageComplexRow_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.FollowersChangedEvent_TA
// 0x0000 (0x0060 - 0x0060)
class UFollowersChangedEvent_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.FollowersChangedEvent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.EndRoundComponent_Tutorial_TA
// 0x0000 (0x00B0 - 0x00B0)
class UEndRoundComponent_Tutorial_TA : public UEndRoundComponent_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EndRoundComponent_Tutorial_TA");
		}

		return uClassPointer;
	};

	void EndRound();
};

// Class TAGame.EndRoundComponent_Rugby_TA
// 0x0000 (0x00B0 - 0x00B0)
class UEndRoundComponent_Rugby_TA : public UEndRoundComponent_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EndRoundComponent_Rugby_TA");
		}

		return uClassPointer;
	};

	void HandleBallHitGround(class ABall_TA* Ball, struct FVector HitLoc, struct FVector HitNorm);
};

// Class TAGame.EndRoundComponent_KnockOut_TA
// 0x0000 (0x00B0 - 0x00B0)
class UEndRoundComponent_KnockOut_TA : public UEndRoundComponent_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EndRoundComponent_KnockOut_TA");
		}

		return uClassPointer;
	};

	void eventAttached();
};

// Class TAGame.EndRoundComponent_HauntedBall_TA
// 0x0000 (0x00B0 - 0x00B0)
class UEndRoundComponent_HauntedBall_TA : public UEndRoundComponent_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.EndRoundComponent_HauntedBall_TA");
		}

		return uClassPointer;
	};

	void HandleBallHitGround(class ABall_TA* Ball, struct FVector HitLoc, struct FVector HitNorm);
};

// Class TAGame.ConvertPlatformFriendsEvent_TA
// 0x0000 (0x0060 - 0x0060)
class UConvertPlatformFriendsEvent_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ConvertPlatformFriendsEvent_TA");
		}

		return uClassPointer;
	};

};

// Class TAGame.CarMeshComponent_GarageComplex_TA
// 0x0000 (0x0948 - 0x0948)
class UCarMeshComponent_GarageComplex_TA : public UCarMeshComponent_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CarMeshComponent_GarageComplex_TA");
		}

		return uClassPointer;
	};

	void eventOnAttached();
};

// Class TAGame.CameraState_BallCam_KnockOut_TA
// 0x0000 (0x0240 - 0x0240)
class UCameraState_BallCam_KnockOut_TA : public UCameraState_BallCam_TA
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.CameraState_BallCam_KnockOut_TA");
		}

		return uClassPointer;
	};

	bool IsValidTarget(class UBallCamTarget_TA* InTarget);
};

// Class TAGame.BTC_HumanPlayerOnTeam
// 0x0004 (0x008C - 0x0090)
class UBTC_HumanPlayerOnTeam : public UBTCondition
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_HumanPlayerOnTeam");
		}

		return uClassPointer;
	};

	bool eventGetResult();
	void HandleMembersChanged(class ATeam_TA* Team, class APRI_TA* PRI);
	void eventOnInit();
};

// Class TAGame.BTC_HumanPlayerOnOpposingTeam
// 0x0004 (0x008C - 0x0090)
class UBTC_HumanPlayerOnOpposingTeam : public UBTCondition
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_HumanPlayerOnOpposingTeam");
		}

		return uClassPointer;
	};

	bool eventGetResult();
};

// Class TAGame.BTC_BallWelded
// 0x0004 (0x008C - 0x0090)
class UBTC_BallWelded : public UBTCondition
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.BTC_BallWelded");
		}

		return uClassPointer;
	};

	bool eventGetResult();
};

// Class TAGame.ActorFactorySkeletalMeshactorMat_Products_TA
// 0x0000 (0x00B8 - 0x00B8)
class UActorFactorySkeletalMeshactorMat_Products_TA : public UActorFactorySkeletalMeshMAT
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame.ActorFactorySkeletalMeshactorMat_Products_TA");
		}

		return uClassPointer;
	};

	void eventPostCreateActor(class AActor* NewActor, class USeqAct_ActorFactory* ActorFactoryData);
};

// Class TAGame._TourNotifications_TA
// 0x0000 (0x0060 - 0x0060)
class U_TourNotifications_TA : public UObject
{
public:
public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class TAGame._TourNotifications_TA");
		}

		return uClassPointer;
	};

};

/*
# ========================================================================================= #
#
# ========================================================================================= #
*/

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
